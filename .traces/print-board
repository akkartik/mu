c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((stdin channel-address)) <- ((next-input))) -- nil
c{0: 2 (((x tagged-value)) ((stdin channel-address) (deref)) <- ((read)) ((stdin channel-address))) -- nil
c{0: 3 (((c character)) <- ((maybe-coerce)) ((x tagged-value)) ((character literal))) -- nil
c{0: 4 (((expected character)) <- ((next-input))) -- nil
c{0: 5 (((match? boolean)) <- ((equal)) ((c character)) ((expected character))) -- nil
c{0: 6 (((assert)) ((match? boolean)) ((expected character not found literal))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((stdin channel-address)) <- ((next-input)))
c{1: 2 ✓ (((x tagged-value)) ((stdin channel-address) (deref)) <- ((read)) ((stdin channel-address)))
c{1: 3 ✓ (((c character)) <- ((maybe-coerce)) ((x tagged-value)) ((character literal)))
c{1: 4 ✓ (((expected character)) <- ((next-input)))
c{1: 5 ✓ (((match? boolean)) <- ((equal)) ((c character)) ((expected character)))
c{1: 6 ✓ (((assert)) ((match? boolean)) ((expected character not found literal)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((initial-position list-address)) <- ((next-input))) -- nil
c{0: 2 (((len integer)) <- ((list-length)) ((initial-position list-address))) -- nil
c{0: 3 (((correct-length? boolean)) <- ((equal)) ((len integer)) ((64 literal))) -- nil
c{0: 4 (((assert)) ((correct-length? boolean)) ((chessboard had incorrect size literal))) -- nil
c{0: 5 (((b board-address)) <- ((new)) ((board literal)) ((8 literal))) -- nil
c{0: 6 (((col integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 7 (((curr list-address)) <- ((copy)) ((initial-position list-address))) -- nil
c{0: 8 (((done? boolean)) <- ((equal)) ((col integer)) ((8 literal))) -- ((open 8))
c{0: 9 (((break-if)) ((done? boolean))) -- ((open 8))
c{0: 10 (((file file-address-address)) <- ((index-address)) ((b board-address) (deref)) ((col integer))) -- ((open 8))
c{0: 11 (((file file-address-address) (deref)) ((curr list-address)) <- ((init-file)) ((curr list-address))) -- ((open 8))
c{0: 12 (((col integer)) <- ((add)) ((col integer)) ((1 literal))) -- ((open 8))
c{0: 13 (((loop))) -- ((open 8))
c{0: 14 (((reply)) ((b board-address))) -- ((close 14) (open 8))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((initial-position list-address)) <- ((next-input)))
c{1: 2 ✓ (((len integer)) <- ((list-length)) ((initial-position list-address)))
c{1: 3 ✓ (((correct-length? boolean)) <- ((equal)) ((len integer)) ((64 literal)))
c{1: 4 ✓ (((assert)) ((correct-length? boolean)) ((chessboard had incorrect size literal)))
c{1: 5 ✓ (((b board-address)) <- ((new)) ((board literal)) ((8 literal)))
c{1: 6 ✓ (((col integer)) <- ((copy)) ((0 literal)))
c{1: 7 ✓ (((curr list-address)) <- ((copy)) ((initial-position list-address)))
c{1: 8 ✓ (((done? boolean)) <- ((equal)) ((col integer)) ((8 literal)))
c{1: 9 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((4 offset)))
c{1: 10 ✓ (((file file-address-address)) <- ((index-address)) ((b board-address) (deref)) ((col integer)))
c{1: 11 ✓ (((file file-address-address) (deref)) ((curr list-address)) <- ((init-file)) ((curr list-address)))
c{1: 12 ✓ (((col integer)) <- ((add)) ((col integer)) ((1 literal)))
c{1: 13 X (((loop))) => (((jump)) ((-6 offset)))
c{1: 14 ✓ (((reply)) ((b board-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((cursor list-address)) <- ((next-input))) -- nil
c{0: 2 (((result file-address)) <- ((new)) ((file literal)) ((8 literal))) -- nil
c{0: 3 (((row integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 4 (((done? boolean)) <- ((equal)) ((row integer)) ((8 literal))) -- ((open 4))
c{0: 5 (((break-if)) ((done? boolean))) -- ((open 4))
c{0: 6 (((src tagged-value-address)) <- ((list-value-address)) ((cursor list-address))) -- ((open 4))
c{0: 7 (((dest square-address)) <- ((index-address)) ((result file-address) (deref)) ((row integer))) -- ((open 4))
c{0: 8 (((dest square-address) (deref)) <- ((get)) ((src tagged-value-address) (deref)) ((payload offset))) -- ((open 4))
c{0: 9 (((cursor list-address)) <- ((list-next)) ((cursor list-address))) -- ((open 4))
c{0: 10 (((row integer)) <- ((add)) ((row integer)) ((1 literal))) -- ((open 4))
c{0: 11 (((loop))) -- ((open 4))
c{0: 12 (((reply)) ((result file-address)) ((cursor list-address))) -- ((close 12) (open 4))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((cursor list-address)) <- ((next-input)))
c{1: 2 ✓ (((result file-address)) <- ((new)) ((file literal)) ((8 literal)))
c{1: 3 ✓ (((row integer)) <- ((copy)) ((0 literal)))
c{1: 4 ✓ (((done? boolean)) <- ((equal)) ((row integer)) ((8 literal)))
c{1: 5 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((6 offset)))
c{1: 6 ✓ (((src tagged-value-address)) <- ((list-value-address)) ((cursor list-address)))
c{1: 7 ✓ (((dest square-address)) <- ((index-address)) ((result file-address) (deref)) ((row integer)))
c{1: 8 ✓ (((dest square-address) (deref)) <- ((get)) ((src tagged-value-address) (deref)) ((payload offset)))
c{1: 9 ✓ (((cursor list-address)) <- ((list-next)) ((cursor list-address)))
c{1: 10 ✓ (((row integer)) <- ((add)) ((row integer)) ((1 literal)))
c{1: 11 X (((loop))) => (((jump)) ((-8 offset)))
c{1: 12 ✓ (((reply)) ((result file-address)) ((cursor list-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((initial-position list-address)) <- ((init-list)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal))) -- nil
c{0: 2 (((b board-address)) <- ((init-board)) ((initial-position list-address))) -- nil
c{0: 3 (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) -- nil
c{0: 4 (((print-board)) ((screen terminal-address)) ((b board-address))) -- nil
c{0: 5 (((1 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((initial-position list-address)) <- ((init-list)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
c{1: 2 ✓ (((b board-address)) <- ((init-board)) ((initial-position list-address)))
c{1: 3 ✓ (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
c{1: 4 ✓ (((print-board)) ((screen terminal-address)) ((b board-address)))
c{1: 5 ✓ (((1 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((b board-address)) <- ((next-input))) -- nil
c{0: 2 (((m move-address)) <- ((next-input))) -- nil
c{0: 3 (((x integer-integer-pair)) <- ((get)) ((m move-address) (deref)) ((from offset))) -- nil
c{0: 4 (((from-file integer)) <- ((get)) ((x integer-integer-pair)) ((0 offset))) -- nil
c{0: 5 (((from-rank integer)) <- ((get)) ((x integer-integer-pair)) ((1 offset))) -- nil
c{0: 6 (((f file-address)) <- ((index)) ((b board-address) (deref)) ((from-file integer))) -- nil
c{0: 7 (((src square-address)) <- ((index-address)) ((f file-address) (deref)) ((from-rank integer))) -- nil
c{0: 8 (((x integer-integer-pair)) <- ((get)) ((m move-address) (deref)) ((to offset))) -- nil
c{0: 9 (((to-file integer)) <- ((get)) ((x integer-integer-pair)) ((0 offset))) -- nil
c{0: 10 (((to-rank integer)) <- ((get)) ((x integer-integer-pair)) ((1 offset))) -- nil
c{0: 11 (((f file-address)) <- ((index)) ((b board-address) (deref)) ((to-file integer))) -- nil
c{0: 12 (((dest square-address)) <- ((index-address)) ((f file-address) (deref)) ((to-rank integer))) -- nil
c{0: 13 (((dest square-address) (deref)) <- ((copy)) ((src square-address) (deref))) -- nil
c{0: 14 (((src square-address) (deref)) <- ((copy)) ((_ literal))) -- nil
c{0: 15 (((reply)) ((b board-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((b board-address)) <- ((next-input)))
c{1: 2 ✓ (((m move-address)) <- ((next-input)))
c{1: 3 ✓ (((x integer-integer-pair)) <- ((get)) ((m move-address) (deref)) ((from offset)))
c{1: 4 ✓ (((from-file integer)) <- ((get)) ((x integer-integer-pair)) ((0 offset)))
c{1: 5 ✓ (((from-rank integer)) <- ((get)) ((x integer-integer-pair)) ((1 offset)))
c{1: 6 ✓ (((f file-address)) <- ((index)) ((b board-address) (deref)) ((from-file integer)))
c{1: 7 ✓ (((src square-address)) <- ((index-address)) ((f file-address) (deref)) ((from-rank integer)))
c{1: 8 ✓ (((x integer-integer-pair)) <- ((get)) ((m move-address) (deref)) ((to offset)))
c{1: 9 ✓ (((to-file integer)) <- ((get)) ((x integer-integer-pair)) ((0 offset)))
c{1: 10 ✓ (((to-rank integer)) <- ((get)) ((x integer-integer-pair)) ((1 offset)))
c{1: 11 ✓ (((f file-address)) <- ((index)) ((b board-address) (deref)) ((to-file integer)))
c{1: 12 ✓ (((dest square-address)) <- ((index-address)) ((f file-address) (deref)) ((to-rank integer)))
c{1: 13 ✓ (((dest square-address) (deref)) <- ((copy)) ((src square-address) (deref)))
c{1: 14 ✓ (((src square-address) (deref)) <- ((copy)) ((_ literal)))
c{1: 15 ✓ (((reply)) ((b board-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 2 (((b board-address)) <- ((next-input))) -- nil
c{0: 3 (((row integer)) <- ((copy)) ((7 literal))) -- nil
c{0: 4 (((done? boolean)) <- ((less-than)) ((row integer)) ((0 literal))) -- ((open 4))
c{0: 5 (((break-if)) ((done? boolean))) -- ((open 4))
c{0: 6 (((rank integer)) <- ((add)) ((row integer)) ((1 literal))) -- ((open 4))
c{0: 7 (((print-integer)) ((screen terminal-address)) ((rank integer))) -- ((open 4))
c{0: 8 (((s string-address)) <- ((new))  | ) -- ((open 4))
c{0: 9 (((print-string)) ((screen terminal-address)) ((s string-address))) -- ((open 4))
c{0: 10 (((col integer)) <- ((copy)) ((0 literal))) -- ((open 4))
c{0: 11 (((done? boolean)) <- ((equal)) ((col integer)) ((8 literal))) -- ((open 11) (open 4))
c{0: 12 (((break-if)) ((done? boolean))) -- ((open 11) (open 4))
c{0: 13 (((f file-address)) <- ((index)) ((b board-address) (deref)) ((col integer))) -- ((open 11) (open 4))
c{0: 14 (((s square)) <- ((index)) ((f file-address) (deref)) ((row integer))) -- ((open 11) (open 4))
c{0: 15 (((print-character)) ((screen terminal-address)) ((s square))) -- ((open 11) (open 4))
c{0: 16 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((open 11) (open 4))
c{0: 17 (((col integer)) <- ((add)) ((col integer)) ((1 literal))) -- ((open 11) (open 4))
c{0: 18 (((loop))) -- ((open 11) (open 4))
c{0: 19 (((row integer)) <- ((subtract)) ((row integer)) ((1 literal))) -- ((close 19) (open 11) (open 4))
c{0: 20 (((cursor-to-next-line)) ((screen terminal-address))) -- ((close 19) (open 11) (open 4))
c{0: 21 (((loop))) -- ((close 19) (open 11) (open 4))
c{0: 22 (((s string-address)) <- ((new))   +----------------) -- ((close 22) (close 19) (open 11) (open 4))
c{0: 23 (((print-string)) ((screen terminal-address)) ((s string-address))) -- ((close 22) (close 19) (open 11) (open 4))
c{0: 24 (((cursor-to-next-line)) ((screen terminal-address))) -- ((close 22) (close 19) (open 11) (open 4))
c{0: 25 (((s string-address)) <- ((new))     a b c d e f g h) -- ((close 22) (close 19) (open 11) (open 4))
c{0: 26 (((print-string)) ((screen terminal-address)) ((s string-address))) -- ((close 22) (close 19) (open 11) (open 4))
c{0: 27 (((cursor-to-next-line)) ((screen terminal-address))) -- ((close 22) (close 19) (open 11) (open 4))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 2 ✓ (((b board-address)) <- ((next-input)))
c{1: 3 ✓ (((row integer)) <- ((copy)) ((7 literal)))
c{1: 4 ✓ (((done? boolean)) <- ((less-than)) ((row integer)) ((0 literal)))
c{1: 5 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((16 offset)))
c{1: 6 ✓ (((rank integer)) <- ((add)) ((row integer)) ((1 literal)))
c{1: 7 ✓ (((print-integer)) ((screen terminal-address)) ((rank integer)))
c{1: 8 ✓ (((s string-address)) <- ((new))  | )
c{1: 9 ✓ (((print-string)) ((screen terminal-address)) ((s string-address)))
c{1: 10 ✓ (((col integer)) <- ((copy)) ((0 literal)))
c{1: 11 ✓ (((done? boolean)) <- ((equal)) ((col integer)) ((8 literal)))
c{1: 12 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((6 offset)))
c{1: 13 ✓ (((f file-address)) <- ((index)) ((b board-address) (deref)) ((col integer)))
c{1: 14 ✓ (((s square)) <- ((index)) ((f file-address) (deref)) ((row integer)))
c{1: 15 ✓ (((print-character)) ((screen terminal-address)) ((s square)))
c{1: 16 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 17 ✓ (((col integer)) <- ((add)) ((col integer)) ((1 literal)))
c{1: 18 X (((loop))) => (((jump)) ((-8 offset)))
c{1: 19 ✓ (((row integer)) <- ((subtract)) ((row integer)) ((1 literal)))
c{1: 20 ✓ (((cursor-to-next-line)) ((screen terminal-address)))
c{1: 21 X (((loop))) => (((jump)) ((-18 offset)))
c{1: 22 ✓ (((s string-address)) <- ((new))   +----------------)
c{1: 23 ✓ (((print-string)) ((screen terminal-address)) ((s string-address)))
c{1: 24 ✓ (((cursor-to-next-line)) ((screen terminal-address)))
c{1: 25 ✓ (((s string-address)) <- ((new))     a b c d e f g h)
c{1: 26 ✓ (((print-string)) ((screen terminal-address)) ((s string-address)))
c{1: 27 ✓ (((cursor-to-next-line)) ((screen terminal-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((stdin channel-address)) <- ((next-input))) -- nil
c{0: 2 (((x tagged-value)) ((stdin channel-address) (deref)) <- ((read)) ((stdin channel-address))) -- nil
c{0: 3 (((a character)) <- ((copy)) ((a literal))) -- nil
c{0: 4 (((file-base integer)) <- ((character-to-integer)) ((a character))) -- nil
c{0: 5 (((c character)) <- ((maybe-coerce)) ((x tagged-value)) ((character literal))) -- nil
c{0: 6 (((quit boolean)) <- ((equal)) ((c character)) ((q literal))) -- ((open 6))
c{0: 7 (((break-unless)) ((quit boolean))) -- ((open 6))
c{0: 8 (((reply)) ((nil literal))) -- ((open 6))
c{0: 9 (((file integer)) <- ((character-to-integer)) ((c character))) -- ((close 9) (open 6))
c{0: 10 (((file integer)) <- ((subtract)) ((file integer)) ((file-base integer))) -- ((close 9) (open 6))
c{0: 11 (((above-min boolean)) <- ((greater-or-equal)) ((file integer)) ((0 literal))) -- ((close 9) (open 6))
c{0: 12 (((assert)) ((above-min boolean)) ((file too low literal))) -- ((close 9) (open 6))
c{0: 13 (((below-max boolean)) <- ((lesser-or-equal)) ((file integer)) ((7 literal))) -- ((close 9) (open 6))
c{0: 14 (((assert)) ((below-max boolean)) ((file too high literal))) -- ((close 9) (open 6))
c{0: 15 (((reply)) ((file integer))) -- ((close 9) (open 6))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((stdin channel-address)) <- ((next-input)))
c{1: 2 ✓ (((x tagged-value)) ((stdin channel-address) (deref)) <- ((read)) ((stdin channel-address)))
c{1: 3 ✓ (((a character)) <- ((copy)) ((a literal)))
c{1: 4 ✓ (((file-base integer)) <- ((character-to-integer)) ((a character)))
c{1: 5 ✓ (((c character)) <- ((maybe-coerce)) ((x tagged-value)) ((character literal)))
c{1: 6 ✓ (((quit boolean)) <- ((equal)) ((c character)) ((q literal)))
c{1: 7 X (((break-unless)) ((quit boolean))) => (((jump-unless)) ((quit boolean)) ((1 offset)))
c{1: 8 ✓ (((reply)) ((nil literal)))
c{1: 9 ✓ (((file integer)) <- ((character-to-integer)) ((c character)))
c{1: 10 ✓ (((file integer)) <- ((subtract)) ((file integer)) ((file-base integer)))
c{1: 11 ✓ (((above-min boolean)) <- ((greater-or-equal)) ((file integer)) ((0 literal)))
c{1: 12 ✓ (((assert)) ((above-min boolean)) ((file too low literal)))
c{1: 13 ✓ (((below-max boolean)) <- ((lesser-or-equal)) ((file integer)) ((7 literal)))
c{1: 14 ✓ (((assert)) ((below-max boolean)) ((file too high literal)))
c{1: 15 ✓ (((reply)) ((file integer)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((stdin channel-address)) <- ((next-input))) -- nil
c{0: 2 (((from-file integer)) <- ((read-file)) ((stdin channel-address))) -- nil
c{0: 3 (((break-if)) ((from-file integer))) -- ((open 3))
c{0: 4 (((reply)) ((nil literal))) -- ((open 3))
c{0: 5 (((from-rank integer)) <- ((read-rank)) ((stdin channel-address))) -- ((close 5) (open 3))
c{0: 6 (((expect-stdin)) ((stdin channel-address)) ((- literal))) -- ((close 5) (open 3))
c{0: 7 (((to-file integer)) <- ((read-file)) ((stdin channel-address))) -- ((close 5) (open 3))
c{0: 8 (((to-rank integer)) <- ((read-rank)) ((stdin channel-address))) -- ((close 5) (open 3))
c{0: 9 (((expect-stdin)) ((stdin channel-address)) ((
 literal))) -- ((close 5) (open 3))
c{0: 10 (((result move-address)) <- ((new)) ((move literal))) -- ((close 5) (open 3))
c{0: 11 (((f integer-integer-pair-address)) <- ((get-address)) ((result move-address) (deref)) ((from offset))) -- ((close 5) (open 3))
c{0: 12 (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((0 offset))) -- ((close 5) (open 3))
c{0: 13 (((dest integer-address) (deref)) <- ((copy)) ((from-file integer))) -- ((close 5) (open 3))
c{0: 14 (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((1 offset))) -- ((close 5) (open 3))
c{0: 15 (((dest integer-address) (deref)) <- ((copy)) ((from-rank integer))) -- ((close 5) (open 3))
c{0: 16 (((t0 integer-integer-pair-address)) <- ((get-address)) ((result move-address) (deref)) ((to offset))) -- ((close 5) (open 3))
c{0: 17 (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((0 offset))) -- ((close 5) (open 3))
c{0: 18 (((dest integer-address) (deref)) <- ((copy)) ((to-file integer))) -- ((close 5) (open 3))
c{0: 19 (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((1 offset))) -- ((close 5) (open 3))
c{0: 20 (((dest integer-address) (deref)) <- ((copy)) ((to-rank integer))) -- ((close 5) (open 3))
c{0: 21 (((reply)) ((result move-address))) -- ((close 5) (open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((stdin channel-address)) <- ((next-input)))
c{1: 2 ✓ (((from-file integer)) <- ((read-file)) ((stdin channel-address)))
c{1: 3 X (((break-if)) ((from-file integer))) => (((jump-if)) ((from-file integer)) ((1 offset)))
c{1: 4 ✓ (((reply)) ((nil literal)))
c{1: 5 ✓ (((from-rank integer)) <- ((read-rank)) ((stdin channel-address)))
c{1: 6 ✓ (((expect-stdin)) ((stdin channel-address)) ((- literal)))
c{1: 7 ✓ (((to-file integer)) <- ((read-file)) ((stdin channel-address)))
c{1: 8 ✓ (((to-rank integer)) <- ((read-rank)) ((stdin channel-address)))
c{1: 9 ✓ (((expect-stdin)) ((stdin channel-address)) ((
 literal)))
c{1: 10 ✓ (((result move-address)) <- ((new)) ((move literal)))
c{1: 11 ✓ (((f integer-integer-pair-address)) <- ((get-address)) ((result move-address) (deref)) ((from offset)))
c{1: 12 ✓ (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((0 offset)))
c{1: 13 ✓ (((dest integer-address) (deref)) <- ((copy)) ((from-file integer)))
c{1: 14 ✓ (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((1 offset)))
c{1: 15 ✓ (((dest integer-address) (deref)) <- ((copy)) ((from-rank integer)))
c{1: 16 ✓ (((t0 integer-integer-pair-address)) <- ((get-address)) ((result move-address) (deref)) ((to offset)))
c{1: 17 ✓ (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((0 offset)))
c{1: 18 ✓ (((dest integer-address) (deref)) <- ((copy)) ((to-file integer)))
c{1: 19 ✓ (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((1 offset)))
c{1: 20 ✓ (((dest integer-address) (deref)) <- ((copy)) ((to-rank integer)))
c{1: 21 ✓ (((reply)) ((result move-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((stdin channel-address)) <- ((next-input))) -- nil
c{0: 2 (((x tagged-value)) ((stdin channel-address) (deref)) <- ((read)) ((stdin channel-address))) -- nil
c{0: 3 (((c character)) <- ((maybe-coerce)) ((x tagged-value)) ((character literal))) -- nil
c{0: 4 (((quit boolean)) <- ((equal)) ((c character)) ((q literal))) -- ((open 4))
c{0: 5 (((break-unless)) ((quit boolean))) -- ((open 4))
c{0: 6 (((reply)) ((nil literal))) -- ((open 4))
c{0: 7 (((rank integer)) <- ((character-to-integer)) ((c character))) -- ((close 7) (open 4))
c{0: 8 (((one character)) <- ((copy)) ((1 literal))) -- ((close 7) (open 4))
c{0: 9 (((rank-base integer)) <- ((character-to-integer)) ((one character))) -- ((close 7) (open 4))
c{0: 10 (((rank integer)) <- ((subtract)) ((rank integer)) ((rank-base integer))) -- ((close 7) (open 4))
c{0: 11 (((above-min boolean)) <- ((greater-or-equal)) ((rank integer)) ((0 literal))) -- ((close 7) (open 4))
c{0: 12 (((assert)) ((above-min boolean)) ((rank too low literal))) -- ((close 7) (open 4))
c{0: 13 (((below-max boolean)) <- ((lesser-or-equal)) ((rank integer)) ((7 literal))) -- ((close 7) (open 4))
c{0: 14 (((assert)) ((below-max boolean)) ((rank too high literal))) -- ((close 7) (open 4))
c{0: 15 (((reply)) ((rank integer))) -- ((close 7) (open 4))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((stdin channel-address)) <- ((next-input)))
c{1: 2 ✓ (((x tagged-value)) ((stdin channel-address) (deref)) <- ((read)) ((stdin channel-address)))
c{1: 3 ✓ (((c character)) <- ((maybe-coerce)) ((x tagged-value)) ((character literal)))
c{1: 4 ✓ (((quit boolean)) <- ((equal)) ((c character)) ((q literal)))
c{1: 5 X (((break-unless)) ((quit boolean))) => (((jump-unless)) ((quit boolean)) ((1 offset)))
c{1: 6 ✓ (((reply)) ((nil literal)))
c{1: 7 ✓ (((rank integer)) <- ((character-to-integer)) ((c character)))
c{1: 8 ✓ (((one character)) <- ((copy)) ((1 literal)))
c{1: 9 ✓ (((rank-base integer)) <- ((character-to-integer)) ((one character)))
c{1: 10 ✓ (((rank integer)) <- ((subtract)) ((rank integer)) ((rank-base integer)))
c{1: 11 ✓ (((above-min boolean)) <- ((greater-or-equal)) ((rank integer)) ((0 literal)))
c{1: 12 ✓ (((assert)) ((above-min boolean)) ((rank too low literal)))
c{1: 13 ✓ (((below-max boolean)) <- ((lesser-or-equal)) ((rank integer)) ((7 literal)))
c{1: 14 ✓ (((assert)) ((below-max boolean)) ((rank too high literal)))
c{1: 15 ✓ (((reply)) ((rank integer)))
cn0: convert-names in expect-stdin
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((stdin channel-address)) <- ((next-input))) nil nil
cn0: checking oarg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: location for oarg ((stdin channel-address)): 1
cn0: (((x tagged-value)) ((stdin channel-address) (deref)) <- ((read)) ((stdin channel-address))) ((stdin 1)) nil
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking oarg ((x tagged-value))
maybe-add: ((x tagged-value))
cn0: location for oarg ((x tagged-value)): 2
cn0: checking oarg ((stdin channel-address) (deref))
maybe-add: ((stdin channel-address) (deref))
cn0: (((c character)) <- ((maybe-coerce)) ((x tagged-value)) ((character literal))) ((stdin 1) (x 2)) nil
cn0: checking arg ((x tagged-value))
maybe-add: ((x tagged-value))
cn0: checking arg ((character literal))
cn0: checking oarg ((c character))
maybe-add: ((c character))
cn0: location for oarg ((c character)): 4
cn0: (((expected character)) <- ((next-input))) ((c 4) (stdin 1) (x 2)) nil
cn0: checking oarg ((expected character))
maybe-add: ((expected character))
cn0: location for oarg ((expected character)): 5
cn0: (((match? boolean)) <- ((equal)) ((c character)) ((expected character))) ((c 4) (expected 5) (stdin 1) (x 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((expected character))
maybe-add: ((expected character))
cn0: checking oarg ((match? boolean))
maybe-add: ((match? boolean))
cn0: location for oarg ((match? boolean)): 6
cn0: (((assert)) ((match? boolean)) ((expected character not found literal))) ((c 4) (expected 5) (match? 6) (stdin 1) (x 2)) nil
cn0: checking arg ((match? boolean))
maybe-add: ((match? boolean))
cn0: checking arg ((expected character not found literal))
cn0: convert-names in init-board
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((initial-position list-address)) <- ((next-input))) nil nil
cn0: checking oarg ((initial-position list-address))
maybe-add: ((initial-position list-address))
cn0: location for oarg ((initial-position list-address)): 1
cn0: (((len integer)) <- ((list-length)) ((initial-position list-address))) ((initial-position 1)) nil
cn0: checking arg ((initial-position list-address))
maybe-add: ((initial-position list-address))
cn0: checking oarg ((len integer))
maybe-add: ((len integer))
cn0: location for oarg ((len integer)): 2
cn0: (((correct-length? boolean)) <- ((equal)) ((len integer)) ((64 literal))) ((initial-position 1) (len 2)) nil
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking arg ((64 literal))
cn0: checking oarg ((correct-length? boolean))
maybe-add: ((correct-length? boolean))
cn0: location for oarg ((correct-length? boolean)): 3
cn0: (((assert)) ((correct-length? boolean)) ((chessboard had incorrect size literal))) ((correct-length? 3) (initial-position 1) (len 2)) nil
cn0: checking arg ((correct-length? boolean))
maybe-add: ((correct-length? boolean))
cn0: checking arg ((chessboard had incorrect size literal))
cn0: (((b board-address)) <- ((new)) ((board literal)) ((8 literal))) ((correct-length? 3) (initial-position 1) (len 2)) nil
cn0: checking arg ((board literal))
cn0: checking arg ((8 literal))
cn0: checking oarg ((b board-address))
maybe-add: ((b board-address))
cn0: location for oarg ((b board-address)): 4
cn0: (((col integer)) <- ((copy)) ((0 literal))) ((b 4) (correct-length? 3) (initial-position 1) (len 2)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((col integer))
maybe-add: ((col integer))
cn0: location for oarg ((col integer)): 5
cn0: (((curr list-address)) <- ((copy)) ((initial-position list-address))) ((b 4) (col 5) (correct-length? 3) (initial-position 1) (len 2)) nil
cn0: checking arg ((initial-position list-address))
maybe-add: ((initial-position list-address))
cn0: checking oarg ((curr list-address))
maybe-add: ((curr list-address))
cn0: location for oarg ((curr list-address)): 6
cn0: (((done? boolean)) <- ((equal)) ((col integer)) ((8 literal))) ((b 4) (col 5) (correct-length? 3) (curr 6) (initial-position 1) (len 2)) nil
cn0: checking arg ((col integer))
maybe-add: ((col integer))
cn0: checking arg ((8 literal))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 7
cn0: (((jump-if)) ((done? boolean)) ((4 offset))) ((b 4) (col 5) (correct-length? 3) (curr 6) (done? 7) (initial-position 1) (len 2)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((4 offset))
cn0: (((file file-address-address)) <- ((index-address)) ((b board-address) (deref)) ((col integer))) ((b 4) (col 5) (correct-length? 3) (curr 6) (done? 7) (initial-position 1) (len 2)) nil
cn0: checking arg ((b board-address) (deref))
maybe-add: ((b board-address) (deref))
cn0: checking arg ((col integer))
maybe-add: ((col integer))
cn0: checking oarg ((file file-address-address))
maybe-add: ((file file-address-address))
cn0: location for oarg ((file file-address-address)): 8
cn0: (((file file-address-address) (deref)) ((curr list-address)) <- ((init-file)) ((curr list-address))) ((b 4) (col 5) (correct-length? 3) (curr 6) (done? 7) (file 8) (initial-position 1) (len 2)) nil
cn0: checking arg ((curr list-address))
maybe-add: ((curr list-address))
cn0: checking oarg ((file file-address-address) (deref))
maybe-add: ((file file-address-address) (deref))
cn0: checking oarg ((curr list-address))
maybe-add: ((curr list-address))
cn0: (((col integer)) <- ((add)) ((col integer)) ((1 literal))) ((b 4) (col 5) (correct-length? 3) (curr 6) (done? 7) (file 8) (initial-position 1) (len 2)) nil
cn0: checking arg ((col integer))
maybe-add: ((col integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((col integer))
maybe-add: ((col integer))
cn0: (((jump)) ((-6 offset))) ((b 4) (col 5) (correct-length? 3) (curr 6) (done? 7) (file 8) (initial-position 1) (len 2)) nil
cn0: checking arg ((-6 offset))
cn0: (((reply)) ((b board-address))) ((b 4) (col 5) (correct-length? 3) (curr 6) (done? 7) (file 8) (initial-position 1) (len 2)) nil
cn0: checking arg ((b board-address))
maybe-add: ((b board-address))
cn0: convert-names in init-file
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((cursor list-address)) <- ((next-input))) nil nil
cn0: checking oarg ((cursor list-address))
maybe-add: ((cursor list-address))
cn0: location for oarg ((cursor list-address)): 1
cn0: (((result file-address)) <- ((new)) ((file literal)) ((8 literal))) ((cursor 1)) nil
cn0: checking arg ((file literal))
cn0: checking arg ((8 literal))
cn0: checking oarg ((result file-address))
maybe-add: ((result file-address))
cn0: location for oarg ((result file-address)): 2
cn0: (((row integer)) <- ((copy)) ((0 literal))) ((cursor 1) (result 2)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((row integer))
maybe-add: ((row integer))
cn0: location for oarg ((row integer)): 3
cn0: (((done? boolean)) <- ((equal)) ((row integer)) ((8 literal))) ((cursor 1) (result 2) (row 3)) nil
cn0: checking arg ((row integer))
maybe-add: ((row integer))
cn0: checking arg ((8 literal))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 4
cn0: (((jump-if)) ((done? boolean)) ((6 offset))) ((cursor 1) (done? 4) (result 2) (row 3)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((6 offset))
cn0: (((src tagged-value-address)) <- ((list-value-address)) ((cursor list-address))) ((cursor 1) (done? 4) (result 2) (row 3)) nil
cn0: checking arg ((cursor list-address))
maybe-add: ((cursor list-address))
cn0: checking oarg ((src tagged-value-address))
maybe-add: ((src tagged-value-address))
cn0: location for oarg ((src tagged-value-address)): 5
cn0: (((dest square-address)) <- ((index-address)) ((result file-address) (deref)) ((row integer))) ((cursor 1) (done? 4) (result 2) (row 3) (src 5)) nil
cn0: checking arg ((result file-address) (deref))
maybe-add: ((result file-address) (deref))
cn0: checking arg ((row integer))
maybe-add: ((row integer))
cn0: checking oarg ((dest square-address))
maybe-add: ((dest square-address))
cn0: location for oarg ((dest square-address)): 6
cn0: (((dest square-address) (deref)) <- ((get)) ((src tagged-value-address) (deref)) ((payload offset))) ((cursor 1) (dest 6) (done? 4) (result 2) (row 3) (src 5)) nil
cn0: field-access payload in srctagged-value-addressderef of type tagged-value
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((src tagged-value-address) (deref))
maybe-add: ((src tagged-value-address) (deref))
cn0: checking arg ((payload offset))
cn0: checking oarg ((dest square-address) (deref))
maybe-add: ((dest square-address) (deref))
cn0: (((cursor list-address)) <- ((list-next)) ((cursor list-address))) ((cursor 1) (dest 6) (done? 4) (payload 1) (result 2) (row 3) (src 5)) ((payload t))
cn0: checking arg ((cursor list-address))
maybe-add: ((cursor list-address))
cn0: checking oarg ((cursor list-address))
maybe-add: ((cursor list-address))
cn0: (((row integer)) <- ((add)) ((row integer)) ((1 literal))) ((cursor 1) (dest 6) (done? 4) (payload 1) (result 2) (row 3) (src 5)) ((payload t))
cn0: checking arg ((row integer))
maybe-add: ((row integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((row integer))
maybe-add: ((row integer))
cn0: (((jump)) ((-8 offset))) ((cursor 1) (dest 6) (done? 4) (payload 1) (result 2) (row 3) (src 5)) ((payload t))
cn0: checking arg ((-8 offset))
cn0: (((reply)) ((result file-address)) ((cursor list-address))) ((cursor 1) (dest 6) (done? 4) (payload 1) (result 2) (row 3) (src 5)) ((payload t))
cn0: checking arg ((result file-address))
maybe-add: ((result file-address))
cn0: checking arg ((cursor list-address))
maybe-add: ((cursor list-address))
cn0: convert-names in main
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((initial-position list-address)) <- ((init-list)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal))) nil nil
cn0: checking arg ((R literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((r literal))
cn0: checking arg ((N literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((n literal))
cn0: checking arg ((B literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((b literal))
cn0: checking arg ((Q literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((q literal))
cn0: checking arg ((K literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((k literal))
cn0: checking arg ((B literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((b literal))
cn0: checking arg ((N literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((n literal))
cn0: checking arg ((R literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((r literal))
cn0: checking oarg ((initial-position list-address))
maybe-add: ((initial-position list-address))
cn0: location for oarg ((initial-position list-address)): 1
cn0: (((b board-address)) <- ((init-board)) ((initial-position list-address))) ((initial-position 1)) nil
cn0: checking arg ((initial-position list-address))
maybe-add: ((initial-position list-address))
cn0: checking oarg ((b board-address))
maybe-add: ((b board-address))
cn0: location for oarg ((b board-address)): 2
cn0: (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) ((b 2) (initial-position 1)) nil
cn0: checking arg ((20 literal))
cn0: checking arg ((10 literal))
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 3
cn0: (((print-board)) ((screen terminal-address)) ((b board-address))) ((b 2) (initial-position 1) (screen 3)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((b board-address))
maybe-add: ((b board-address))
cn0: (((1 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) ((b 2) (initial-position 1) (screen 3)) nil
cn0: field-access data in screenterminal-addressderef of type terminal
cn0: new field; computing location
cn0: field location 4
cn0: checking arg ((screen terminal-address) (deref))
maybe-add: ((screen terminal-address) (deref))
cn0: checking arg ((data offset))
cn0: checking oarg ((1 string-address) (raw))
maybe-add: ((1 string-address) (raw))
cn0: convert-names in make-move
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((b board-address)) <- ((next-input))) nil nil
cn0: checking oarg ((b board-address))
maybe-add: ((b board-address))
cn0: location for oarg ((b board-address)): 1
cn0: (((m move-address)) <- ((next-input))) ((b 1)) nil
cn0: checking oarg ((m move-address))
maybe-add: ((m move-address))
cn0: location for oarg ((m move-address)): 2
cn0: (((x integer-integer-pair)) <- ((get)) ((m move-address) (deref)) ((from offset))) ((b 1) (m 2)) nil
cn0: field-access from in mmove-addressderef of type move
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((m move-address) (deref))
maybe-add: ((m move-address) (deref))
cn0: checking arg ((from offset))
cn0: checking oarg ((x integer-integer-pair))
maybe-add: ((x integer-integer-pair))
cn0: location for oarg ((x integer-integer-pair)): 3
cn0: (((from-file integer)) <- ((get)) ((x integer-integer-pair)) ((0 offset))) ((b 1) (from 0) (m 2) (x 3)) ((from t))
cn0: field-access 0 in xinteger-integer-pair of type integer-integer-pair
cn0: checking arg ((x integer-integer-pair))
maybe-add: ((x integer-integer-pair))
cn0: checking arg ((0 offset))
cn0: checking oarg ((from-file integer))
maybe-add: ((from-file integer))
cn0: location for oarg ((from-file integer)): 5
cn0: (((from-rank integer)) <- ((get)) ((x integer-integer-pair)) ((1 offset))) ((b 1) (from 0) (from-file 5) (m 2) (x 3)) ((from t))
cn0: field-access 1 in xinteger-integer-pair of type integer-integer-pair
cn0: checking arg ((x integer-integer-pair))
maybe-add: ((x integer-integer-pair))
cn0: checking arg ((1 offset))
cn0: checking oarg ((from-rank integer))
maybe-add: ((from-rank integer))
cn0: location for oarg ((from-rank integer)): 6
cn0: (((f file-address)) <- ((index)) ((b board-address) (deref)) ((from-file integer))) ((b 1) (from 0) (from-file 5) (from-rank 6) (m 2) (x 3)) ((from t))
cn0: checking arg ((b board-address) (deref))
maybe-add: ((b board-address) (deref))
cn0: checking arg ((from-file integer))
maybe-add: ((from-file integer))
cn0: checking oarg ((f file-address))
maybe-add: ((f file-address))
cn0: location for oarg ((f file-address)): 7
cn0: (((src square-address)) <- ((index-address)) ((f file-address) (deref)) ((from-rank integer))) ((b 1) (f 7) (from 0) (from-file 5) (from-rank 6) (m 2) (x 3)) ((from t))
cn0: checking arg ((f file-address) (deref))
maybe-add: ((f file-address) (deref))
cn0: checking arg ((from-rank integer))
maybe-add: ((from-rank integer))
cn0: checking oarg ((src square-address))
maybe-add: ((src square-address))
cn0: location for oarg ((src square-address)): 8
cn0: (((x integer-integer-pair)) <- ((get)) ((m move-address) (deref)) ((to offset))) ((b 1) (f 7) (from 0) (from-file 5) (from-rank 6) (m 2) (src 8) (x 3)) ((from t))
cn0: field-access to in mmove-addressderef of type move
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((m move-address) (deref))
maybe-add: ((m move-address) (deref))
cn0: checking arg ((to offset))
cn0: checking oarg ((x integer-integer-pair))
maybe-add: ((x integer-integer-pair))
cn0: (((to-file integer)) <- ((get)) ((x integer-integer-pair)) ((0 offset))) ((b 1) (f 7) (from 0) (from-file 5) (from-rank 6) (m 2) (src 8) (to 1) (x 3)) ((from t) (to t))
cn0: field-access 0 in xinteger-integer-pair of type integer-integer-pair
cn0: checking arg ((x integer-integer-pair))
maybe-add: ((x integer-integer-pair))
cn0: checking arg ((0 offset))
cn0: checking oarg ((to-file integer))
maybe-add: ((to-file integer))
cn0: location for oarg ((to-file integer)): 9
cn0: (((to-rank integer)) <- ((get)) ((x integer-integer-pair)) ((1 offset))) ((b 1) (f 7) (from 0) (from-file 5) (from-rank 6) (m 2) (src 8) (to 1) (to-file 9) (x 3)) ((from t) (to t))
cn0: field-access 1 in xinteger-integer-pair of type integer-integer-pair
cn0: checking arg ((x integer-integer-pair))
maybe-add: ((x integer-integer-pair))
cn0: checking arg ((1 offset))
cn0: checking oarg ((to-rank integer))
maybe-add: ((to-rank integer))
cn0: location for oarg ((to-rank integer)): 10
cn0: (((f file-address)) <- ((index)) ((b board-address) (deref)) ((to-file integer))) ((b 1) (f 7) (from 0) (from-file 5) (from-rank 6) (m 2) (src 8) (to 1) (to-file 9) (to-rank 10) (x 3)) ((from t) (to t))
cn0: checking arg ((b board-address) (deref))
maybe-add: ((b board-address) (deref))
cn0: checking arg ((to-file integer))
maybe-add: ((to-file integer))
cn0: checking oarg ((f file-address))
maybe-add: ((f file-address))
cn0: (((dest square-address)) <- ((index-address)) ((f file-address) (deref)) ((to-rank integer))) ((b 1) (f 7) (from 0) (from-file 5) (from-rank 6) (m 2) (src 8) (to 1) (to-file 9) (to-rank 10) (x 3)) ((from t) (to t))
cn0: checking arg ((f file-address) (deref))
maybe-add: ((f file-address) (deref))
cn0: checking arg ((to-rank integer))
maybe-add: ((to-rank integer))
cn0: checking oarg ((dest square-address))
maybe-add: ((dest square-address))
cn0: location for oarg ((dest square-address)): 11
cn0: (((dest square-address) (deref)) <- ((copy)) ((src square-address) (deref))) ((b 1) (dest 11) (f 7) (from 0) (from-file 5) (from-rank 6) (m 2) (src 8) (to 1) (to-file 9) (to-rank 10) (x 3)) ((from t) (to t))
cn0: checking arg ((src square-address) (deref))
maybe-add: ((src square-address) (deref))
cn0: checking oarg ((dest square-address) (deref))
maybe-add: ((dest square-address) (deref))
cn0: (((src square-address) (deref)) <- ((copy)) ((_ literal))) ((b 1) (dest 11) (f 7) (from 0) (from-file 5) (from-rank 6) (m 2) (src 8) (to 1) (to-file 9) (to-rank 10) (x 3)) ((from t) (to t))
cn0: checking arg ((_ literal))
cn0: checking oarg ((src square-address) (deref))
maybe-add: ((src square-address) (deref))
cn0: (((reply)) ((b board-address))) ((b 1) (dest 11) (f 7) (from 0) (from-file 5) (from-rank 6) (m 2) (src 8) (to 1) (to-file 9) (to-rank 10) (x 3)) ((from t) (to t))
cn0: checking arg ((b board-address))
maybe-add: ((b board-address))
cn0: convert-names in print-board
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((b board-address)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((b board-address))
maybe-add: ((b board-address))
cn0: location for oarg ((b board-address)): 2
cn0: (((row integer)) <- ((copy)) ((7 literal))) ((b 2) (screen 1)) nil
cn0: checking arg ((7 literal))
cn0: checking oarg ((row integer))
maybe-add: ((row integer))
cn0: location for oarg ((row integer)): 3
cn0: (((done? boolean)) <- ((less-than)) ((row integer)) ((0 literal))) ((b 2) (row 3) (screen 1)) nil
cn0: checking arg ((row integer))
maybe-add: ((row integer))
cn0: checking arg ((0 literal))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 4
cn0: (((jump-if)) ((done? boolean)) ((16 offset))) ((b 2) (done? 4) (row 3) (screen 1)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((16 offset))
cn0: (((rank integer)) <- ((add)) ((row integer)) ((1 literal))) ((b 2) (done? 4) (row 3) (screen 1)) nil
cn0: checking arg ((row integer))
maybe-add: ((row integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((rank integer))
maybe-add: ((rank integer))
cn0: location for oarg ((rank integer)): 5
cn0: (((print-integer)) ((screen terminal-address)) ((rank integer))) ((b 2) (done? 4) (rank 5) (row 3) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((rank integer))
maybe-add: ((rank integer))
cn0: (((s string-address)) <- ((new))  | ) ((b 2) (done? 4) (rank 5) (row 3) (screen 1)) nil
cn0: checking arg  | 
cn0: checking oarg ((s string-address))
maybe-add: ((s string-address))
cn0: location for oarg ((s string-address)): 6
cn0: (((print-string)) ((screen terminal-address)) ((s string-address))) ((b 2) (done? 4) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((s string-address))
maybe-add: ((s string-address))
cn0: (((col integer)) <- ((copy)) ((0 literal))) ((b 2) (done? 4) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((col integer))
maybe-add: ((col integer))
cn0: location for oarg ((col integer)): 7
cn0: (((done? boolean)) <- ((equal)) ((col integer)) ((8 literal))) ((b 2) (col 7) (done? 4) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((col integer))
maybe-add: ((col integer))
cn0: checking arg ((8 literal))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: (((jump-if)) ((done? boolean)) ((6 offset))) ((b 2) (col 7) (done? 4) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((6 offset))
cn0: (((f file-address)) <- ((index)) ((b board-address) (deref)) ((col integer))) ((b 2) (col 7) (done? 4) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((b board-address) (deref))
maybe-add: ((b board-address) (deref))
cn0: checking arg ((col integer))
maybe-add: ((col integer))
cn0: checking oarg ((f file-address))
maybe-add: ((f file-address))
cn0: location for oarg ((f file-address)): 8
cn0: (((s square)) <- ((index)) ((f file-address) (deref)) ((row integer))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((f file-address) (deref))
maybe-add: ((f file-address) (deref))
cn0: checking arg ((row integer))
maybe-add: ((row integer))
cn0: checking oarg ((s square))
maybe-add: ((s square))
cn0: (((print-character)) ((screen terminal-address)) ((s square))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((s square))
maybe-add: ((s square))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((col integer)) <- ((add)) ((col integer)) ((1 literal))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((col integer))
maybe-add: ((col integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((col integer))
maybe-add: ((col integer))
cn0: (((jump)) ((-8 offset))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((-8 offset))
cn0: (((row integer)) <- ((subtract)) ((row integer)) ((1 literal))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((row integer))
maybe-add: ((row integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((row integer))
maybe-add: ((row integer))
cn0: (((cursor-to-next-line)) ((screen terminal-address))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-18 offset))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((-18 offset))
cn0: (((s string-address)) <- ((new))   +----------------) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg   +----------------
cn0: checking oarg ((s string-address))
maybe-add: ((s string-address))
cn0: (((print-string)) ((screen terminal-address)) ((s string-address))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((s string-address))
maybe-add: ((s string-address))
cn0: (((cursor-to-next-line)) ((screen terminal-address))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((s string-address)) <- ((new))     a b c d e f g h) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg     a b c d e f g h
cn0: checking oarg ((s string-address))
maybe-add: ((s string-address))
cn0: (((print-string)) ((screen terminal-address)) ((s string-address))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((s string-address))
maybe-add: ((s string-address))
cn0: (((cursor-to-next-line)) ((screen terminal-address))) ((b 2) (col 7) (done? 4) (f 8) (rank 5) (row 3) (s 6) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: convert-names in read-file
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((stdin channel-address)) <- ((next-input))) nil nil
cn0: checking oarg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: location for oarg ((stdin channel-address)): 1
cn0: (((x tagged-value)) ((stdin channel-address) (deref)) <- ((read)) ((stdin channel-address))) ((stdin 1)) nil
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking oarg ((x tagged-value))
maybe-add: ((x tagged-value))
cn0: location for oarg ((x tagged-value)): 2
cn0: checking oarg ((stdin channel-address) (deref))
maybe-add: ((stdin channel-address) (deref))
cn0: (((a character)) <- ((copy)) ((a literal))) ((stdin 1) (x 2)) nil
cn0: checking arg ((a literal))
cn0: checking oarg ((a character))
maybe-add: ((a character))
cn0: location for oarg ((a character)): 4
cn0: (((file-base integer)) <- ((character-to-integer)) ((a character))) ((a 4) (stdin 1) (x 2)) nil
cn0: checking arg ((a character))
maybe-add: ((a character))
cn0: checking oarg ((file-base integer))
maybe-add: ((file-base integer))
cn0: location for oarg ((file-base integer)): 5
cn0: (((c character)) <- ((maybe-coerce)) ((x tagged-value)) ((character literal))) ((a 4) (file-base 5) (stdin 1) (x 2)) nil
cn0: checking arg ((x tagged-value))
maybe-add: ((x tagged-value))
cn0: checking arg ((character literal))
cn0: checking oarg ((c character))
maybe-add: ((c character))
cn0: location for oarg ((c character)): 6
cn0: (((quit boolean)) <- ((equal)) ((c character)) ((q literal))) ((a 4) (c 6) (file-base 5) (stdin 1) (x 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((q literal))
cn0: checking oarg ((quit boolean))
maybe-add: ((quit boolean))
cn0: location for oarg ((quit boolean)): 7
cn0: (((jump-unless)) ((quit boolean)) ((1 offset))) ((a 4) (c 6) (file-base 5) (quit 7) (stdin 1) (x 2)) nil
cn0: checking arg ((quit boolean))
maybe-add: ((quit boolean))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((nil literal))) ((a 4) (c 6) (file-base 5) (quit 7) (stdin 1) (x 2)) nil
cn0: checking arg ((nil literal))
cn0: (((file integer)) <- ((character-to-integer)) ((c character))) ((a 4) (c 6) (file-base 5) (quit 7) (stdin 1) (x 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking oarg ((file integer))
maybe-add: ((file integer))
cn0: location for oarg ((file integer)): 8
cn0: (((file integer)) <- ((subtract)) ((file integer)) ((file-base integer))) ((a 4) (c 6) (file 8) (file-base 5) (quit 7) (stdin 1) (x 2)) nil
cn0: checking arg ((file integer))
maybe-add: ((file integer))
cn0: checking arg ((file-base integer))
maybe-add: ((file-base integer))
cn0: checking oarg ((file integer))
maybe-add: ((file integer))
cn0: (((above-min boolean)) <- ((greater-or-equal)) ((file integer)) ((0 literal))) ((a 4) (c 6) (file 8) (file-base 5) (quit 7) (stdin 1) (x 2)) nil
cn0: checking arg ((file integer))
maybe-add: ((file integer))
cn0: checking arg ((0 literal))
cn0: checking oarg ((above-min boolean))
maybe-add: ((above-min boolean))
cn0: location for oarg ((above-min boolean)): 9
cn0: (((assert)) ((above-min boolean)) ((file too low literal))) ((a 4) (above-min 9) (c 6) (file 8) (file-base 5) (quit 7) (stdin 1) (x 2)) nil
cn0: checking arg ((above-min boolean))
maybe-add: ((above-min boolean))
cn0: checking arg ((file too low literal))
cn0: (((below-max boolean)) <- ((lesser-or-equal)) ((file integer)) ((7 literal))) ((a 4) (above-min 9) (c 6) (file 8) (file-base 5) (quit 7) (stdin 1) (x 2)) nil
cn0: checking arg ((file integer))
maybe-add: ((file integer))
cn0: checking arg ((7 literal))
cn0: checking oarg ((below-max boolean))
maybe-add: ((below-max boolean))
cn0: location for oarg ((below-max boolean)): 10
cn0: (((assert)) ((below-max boolean)) ((file too high literal))) ((a 4) (above-min 9) (below-max 10) (c 6) (file 8) (file-base 5) (quit 7) (stdin 1) (x 2)) nil
cn0: checking arg ((below-max boolean))
maybe-add: ((below-max boolean))
cn0: checking arg ((file too high literal))
cn0: (((reply)) ((file integer))) ((a 4) (above-min 9) (below-max 10) (c 6) (file 8) (file-base 5) (quit 7) (stdin 1) (x 2)) nil
cn0: checking arg ((file integer))
maybe-add: ((file integer))
cn0: convert-names in read-move
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((stdin channel-address)) <- ((next-input))) nil nil
cn0: checking oarg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: location for oarg ((stdin channel-address)): 1
cn0: (((from-file integer)) <- ((read-file)) ((stdin channel-address))) ((stdin 1)) nil
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking oarg ((from-file integer))
maybe-add: ((from-file integer))
cn0: location for oarg ((from-file integer)): 2
cn0: (((jump-if)) ((from-file integer)) ((1 offset))) ((from-file 2) (stdin 1)) nil
cn0: checking arg ((from-file integer))
maybe-add: ((from-file integer))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((nil literal))) ((from-file 2) (stdin 1)) nil
cn0: checking arg ((nil literal))
cn0: (((from-rank integer)) <- ((read-rank)) ((stdin channel-address))) ((from-file 2) (stdin 1)) nil
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking oarg ((from-rank integer))
maybe-add: ((from-rank integer))
cn0: location for oarg ((from-rank integer)): 3
cn0: (((expect-stdin)) ((stdin channel-address)) ((- literal))) ((from-file 2) (from-rank 3) (stdin 1)) nil
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking arg ((- literal))
cn0: (((to-file integer)) <- ((read-file)) ((stdin channel-address))) ((from-file 2) (from-rank 3) (stdin 1)) nil
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking oarg ((to-file integer))
maybe-add: ((to-file integer))
cn0: location for oarg ((to-file integer)): 4
cn0: (((to-rank integer)) <- ((read-rank)) ((stdin channel-address))) ((from-file 2) (from-rank 3) (stdin 1) (to-file 4)) nil
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking oarg ((to-rank integer))
maybe-add: ((to-rank integer))
cn0: location for oarg ((to-rank integer)): 5
cn0: (((expect-stdin)) ((stdin channel-address)) ((
 literal))) ((from-file 2) (from-rank 3) (stdin 1) (to-file 4) (to-rank 5)) nil
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking arg ((
 literal))
cn0: (((result move-address)) <- ((new)) ((move literal))) ((from-file 2) (from-rank 3) (stdin 1) (to-file 4) (to-rank 5)) nil
cn0: checking arg ((move literal))
cn0: checking oarg ((result move-address))
maybe-add: ((result move-address))
cn0: location for oarg ((result move-address)): 6
cn0: (((f integer-integer-pair-address)) <- ((get-address)) ((result move-address) (deref)) ((from offset))) ((from-file 2) (from-rank 3) (result 6) (stdin 1) (to-file 4) (to-rank 5)) nil
cn0: field-access from in resultmove-addressderef of type move
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((result move-address) (deref))
maybe-add: ((result move-address) (deref))
cn0: checking arg ((from offset))
cn0: checking oarg ((f integer-integer-pair-address))
maybe-add: ((f integer-integer-pair-address))
cn0: location for oarg ((f integer-integer-pair-address)): 7
cn0: (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((0 offset))) ((f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (to-file 4) (to-rank 5)) ((from t))
cn0: field-access 0 in finteger-integer-pair-addressderef of type integer-integer-pair
cn0: checking arg ((f integer-integer-pair-address) (deref))
maybe-add: ((f integer-integer-pair-address) (deref))
cn0: checking arg ((0 offset))
cn0: checking oarg ((dest integer-address))
maybe-add: ((dest integer-address))
cn0: location for oarg ((dest integer-address)): 8
cn0: (((dest integer-address) (deref)) <- ((copy)) ((from-file integer))) ((dest 8) (f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (to-file 4) (to-rank 5)) ((from t))
cn0: checking arg ((from-file integer))
maybe-add: ((from-file integer))
cn0: checking oarg ((dest integer-address) (deref))
maybe-add: ((dest integer-address) (deref))
cn0: (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((1 offset))) ((dest 8) (f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (to-file 4) (to-rank 5)) ((from t))
cn0: field-access 1 in finteger-integer-pair-addressderef of type integer-integer-pair
cn0: checking arg ((f integer-integer-pair-address) (deref))
maybe-add: ((f integer-integer-pair-address) (deref))
cn0: checking arg ((1 offset))
cn0: checking oarg ((dest integer-address))
maybe-add: ((dest integer-address))
cn0: (((dest integer-address) (deref)) <- ((copy)) ((from-rank integer))) ((dest 8) (f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (to-file 4) (to-rank 5)) ((from t))
cn0: checking arg ((from-rank integer))
maybe-add: ((from-rank integer))
cn0: checking oarg ((dest integer-address) (deref))
maybe-add: ((dest integer-address) (deref))
cn0: (((t0 integer-integer-pair-address)) <- ((get-address)) ((result move-address) (deref)) ((to offset))) ((dest 8) (f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (to-file 4) (to-rank 5)) ((from t))
cn0: field-access to in resultmove-addressderef of type move
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((result move-address) (deref))
maybe-add: ((result move-address) (deref))
cn0: checking arg ((to offset))
cn0: checking oarg ((t0 integer-integer-pair-address))
maybe-add: ((t0 integer-integer-pair-address))
cn0: location for oarg ((t0 integer-integer-pair-address)): 9
cn0: (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((0 offset))) ((dest 8) (f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (t0 9) (to 1) (to-file 4) (to-rank 5)) ((from t) (to t))
cn0: field-access 0 in t0integer-integer-pair-addressderef of type integer-integer-pair
cn0: checking arg ((t0 integer-integer-pair-address) (deref))
maybe-add: ((t0 integer-integer-pair-address) (deref))
cn0: checking arg ((0 offset))
cn0: checking oarg ((dest integer-address))
maybe-add: ((dest integer-address))
cn0: (((dest integer-address) (deref)) <- ((copy)) ((to-file integer))) ((dest 8) (f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (t0 9) (to 1) (to-file 4) (to-rank 5)) ((from t) (to t))
cn0: checking arg ((to-file integer))
maybe-add: ((to-file integer))
cn0: checking oarg ((dest integer-address) (deref))
maybe-add: ((dest integer-address) (deref))
cn0: (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((1 offset))) ((dest 8) (f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (t0 9) (to 1) (to-file 4) (to-rank 5)) ((from t) (to t))
cn0: field-access 1 in t0integer-integer-pair-addressderef of type integer-integer-pair
cn0: checking arg ((t0 integer-integer-pair-address) (deref))
maybe-add: ((t0 integer-integer-pair-address) (deref))
cn0: checking arg ((1 offset))
cn0: checking oarg ((dest integer-address))
maybe-add: ((dest integer-address))
cn0: (((dest integer-address) (deref)) <- ((copy)) ((to-rank integer))) ((dest 8) (f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (t0 9) (to 1) (to-file 4) (to-rank 5)) ((from t) (to t))
cn0: checking arg ((to-rank integer))
maybe-add: ((to-rank integer))
cn0: checking oarg ((dest integer-address) (deref))
maybe-add: ((dest integer-address) (deref))
cn0: (((reply)) ((result move-address))) ((dest 8) (f 7) (from 0) (from-file 2) (from-rank 3) (result 6) (stdin 1) (t0 9) (to 1) (to-file 4) (to-rank 5)) ((from t) (to t))
cn0: checking arg ((result move-address))
maybe-add: ((result move-address))
cn0: convert-names in read-rank
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((stdin channel-address)) <- ((next-input))) nil nil
cn0: checking oarg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: location for oarg ((stdin channel-address)): 1
cn0: (((x tagged-value)) ((stdin channel-address) (deref)) <- ((read)) ((stdin channel-address))) ((stdin 1)) nil
cn0: checking arg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: checking oarg ((x tagged-value))
maybe-add: ((x tagged-value))
cn0: location for oarg ((x tagged-value)): 2
cn0: checking oarg ((stdin channel-address) (deref))
maybe-add: ((stdin channel-address) (deref))
cn0: (((c character)) <- ((maybe-coerce)) ((x tagged-value)) ((character literal))) ((stdin 1) (x 2)) nil
cn0: checking arg ((x tagged-value))
maybe-add: ((x tagged-value))
cn0: checking arg ((character literal))
cn0: checking oarg ((c character))
maybe-add: ((c character))
cn0: location for oarg ((c character)): 4
cn0: (((quit boolean)) <- ((equal)) ((c character)) ((q literal))) ((c 4) (stdin 1) (x 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((q literal))
cn0: checking oarg ((quit boolean))
maybe-add: ((quit boolean))
cn0: location for oarg ((quit boolean)): 5
cn0: (((jump-unless)) ((quit boolean)) ((1 offset))) ((c 4) (quit 5) (stdin 1) (x 2)) nil
cn0: checking arg ((quit boolean))
maybe-add: ((quit boolean))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((nil literal))) ((c 4) (quit 5) (stdin 1) (x 2)) nil
cn0: checking arg ((nil literal))
cn0: (((rank integer)) <- ((character-to-integer)) ((c character))) ((c 4) (quit 5) (stdin 1) (x 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking oarg ((rank integer))
maybe-add: ((rank integer))
cn0: location for oarg ((rank integer)): 6
cn0: (((one character)) <- ((copy)) ((1 literal))) ((c 4) (quit 5) (rank 6) (stdin 1) (x 2)) nil
cn0: checking arg ((1 literal))
cn0: checking oarg ((one character))
maybe-add: ((one character))
cn0: location for oarg ((one character)): 7
cn0: (((rank-base integer)) <- ((character-to-integer)) ((one character))) ((c 4) (one 7) (quit 5) (rank 6) (stdin 1) (x 2)) nil
cn0: checking arg ((one character))
maybe-add: ((one character))
cn0: checking oarg ((rank-base integer))
maybe-add: ((rank-base integer))
cn0: location for oarg ((rank-base integer)): 8
cn0: (((rank integer)) <- ((subtract)) ((rank integer)) ((rank-base integer))) ((c 4) (one 7) (quit 5) (rank 6) (rank-base 8) (stdin 1) (x 2)) nil
cn0: checking arg ((rank integer))
maybe-add: ((rank integer))
cn0: checking arg ((rank-base integer))
maybe-add: ((rank-base integer))
cn0: checking oarg ((rank integer))
maybe-add: ((rank integer))
cn0: (((above-min boolean)) <- ((greater-or-equal)) ((rank integer)) ((0 literal))) ((c 4) (one 7) (quit 5) (rank 6) (rank-base 8) (stdin 1) (x 2)) nil
cn0: checking arg ((rank integer))
maybe-add: ((rank integer))
cn0: checking arg ((0 literal))
cn0: checking oarg ((above-min boolean))
maybe-add: ((above-min boolean))
cn0: location for oarg ((above-min boolean)): 9
cn0: (((assert)) ((above-min boolean)) ((rank too low literal))) ((above-min 9) (c 4) (one 7) (quit 5) (rank 6) (rank-base 8) (stdin 1) (x 2)) nil
cn0: checking arg ((above-min boolean))
maybe-add: ((above-min boolean))
cn0: checking arg ((rank too low literal))
cn0: (((below-max boolean)) <- ((lesser-or-equal)) ((rank integer)) ((7 literal))) ((above-min 9) (c 4) (one 7) (quit 5) (rank 6) (rank-base 8) (stdin 1) (x 2)) nil
cn0: checking arg ((rank integer))
maybe-add: ((rank integer))
cn0: checking arg ((7 literal))
cn0: checking oarg ((below-max boolean))
maybe-add: ((below-max boolean))
cn0: location for oarg ((below-max boolean)): 10
cn0: (((assert)) ((below-max boolean)) ((rank too high literal))) ((above-min 9) (below-max 10) (c 4) (one 7) (quit 5) (rank 6) (rank-base 8) (stdin 1) (x 2)) nil
cn0: checking arg ((below-max boolean))
maybe-add: ((below-max boolean))
cn0: checking arg ((rank too high literal))
cn0: (((reply)) ((rank integer))) ((above-min 9) (below-max 10) (c 4) (one 7) (quit 5) (rank 6) (rank-base 8) (stdin 1) (x 2)) nil
cn0: checking arg ((rank integer))
maybe-add: ((rank integer))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 channel-address)) <- ((next-input)))
cn1: (((2 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
cn1: (((4 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
cn1: (((5 character)) <- ((next-input)))
cn1: (((6 boolean)) <- ((equal)) ((4 character)) ((5 character)))
cn1: (((assert)) ((6 boolean)) ((expected character not found literal)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 list-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((list-length)) ((1 list-address)))
cn1: (((3 boolean)) <- ((equal)) ((2 integer)) ((64 literal)))
cn1: (((assert)) ((3 boolean)) ((chessboard had incorrect size literal)))
cn1: (((4 board-address)) <- ((new)) ((board literal)) ((8 literal)))
cn1: (((5 integer)) <- ((copy)) ((0 literal)))
cn1: (((6 list-address)) <- ((copy)) ((1 list-address)))
cn1: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
cn1: (((jump-if)) ((7 boolean)) ((4 offset)))
cn1: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
cn1: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
cn1: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
cn1: (((jump)) ((-6 offset)))
cn1: (((reply)) ((4 board-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 list-address)) <- ((next-input)))
cn1: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
cn1: (((3 integer)) <- ((copy)) ((0 literal)))
cn1: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
cn1: (((jump-if)) ((4 boolean)) ((6 offset)))
cn1: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
cn1: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
cn1: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
cn1: (((1 list-address)) <- ((list-next)) ((1 list-address)))
cn1: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
cn1: (((jump)) ((-8 offset)))
cn1: (((reply)) ((2 file-address)) ((1 list-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((1 list-address)) <- ((init-list)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
cn1: (((2 board-address)) <- ((init-board)) ((1 list-address)))
cn1: (((3 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
cn1: (((print-board)) ((3 terminal-address)) ((2 board-address)))
cn1: (((1 string-address) (raw)) <- ((get)) ((3 terminal-address) (deref)) ((4 offset)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 board-address)) <- ((next-input)))
cn1: (((2 move-address)) <- ((next-input)))
cn1: (((3 integer-integer-pair)) <- ((get)) ((2 move-address) (deref)) ((0 offset)))
cn1: (((5 integer)) <- ((get)) ((3 integer-integer-pair)) ((0 offset)))
cn1: (((6 integer)) <- ((get)) ((3 integer-integer-pair)) ((1 offset)))
cn1: (((7 file-address)) <- ((index)) ((1 board-address) (deref)) ((5 integer)))
cn1: (((8 square-address)) <- ((index-address)) ((7 file-address) (deref)) ((6 integer)))
cn1: (((3 integer-integer-pair)) <- ((get)) ((2 move-address) (deref)) ((1 offset)))
cn1: (((9 integer)) <- ((get)) ((3 integer-integer-pair)) ((0 offset)))
cn1: (((10 integer)) <- ((get)) ((3 integer-integer-pair)) ((1 offset)))
cn1: (((7 file-address)) <- ((index)) ((1 board-address) (deref)) ((9 integer)))
cn1: (((11 square-address)) <- ((index-address)) ((7 file-address) (deref)) ((10 integer)))
cn1: (((11 square-address) (deref)) <- ((copy)) ((8 square-address) (deref)))
cn1: (((8 square-address) (deref)) <- ((copy)) ((_ literal)))
cn1: (((reply)) ((1 board-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 board-address)) <- ((next-input)))
cn1: (((3 integer)) <- ((copy)) ((7 literal)))
cn1: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
cn1: (((jump-if)) ((4 boolean)) ((16 offset)))
cn1: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
cn1: (((print-integer)) ((1 terminal-address)) ((5 integer)))
cn1: (((6 string-address)) <- ((new))  | )
cn1: (((print-string)) ((1 terminal-address)) ((6 string-address)))
cn1: (((7 integer)) <- ((copy)) ((0 literal)))
cn1: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
cn1: (((jump-if)) ((4 boolean)) ((6 offset)))
cn1: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
cn1: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
cn1: (((print-character)) ((1 terminal-address)) ((6 square)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
cn1: (((jump)) ((-8 offset)))
cn1: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
cn1: (((cursor-to-next-line)) ((1 terminal-address)))
cn1: (((jump)) ((-18 offset)))
cn1: (((6 string-address)) <- ((new))   +----------------)
cn1: (((print-string)) ((1 terminal-address)) ((6 string-address)))
cn1: (((cursor-to-next-line)) ((1 terminal-address)))
cn1: (((6 string-address)) <- ((new))     a b c d e f g h)
cn1: (((print-string)) ((1 terminal-address)) ((6 string-address)))
cn1: (((cursor-to-next-line)) ((1 terminal-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 channel-address)) <- ((next-input)))
cn1: (((2 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
cn1: (((4 character)) <- ((copy)) ((a literal)))
cn1: (((5 integer)) <- ((character-to-integer)) ((4 character)))
cn1: (((6 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
cn1: (((7 boolean)) <- ((equal)) ((6 character)) ((q literal)))
cn1: (((jump-unless)) ((7 boolean)) ((1 offset)))
cn1: (((reply)) ((nil literal)))
cn1: (((8 integer)) <- ((character-to-integer)) ((6 character)))
cn1: (((8 integer)) <- ((subtract)) ((8 integer)) ((5 integer)))
cn1: (((9 boolean)) <- ((greater-or-equal)) ((8 integer)) ((0 literal)))
cn1: (((assert)) ((9 boolean)) ((file too low literal)))
cn1: (((10 boolean)) <- ((lesser-or-equal)) ((8 integer)) ((7 literal)))
cn1: (((assert)) ((10 boolean)) ((file too high literal)))
cn1: (((reply)) ((8 integer)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 channel-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((read-file)) ((1 channel-address)))
cn1: (((jump-if)) ((2 integer)) ((1 offset)))
cn1: (((reply)) ((nil literal)))
cn1: (((3 integer)) <- ((read-rank)) ((1 channel-address)))
cn1: (((expect-stdin)) ((1 channel-address)) ((- literal)))
cn1: (((4 integer)) <- ((read-file)) ((1 channel-address)))
cn1: (((5 integer)) <- ((read-rank)) ((1 channel-address)))
cn1: (((expect-stdin)) ((1 channel-address)) ((
 literal)))
cn1: (((6 move-address)) <- ((new)) ((move literal)))
cn1: (((7 integer-integer-pair-address)) <- ((get-address)) ((6 move-address) (deref)) ((0 offset)))
cn1: (((8 integer-address)) <- ((get-address)) ((7 integer-integer-pair-address) (deref)) ((0 offset)))
cn1: (((8 integer-address) (deref)) <- ((copy)) ((2 integer)))
cn1: (((8 integer-address)) <- ((get-address)) ((7 integer-integer-pair-address) (deref)) ((1 offset)))
cn1: (((8 integer-address) (deref)) <- ((copy)) ((3 integer)))
cn1: (((9 integer-integer-pair-address)) <- ((get-address)) ((6 move-address) (deref)) ((1 offset)))
cn1: (((8 integer-address)) <- ((get-address)) ((9 integer-integer-pair-address) (deref)) ((0 offset)))
cn1: (((8 integer-address) (deref)) <- ((copy)) ((4 integer)))
cn1: (((8 integer-address)) <- ((get-address)) ((9 integer-integer-pair-address) (deref)) ((1 offset)))
cn1: (((8 integer-address) (deref)) <- ((copy)) ((5 integer)))
cn1: (((reply)) ((6 move-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 channel-address)) <- ((next-input)))
cn1: (((2 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
cn1: (((4 character)) <- ((maybe-coerce)) ((2 tagged-value)) ((character literal)))
cn1: (((5 boolean)) <- ((equal)) ((4 character)) ((q literal)))
cn1: (((jump-unless)) ((5 boolean)) ((1 offset)))
cn1: (((reply)) ((nil literal)))
cn1: (((6 integer)) <- ((character-to-integer)) ((4 character)))
cn1: (((7 character)) <- ((copy)) ((1 literal)))
cn1: (((8 integer)) <- ((character-to-integer)) ((7 character)))
cn1: (((6 integer)) <- ((subtract)) ((6 integer)) ((8 integer)))
cn1: (((9 boolean)) <- ((greater-or-equal)) ((6 integer)) ((0 literal)))
cn1: (((assert)) ((9 boolean)) ((rank too low literal)))
cn1: (((10 boolean)) <- ((lesser-or-equal)) ((6 integer)) ((7 literal)))
cn1: (((assert)) ((10 boolean)) ((rank too high literal)))
cn1: (((reply)) ((6 integer)))
schedule: main
run: main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: main 0: 1000 => ((default-space space-address))
run: main 1: (((1 list-address)) <- ((init-list)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
run: init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-list/main 0: 1031 => ((default-space space-address))
run: init-list/main 1: (((1 list-address)) <- ((new)) ((list literal)))
run: init-list/main 1: 1062 => ((1 list-address))
mem: ((1 list-address)): 1033 <= 1062
run: init-list/main 2: (((2 list-address)) <- ((copy)) ((1 list-address)))
mem: ((1 list-address)) => 1062
run: init-list/main 2: 1062 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1062
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 0 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\R => ((3 integer))
mem: ((3 integer)): 1035 <= #\R
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1064 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1064
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1065 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1064 <= 1065
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1062
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1068 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1062)
run: list-next/init-list/main 1: 1062 => ((1 list-address))
mem: ((1 list-address)): 1070 <= 1062
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1064 list-address) (raw)) => 1065
run: list-next/init-list/main 2: 1065 => ((2 list-address))
mem: ((2 list-address)): 1071 <= 1065
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1065
run: init-list/main 7: 1065 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1065
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1065
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1099 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: list-value-address/init-list/main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 1101 <= 1065
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1065 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1102 <= 1065
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1065
run: init-list/main 8: 1065 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1065
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => R
run: init-list/main 9: #(tagged record (integer #\R)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1065 <= integer
mem: ((6 tagged-value-address) (deref)): 1066 <= #\R
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 1 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1035 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1067 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1067
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1130 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1067 <= 1130
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1065
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1133 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: list-next/init-list/main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 1135 <= 1065
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1067 list-address) (raw)) => 1130
run: list-next/init-list/main 2: 1130 => ((2 list-address))
mem: ((2 list-address)): 1136 <= 1130
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1130
run: init-list/main 7: 1130 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1130
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1130
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1164 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: list-value-address/init-list/main 1: 1130 => ((1 list-address))
mem: ((1 list-address)): 1166 <= 1130
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1130 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1167 <= 1130
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1130
run: init-list/main 8: 1130 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1130
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1130 <= integer
mem: ((6 tagged-value-address) (deref)): 1131 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 2 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1132 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1132
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1195 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1132 <= 1195
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1130
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1198 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: list-next/init-list/main 1: 1130 => ((1 list-address))
mem: ((1 list-address)): 1200 <= 1130
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1132 list-address) (raw)) => 1195
run: list-next/init-list/main 2: 1195 => ((2 list-address))
mem: ((2 list-address)): 1201 <= 1195
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1195
run: init-list/main 7: 1195 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1195
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1195
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1229 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: list-value-address/init-list/main 1: 1195 => ((1 list-address))
mem: ((1 list-address)): 1231 <= 1195
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1195 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1232 <= 1195
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1195
run: init-list/main 8: 1195 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1195
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1195 <= integer
mem: ((6 tagged-value-address) (deref)): 1196 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 3 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1197 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1197
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1260 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1197 <= 1260
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1195
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1263 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: list-next/init-list/main 1: 1195 => ((1 list-address))
mem: ((1 list-address)): 1265 <= 1195
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1197 list-address) (raw)) => 1260
run: list-next/init-list/main 2: 1260 => ((2 list-address))
mem: ((2 list-address)): 1266 <= 1260
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1260
run: init-list/main 7: 1260 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1260
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1260
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1294 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: list-value-address/init-list/main 1: 1260 => ((1 list-address))
mem: ((1 list-address)): 1296 <= 1260
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1260 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1297 <= 1260
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1260
run: init-list/main 8: 1260 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1260
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1260 <= integer
mem: ((6 tagged-value-address) (deref)): 1261 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 4 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1262 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1262
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1325 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1262 <= 1325
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1260
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1328 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: list-next/init-list/main 1: 1260 => ((1 list-address))
mem: ((1 list-address)): 1330 <= 1260
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1262 list-address) (raw)) => 1325
run: list-next/init-list/main 2: 1325 => ((2 list-address))
mem: ((2 list-address)): 1331 <= 1325
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1325
run: init-list/main 7: 1325 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1325
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1325
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1359 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: list-value-address/init-list/main 1: 1325 => ((1 list-address))
mem: ((1 list-address)): 1361 <= 1325
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1325 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1362 <= 1325
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1325
run: init-list/main 8: 1325 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1325
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1325 <= integer
mem: ((6 tagged-value-address) (deref)): 1326 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 5 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1327 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1327
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1390 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1327 <= 1390
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1325
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1393 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: list-next/init-list/main 1: 1325 => ((1 list-address))
mem: ((1 list-address)): 1395 <= 1325
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1327 list-address) (raw)) => 1390
run: list-next/init-list/main 2: 1390 => ((2 list-address))
mem: ((2 list-address)): 1396 <= 1390
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1390
run: init-list/main 7: 1390 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1390
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1390
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1424 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: list-value-address/init-list/main 1: 1390 => ((1 list-address))
mem: ((1 list-address)): 1426 <= 1390
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1390 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1427 <= 1390
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1390
run: init-list/main 8: 1390 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1390
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1390 <= integer
mem: ((6 tagged-value-address) (deref)): 1391 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 6 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1035 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1392 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1392
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1455 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1392 <= 1455
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1390
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1458 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: list-next/init-list/main 1: 1390 => ((1 list-address))
mem: ((1 list-address)): 1460 <= 1390
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1392 list-address) (raw)) => 1455
run: list-next/init-list/main 2: 1455 => ((2 list-address))
mem: ((2 list-address)): 1461 <= 1455
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1455
run: init-list/main 7: 1455 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1455
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1455
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1489 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: list-value-address/init-list/main 1: 1455 => ((1 list-address))
mem: ((1 list-address)): 1491 <= 1455
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1455 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1492 <= 1455
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1455
run: init-list/main 8: 1455 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1455
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1455 <= integer
mem: ((6 tagged-value-address) (deref)): 1456 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 7 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\r => ((3 integer))
mem: ((3 integer)): 1035 <= #\r
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1457 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1457
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1520 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1457 <= 1520
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1455
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1523 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: list-next/init-list/main 1: 1455 => ((1 list-address))
mem: ((1 list-address)): 1525 <= 1455
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1457 list-address) (raw)) => 1520
run: list-next/init-list/main 2: 1520 => ((2 list-address))
mem: ((2 list-address)): 1526 <= 1520
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1520
run: init-list/main 7: 1520 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1520
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1520
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1554 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: list-value-address/init-list/main 1: 1520 => ((1 list-address))
mem: ((1 list-address)): 1556 <= 1520
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1520 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1557 <= 1520
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1520
run: init-list/main 8: 1520 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1520
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => r
run: init-list/main 9: #(tagged record (integer #\r)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1520 <= integer
mem: ((6 tagged-value-address) (deref)): 1521 <= #\r
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 8 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\N => ((3 integer))
mem: ((3 integer)): 1035 <= #\N
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1522 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1522
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1585 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1522 <= 1585
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1520
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1588 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: list-next/init-list/main 1: 1520 => ((1 list-address))
mem: ((1 list-address)): 1590 <= 1520
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1522 list-address) (raw)) => 1585
run: list-next/init-list/main 2: 1585 => ((2 list-address))
mem: ((2 list-address)): 1591 <= 1585
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1585
run: init-list/main 7: 1585 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1585
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1585
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1619 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: list-value-address/init-list/main 1: 1585 => ((1 list-address))
mem: ((1 list-address)): 1621 <= 1585
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1585 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1622 <= 1585
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1585
run: init-list/main 8: 1585 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1585
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => N
run: init-list/main 9: #(tagged record (integer #\N)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1585 <= integer
mem: ((6 tagged-value-address) (deref)): 1586 <= #\N
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 9 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1035 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1587 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1587
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1650 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1587 <= 1650
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1585
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1653 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: list-next/init-list/main 1: 1585 => ((1 list-address))
mem: ((1 list-address)): 1655 <= 1585
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1587 list-address) (raw)) => 1650
run: list-next/init-list/main 2: 1650 => ((2 list-address))
mem: ((2 list-address)): 1656 <= 1650
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1650
run: init-list/main 7: 1650 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1650
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1650
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1684 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: list-value-address/init-list/main 1: 1650 => ((1 list-address))
mem: ((1 list-address)): 1686 <= 1650
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1650 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1687 <= 1650
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1650
run: init-list/main 8: 1650 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1650
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1650 <= integer
mem: ((6 tagged-value-address) (deref)): 1651 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 10 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1652 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1652
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1715 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1652 <= 1715
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1650
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1718 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: list-next/init-list/main 1: 1650 => ((1 list-address))
mem: ((1 list-address)): 1720 <= 1650
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1652 list-address) (raw)) => 1715
run: list-next/init-list/main 2: 1715 => ((2 list-address))
mem: ((2 list-address)): 1721 <= 1715
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1715
run: init-list/main 7: 1715 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1715
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1715
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1749 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: list-value-address/init-list/main 1: 1715 => ((1 list-address))
mem: ((1 list-address)): 1751 <= 1715
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1715 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1752 <= 1715
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1715
run: init-list/main 8: 1715 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1715
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1715 <= integer
mem: ((6 tagged-value-address) (deref)): 1716 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 11 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1717 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1717
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1780 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1717 <= 1780
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1715
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1783 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: list-next/init-list/main 1: 1715 => ((1 list-address))
mem: ((1 list-address)): 1785 <= 1715
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1717 list-address) (raw)) => 1780
run: list-next/init-list/main 2: 1780 => ((2 list-address))
mem: ((2 list-address)): 1786 <= 1780
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1780
run: init-list/main 7: 1780 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1780
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1780
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1814 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: list-value-address/init-list/main 1: 1780 => ((1 list-address))
mem: ((1 list-address)): 1816 <= 1780
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1780 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1817 <= 1780
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1780
run: init-list/main 8: 1780 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1780
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1780 <= integer
mem: ((6 tagged-value-address) (deref)): 1781 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 12 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1782 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1782
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1845 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1782 <= 1845
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1780
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1848 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: list-next/init-list/main 1: 1780 => ((1 list-address))
mem: ((1 list-address)): 1850 <= 1780
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1782 list-address) (raw)) => 1845
run: list-next/init-list/main 2: 1845 => ((2 list-address))
mem: ((2 list-address)): 1851 <= 1845
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1845
run: init-list/main 7: 1845 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1845
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1845
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1879 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: list-value-address/init-list/main 1: 1845 => ((1 list-address))
mem: ((1 list-address)): 1881 <= 1845
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1845 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1882 <= 1845
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1845
run: init-list/main 8: 1845 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1845
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1845 <= integer
mem: ((6 tagged-value-address) (deref)): 1846 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 13 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1847 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1847
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1910 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1847 <= 1910
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1845
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1913 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: list-next/init-list/main 1: 1845 => ((1 list-address))
mem: ((1 list-address)): 1915 <= 1845
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1847 list-address) (raw)) => 1910
run: list-next/init-list/main 2: 1910 => ((2 list-address))
mem: ((2 list-address)): 1916 <= 1910
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1910
run: init-list/main 7: 1910 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1910
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1910
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1944 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: list-value-address/init-list/main 1: 1910 => ((1 list-address))
mem: ((1 list-address)): 1946 <= 1910
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1910 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1947 <= 1910
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1910
run: init-list/main 8: 1910 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1910
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1910 <= integer
mem: ((6 tagged-value-address) (deref)): 1911 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 14 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1035 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1912 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1912
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1975 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1912 <= 1975
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1910
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1978 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: list-next/init-list/main 1: 1910 => ((1 list-address))
mem: ((1 list-address)): 1980 <= 1910
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1912 list-address) (raw)) => 1975
run: list-next/init-list/main 2: 1975 => ((2 list-address))
mem: ((2 list-address)): 1981 <= 1975
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1975
run: init-list/main 7: 1975 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 1975
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1975
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2009 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: list-value-address/init-list/main 1: 1975 => ((1 list-address))
mem: ((1 list-address)): 2011 <= 1975
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1975 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2012 <= 1975
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1975
run: init-list/main 8: 1975 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 1975
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1975 <= integer
mem: ((6 tagged-value-address) (deref)): 1976 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 15 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\n => ((3 integer))
mem: ((3 integer)): 1035 <= #\n
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1977 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 1977
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2040 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1977 <= 2040
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1975
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2043 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: list-next/init-list/main 1: 1975 => ((1 list-address))
mem: ((1 list-address)): 2045 <= 1975
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1977 list-address) (raw)) => 2040
run: list-next/init-list/main 2: 2040 => ((2 list-address))
mem: ((2 list-address)): 2046 <= 2040
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2040
run: init-list/main 7: 2040 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2040
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2040
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2074 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: list-value-address/init-list/main 1: 2040 => ((1 list-address))
mem: ((1 list-address)): 2076 <= 2040
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2040 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2077 <= 2040
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2040
run: init-list/main 8: 2040 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2040
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => n
run: init-list/main 9: #(tagged record (integer #\n)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2040 <= integer
mem: ((6 tagged-value-address) (deref)): 2041 <= #\n
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 16 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\B => ((3 integer))
mem: ((3 integer)): 1035 <= #\B
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2042 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2042
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2105 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2042 <= 2105
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2040
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2108 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: list-next/init-list/main 1: 2040 => ((1 list-address))
mem: ((1 list-address)): 2110 <= 2040
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2042 list-address) (raw)) => 2105
run: list-next/init-list/main 2: 2105 => ((2 list-address))
mem: ((2 list-address)): 2111 <= 2105
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2105
run: init-list/main 7: 2105 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2105
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2105
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2139 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: list-value-address/init-list/main 1: 2105 => ((1 list-address))
mem: ((1 list-address)): 2141 <= 2105
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2105 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2142 <= 2105
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2105
run: init-list/main 8: 2105 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2105
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => B
run: init-list/main 9: #(tagged record (integer #\B)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2105 <= integer
mem: ((6 tagged-value-address) (deref)): 2106 <= #\B
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 17 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1035 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2107 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2107
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2170 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2107 <= 2170
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2105
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2173 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: list-next/init-list/main 1: 2105 => ((1 list-address))
mem: ((1 list-address)): 2175 <= 2105
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2107 list-address) (raw)) => 2170
run: list-next/init-list/main 2: 2170 => ((2 list-address))
mem: ((2 list-address)): 2176 <= 2170
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2170
run: init-list/main 7: 2170 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2170
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2170
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2204 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: list-value-address/init-list/main 1: 2170 => ((1 list-address))
mem: ((1 list-address)): 2206 <= 2170
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2170 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2207 <= 2170
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2170
run: init-list/main 8: 2170 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2170
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2170 <= integer
mem: ((6 tagged-value-address) (deref)): 2171 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 18 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2172 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2172
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2235 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2172 <= 2235
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2170
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2238 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: list-next/init-list/main 1: 2170 => ((1 list-address))
mem: ((1 list-address)): 2240 <= 2170
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2172 list-address) (raw)) => 2235
run: list-next/init-list/main 2: 2235 => ((2 list-address))
mem: ((2 list-address)): 2241 <= 2235
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2235
run: init-list/main 7: 2235 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2235
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2235
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2269 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: list-value-address/init-list/main 1: 2235 => ((1 list-address))
mem: ((1 list-address)): 2271 <= 2235
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2235 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2272 <= 2235
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2235
run: init-list/main 8: 2235 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2235
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2235 <= integer
mem: ((6 tagged-value-address) (deref)): 2236 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 19 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2237 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2237
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2300 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2237 <= 2300
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2235
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2303 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: list-next/init-list/main 1: 2235 => ((1 list-address))
mem: ((1 list-address)): 2305 <= 2235
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2237 list-address) (raw)) => 2300
run: list-next/init-list/main 2: 2300 => ((2 list-address))
mem: ((2 list-address)): 2306 <= 2300
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2300
run: init-list/main 7: 2300 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2300
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2300
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2334 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: list-value-address/init-list/main 1: 2300 => ((1 list-address))
mem: ((1 list-address)): 2336 <= 2300
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2300 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2337 <= 2300
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2300
run: init-list/main 8: 2300 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2300
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2300 <= integer
mem: ((6 tagged-value-address) (deref)): 2301 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 20 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2302 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2302
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2365 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2302 <= 2365
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2300
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2368 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: list-next/init-list/main 1: 2300 => ((1 list-address))
mem: ((1 list-address)): 2370 <= 2300
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2302 list-address) (raw)) => 2365
run: list-next/init-list/main 2: 2365 => ((2 list-address))
mem: ((2 list-address)): 2371 <= 2365
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2365
run: init-list/main 7: 2365 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2365
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2365
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2399 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: list-value-address/init-list/main 1: 2365 => ((1 list-address))
mem: ((1 list-address)): 2401 <= 2365
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2365 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2402 <= 2365
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2365
run: init-list/main 8: 2365 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2365
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2365 <= integer
mem: ((6 tagged-value-address) (deref)): 2366 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 21 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2367 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2367
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2430 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2367 <= 2430
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2365
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2433 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: list-next/init-list/main 1: 2365 => ((1 list-address))
mem: ((1 list-address)): 2435 <= 2365
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2367 list-address) (raw)) => 2430
run: list-next/init-list/main 2: 2430 => ((2 list-address))
mem: ((2 list-address)): 2436 <= 2430
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2430
run: init-list/main 7: 2430 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2430
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2430
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2464 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: list-value-address/init-list/main 1: 2430 => ((1 list-address))
mem: ((1 list-address)): 2466 <= 2430
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2430 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2467 <= 2430
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2430
run: init-list/main 8: 2430 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2430
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2430 <= integer
mem: ((6 tagged-value-address) (deref)): 2431 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 22 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1035 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2432 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2432
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2495 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2432 <= 2495
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2430
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2498 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: list-next/init-list/main 1: 2430 => ((1 list-address))
mem: ((1 list-address)): 2500 <= 2430
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2432 list-address) (raw)) => 2495
run: list-next/init-list/main 2: 2495 => ((2 list-address))
mem: ((2 list-address)): 2501 <= 2495
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2495
run: init-list/main 7: 2495 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2495
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2495
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2529 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: list-value-address/init-list/main 1: 2495 => ((1 list-address))
mem: ((1 list-address)): 2531 <= 2495
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2495 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2532 <= 2495
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2495
run: init-list/main 8: 2495 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2495
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2495 <= integer
mem: ((6 tagged-value-address) (deref)): 2496 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 23 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\b => ((3 integer))
mem: ((3 integer)): 1035 <= #\b
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2497 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2497
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2560 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2497 <= 2560
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2495
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2563 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: list-next/init-list/main 1: 2495 => ((1 list-address))
mem: ((1 list-address)): 2565 <= 2495
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2497 list-address) (raw)) => 2560
run: list-next/init-list/main 2: 2560 => ((2 list-address))
mem: ((2 list-address)): 2566 <= 2560
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2560
run: init-list/main 7: 2560 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2560
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2560
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2594 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: list-value-address/init-list/main 1: 2560 => ((1 list-address))
mem: ((1 list-address)): 2596 <= 2560
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2560 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2597 <= 2560
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2560
run: init-list/main 8: 2560 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2560
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => b
run: init-list/main 9: #(tagged record (integer #\b)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2560 <= integer
mem: ((6 tagged-value-address) (deref)): 2561 <= #\b
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 24 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\Q => ((3 integer))
mem: ((3 integer)): 1035 <= #\Q
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2562 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2562
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2625 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2562 <= 2625
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2560
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2628 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: list-next/init-list/main 1: 2560 => ((1 list-address))
mem: ((1 list-address)): 2630 <= 2560
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2562 list-address) (raw)) => 2625
run: list-next/init-list/main 2: 2625 => ((2 list-address))
mem: ((2 list-address)): 2631 <= 2625
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2625
run: init-list/main 7: 2625 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2625
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2625
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2659 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: list-value-address/init-list/main 1: 2625 => ((1 list-address))
mem: ((1 list-address)): 2661 <= 2625
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2625 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2662 <= 2625
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2625
run: init-list/main 8: 2625 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2625
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => Q
run: init-list/main 9: #(tagged record (integer #\Q)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2625 <= integer
mem: ((6 tagged-value-address) (deref)): 2626 <= #\Q
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 25 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1035 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2627 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2627
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2690 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2627 <= 2690
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2625
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2693 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: list-next/init-list/main 1: 2625 => ((1 list-address))
mem: ((1 list-address)): 2695 <= 2625
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2627 list-address) (raw)) => 2690
run: list-next/init-list/main 2: 2690 => ((2 list-address))
mem: ((2 list-address)): 2696 <= 2690
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2690
run: init-list/main 7: 2690 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2690
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2690
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2724 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: list-value-address/init-list/main 1: 2690 => ((1 list-address))
mem: ((1 list-address)): 2726 <= 2690
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2690 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2727 <= 2690
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2690
run: init-list/main 8: 2690 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2690
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2690 <= integer
mem: ((6 tagged-value-address) (deref)): 2691 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 26 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2692 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2692
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2755 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2692 <= 2755
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2690
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2758 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: list-next/init-list/main 1: 2690 => ((1 list-address))
mem: ((1 list-address)): 2760 <= 2690
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2692 list-address) (raw)) => 2755
run: list-next/init-list/main 2: 2755 => ((2 list-address))
mem: ((2 list-address)): 2761 <= 2755
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2755
run: init-list/main 7: 2755 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2755
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2755
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2789 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: list-value-address/init-list/main 1: 2755 => ((1 list-address))
mem: ((1 list-address)): 2791 <= 2755
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2755 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2792 <= 2755
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2755
run: init-list/main 8: 2755 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2755
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2755 <= integer
mem: ((6 tagged-value-address) (deref)): 2756 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 27 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2757 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2757
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2820 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2757 <= 2820
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2755
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2823 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: list-next/init-list/main 1: 2755 => ((1 list-address))
mem: ((1 list-address)): 2825 <= 2755
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2757 list-address) (raw)) => 2820
run: list-next/init-list/main 2: 2820 => ((2 list-address))
mem: ((2 list-address)): 2826 <= 2820
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2820
run: init-list/main 7: 2820 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2820
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2820
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2854 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: list-value-address/init-list/main 1: 2820 => ((1 list-address))
mem: ((1 list-address)): 2856 <= 2820
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2820 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2857 <= 2820
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2820
run: init-list/main 8: 2820 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2820
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2820 <= integer
mem: ((6 tagged-value-address) (deref)): 2821 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 28 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2822 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2822
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2885 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2822 <= 2885
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2820
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2888 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: list-next/init-list/main 1: 2820 => ((1 list-address))
mem: ((1 list-address)): 2890 <= 2820
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2822 list-address) (raw)) => 2885
run: list-next/init-list/main 2: 2885 => ((2 list-address))
mem: ((2 list-address)): 2891 <= 2885
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2885
run: init-list/main 7: 2885 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2885
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2885
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2919 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: list-value-address/init-list/main 1: 2885 => ((1 list-address))
mem: ((1 list-address)): 2921 <= 2885
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2885 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2922 <= 2885
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2885
run: init-list/main 8: 2885 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2885
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2885 <= integer
mem: ((6 tagged-value-address) (deref)): 2886 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 29 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2887 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2887
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2950 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2887 <= 2950
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2885
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2953 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: list-next/init-list/main 1: 2885 => ((1 list-address))
mem: ((1 list-address)): 2955 <= 2885
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2887 list-address) (raw)) => 2950
run: list-next/init-list/main 2: 2950 => ((2 list-address))
mem: ((2 list-address)): 2956 <= 2950
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2950
run: init-list/main 7: 2950 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 2950
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2950
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2984 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: list-value-address/init-list/main 1: 2950 => ((1 list-address))
mem: ((1 list-address)): 2986 <= 2950
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2950 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2987 <= 2950
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2950
run: init-list/main 8: 2950 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 2950
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2950 <= integer
mem: ((6 tagged-value-address) (deref)): 2951 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 30 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1035 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2952 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 2952
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3015 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2952 <= 3015
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2950
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3018 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: list-next/init-list/main 1: 2950 => ((1 list-address))
mem: ((1 list-address)): 3020 <= 2950
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2952 list-address) (raw)) => 3015
run: list-next/init-list/main 2: 3015 => ((2 list-address))
mem: ((2 list-address)): 3021 <= 3015
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3015
run: init-list/main 7: 3015 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3015
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3015
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3049 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: list-value-address/init-list/main 1: 3015 => ((1 list-address))
mem: ((1 list-address)): 3051 <= 3015
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3015 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3052 <= 3015
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3015
run: init-list/main 8: 3015 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3015
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3015 <= integer
mem: ((6 tagged-value-address) (deref)): 3016 <= #\p
schedule: scheduling init-list/main for further processing
schedule: init-list/main
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 31 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\q => ((3 integer))
mem: ((3 integer)): 1035 <= #\q
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3017 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3017
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3080 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3017 <= 3080
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3015
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3083 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: list-next/init-list/main 1: 3015 => ((1 list-address))
mem: ((1 list-address)): 3085 <= 3015
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3017 list-address) (raw)) => 3080
run: list-next/init-list/main 2: 3080 => ((2 list-address))
mem: ((2 list-address)): 3086 <= 3080
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3080
run: init-list/main 7: 3080 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3080
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3080
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3114 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: list-value-address/init-list/main 1: 3080 => ((1 list-address))
mem: ((1 list-address)): 3116 <= 3080
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3080 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3117 <= 3080
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3080
run: init-list/main 8: 3080 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3080
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => q
run: init-list/main 9: #(tagged record (integer #\q)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3080 <= integer
mem: ((6 tagged-value-address) (deref)): 3081 <= #\q
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 32 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\K => ((3 integer))
mem: ((3 integer)): 1035 <= #\K
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3082 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3082
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3145 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3082 <= 3145
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3080
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3148 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: list-next/init-list/main 1: 3080 => ((1 list-address))
mem: ((1 list-address)): 3150 <= 3080
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3082 list-address) (raw)) => 3145
run: list-next/init-list/main 2: 3145 => ((2 list-address))
mem: ((2 list-address)): 3151 <= 3145
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3145
run: init-list/main 7: 3145 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3145
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3145
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3179 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: list-value-address/init-list/main 1: 3145 => ((1 list-address))
mem: ((1 list-address)): 3181 <= 3145
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3145 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3182 <= 3145
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3145
run: init-list/main 8: 3145 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3145
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => K
run: init-list/main 9: #(tagged record (integer #\K)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3145 <= integer
mem: ((6 tagged-value-address) (deref)): 3146 <= #\K
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 33 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1035 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3147 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3147
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3210 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3147 <= 3210
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3145
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3213 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: list-next/init-list/main 1: 3145 => ((1 list-address))
mem: ((1 list-address)): 3215 <= 3145
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3147 list-address) (raw)) => 3210
run: list-next/init-list/main 2: 3210 => ((2 list-address))
mem: ((2 list-address)): 3216 <= 3210
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3210
run: init-list/main 7: 3210 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3210
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3210
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3244 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: list-value-address/init-list/main 1: 3210 => ((1 list-address))
mem: ((1 list-address)): 3246 <= 3210
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3210 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3247 <= 3210
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3210
run: init-list/main 8: 3210 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3210
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3210 <= integer
mem: ((6 tagged-value-address) (deref)): 3211 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 34 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3212 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3212
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3275 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3212 <= 3275
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3210
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3278 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: list-next/init-list/main 1: 3210 => ((1 list-address))
mem: ((1 list-address)): 3280 <= 3210
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3212 list-address) (raw)) => 3275
run: list-next/init-list/main 2: 3275 => ((2 list-address))
mem: ((2 list-address)): 3281 <= 3275
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3275
run: init-list/main 7: 3275 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3275
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3275
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3309 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: list-value-address/init-list/main 1: 3275 => ((1 list-address))
mem: ((1 list-address)): 3311 <= 3275
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3275 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3312 <= 3275
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3275
run: init-list/main 8: 3275 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3275
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3275 <= integer
mem: ((6 tagged-value-address) (deref)): 3276 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 35 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3277 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3277
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3340 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3277 <= 3340
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3275
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3343 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: list-next/init-list/main 1: 3275 => ((1 list-address))
mem: ((1 list-address)): 3345 <= 3275
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3277 list-address) (raw)) => 3340
run: list-next/init-list/main 2: 3340 => ((2 list-address))
mem: ((2 list-address)): 3346 <= 3340
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3340
run: init-list/main 7: 3340 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3340
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3340
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3374 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: list-value-address/init-list/main 1: 3340 => ((1 list-address))
mem: ((1 list-address)): 3376 <= 3340
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3340 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3377 <= 3340
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3340
run: init-list/main 8: 3340 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3340
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3340 <= integer
mem: ((6 tagged-value-address) (deref)): 3341 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 36 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3342 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3342
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3405 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3342 <= 3405
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3340
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3408 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: list-next/init-list/main 1: 3340 => ((1 list-address))
mem: ((1 list-address)): 3410 <= 3340
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3342 list-address) (raw)) => 3405
run: list-next/init-list/main 2: 3405 => ((2 list-address))
mem: ((2 list-address)): 3411 <= 3405
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3405
run: init-list/main 7: 3405 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3405
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3405
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3439 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: list-value-address/init-list/main 1: 3405 => ((1 list-address))
mem: ((1 list-address)): 3441 <= 3405
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3405 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3442 <= 3405
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3405
run: init-list/main 8: 3405 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3405
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3405 <= integer
mem: ((6 tagged-value-address) (deref)): 3406 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 37 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3407 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3407
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3470 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3407 <= 3470
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3405
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3473 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: list-next/init-list/main 1: 3405 => ((1 list-address))
mem: ((1 list-address)): 3475 <= 3405
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3407 list-address) (raw)) => 3470
run: list-next/init-list/main 2: 3470 => ((2 list-address))
mem: ((2 list-address)): 3476 <= 3470
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3470
run: init-list/main 7: 3470 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3470
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3470
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3504 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: list-value-address/init-list/main 1: 3470 => ((1 list-address))
mem: ((1 list-address)): 3506 <= 3470
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3470 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3507 <= 3470
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3470
run: init-list/main 8: 3470 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3470
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3470 <= integer
mem: ((6 tagged-value-address) (deref)): 3471 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 38 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1035 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3472 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3472
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3535 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3472 <= 3535
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3470
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3538 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: list-next/init-list/main 1: 3470 => ((1 list-address))
mem: ((1 list-address)): 3540 <= 3470
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3472 list-address) (raw)) => 3535
run: list-next/init-list/main 2: 3535 => ((2 list-address))
mem: ((2 list-address)): 3541 <= 3535
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3535
run: init-list/main 7: 3535 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3535
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3535
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3569 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: list-value-address/init-list/main 1: 3535 => ((1 list-address))
mem: ((1 list-address)): 3571 <= 3535
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3535 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3572 <= 3535
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3535
run: init-list/main 8: 3535 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3535
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3535 <= integer
mem: ((6 tagged-value-address) (deref)): 3536 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 39 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\k => ((3 integer))
mem: ((3 integer)): 1035 <= #\k
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3537 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3537
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3600 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3537 <= 3600
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3535
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3603 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: list-next/init-list/main 1: 3535 => ((1 list-address))
mem: ((1 list-address)): 3605 <= 3535
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3537 list-address) (raw)) => 3600
run: list-next/init-list/main 2: 3600 => ((2 list-address))
mem: ((2 list-address)): 3606 <= 3600
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3600
run: init-list/main 7: 3600 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3600
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3600
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3634 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: list-value-address/init-list/main 1: 3600 => ((1 list-address))
mem: ((1 list-address)): 3636 <= 3600
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3600 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3637 <= 3600
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3600
run: init-list/main 8: 3600 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3600
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => k
run: init-list/main 9: #(tagged record (integer #\k)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3600 <= integer
mem: ((6 tagged-value-address) (deref)): 3601 <= #\k
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 40 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\B => ((3 integer))
mem: ((3 integer)): 1035 <= #\B
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3602 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3602
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3665 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3602 <= 3665
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3600
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3668 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: list-next/init-list/main 1: 3600 => ((1 list-address))
mem: ((1 list-address)): 3670 <= 3600
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3602 list-address) (raw)) => 3665
run: list-next/init-list/main 2: 3665 => ((2 list-address))
mem: ((2 list-address)): 3671 <= 3665
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3665
run: init-list/main 7: 3665 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3665
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3665
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3699 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: list-value-address/init-list/main 1: 3665 => ((1 list-address))
mem: ((1 list-address)): 3701 <= 3665
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3665 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3702 <= 3665
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3665
run: init-list/main 8: 3665 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3665
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => B
run: init-list/main 9: #(tagged record (integer #\B)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3665 <= integer
mem: ((6 tagged-value-address) (deref)): 3666 <= #\B
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 41 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1035 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3667 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3667
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3730 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3667 <= 3730
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3665
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3733 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: list-next/init-list/main 1: 3665 => ((1 list-address))
mem: ((1 list-address)): 3735 <= 3665
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3667 list-address) (raw)) => 3730
run: list-next/init-list/main 2: 3730 => ((2 list-address))
mem: ((2 list-address)): 3736 <= 3730
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3730
run: init-list/main 7: 3730 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3730
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3730
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3764 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: list-value-address/init-list/main 1: 3730 => ((1 list-address))
mem: ((1 list-address)): 3766 <= 3730
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3730 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3767 <= 3730
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3730
run: init-list/main 8: 3730 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3730
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3730 <= integer
mem: ((6 tagged-value-address) (deref)): 3731 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 42 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3732 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3732
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3795 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3732 <= 3795
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3730
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3798 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: list-next/init-list/main 1: 3730 => ((1 list-address))
mem: ((1 list-address)): 3800 <= 3730
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3732 list-address) (raw)) => 3795
run: list-next/init-list/main 2: 3795 => ((2 list-address))
mem: ((2 list-address)): 3801 <= 3795
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3795
run: init-list/main 7: 3795 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3795
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3795
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3829 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: list-value-address/init-list/main 1: 3795 => ((1 list-address))
mem: ((1 list-address)): 3831 <= 3795
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3795 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3832 <= 3795
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3795
run: init-list/main 8: 3795 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3795
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3795 <= integer
mem: ((6 tagged-value-address) (deref)): 3796 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 43 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3797 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3797
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3860 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3797 <= 3860
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3795
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3863 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: list-next/init-list/main 1: 3795 => ((1 list-address))
mem: ((1 list-address)): 3865 <= 3795
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3797 list-address) (raw)) => 3860
run: list-next/init-list/main 2: 3860 => ((2 list-address))
mem: ((2 list-address)): 3866 <= 3860
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3860
run: init-list/main 7: 3860 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3860
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3860
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3894 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: list-value-address/init-list/main 1: 3860 => ((1 list-address))
mem: ((1 list-address)): 3896 <= 3860
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3860 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3897 <= 3860
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3860
run: init-list/main 8: 3860 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3860
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3860 <= integer
mem: ((6 tagged-value-address) (deref)): 3861 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 44 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3862 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3862
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3925 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3862 <= 3925
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3860
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3928 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: list-next/init-list/main 1: 3860 => ((1 list-address))
mem: ((1 list-address)): 3930 <= 3860
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3862 list-address) (raw)) => 3925
run: list-next/init-list/main 2: 3925 => ((2 list-address))
mem: ((2 list-address)): 3931 <= 3925
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3925
run: init-list/main 7: 3925 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3925
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3925
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3959 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: list-value-address/init-list/main 1: 3925 => ((1 list-address))
mem: ((1 list-address)): 3961 <= 3925
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3925 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3962 <= 3925
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3925
run: init-list/main 8: 3925 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3925
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3925 <= integer
mem: ((6 tagged-value-address) (deref)): 3926 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 45 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3927 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3927
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3990 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3927 <= 3990
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3925
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3993 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: list-next/init-list/main 1: 3925 => ((1 list-address))
mem: ((1 list-address)): 3995 <= 3925
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3927 list-address) (raw)) => 3990
run: list-next/init-list/main 2: 3990 => ((2 list-address))
mem: ((2 list-address)): 3996 <= 3990
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3990
run: init-list/main 7: 3990 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 3990
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3990
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4024 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: list-value-address/init-list/main 1: 3990 => ((1 list-address))
mem: ((1 list-address)): 4026 <= 3990
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3990 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4027 <= 3990
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3990
run: init-list/main 8: 3990 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 3990
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3990 <= integer
mem: ((6 tagged-value-address) (deref)): 3991 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 46 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1035 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3992 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 3992
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4055 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3992 <= 4055
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3990
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4058 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: list-next/init-list/main 1: 3990 => ((1 list-address))
mem: ((1 list-address)): 4060 <= 3990
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3992 list-address) (raw)) => 4055
run: list-next/init-list/main 2: 4055 => ((2 list-address))
mem: ((2 list-address)): 4061 <= 4055
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4055
run: init-list/main 7: 4055 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4055
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4055
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4089 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: list-value-address/init-list/main 1: 4055 => ((1 list-address))
mem: ((1 list-address)): 4091 <= 4055
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4055 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4092 <= 4055
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4055
run: init-list/main 8: 4055 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4055
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4055 <= integer
mem: ((6 tagged-value-address) (deref)): 4056 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 47 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\b => ((3 integer))
mem: ((3 integer)): 1035 <= #\b
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4057 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4057
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4120 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4057 <= 4120
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4055
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4123 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: list-next/init-list/main 1: 4055 => ((1 list-address))
mem: ((1 list-address)): 4125 <= 4055
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4057 list-address) (raw)) => 4120
run: list-next/init-list/main 2: 4120 => ((2 list-address))
mem: ((2 list-address)): 4126 <= 4120
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4120
run: init-list/main 7: 4120 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4120
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4120
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4154 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: list-value-address/init-list/main 1: 4120 => ((1 list-address))
mem: ((1 list-address)): 4156 <= 4120
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4120 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4157 <= 4120
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4120
run: init-list/main 8: 4120 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4120
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => b
run: init-list/main 9: #(tagged record (integer #\b)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4120 <= integer
mem: ((6 tagged-value-address) (deref)): 4121 <= #\b
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 48 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\N => ((3 integer))
mem: ((3 integer)): 1035 <= #\N
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4122 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4122
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4185 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4122 <= 4185
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4120
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4188 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: list-next/init-list/main 1: 4120 => ((1 list-address))
mem: ((1 list-address)): 4190 <= 4120
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4122 list-address) (raw)) => 4185
run: list-next/init-list/main 2: 4185 => ((2 list-address))
mem: ((2 list-address)): 4191 <= 4185
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4185
run: init-list/main 7: 4185 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4185
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4185
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4219 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: list-value-address/init-list/main 1: 4185 => ((1 list-address))
mem: ((1 list-address)): 4221 <= 4185
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4185 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4222 <= 4185
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4185
run: init-list/main 8: 4185 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4185
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => N
run: init-list/main 9: #(tagged record (integer #\N)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4185 <= integer
mem: ((6 tagged-value-address) (deref)): 4186 <= #\N
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 49 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1035 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4187 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4187
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4250 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4187 <= 4250
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4185
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4253 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: list-next/init-list/main 1: 4185 => ((1 list-address))
mem: ((1 list-address)): 4255 <= 4185
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4187 list-address) (raw)) => 4250
run: list-next/init-list/main 2: 4250 => ((2 list-address))
mem: ((2 list-address)): 4256 <= 4250
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4250
run: init-list/main 7: 4250 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4250
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4250
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4284 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: list-value-address/init-list/main 1: 4250 => ((1 list-address))
mem: ((1 list-address)): 4286 <= 4250
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4250 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4287 <= 4250
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4250
run: init-list/main 8: 4250 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4250
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4250 <= integer
mem: ((6 tagged-value-address) (deref)): 4251 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 50 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4252 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4252
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4315 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4252 <= 4315
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4250
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4318 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: list-next/init-list/main 1: 4250 => ((1 list-address))
mem: ((1 list-address)): 4320 <= 4250
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4252 list-address) (raw)) => 4315
run: list-next/init-list/main 2: 4315 => ((2 list-address))
mem: ((2 list-address)): 4321 <= 4315
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4315
run: init-list/main 7: 4315 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4315
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4315
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4349 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: list-value-address/init-list/main 1: 4315 => ((1 list-address))
mem: ((1 list-address)): 4351 <= 4315
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4315 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4352 <= 4315
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4315
run: init-list/main 8: 4315 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4315
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4315 <= integer
mem: ((6 tagged-value-address) (deref)): 4316 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 51 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4317 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4317
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4380 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4317 <= 4380
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4315
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4383 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: list-next/init-list/main 1: 4315 => ((1 list-address))
mem: ((1 list-address)): 4385 <= 4315
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4317 list-address) (raw)) => 4380
run: list-next/init-list/main 2: 4380 => ((2 list-address))
mem: ((2 list-address)): 4386 <= 4380
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4380
run: init-list/main 7: 4380 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4380
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4380
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4414 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: list-value-address/init-list/main 1: 4380 => ((1 list-address))
mem: ((1 list-address)): 4416 <= 4380
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4380 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4417 <= 4380
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4380
run: init-list/main 8: 4380 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4380
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4380 <= integer
mem: ((6 tagged-value-address) (deref)): 4381 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 52 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4382 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4382
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4445 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4382 <= 4445
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4380
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4448 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: list-next/init-list/main 1: 4380 => ((1 list-address))
mem: ((1 list-address)): 4450 <= 4380
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4382 list-address) (raw)) => 4445
run: list-next/init-list/main 2: 4445 => ((2 list-address))
mem: ((2 list-address)): 4451 <= 4445
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4445
run: init-list/main 7: 4445 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4445
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4445
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4479 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: list-value-address/init-list/main 1: 4445 => ((1 list-address))
mem: ((1 list-address)): 4481 <= 4445
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4445 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4482 <= 4445
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4445
run: init-list/main 8: 4445 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4445
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4445 <= integer
mem: ((6 tagged-value-address) (deref)): 4446 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 53 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4447 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4447
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4510 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4447 <= 4510
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4445
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4513 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: list-next/init-list/main 1: 4445 => ((1 list-address))
mem: ((1 list-address)): 4515 <= 4445
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4447 list-address) (raw)) => 4510
run: list-next/init-list/main 2: 4510 => ((2 list-address))
mem: ((2 list-address)): 4516 <= 4510
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4510
run: init-list/main 7: 4510 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4510
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4510
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4544 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: list-value-address/init-list/main 1: 4510 => ((1 list-address))
mem: ((1 list-address)): 4546 <= 4510
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4510 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4547 <= 4510
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4510
run: init-list/main 8: 4510 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4510
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4510 <= integer
mem: ((6 tagged-value-address) (deref)): 4511 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 54 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1035 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4512 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4512
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4575 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4512 <= 4575
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4510
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4578 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: list-next/init-list/main 1: 4510 => ((1 list-address))
mem: ((1 list-address)): 4580 <= 4510
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4512 list-address) (raw)) => 4575
run: list-next/init-list/main 2: 4575 => ((2 list-address))
mem: ((2 list-address)): 4581 <= 4575
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4575
run: init-list/main 7: 4575 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4575
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4575
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4609 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: list-value-address/init-list/main 1: 4575 => ((1 list-address))
mem: ((1 list-address)): 4611 <= 4575
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4575 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4612 <= 4575
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4575
run: init-list/main 8: 4575 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4575
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4575 <= integer
mem: ((6 tagged-value-address) (deref)): 4576 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 55 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\n => ((3 integer))
mem: ((3 integer)): 1035 <= #\n
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4577 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4577
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4640 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4577 <= 4640
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4575
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4643 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: list-next/init-list/main 1: 4575 => ((1 list-address))
mem: ((1 list-address)): 4645 <= 4575
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4577 list-address) (raw)) => 4640
run: list-next/init-list/main 2: 4640 => ((2 list-address))
mem: ((2 list-address)): 4646 <= 4640
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4640
run: init-list/main 7: 4640 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4640
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4640
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4674 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: list-value-address/init-list/main 1: 4640 => ((1 list-address))
mem: ((1 list-address)): 4676 <= 4640
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4640 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4677 <= 4640
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4640
run: init-list/main 8: 4640 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4640
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => n
run: init-list/main 9: #(tagged record (integer #\n)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4640 <= integer
mem: ((6 tagged-value-address) (deref)): 4641 <= #\n
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 56 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\R => ((3 integer))
mem: ((3 integer)): 1035 <= #\R
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4642 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4642
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4705 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4642 <= 4705
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4640
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4708 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: list-next/init-list/main 1: 4640 => ((1 list-address))
mem: ((1 list-address)): 4710 <= 4640
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4642 list-address) (raw)) => 4705
run: list-next/init-list/main 2: 4705 => ((2 list-address))
mem: ((2 list-address)): 4711 <= 4705
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4705
run: init-list/main 7: 4705 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4705
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4705
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4739 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: list-value-address/init-list/main 1: 4705 => ((1 list-address))
mem: ((1 list-address)): 4741 <= 4705
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4705 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4742 <= 4705
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4705
run: init-list/main 8: 4705 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4705
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => R
run: init-list/main 9: #(tagged record (integer #\R)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4705 <= integer
mem: ((6 tagged-value-address) (deref)): 4706 <= #\R
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 57 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1035 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4707 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4707
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4770 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4707 <= 4770
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4705
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4773 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: list-next/init-list/main 1: 4705 => ((1 list-address))
mem: ((1 list-address)): 4775 <= 4705
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4707 list-address) (raw)) => 4770
run: list-next/init-list/main 2: 4770 => ((2 list-address))
mem: ((2 list-address)): 4776 <= 4770
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4770
run: init-list/main 7: 4770 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4770
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4770
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4804 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: list-value-address/init-list/main 1: 4770 => ((1 list-address))
mem: ((1 list-address)): 4806 <= 4770
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4770 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4807 <= 4770
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4770
run: init-list/main 8: 4770 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4770
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4770 <= integer
mem: ((6 tagged-value-address) (deref)): 4771 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 58 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4772 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4772
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4835 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4772 <= 4835
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4770
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4838 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: list-next/init-list/main 1: 4770 => ((1 list-address))
mem: ((1 list-address)): 4840 <= 4770
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4772 list-address) (raw)) => 4835
run: list-next/init-list/main 2: 4835 => ((2 list-address))
mem: ((2 list-address)): 4841 <= 4835
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4835
run: init-list/main 7: 4835 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4835
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4835
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4869 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: list-value-address/init-list/main 1: 4835 => ((1 list-address))
mem: ((1 list-address)): 4871 <= 4835
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4835 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4872 <= 4835
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4835
run: init-list/main 8: 4835 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4835
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4835 <= integer
mem: ((6 tagged-value-address) (deref)): 4836 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 59 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4837 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4837
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4900 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4837 <= 4900
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4835
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4903 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: list-next/init-list/main 1: 4835 => ((1 list-address))
mem: ((1 list-address)): 4905 <= 4835
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4837 list-address) (raw)) => 4900
run: list-next/init-list/main 2: 4900 => ((2 list-address))
mem: ((2 list-address)): 4906 <= 4900
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4900
run: init-list/main 7: 4900 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4900
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4900
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4934 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: list-value-address/init-list/main 1: 4900 => ((1 list-address))
mem: ((1 list-address)): 4936 <= 4900
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4900 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4937 <= 4900
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4900
run: init-list/main 8: 4900 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4900
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4900 <= integer
mem: ((6 tagged-value-address) (deref)): 4901 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 60 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4902 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4902
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4965 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4902 <= 4965
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4900
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4968 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: list-next/init-list/main 1: 4900 => ((1 list-address))
mem: ((1 list-address)): 4970 <= 4900
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4902 list-address) (raw)) => 4965
run: list-next/init-list/main 2: 4965 => ((2 list-address))
mem: ((2 list-address)): 4971 <= 4965
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4965
run: init-list/main 7: 4965 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 4965
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4965
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4999 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: list-value-address/init-list/main 1: 4965 => ((1 list-address))
mem: ((1 list-address)): 5001 <= 4965
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4965 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5002 <= 4965
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4965
run: init-list/main 8: 4965 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 4965
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4965 <= integer
mem: ((6 tagged-value-address) (deref)): 4966 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 61 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1035 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4967 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 4967
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5030 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4967 <= 5030
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4965
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5033 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: list-next/init-list/main 1: 4965 => ((1 list-address))
mem: ((1 list-address)): 5035 <= 4965
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4967 list-address) (raw)) => 5030
run: list-next/init-list/main 2: 5030 => ((2 list-address))
mem: ((2 list-address)): 5036 <= 5030
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5030
run: init-list/main 7: 5030 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 5030
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5030
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5064 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: list-value-address/init-list/main 1: 5030 => ((1 list-address))
mem: ((1 list-address)): 5066 <= 5030
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5030 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5067 <= 5030
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5030
run: init-list/main 8: 5030 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 5030
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5030 <= integer
mem: ((6 tagged-value-address) (deref)): 5031 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 62 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1035 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 5032 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 5032
schedule: scheduling init-list/main for further processing
schedule: init-list/main
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5095 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 5032 <= 5095
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 5030
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5098 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: list-next/init-list/main 1: 5030 => ((1 list-address))
mem: ((1 list-address)): 5100 <= 5030
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5032 list-address) (raw)) => 5095
run: list-next/init-list/main 2: 5095 => ((2 list-address))
mem: ((2 list-address)): 5101 <= 5095
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5095
run: init-list/main 7: 5095 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 5095
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5095
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5129 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: list-value-address/init-list/main 1: 5095 => ((1 list-address))
mem: ((1 list-address)): 5131 <= 5095
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5095 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5132 <= 5095
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5095
run: init-list/main 8: 5095 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 5095
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5095 <= integer
mem: ((6 tagged-value-address) (deref)): 5096 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 63 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\r => ((3 integer))
mem: ((3 integer)): 1035 <= #\r
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1036 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 5097 => ((5 list-address-address))
mem: ((5 list-address-address)): 1037 <= 5097
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5160 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 5097 <= 5160
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 5095
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5163 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: list-next/init-list/main 1: 5095 => ((1 list-address))
mem: ((1 list-address)): 5165 <= 5095
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5097 list-address) (raw)) => 5160
run: list-next/init-list/main 2: 5160 => ((2 list-address))
mem: ((2 list-address)): 5166 <= 5160
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5160
run: init-list/main 7: 5160 => ((2 list-address))
mem: ((2 list-address)): 1034 <= 5160
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5160
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5194 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: list-value-address/init-list/main 1: 5160 => ((1 list-address))
mem: ((1 list-address)): 5196 <= 5160
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5160 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5197 <= 5160
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5160
run: init-list/main 8: 5160 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1038 <= 5160
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => r
run: init-list/main 9: #(tagged record (integer #\r)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5160 <= integer
mem: ((6 tagged-value-address) (deref)): 5161 <= #\r
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 64 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: nil => ((3 integer))
mem: ((3 integer)): 1035 <= nil
run: init-list/main 3: nil => ((4 boolean))
mem: ((4 boolean)): 1036 <= nil
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-list/main 11: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1062
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5225 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1062)
run: list-next/init-list/main 1: 1062 => ((1 list-address))
mem: ((1 list-address)): 5227 <= 1062
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1064 list-address) (raw)) => 1065
run: list-next/init-list/main 2: 1065 => ((2 list-address))
mem: ((2 list-address)): 5228 <= 1065
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1065
run: init-list/main 11: 1065 => ((1 list-address))
mem: ((1 list-address)): 1033 <= 1065
run: init-list/main 12: (((reply)) ((1 list-address)))
mem: ((1 list-address)) => 1065
run: main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 1002 <= 1065
run: main 2: (((2 board-address)) <- ((init-board)) ((1 list-address)))
mem: ((1 list-address)) => 1065
run: init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-board/main 0: 5256 => ((default-space space-address))
run: init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: init-board/main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 5258 <= 1065
run: init-board/main 2: (((2 integer)) <- ((list-length)) ((1 list-address)))
mem: ((1 list-address)) => 1065
run: list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-length/init-board/main 0: 5287 => ((default-space space-address))
run: list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: list-length/init-board/main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1065
run: list-length/init-board/main 2: (((2 integer)) <- ((copy)) ((0 literal)))
run: list-length/init-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 5290 <= 0
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1065
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5318 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: list-value-address/list-length/init-board/main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 5320 <= 1065
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1065 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5321 <= 1065
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1065
run: list-length/init-board/main 3: 1065 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1065
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1065
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 0
run: list-length/init-board/main 5: 1 => ((2 integer))
mem: ((2 integer)): 5290 <= 1
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1065
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5349 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: list-next/list-length/init-board/main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 5351 <= 1065
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1067 list-address) (raw)) => 1130
run: list-next/list-length/init-board/main 2: 1130 => ((2 list-address))
mem: ((2 list-address)): 5352 <= 1130
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1130
run: list-length/init-board/main 6: 1130 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1130
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1130
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5380 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: list-value-address/list-length/init-board/main 1: 1130 => ((1 list-address))
mem: ((1 list-address)): 5382 <= 1130
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1130 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5383 <= 1130
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1130
run: list-length/init-board/main 3: 1130 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1130
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1130
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 1
run: list-length/init-board/main 5: 2 => ((2 integer))
mem: ((2 integer)): 5290 <= 2
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1130
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5411 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: list-next/list-length/init-board/main 1: 1130 => ((1 list-address))
mem: ((1 list-address)): 5413 <= 1130
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1132 list-address) (raw)) => 1195
run: list-next/list-length/init-board/main 2: 1195 => ((2 list-address))
mem: ((2 list-address)): 5414 <= 1195
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1195
run: list-length/init-board/main 6: 1195 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1195
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1195
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5442 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: list-value-address/list-length/init-board/main 1: 1195 => ((1 list-address))
mem: ((1 list-address)): 5444 <= 1195
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1195 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5445 <= 1195
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1195
run: list-length/init-board/main 3: 1195 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1195
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1195
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 2
run: list-length/init-board/main 5: 3 => ((2 integer))
mem: ((2 integer)): 5290 <= 3
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1195
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5473 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: list-next/list-length/init-board/main 1: 1195 => ((1 list-address))
mem: ((1 list-address)): 5475 <= 1195
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1197 list-address) (raw)) => 1260
run: list-next/list-length/init-board/main 2: 1260 => ((2 list-address))
mem: ((2 list-address)): 5476 <= 1260
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1260
run: list-length/init-board/main 6: 1260 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1260
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1260
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5504 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: list-value-address/list-length/init-board/main 1: 1260 => ((1 list-address))
mem: ((1 list-address)): 5506 <= 1260
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1260 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5507 <= 1260
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1260
run: list-length/init-board/main 3: 1260 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1260
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1260
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 3
run: list-length/init-board/main 5: 4 => ((2 integer))
mem: ((2 integer)): 5290 <= 4
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1260
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5535 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: list-next/list-length/init-board/main 1: 1260 => ((1 list-address))
mem: ((1 list-address)): 5537 <= 1260
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1262 list-address) (raw)) => 1325
run: list-next/list-length/init-board/main 2: 1325 => ((2 list-address))
mem: ((2 list-address)): 5538 <= 1325
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1325
run: list-length/init-board/main 6: 1325 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1325
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1325
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5566 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: list-value-address/list-length/init-board/main 1: 1325 => ((1 list-address))
mem: ((1 list-address)): 5568 <= 1325
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1325 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5569 <= 1325
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1325
run: list-length/init-board/main 3: 1325 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1325
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1325
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 4
run: list-length/init-board/main 5: 5 => ((2 integer))
mem: ((2 integer)): 5290 <= 5
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1325
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5597 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: list-next/list-length/init-board/main 1: 1325 => ((1 list-address))
mem: ((1 list-address)): 5599 <= 1325
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1327 list-address) (raw)) => 1390
run: list-next/list-length/init-board/main 2: 1390 => ((2 list-address))
mem: ((2 list-address)): 5600 <= 1390
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1390
run: list-length/init-board/main 6: 1390 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1390
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1390
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5628 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: list-value-address/list-length/init-board/main 1: 1390 => ((1 list-address))
mem: ((1 list-address)): 5630 <= 1390
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1390 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5631 <= 1390
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1390
run: list-length/init-board/main 3: 1390 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1390
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1390
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 5
run: list-length/init-board/main 5: 6 => ((2 integer))
mem: ((2 integer)): 5290 <= 6
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1390
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5659 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: list-next/list-length/init-board/main 1: 1390 => ((1 list-address))
mem: ((1 list-address)): 5661 <= 1390
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1392 list-address) (raw)) => 1455
run: list-next/list-length/init-board/main 2: 1455 => ((2 list-address))
mem: ((2 list-address)): 5662 <= 1455
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1455
run: list-length/init-board/main 6: 1455 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1455
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1455
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5690 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: list-value-address/list-length/init-board/main 1: 1455 => ((1 list-address))
mem: ((1 list-address)): 5692 <= 1455
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1455 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5693 <= 1455
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1455
run: list-length/init-board/main 3: 1455 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1455
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1455
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 6
run: list-length/init-board/main 5: 7 => ((2 integer))
mem: ((2 integer)): 5290 <= 7
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1455
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5721 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: list-next/list-length/init-board/main 1: 1455 => ((1 list-address))
mem: ((1 list-address)): 5723 <= 1455
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1457 list-address) (raw)) => 1520
run: list-next/list-length/init-board/main 2: 1520 => ((2 list-address))
mem: ((2 list-address)): 5724 <= 1520
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1520
run: list-length/init-board/main 6: 1520 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1520
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1520
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5752 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: list-value-address/list-length/init-board/main 1: 1520 => ((1 list-address))
mem: ((1 list-address)): 5754 <= 1520
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1520 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5755 <= 1520
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1520
run: list-length/init-board/main 3: 1520 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1520
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1520
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 7
run: list-length/init-board/main 5: 8 => ((2 integer))
mem: ((2 integer)): 5290 <= 8
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1520
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5783 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: list-next/list-length/init-board/main 1: 1520 => ((1 list-address))
mem: ((1 list-address)): 5785 <= 1520
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1522 list-address) (raw)) => 1585
run: list-next/list-length/init-board/main 2: 1585 => ((2 list-address))
mem: ((2 list-address)): 5786 <= 1585
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1585
run: list-length/init-board/main 6: 1585 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1585
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1585
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5814 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: list-value-address/list-length/init-board/main 1: 1585 => ((1 list-address))
mem: ((1 list-address)): 5816 <= 1585
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1585 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5817 <= 1585
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1585
run: list-length/init-board/main 3: 1585 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1585
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1585
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 8
run: list-length/init-board/main 5: 9 => ((2 integer))
mem: ((2 integer)): 5290 <= 9
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1585
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5845 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: list-next/list-length/init-board/main 1: 1585 => ((1 list-address))
mem: ((1 list-address)): 5847 <= 1585
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1587 list-address) (raw)) => 1650
run: list-next/list-length/init-board/main 2: 1650 => ((2 list-address))
mem: ((2 list-address)): 5848 <= 1650
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1650
run: list-length/init-board/main 6: 1650 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1650
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1650
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5876 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: list-value-address/list-length/init-board/main 1: 1650 => ((1 list-address))
mem: ((1 list-address)): 5878 <= 1650
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1650 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5879 <= 1650
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1650
run: list-length/init-board/main 3: 1650 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1650
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1650
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 9
run: list-length/init-board/main 5: 10 => ((2 integer))
mem: ((2 integer)): 5290 <= 10
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1650
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5907 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: list-next/list-length/init-board/main 1: 1650 => ((1 list-address))
mem: ((1 list-address)): 5909 <= 1650
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1652 list-address) (raw)) => 1715
run: list-next/list-length/init-board/main 2: 1715 => ((2 list-address))
mem: ((2 list-address)): 5910 <= 1715
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1715
run: list-length/init-board/main 6: 1715 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1715
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1715
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5938 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: list-value-address/list-length/init-board/main 1: 1715 => ((1 list-address))
mem: ((1 list-address)): 5940 <= 1715
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1715 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5941 <= 1715
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1715
run: list-length/init-board/main 3: 1715 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1715
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1715
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 10
run: list-length/init-board/main 5: 11 => ((2 integer))
mem: ((2 integer)): 5290 <= 11
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1715
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5969 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: list-next/list-length/init-board/main 1: 1715 => ((1 list-address))
mem: ((1 list-address)): 5971 <= 1715
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1717 list-address) (raw)) => 1780
run: list-next/list-length/init-board/main 2: 1780 => ((2 list-address))
mem: ((2 list-address)): 5972 <= 1780
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1780
run: list-length/init-board/main 6: 1780 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1780
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1780
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6000 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: list-value-address/list-length/init-board/main 1: 1780 => ((1 list-address))
mem: ((1 list-address)): 6002 <= 1780
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1780 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6003 <= 1780
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1780
run: list-length/init-board/main 3: 1780 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1780
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1780
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 11
run: list-length/init-board/main 5: 12 => ((2 integer))
mem: ((2 integer)): 5290 <= 12
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1780
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6031 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: list-next/list-length/init-board/main 1: 1780 => ((1 list-address))
mem: ((1 list-address)): 6033 <= 1780
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1782 list-address) (raw)) => 1845
run: list-next/list-length/init-board/main 2: 1845 => ((2 list-address))
mem: ((2 list-address)): 6034 <= 1845
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1845
run: list-length/init-board/main 6: 1845 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1845
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1845
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6062 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: list-value-address/list-length/init-board/main 1: 1845 => ((1 list-address))
mem: ((1 list-address)): 6064 <= 1845
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1845 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6065 <= 1845
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1845
run: list-length/init-board/main 3: 1845 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1845
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1845
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 12
run: list-length/init-board/main 5: 13 => ((2 integer))
mem: ((2 integer)): 5290 <= 13
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1845
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6093 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: list-next/list-length/init-board/main 1: 1845 => ((1 list-address))
mem: ((1 list-address)): 6095 <= 1845
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1847 list-address) (raw)) => 1910
run: list-next/list-length/init-board/main 2: 1910 => ((2 list-address))
mem: ((2 list-address)): 6096 <= 1910
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1910
run: list-length/init-board/main 6: 1910 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1910
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1910
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6124 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: list-value-address/list-length/init-board/main 1: 1910 => ((1 list-address))
mem: ((1 list-address)): 6126 <= 1910
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1910 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6127 <= 1910
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1910
run: list-length/init-board/main 3: 1910 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1910
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1910
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 13
run: list-length/init-board/main 5: 14 => ((2 integer))
mem: ((2 integer)): 5290 <= 14
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1910
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6155 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: list-next/list-length/init-board/main 1: 1910 => ((1 list-address))
mem: ((1 list-address)): 6157 <= 1910
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1912 list-address) (raw)) => 1975
run: list-next/list-length/init-board/main 2: 1975 => ((2 list-address))
mem: ((2 list-address)): 6158 <= 1975
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1975
run: list-length/init-board/main 6: 1975 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 1975
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1975
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6186 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: list-value-address/list-length/init-board/main 1: 1975 => ((1 list-address))
mem: ((1 list-address)): 6188 <= 1975
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1975 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6189 <= 1975
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1975
run: list-length/init-board/main 3: 1975 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 1975
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1975
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 14
run: list-length/init-board/main 5: 15 => ((2 integer))
mem: ((2 integer)): 5290 <= 15
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1975
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6217 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: list-next/list-length/init-board/main 1: 1975 => ((1 list-address))
mem: ((1 list-address)): 6219 <= 1975
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1977 list-address) (raw)) => 2040
run: list-next/list-length/init-board/main 2: 2040 => ((2 list-address))
mem: ((2 list-address)): 6220 <= 2040
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2040
run: list-length/init-board/main 6: 2040 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2040
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2040
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6248 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: list-value-address/list-length/init-board/main 1: 2040 => ((1 list-address))
mem: ((1 list-address)): 6250 <= 2040
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2040 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6251 <= 2040
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2040
run: list-length/init-board/main 3: 2040 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2040
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2040
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 15
run: list-length/init-board/main 5: 16 => ((2 integer))
mem: ((2 integer)): 5290 <= 16
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2040
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6279 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: list-next/list-length/init-board/main 1: 2040 => ((1 list-address))
mem: ((1 list-address)): 6281 <= 2040
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2042 list-address) (raw)) => 2105
run: list-next/list-length/init-board/main 2: 2105 => ((2 list-address))
mem: ((2 list-address)): 6282 <= 2105
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2105
run: list-length/init-board/main 6: 2105 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2105
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2105
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6310 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: list-value-address/list-length/init-board/main 1: 2105 => ((1 list-address))
mem: ((1 list-address)): 6312 <= 2105
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2105 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6313 <= 2105
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2105
run: list-length/init-board/main 3: 2105 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2105
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2105
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 16
run: list-length/init-board/main 5: 17 => ((2 integer))
mem: ((2 integer)): 5290 <= 17
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2105
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6341 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: list-next/list-length/init-board/main 1: 2105 => ((1 list-address))
mem: ((1 list-address)): 6343 <= 2105
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2107 list-address) (raw)) => 2170
run: list-next/list-length/init-board/main 2: 2170 => ((2 list-address))
mem: ((2 list-address)): 6344 <= 2170
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2170
run: list-length/init-board/main 6: 2170 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2170
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2170
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6372 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: list-value-address/list-length/init-board/main 1: 2170 => ((1 list-address))
mem: ((1 list-address)): 6374 <= 2170
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2170 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6375 <= 2170
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2170
run: list-length/init-board/main 3: 2170 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2170
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2170
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 17
run: list-length/init-board/main 5: 18 => ((2 integer))
mem: ((2 integer)): 5290 <= 18
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2170
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6403 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: list-next/list-length/init-board/main 1: 2170 => ((1 list-address))
mem: ((1 list-address)): 6405 <= 2170
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2172 list-address) (raw)) => 2235
run: list-next/list-length/init-board/main 2: 2235 => ((2 list-address))
mem: ((2 list-address)): 6406 <= 2235
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2235
run: list-length/init-board/main 6: 2235 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2235
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2235
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6434 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: list-value-address/list-length/init-board/main 1: 2235 => ((1 list-address))
mem: ((1 list-address)): 6436 <= 2235
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2235 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6437 <= 2235
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2235
run: list-length/init-board/main 3: 2235 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2235
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2235
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 18
run: list-length/init-board/main 5: 19 => ((2 integer))
mem: ((2 integer)): 5290 <= 19
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2235
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6465 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: list-next/list-length/init-board/main 1: 2235 => ((1 list-address))
mem: ((1 list-address)): 6467 <= 2235
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2237 list-address) (raw)) => 2300
run: list-next/list-length/init-board/main 2: 2300 => ((2 list-address))
mem: ((2 list-address)): 6468 <= 2300
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2300
run: list-length/init-board/main 6: 2300 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2300
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2300
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6496 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: list-value-address/list-length/init-board/main 1: 2300 => ((1 list-address))
mem: ((1 list-address)): 6498 <= 2300
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2300 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6499 <= 2300
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2300
run: list-length/init-board/main 3: 2300 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2300
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2300
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 19
run: list-length/init-board/main 5: 20 => ((2 integer))
mem: ((2 integer)): 5290 <= 20
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2300
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6527 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: list-next/list-length/init-board/main 1: 2300 => ((1 list-address))
mem: ((1 list-address)): 6529 <= 2300
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2302 list-address) (raw)) => 2365
run: list-next/list-length/init-board/main 2: 2365 => ((2 list-address))
mem: ((2 list-address)): 6530 <= 2365
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2365
run: list-length/init-board/main 6: 2365 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2365
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2365
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6558 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: list-value-address/list-length/init-board/main 1: 2365 => ((1 list-address))
mem: ((1 list-address)): 6560 <= 2365
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2365 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6561 <= 2365
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2365
run: list-length/init-board/main 3: 2365 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2365
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2365
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 20
run: list-length/init-board/main 5: 21 => ((2 integer))
mem: ((2 integer)): 5290 <= 21
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2365
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6589 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: list-next/list-length/init-board/main 1: 2365 => ((1 list-address))
mem: ((1 list-address)): 6591 <= 2365
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2367 list-address) (raw)) => 2430
run: list-next/list-length/init-board/main 2: 2430 => ((2 list-address))
mem: ((2 list-address)): 6592 <= 2430
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2430
run: list-length/init-board/main 6: 2430 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2430
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2430
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6620 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: list-value-address/list-length/init-board/main 1: 2430 => ((1 list-address))
mem: ((1 list-address)): 6622 <= 2430
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2430 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6623 <= 2430
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2430
run: list-length/init-board/main 3: 2430 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2430
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2430
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 21
run: list-length/init-board/main 5: 22 => ((2 integer))
mem: ((2 integer)): 5290 <= 22
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2430
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6651 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: list-next/list-length/init-board/main 1: 2430 => ((1 list-address))
mem: ((1 list-address)): 6653 <= 2430
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2432 list-address) (raw)) => 2495
run: list-next/list-length/init-board/main 2: 2495 => ((2 list-address))
mem: ((2 list-address)): 6654 <= 2495
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2495
run: list-length/init-board/main 6: 2495 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2495
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2495
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6682 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: list-value-address/list-length/init-board/main 1: 2495 => ((1 list-address))
mem: ((1 list-address)): 6684 <= 2495
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2495 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6685 <= 2495
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2495
run: list-length/init-board/main 3: 2495 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2495
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2495
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 22
run: list-length/init-board/main 5: 23 => ((2 integer))
mem: ((2 integer)): 5290 <= 23
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2495
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6713 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: list-next/list-length/init-board/main 1: 2495 => ((1 list-address))
mem: ((1 list-address)): 6715 <= 2495
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2497 list-address) (raw)) => 2560
run: list-next/list-length/init-board/main 2: 2560 => ((2 list-address))
mem: ((2 list-address)): 6716 <= 2560
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2560
run: list-length/init-board/main 6: 2560 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2560
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2560
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6744 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: list-value-address/list-length/init-board/main 1: 2560 => ((1 list-address))
mem: ((1 list-address)): 6746 <= 2560
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2560 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6747 <= 2560
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2560
run: list-length/init-board/main 3: 2560 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2560
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2560
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 23
run: list-length/init-board/main 5: 24 => ((2 integer))
mem: ((2 integer)): 5290 <= 24
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2560
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6775 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: list-next/list-length/init-board/main 1: 2560 => ((1 list-address))
mem: ((1 list-address)): 6777 <= 2560
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2562 list-address) (raw)) => 2625
run: list-next/list-length/init-board/main 2: 2625 => ((2 list-address))
mem: ((2 list-address)): 6778 <= 2625
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2625
run: list-length/init-board/main 6: 2625 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2625
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2625
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6806 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: list-value-address/list-length/init-board/main 1: 2625 => ((1 list-address))
mem: ((1 list-address)): 6808 <= 2625
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2625 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6809 <= 2625
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2625
run: list-length/init-board/main 3: 2625 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2625
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2625
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 24
run: list-length/init-board/main 5: 25 => ((2 integer))
mem: ((2 integer)): 5290 <= 25
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2625
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6837 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: list-next/list-length/init-board/main 1: 2625 => ((1 list-address))
mem: ((1 list-address)): 6839 <= 2625
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2627 list-address) (raw)) => 2690
run: list-next/list-length/init-board/main 2: 2690 => ((2 list-address))
mem: ((2 list-address)): 6840 <= 2690
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2690
run: list-length/init-board/main 6: 2690 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2690
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2690
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6868 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: list-value-address/list-length/init-board/main 1: 2690 => ((1 list-address))
mem: ((1 list-address)): 6870 <= 2690
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2690 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6871 <= 2690
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2690
run: list-length/init-board/main 3: 2690 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2690
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2690
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 25
run: list-length/init-board/main 5: 26 => ((2 integer))
mem: ((2 integer)): 5290 <= 26
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2690
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6899 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: list-next/list-length/init-board/main 1: 2690 => ((1 list-address))
mem: ((1 list-address)): 6901 <= 2690
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2692 list-address) (raw)) => 2755
run: list-next/list-length/init-board/main 2: 2755 => ((2 list-address))
mem: ((2 list-address)): 6902 <= 2755
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2755
run: list-length/init-board/main 6: 2755 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2755
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2755
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6930 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: list-value-address/list-length/init-board/main 1: 2755 => ((1 list-address))
mem: ((1 list-address)): 6932 <= 2755
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2755 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6933 <= 2755
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2755
run: list-length/init-board/main 3: 2755 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2755
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2755
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 26
run: list-length/init-board/main 5: 27 => ((2 integer))
mem: ((2 integer)): 5290 <= 27
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2755
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6961 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: list-next/list-length/init-board/main 1: 2755 => ((1 list-address))
mem: ((1 list-address)): 6963 <= 2755
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2757 list-address) (raw)) => 2820
run: list-next/list-length/init-board/main 2: 2820 => ((2 list-address))
mem: ((2 list-address)): 6964 <= 2820
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2820
run: list-length/init-board/main 6: 2820 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2820
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2820
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6992 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: list-value-address/list-length/init-board/main 1: 2820 => ((1 list-address))
mem: ((1 list-address)): 6994 <= 2820
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2820 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6995 <= 2820
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2820
run: list-length/init-board/main 3: 2820 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2820
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2820
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 27
run: list-length/init-board/main 5: 28 => ((2 integer))
mem: ((2 integer)): 5290 <= 28
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2820
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7023 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: list-next/list-length/init-board/main 1: 2820 => ((1 list-address))
mem: ((1 list-address)): 7025 <= 2820
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2822 list-address) (raw)) => 2885
run: list-next/list-length/init-board/main 2: 2885 => ((2 list-address))
mem: ((2 list-address)): 7026 <= 2885
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2885
run: list-length/init-board/main 6: 2885 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2885
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2885
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7054 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: list-value-address/list-length/init-board/main 1: 2885 => ((1 list-address))
mem: ((1 list-address)): 7056 <= 2885
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2885 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7057 <= 2885
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2885
run: list-length/init-board/main 3: 2885 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2885
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2885
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 28
run: list-length/init-board/main 5: 29 => ((2 integer))
mem: ((2 integer)): 5290 <= 29
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2885
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7085 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: list-next/list-length/init-board/main 1: 2885 => ((1 list-address))
mem: ((1 list-address)): 7087 <= 2885
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2887 list-address) (raw)) => 2950
run: list-next/list-length/init-board/main 2: 2950 => ((2 list-address))
mem: ((2 list-address)): 7088 <= 2950
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2950
run: list-length/init-board/main 6: 2950 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 2950
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2950
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7116 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: list-value-address/list-length/init-board/main 1: 2950 => ((1 list-address))
mem: ((1 list-address)): 7118 <= 2950
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2950 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7119 <= 2950
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2950
run: list-length/init-board/main 3: 2950 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 2950
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2950
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 29
run: list-length/init-board/main 5: 30 => ((2 integer))
mem: ((2 integer)): 5290 <= 30
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2950
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7147 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: list-next/list-length/init-board/main 1: 2950 => ((1 list-address))
mem: ((1 list-address)): 7149 <= 2950
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2952 list-address) (raw)) => 3015
run: list-next/list-length/init-board/main 2: 3015 => ((2 list-address))
mem: ((2 list-address)): 7150 <= 3015
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3015
run: list-length/init-board/main 6: 3015 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3015
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3015
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7178 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: list-value-address/list-length/init-board/main 1: 3015 => ((1 list-address))
mem: ((1 list-address)): 7180 <= 3015
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3015 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7181 <= 3015
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3015
run: list-length/init-board/main 3: 3015 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3015
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3015
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 30
run: list-length/init-board/main 5: 31 => ((2 integer))
mem: ((2 integer)): 5290 <= 31
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3015
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7209 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: list-next/list-length/init-board/main 1: 3015 => ((1 list-address))
mem: ((1 list-address)): 7211 <= 3015
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3017 list-address) (raw)) => 3080
run: list-next/list-length/init-board/main 2: 3080 => ((2 list-address))
mem: ((2 list-address)): 7212 <= 3080
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3080
run: list-length/init-board/main 6: 3080 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3080
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3080
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7240 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: list-value-address/list-length/init-board/main 1: 3080 => ((1 list-address))
mem: ((1 list-address)): 7242 <= 3080
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3080 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7243 <= 3080
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3080
run: list-length/init-board/main 3: 3080 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3080
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3080
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 31
run: list-length/init-board/main 5: 32 => ((2 integer))
mem: ((2 integer)): 5290 <= 32
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3080
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7271 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: list-next/list-length/init-board/main 1: 3080 => ((1 list-address))
mem: ((1 list-address)): 7273 <= 3080
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3082 list-address) (raw)) => 3145
run: list-next/list-length/init-board/main 2: 3145 => ((2 list-address))
mem: ((2 list-address)): 7274 <= 3145
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3145
run: list-length/init-board/main 6: 3145 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3145
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3145
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7302 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: list-value-address/list-length/init-board/main 1: 3145 => ((1 list-address))
mem: ((1 list-address)): 7304 <= 3145
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3145 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7305 <= 3145
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3145
run: list-length/init-board/main 3: 3145 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3145
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3145
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 32
run: list-length/init-board/main 5: 33 => ((2 integer))
mem: ((2 integer)): 5290 <= 33
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3145
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7333 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: list-next/list-length/init-board/main 1: 3145 => ((1 list-address))
mem: ((1 list-address)): 7335 <= 3145
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3147 list-address) (raw)) => 3210
run: list-next/list-length/init-board/main 2: 3210 => ((2 list-address))
mem: ((2 list-address)): 7336 <= 3210
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3210
run: list-length/init-board/main 6: 3210 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3210
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3210
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7364 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: list-value-address/list-length/init-board/main 1: 3210 => ((1 list-address))
mem: ((1 list-address)): 7366 <= 3210
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3210 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7367 <= 3210
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3210
run: list-length/init-board/main 3: 3210 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3210
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3210
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 33
run: list-length/init-board/main 5: 34 => ((2 integer))
mem: ((2 integer)): 5290 <= 34
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3210
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7395 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: list-next/list-length/init-board/main 1: 3210 => ((1 list-address))
mem: ((1 list-address)): 7397 <= 3210
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3212 list-address) (raw)) => 3275
run: list-next/list-length/init-board/main 2: 3275 => ((2 list-address))
mem: ((2 list-address)): 7398 <= 3275
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3275
run: list-length/init-board/main 6: 3275 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3275
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3275
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7426 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: list-value-address/list-length/init-board/main 1: 3275 => ((1 list-address))
mem: ((1 list-address)): 7428 <= 3275
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3275 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7429 <= 3275
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3275
run: list-length/init-board/main 3: 3275 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3275
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3275
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 34
run: list-length/init-board/main 5: 35 => ((2 integer))
mem: ((2 integer)): 5290 <= 35
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3275
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7457 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: list-next/list-length/init-board/main 1: 3275 => ((1 list-address))
mem: ((1 list-address)): 7459 <= 3275
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3277 list-address) (raw)) => 3340
run: list-next/list-length/init-board/main 2: 3340 => ((2 list-address))
mem: ((2 list-address)): 7460 <= 3340
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3340
run: list-length/init-board/main 6: 3340 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3340
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3340
schedule: scheduling list-value-address/list-length/init-board/main for further processing
schedule: list-value-address/list-length/init-board/main
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7488 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: list-value-address/list-length/init-board/main 1: 3340 => ((1 list-address))
mem: ((1 list-address)): 7490 <= 3340
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3340 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7491 <= 3340
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3340
run: list-length/init-board/main 3: 3340 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3340
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3340
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 35
run: list-length/init-board/main 5: 36 => ((2 integer))
mem: ((2 integer)): 5290 <= 36
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3340
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7519 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: list-next/list-length/init-board/main 1: 3340 => ((1 list-address))
mem: ((1 list-address)): 7521 <= 3340
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3342 list-address) (raw)) => 3405
run: list-next/list-length/init-board/main 2: 3405 => ((2 list-address))
mem: ((2 list-address)): 7522 <= 3405
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3405
run: list-length/init-board/main 6: 3405 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3405
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3405
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7550 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: list-value-address/list-length/init-board/main 1: 3405 => ((1 list-address))
mem: ((1 list-address)): 7552 <= 3405
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3405 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7553 <= 3405
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3405
run: list-length/init-board/main 3: 3405 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3405
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3405
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 36
run: list-length/init-board/main 5: 37 => ((2 integer))
mem: ((2 integer)): 5290 <= 37
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3405
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7581 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: list-next/list-length/init-board/main 1: 3405 => ((1 list-address))
mem: ((1 list-address)): 7583 <= 3405
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3407 list-address) (raw)) => 3470
run: list-next/list-length/init-board/main 2: 3470 => ((2 list-address))
mem: ((2 list-address)): 7584 <= 3470
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3470
run: list-length/init-board/main 6: 3470 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3470
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3470
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7612 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: list-value-address/list-length/init-board/main 1: 3470 => ((1 list-address))
mem: ((1 list-address)): 7614 <= 3470
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3470 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7615 <= 3470
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3470
run: list-length/init-board/main 3: 3470 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3470
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3470
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 37
run: list-length/init-board/main 5: 38 => ((2 integer))
mem: ((2 integer)): 5290 <= 38
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3470
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7643 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: list-next/list-length/init-board/main 1: 3470 => ((1 list-address))
mem: ((1 list-address)): 7645 <= 3470
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3472 list-address) (raw)) => 3535
run: list-next/list-length/init-board/main 2: 3535 => ((2 list-address))
mem: ((2 list-address)): 7646 <= 3535
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3535
run: list-length/init-board/main 6: 3535 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3535
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3535
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7674 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: list-value-address/list-length/init-board/main 1: 3535 => ((1 list-address))
mem: ((1 list-address)): 7676 <= 3535
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3535 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7677 <= 3535
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3535
run: list-length/init-board/main 3: 3535 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3535
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3535
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 38
run: list-length/init-board/main 5: 39 => ((2 integer))
mem: ((2 integer)): 5290 <= 39
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3535
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7705 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: list-next/list-length/init-board/main 1: 3535 => ((1 list-address))
mem: ((1 list-address)): 7707 <= 3535
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3537 list-address) (raw)) => 3600
run: list-next/list-length/init-board/main 2: 3600 => ((2 list-address))
mem: ((2 list-address)): 7708 <= 3600
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3600
run: list-length/init-board/main 6: 3600 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3600
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3600
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7736 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: list-value-address/list-length/init-board/main 1: 3600 => ((1 list-address))
mem: ((1 list-address)): 7738 <= 3600
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3600 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7739 <= 3600
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3600
run: list-length/init-board/main 3: 3600 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3600
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3600
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 39
run: list-length/init-board/main 5: 40 => ((2 integer))
mem: ((2 integer)): 5290 <= 40
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3600
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7767 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: list-next/list-length/init-board/main 1: 3600 => ((1 list-address))
mem: ((1 list-address)): 7769 <= 3600
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3602 list-address) (raw)) => 3665
run: list-next/list-length/init-board/main 2: 3665 => ((2 list-address))
mem: ((2 list-address)): 7770 <= 3665
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3665
run: list-length/init-board/main 6: 3665 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3665
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3665
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7798 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: list-value-address/list-length/init-board/main 1: 3665 => ((1 list-address))
mem: ((1 list-address)): 7800 <= 3665
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3665 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7801 <= 3665
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3665
run: list-length/init-board/main 3: 3665 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3665
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3665
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 40
run: list-length/init-board/main 5: 41 => ((2 integer))
mem: ((2 integer)): 5290 <= 41
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3665
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7829 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: list-next/list-length/init-board/main 1: 3665 => ((1 list-address))
mem: ((1 list-address)): 7831 <= 3665
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3667 list-address) (raw)) => 3730
run: list-next/list-length/init-board/main 2: 3730 => ((2 list-address))
mem: ((2 list-address)): 7832 <= 3730
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3730
run: list-length/init-board/main 6: 3730 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3730
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3730
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7860 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: list-value-address/list-length/init-board/main 1: 3730 => ((1 list-address))
mem: ((1 list-address)): 7862 <= 3730
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3730 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7863 <= 3730
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3730
run: list-length/init-board/main 3: 3730 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3730
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3730
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 41
run: list-length/init-board/main 5: 42 => ((2 integer))
mem: ((2 integer)): 5290 <= 42
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3730
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7891 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: list-next/list-length/init-board/main 1: 3730 => ((1 list-address))
mem: ((1 list-address)): 7893 <= 3730
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3732 list-address) (raw)) => 3795
run: list-next/list-length/init-board/main 2: 3795 => ((2 list-address))
mem: ((2 list-address)): 7894 <= 3795
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3795
run: list-length/init-board/main 6: 3795 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3795
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3795
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7922 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: list-value-address/list-length/init-board/main 1: 3795 => ((1 list-address))
mem: ((1 list-address)): 7924 <= 3795
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3795 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7925 <= 3795
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3795
run: list-length/init-board/main 3: 3795 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3795
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3795
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 42
run: list-length/init-board/main 5: 43 => ((2 integer))
mem: ((2 integer)): 5290 <= 43
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3795
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7953 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: list-next/list-length/init-board/main 1: 3795 => ((1 list-address))
mem: ((1 list-address)): 7955 <= 3795
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3797 list-address) (raw)) => 3860
run: list-next/list-length/init-board/main 2: 3860 => ((2 list-address))
mem: ((2 list-address)): 7956 <= 3860
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3860
run: list-length/init-board/main 6: 3860 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3860
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3860
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7984 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: list-value-address/list-length/init-board/main 1: 3860 => ((1 list-address))
mem: ((1 list-address)): 7986 <= 3860
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3860 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7987 <= 3860
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3860
run: list-length/init-board/main 3: 3860 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3860
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3860
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 43
run: list-length/init-board/main 5: 44 => ((2 integer))
mem: ((2 integer)): 5290 <= 44
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3860
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8015 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: list-next/list-length/init-board/main 1: 3860 => ((1 list-address))
mem: ((1 list-address)): 8017 <= 3860
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3862 list-address) (raw)) => 3925
run: list-next/list-length/init-board/main 2: 3925 => ((2 list-address))
mem: ((2 list-address)): 8018 <= 3925
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3925
run: list-length/init-board/main 6: 3925 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3925
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3925
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8046 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: list-value-address/list-length/init-board/main 1: 3925 => ((1 list-address))
mem: ((1 list-address)): 8048 <= 3925
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3925 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8049 <= 3925
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3925
run: list-length/init-board/main 3: 3925 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3925
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3925
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 44
run: list-length/init-board/main 5: 45 => ((2 integer))
mem: ((2 integer)): 5290 <= 45
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3925
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8077 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: list-next/list-length/init-board/main 1: 3925 => ((1 list-address))
mem: ((1 list-address)): 8079 <= 3925
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3927 list-address) (raw)) => 3990
run: list-next/list-length/init-board/main 2: 3990 => ((2 list-address))
mem: ((2 list-address)): 8080 <= 3990
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3990
run: list-length/init-board/main 6: 3990 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 3990
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3990
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8108 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: list-value-address/list-length/init-board/main 1: 3990 => ((1 list-address))
mem: ((1 list-address)): 8110 <= 3990
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3990 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8111 <= 3990
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3990
run: list-length/init-board/main 3: 3990 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 3990
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3990
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 45
run: list-length/init-board/main 5: 46 => ((2 integer))
mem: ((2 integer)): 5290 <= 46
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3990
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8139 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: list-next/list-length/init-board/main 1: 3990 => ((1 list-address))
mem: ((1 list-address)): 8141 <= 3990
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3992 list-address) (raw)) => 4055
run: list-next/list-length/init-board/main 2: 4055 => ((2 list-address))
mem: ((2 list-address)): 8142 <= 4055
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4055
run: list-length/init-board/main 6: 4055 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4055
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4055
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8170 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: list-value-address/list-length/init-board/main 1: 4055 => ((1 list-address))
mem: ((1 list-address)): 8172 <= 4055
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4055 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8173 <= 4055
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4055
run: list-length/init-board/main 3: 4055 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4055
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4055
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 46
run: list-length/init-board/main 5: 47 => ((2 integer))
mem: ((2 integer)): 5290 <= 47
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4055
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8201 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: list-next/list-length/init-board/main 1: 4055 => ((1 list-address))
mem: ((1 list-address)): 8203 <= 4055
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4057 list-address) (raw)) => 4120
run: list-next/list-length/init-board/main 2: 4120 => ((2 list-address))
mem: ((2 list-address)): 8204 <= 4120
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4120
run: list-length/init-board/main 6: 4120 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4120
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4120
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8232 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: list-value-address/list-length/init-board/main 1: 4120 => ((1 list-address))
mem: ((1 list-address)): 8234 <= 4120
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4120 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8235 <= 4120
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4120
run: list-length/init-board/main 3: 4120 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4120
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4120
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 47
run: list-length/init-board/main 5: 48 => ((2 integer))
mem: ((2 integer)): 5290 <= 48
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4120
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8263 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: list-next/list-length/init-board/main 1: 4120 => ((1 list-address))
mem: ((1 list-address)): 8265 <= 4120
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4122 list-address) (raw)) => 4185
run: list-next/list-length/init-board/main 2: 4185 => ((2 list-address))
mem: ((2 list-address)): 8266 <= 4185
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4185
run: list-length/init-board/main 6: 4185 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4185
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4185
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8294 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: list-value-address/list-length/init-board/main 1: 4185 => ((1 list-address))
mem: ((1 list-address)): 8296 <= 4185
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4185 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8297 <= 4185
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4185
run: list-length/init-board/main 3: 4185 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4185
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4185
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 48
run: list-length/init-board/main 5: 49 => ((2 integer))
mem: ((2 integer)): 5290 <= 49
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4185
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8325 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: list-next/list-length/init-board/main 1: 4185 => ((1 list-address))
mem: ((1 list-address)): 8327 <= 4185
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4187 list-address) (raw)) => 4250
run: list-next/list-length/init-board/main 2: 4250 => ((2 list-address))
mem: ((2 list-address)): 8328 <= 4250
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4250
run: list-length/init-board/main 6: 4250 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4250
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4250
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8356 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: list-value-address/list-length/init-board/main 1: 4250 => ((1 list-address))
mem: ((1 list-address)): 8358 <= 4250
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4250 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8359 <= 4250
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4250
run: list-length/init-board/main 3: 4250 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4250
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4250
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 49
run: list-length/init-board/main 5: 50 => ((2 integer))
mem: ((2 integer)): 5290 <= 50
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4250
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8387 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: list-next/list-length/init-board/main 1: 4250 => ((1 list-address))
mem: ((1 list-address)): 8389 <= 4250
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4252 list-address) (raw)) => 4315
run: list-next/list-length/init-board/main 2: 4315 => ((2 list-address))
mem: ((2 list-address)): 8390 <= 4315
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4315
run: list-length/init-board/main 6: 4315 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4315
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4315
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8418 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: list-value-address/list-length/init-board/main 1: 4315 => ((1 list-address))
mem: ((1 list-address)): 8420 <= 4315
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4315 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8421 <= 4315
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4315
run: list-length/init-board/main 3: 4315 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4315
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4315
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 50
run: list-length/init-board/main 5: 51 => ((2 integer))
mem: ((2 integer)): 5290 <= 51
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4315
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8449 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: list-next/list-length/init-board/main 1: 4315 => ((1 list-address))
mem: ((1 list-address)): 8451 <= 4315
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4317 list-address) (raw)) => 4380
run: list-next/list-length/init-board/main 2: 4380 => ((2 list-address))
mem: ((2 list-address)): 8452 <= 4380
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4380
run: list-length/init-board/main 6: 4380 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4380
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4380
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8480 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: list-value-address/list-length/init-board/main 1: 4380 => ((1 list-address))
mem: ((1 list-address)): 8482 <= 4380
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4380 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8483 <= 4380
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4380
run: list-length/init-board/main 3: 4380 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4380
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4380
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 51
run: list-length/init-board/main 5: 52 => ((2 integer))
mem: ((2 integer)): 5290 <= 52
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4380
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8511 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: list-next/list-length/init-board/main 1: 4380 => ((1 list-address))
mem: ((1 list-address)): 8513 <= 4380
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4382 list-address) (raw)) => 4445
run: list-next/list-length/init-board/main 2: 4445 => ((2 list-address))
mem: ((2 list-address)): 8514 <= 4445
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4445
run: list-length/init-board/main 6: 4445 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4445
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4445
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8542 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: list-value-address/list-length/init-board/main 1: 4445 => ((1 list-address))
mem: ((1 list-address)): 8544 <= 4445
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4445 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8545 <= 4445
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4445
run: list-length/init-board/main 3: 4445 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4445
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4445
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 52
run: list-length/init-board/main 5: 53 => ((2 integer))
mem: ((2 integer)): 5290 <= 53
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4445
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8573 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: list-next/list-length/init-board/main 1: 4445 => ((1 list-address))
mem: ((1 list-address)): 8575 <= 4445
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4447 list-address) (raw)) => 4510
run: list-next/list-length/init-board/main 2: 4510 => ((2 list-address))
mem: ((2 list-address)): 8576 <= 4510
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4510
run: list-length/init-board/main 6: 4510 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4510
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4510
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8604 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: list-value-address/list-length/init-board/main 1: 4510 => ((1 list-address))
mem: ((1 list-address)): 8606 <= 4510
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4510 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8607 <= 4510
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4510
run: list-length/init-board/main 3: 4510 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4510
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4510
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 53
run: list-length/init-board/main 5: 54 => ((2 integer))
mem: ((2 integer)): 5290 <= 54
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4510
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8635 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: list-next/list-length/init-board/main 1: 4510 => ((1 list-address))
mem: ((1 list-address)): 8637 <= 4510
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4512 list-address) (raw)) => 4575
run: list-next/list-length/init-board/main 2: 4575 => ((2 list-address))
mem: ((2 list-address)): 8638 <= 4575
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4575
run: list-length/init-board/main 6: 4575 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4575
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4575
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8666 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: list-value-address/list-length/init-board/main 1: 4575 => ((1 list-address))
mem: ((1 list-address)): 8668 <= 4575
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4575 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8669 <= 4575
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4575
run: list-length/init-board/main 3: 4575 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4575
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4575
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 54
run: list-length/init-board/main 5: 55 => ((2 integer))
mem: ((2 integer)): 5290 <= 55
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4575
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8697 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: list-next/list-length/init-board/main 1: 4575 => ((1 list-address))
mem: ((1 list-address)): 8699 <= 4575
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4577 list-address) (raw)) => 4640
run: list-next/list-length/init-board/main 2: 4640 => ((2 list-address))
mem: ((2 list-address)): 8700 <= 4640
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4640
run: list-length/init-board/main 6: 4640 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4640
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4640
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8728 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: list-value-address/list-length/init-board/main 1: 4640 => ((1 list-address))
mem: ((1 list-address)): 8730 <= 4640
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4640 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8731 <= 4640
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4640
run: list-length/init-board/main 3: 4640 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4640
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4640
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 55
run: list-length/init-board/main 5: 56 => ((2 integer))
mem: ((2 integer)): 5290 <= 56
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4640
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8759 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: list-next/list-length/init-board/main 1: 4640 => ((1 list-address))
mem: ((1 list-address)): 8761 <= 4640
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4642 list-address) (raw)) => 4705
run: list-next/list-length/init-board/main 2: 4705 => ((2 list-address))
mem: ((2 list-address)): 8762 <= 4705
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4705
run: list-length/init-board/main 6: 4705 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4705
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4705
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8790 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: list-value-address/list-length/init-board/main 1: 4705 => ((1 list-address))
mem: ((1 list-address)): 8792 <= 4705
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4705 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8793 <= 4705
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4705
run: list-length/init-board/main 3: 4705 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4705
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4705
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 56
run: list-length/init-board/main 5: 57 => ((2 integer))
mem: ((2 integer)): 5290 <= 57
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4705
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8821 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: list-next/list-length/init-board/main 1: 4705 => ((1 list-address))
mem: ((1 list-address)): 8823 <= 4705
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4707 list-address) (raw)) => 4770
run: list-next/list-length/init-board/main 2: 4770 => ((2 list-address))
mem: ((2 list-address)): 8824 <= 4770
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4770
run: list-length/init-board/main 6: 4770 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4770
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4770
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8852 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: list-value-address/list-length/init-board/main 1: 4770 => ((1 list-address))
mem: ((1 list-address)): 8854 <= 4770
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4770 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8855 <= 4770
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4770
run: list-length/init-board/main 3: 4770 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4770
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4770
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 57
run: list-length/init-board/main 5: 58 => ((2 integer))
mem: ((2 integer)): 5290 <= 58
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4770
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8883 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: list-next/list-length/init-board/main 1: 4770 => ((1 list-address))
mem: ((1 list-address)): 8885 <= 4770
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4772 list-address) (raw)) => 4835
run: list-next/list-length/init-board/main 2: 4835 => ((2 list-address))
mem: ((2 list-address)): 8886 <= 4835
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4835
run: list-length/init-board/main 6: 4835 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4835
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4835
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8914 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: list-value-address/list-length/init-board/main 1: 4835 => ((1 list-address))
mem: ((1 list-address)): 8916 <= 4835
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4835 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8917 <= 4835
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4835
run: list-length/init-board/main 3: 4835 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4835
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4835
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 58
run: list-length/init-board/main 5: 59 => ((2 integer))
mem: ((2 integer)): 5290 <= 59
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4835
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8945 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: list-next/list-length/init-board/main 1: 4835 => ((1 list-address))
mem: ((1 list-address)): 8947 <= 4835
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4837 list-address) (raw)) => 4900
run: list-next/list-length/init-board/main 2: 4900 => ((2 list-address))
mem: ((2 list-address)): 8948 <= 4900
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4900
run: list-length/init-board/main 6: 4900 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4900
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4900
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8976 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: list-value-address/list-length/init-board/main 1: 4900 => ((1 list-address))
mem: ((1 list-address)): 8978 <= 4900
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4900 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8979 <= 4900
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4900
run: list-length/init-board/main 3: 4900 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4900
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4900
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 59
run: list-length/init-board/main 5: 60 => ((2 integer))
mem: ((2 integer)): 5290 <= 60
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4900
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9007 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: list-next/list-length/init-board/main 1: 4900 => ((1 list-address))
mem: ((1 list-address)): 9009 <= 4900
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4902 list-address) (raw)) => 4965
run: list-next/list-length/init-board/main 2: 4965 => ((2 list-address))
mem: ((2 list-address)): 9010 <= 4965
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4965
run: list-length/init-board/main 6: 4965 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 4965
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4965
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9038 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: list-value-address/list-length/init-board/main 1: 4965 => ((1 list-address))
mem: ((1 list-address)): 9040 <= 4965
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4965 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9041 <= 4965
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4965
run: list-length/init-board/main 3: 4965 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 4965
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4965
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 60
run: list-length/init-board/main 5: 61 => ((2 integer))
mem: ((2 integer)): 5290 <= 61
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4965
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9069 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: list-next/list-length/init-board/main 1: 4965 => ((1 list-address))
mem: ((1 list-address)): 9071 <= 4965
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4967 list-address) (raw)) => 5030
run: list-next/list-length/init-board/main 2: 5030 => ((2 list-address))
mem: ((2 list-address)): 9072 <= 5030
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5030
run: list-length/init-board/main 6: 5030 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 5030
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5030
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9100 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: list-value-address/list-length/init-board/main 1: 5030 => ((1 list-address))
mem: ((1 list-address)): 9102 <= 5030
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5030 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9103 <= 5030
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5030
run: list-length/init-board/main 3: 5030 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 5030
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5030
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 61
run: list-length/init-board/main 5: 62 => ((2 integer))
mem: ((2 integer)): 5290 <= 62
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5030
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9131 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: list-next/list-length/init-board/main 1: 5030 => ((1 list-address))
mem: ((1 list-address)): 9133 <= 5030
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5032 list-address) (raw)) => 5095
run: list-next/list-length/init-board/main 2: 5095 => ((2 list-address))
mem: ((2 list-address)): 9134 <= 5095
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5095
run: list-length/init-board/main 6: 5095 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 5095
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5095
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9162 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: list-value-address/list-length/init-board/main 1: 5095 => ((1 list-address))
mem: ((1 list-address)): 9164 <= 5095
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5095 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9165 <= 5095
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5095
run: list-length/init-board/main 3: 5095 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 5095
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5095
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 62
run: list-length/init-board/main 5: 63 => ((2 integer))
mem: ((2 integer)): 5290 <= 63
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5095
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9193 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: list-next/list-length/init-board/main 1: 5095 => ((1 list-address))
mem: ((1 list-address)): 9195 <= 5095
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5097 list-address) (raw)) => 5160
run: list-next/list-length/init-board/main 2: 5160 => ((2 list-address))
mem: ((2 list-address)): 9196 <= 5160
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5160
run: list-length/init-board/main 6: 5160 => ((1 list-address))
mem: ((1 list-address)): 5289 <= 5160
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5160
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9224 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: list-value-address/list-length/init-board/main 1: 5160 => ((1 list-address))
mem: ((1 list-address)): 9226 <= 5160
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5160 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9227 <= 5160
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5160
run: list-length/init-board/main 3: 5160 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= 5160
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5160
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 63
run: list-length/init-board/main 5: 64 => ((2 integer))
mem: ((2 integer)): 5290 <= 64
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5160
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9255 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: list-next/list-length/init-board/main 1: 5160 => ((1 list-address))
mem: ((1 list-address)): 9257 <= 5160
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5162 list-address) (raw)) => nil
run: list-next/list-length/init-board/main 2: nil => ((2 list-address))
mem: ((2 list-address)): 9258 <= nil
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => nil
run: list-length/init-board/main 6: nil => ((1 list-address))
mem: ((1 list-address)): 5289 <= nil
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => nil
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9286 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (nil)
run: list-value-address/list-length/init-board/main 1: nil => ((1 list-address))
mem: ((1 list-address)): 9288 <= nil
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: nil => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9289 <= nil
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => nil
run: list-length/init-board/main 3: nil => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5291 <= nil
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => nil
run: list-length/init-board/main 8: (((reply)) ((2 integer)))
mem: ((2 integer)) => 64
run: init-board/main 2: 64 => ((2 integer))
mem: ((2 integer)): 5259 <= 64
run: init-board/main 3: (((3 boolean)) <- ((equal)) ((2 integer)) ((64 literal)))
mem: ((2 integer)) => 64
run: init-board/main 3: t => ((3 boolean))
mem: ((3 boolean)): 5260 <= t
run: init-board/main 4: (((assert)) ((3 boolean)) ((chessboard had incorrect size literal)))
mem: ((3 boolean)) => t
run: init-board/main 5: (((4 board-address)) <- ((new)) ((board literal)) ((8 literal)))
run: init-board/main 5: 9317 => ((4 board-address))
mem: ((4 board-address)): 5261 <= 9317
run: init-board/main 6: (((5 integer)) <- ((copy)) ((0 literal)))
run: init-board/main 6: 0 => ((5 integer))
mem: ((5 integer)): 5262 <= 0
run: init-board/main 7: (((6 list-address)) <- ((copy)) ((1 list-address)))
mem: ((1 list-address)) => 1065
run: init-board/main 7: 1065 => ((6 list-address))
mem: ((6 list-address)): 5263 <= 1065
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 0
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5264 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
run: init-board/main 10: 9318 => ((8 file-address-address))
mem: ((8 file-address-address)): 5265 <= 9318
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 1065
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 9326 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: init-file/init-board/main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 9328 <= 1065
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 9357 => ((2 file-address))
mem: ((2 file-address)): 9329 <= 9357
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 9330 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9331 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1065
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9366 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: list-value-address/init-file/init-board/main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 9368 <= 1065
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1065 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9369 <= 1065
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1065
run: init-file/init-board/main 6: 1065 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9332 <= 1065
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
run: init-file/init-board/main 7: 9358 => ((6 square-address))
mem: ((6 square-address)): 9333 <= 9358
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1066 location) (raw)) => R
run: init-file/init-board/main 8: #\R => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9358 <= #\R
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1065
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9397 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: list-next/init-file/init-board/main 1: 1065 => ((1 list-address))
mem: ((1 list-address)): 9399 <= 1065
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1067 list-address) (raw)) => 1130
run: list-next/init-file/init-board/main 2: 1130 => ((2 list-address))
mem: ((2 list-address)): 9400 <= 1130
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1130
run: init-file/init-board/main 9: 1130 => ((1 list-address))
mem: ((1 list-address)): 9328 <= 1130
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 9330 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9331 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1130
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9428 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: list-value-address/init-file/init-board/main 1: 1130 => ((1 list-address))
mem: ((1 list-address)): 9430 <= 1130
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1130 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9431 <= 1130
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1130
run: init-file/init-board/main 6: 1130 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9332 <= 1130
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
run: init-file/init-board/main 7: 9359 => ((6 square-address))
mem: ((6 square-address)): 9333 <= 9359
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1131 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9359 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1130
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9459 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: list-next/init-file/init-board/main 1: 1130 => ((1 list-address))
mem: ((1 list-address)): 9461 <= 1130
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1132 list-address) (raw)) => 1195
run: list-next/init-file/init-board/main 2: 1195 => ((2 list-address))
mem: ((2 list-address)): 9462 <= 1195
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1195
run: init-file/init-board/main 9: 1195 => ((1 list-address))
mem: ((1 list-address)): 9328 <= 1195
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 9330 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9331 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1195
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9490 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: list-value-address/init-file/init-board/main 1: 1195 => ((1 list-address))
mem: ((1 list-address)): 9492 <= 1195
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1195 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9493 <= 1195
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1195
run: init-file/init-board/main 6: 1195 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9332 <= 1195
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
run: init-file/init-board/main 7: 9360 => ((6 square-address))
mem: ((6 square-address)): 9333 <= 9360
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1196 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9360 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1195
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9521 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: list-next/init-file/init-board/main 1: 1195 => ((1 list-address))
mem: ((1 list-address)): 9523 <= 1195
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1197 list-address) (raw)) => 1260
run: list-next/init-file/init-board/main 2: 1260 => ((2 list-address))
mem: ((2 list-address)): 9524 <= 1260
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1260
run: init-file/init-board/main 9: 1260 => ((1 list-address))
mem: ((1 list-address)): 9328 <= 1260
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 9330 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9331 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1260
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9552 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: list-value-address/init-file/init-board/main 1: 1260 => ((1 list-address))
mem: ((1 list-address)): 9554 <= 1260
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1260 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9555 <= 1260
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1260
run: init-file/init-board/main 6: 1260 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9332 <= 1260
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
run: init-file/init-board/main 7: 9361 => ((6 square-address))
mem: ((6 square-address)): 9333 <= 9361
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1261 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9361 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1260
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9583 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: list-next/init-file/init-board/main 1: 1260 => ((1 list-address))
mem: ((1 list-address)): 9585 <= 1260
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1262 list-address) (raw)) => 1325
run: list-next/init-file/init-board/main 2: 1325 => ((2 list-address))
mem: ((2 list-address)): 9586 <= 1325
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1325
run: init-file/init-board/main 9: 1325 => ((1 list-address))
mem: ((1 list-address)): 9328 <= 1325
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 9330 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9331 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1325
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9614 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: list-value-address/init-file/init-board/main 1: 1325 => ((1 list-address))
mem: ((1 list-address)): 9616 <= 1325
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1325 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9617 <= 1325
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1325
run: init-file/init-board/main 6: 1325 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9332 <= 1325
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
run: init-file/init-board/main 7: 9362 => ((6 square-address))
mem: ((6 square-address)): 9333 <= 9362
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1326 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9362 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1325
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9645 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: list-next/init-file/init-board/main 1: 1325 => ((1 list-address))
mem: ((1 list-address)): 9647 <= 1325
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1327 list-address) (raw)) => 1390
run: list-next/init-file/init-board/main 2: 1390 => ((2 list-address))
mem: ((2 list-address)): 9648 <= 1390
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1390
run: init-file/init-board/main 9: 1390 => ((1 list-address))
mem: ((1 list-address)): 9328 <= 1390
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 9330 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9331 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1390
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9676 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: list-value-address/init-file/init-board/main 1: 1390 => ((1 list-address))
mem: ((1 list-address)): 9678 <= 1390
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1390 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9679 <= 1390
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1390
run: init-file/init-board/main 6: 1390 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9332 <= 1390
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
run: init-file/init-board/main 7: 9363 => ((6 square-address))
mem: ((6 square-address)): 9333 <= 9363
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1391 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9363 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1390
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9707 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: list-next/init-file/init-board/main 1: 1390 => ((1 list-address))
mem: ((1 list-address)): 9709 <= 1390
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1392 list-address) (raw)) => 1455
run: list-next/init-file/init-board/main 2: 1455 => ((2 list-address))
mem: ((2 list-address)): 9710 <= 1455
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1455
run: init-file/init-board/main 9: 1455 => ((1 list-address))
mem: ((1 list-address)): 9328 <= 1455
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 9330 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9331 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1455
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9738 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: list-value-address/init-file/init-board/main 1: 1455 => ((1 list-address))
mem: ((1 list-address)): 9740 <= 1455
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1455 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9741 <= 1455
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1455
run: init-file/init-board/main 6: 1455 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9332 <= 1455
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
run: init-file/init-board/main 7: 9364 => ((6 square-address))
mem: ((6 square-address)): 9333 <= 9364
schedule: scheduling init-file/init-board/main for further processing
schedule: init-file/init-board/main
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1456 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9364 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1455
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9769 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: list-next/init-file/init-board/main 1: 1455 => ((1 list-address))
mem: ((1 list-address)): 9771 <= 1455
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1457 list-address) (raw)) => 1520
run: list-next/init-file/init-board/main 2: 1520 => ((2 list-address))
mem: ((2 list-address)): 9772 <= 1520
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1520
run: init-file/init-board/main 9: 1520 => ((1 list-address))
mem: ((1 list-address)): 9328 <= 1520
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 9330 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9331 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1520
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9800 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: list-value-address/init-file/init-board/main 1: 1520 => ((1 list-address))
mem: ((1 list-address)): 9802 <= 1520
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1520 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9803 <= 1520
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1520
run: init-file/init-board/main 6: 1520 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9332 <= 1520
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
run: init-file/init-board/main 7: 9365 => ((6 square-address))
mem: ((6 square-address)): 9333 <= 9365
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1521 location) (raw)) => r
run: init-file/init-board/main 8: #\r => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9365 <= #\r
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1520
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9831 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: list-next/init-file/init-board/main 1: 1520 => ((1 list-address))
mem: ((1 list-address)): 9833 <= 1520
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1522 list-address) (raw)) => 1585
run: list-next/init-file/init-board/main 2: 1585 => ((2 list-address))
mem: ((2 list-address)): 9834 <= 1585
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1585
run: init-file/init-board/main 9: 1585 => ((1 list-address))
mem: ((1 list-address)): 9328 <= 1585
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 9330 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 9331 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 9357
mem: ((1 list-address)) => 1585
run: init-board/main 11: 9357 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9318 <= 9357
run: init-board/main 11: 1585 => ((6 list-address))
mem: ((6 list-address)): 5263 <= 1585
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: init-board/main 12: 1 => ((5 integer))
mem: ((5 integer)): 5262 <= 1
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 1
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5264 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
run: init-board/main 10: 9319 => ((8 file-address-address))
mem: ((8 file-address-address)): 5265 <= 9319
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 1585
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 9862 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: init-file/init-board/main 1: 1585 => ((1 list-address))
mem: ((1 list-address)): 9864 <= 1585
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 9893 => ((2 file-address))
mem: ((2 file-address)): 9865 <= 9893
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 9866 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9867 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1585
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9902 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: list-value-address/init-file/init-board/main 1: 1585 => ((1 list-address))
mem: ((1 list-address)): 9904 <= 1585
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1585 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9905 <= 1585
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1585
run: init-file/init-board/main 6: 1585 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9868 <= 1585
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
run: init-file/init-board/main 7: 9894 => ((6 square-address))
mem: ((6 square-address)): 9869 <= 9894
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1586 location) (raw)) => N
run: init-file/init-board/main 8: #\N => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9894 <= #\N
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1585
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9933 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: list-next/init-file/init-board/main 1: 1585 => ((1 list-address))
mem: ((1 list-address)): 9935 <= 1585
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1587 list-address) (raw)) => 1650
run: list-next/init-file/init-board/main 2: 1650 => ((2 list-address))
mem: ((2 list-address)): 9936 <= 1650
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1650
run: init-file/init-board/main 9: 1650 => ((1 list-address))
mem: ((1 list-address)): 9864 <= 1650
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 9866 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9867 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1650
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9964 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: list-value-address/init-file/init-board/main 1: 1650 => ((1 list-address))
mem: ((1 list-address)): 9966 <= 1650
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1650 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9967 <= 1650
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1650
run: init-file/init-board/main 6: 1650 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9868 <= 1650
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
run: init-file/init-board/main 7: 9895 => ((6 square-address))
mem: ((6 square-address)): 9869 <= 9895
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1651 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9895 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1650
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9995 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: list-next/init-file/init-board/main 1: 1650 => ((1 list-address))
mem: ((1 list-address)): 9997 <= 1650
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1652 list-address) (raw)) => 1715
run: list-next/init-file/init-board/main 2: 1715 => ((2 list-address))
mem: ((2 list-address)): 9998 <= 1715
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1715
run: init-file/init-board/main 9: 1715 => ((1 list-address))
mem: ((1 list-address)): 9864 <= 1715
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 9866 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9867 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1715
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10026 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: list-value-address/init-file/init-board/main 1: 1715 => ((1 list-address))
mem: ((1 list-address)): 10028 <= 1715
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1715 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10029 <= 1715
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1715
run: init-file/init-board/main 6: 1715 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9868 <= 1715
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
run: init-file/init-board/main 7: 9896 => ((6 square-address))
mem: ((6 square-address)): 9869 <= 9896
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1716 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9896 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1715
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10057 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: list-next/init-file/init-board/main 1: 1715 => ((1 list-address))
mem: ((1 list-address)): 10059 <= 1715
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1717 list-address) (raw)) => 1780
run: list-next/init-file/init-board/main 2: 1780 => ((2 list-address))
mem: ((2 list-address)): 10060 <= 1780
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1780
run: init-file/init-board/main 9: 1780 => ((1 list-address))
mem: ((1 list-address)): 9864 <= 1780
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 9866 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9867 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1780
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10088 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: list-value-address/init-file/init-board/main 1: 1780 => ((1 list-address))
mem: ((1 list-address)): 10090 <= 1780
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1780 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10091 <= 1780
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1780
run: init-file/init-board/main 6: 1780 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9868 <= 1780
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
run: init-file/init-board/main 7: 9897 => ((6 square-address))
mem: ((6 square-address)): 9869 <= 9897
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1781 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9897 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1780
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10119 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: list-next/init-file/init-board/main 1: 1780 => ((1 list-address))
mem: ((1 list-address)): 10121 <= 1780
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1782 list-address) (raw)) => 1845
run: list-next/init-file/init-board/main 2: 1845 => ((2 list-address))
mem: ((2 list-address)): 10122 <= 1845
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1845
run: init-file/init-board/main 9: 1845 => ((1 list-address))
mem: ((1 list-address)): 9864 <= 1845
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 9866 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9867 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1845
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10150 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: list-value-address/init-file/init-board/main 1: 1845 => ((1 list-address))
mem: ((1 list-address)): 10152 <= 1845
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1845 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10153 <= 1845
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1845
run: init-file/init-board/main 6: 1845 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9868 <= 1845
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
run: init-file/init-board/main 7: 9898 => ((6 square-address))
mem: ((6 square-address)): 9869 <= 9898
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1846 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9898 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1845
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10181 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: list-next/init-file/init-board/main 1: 1845 => ((1 list-address))
mem: ((1 list-address)): 10183 <= 1845
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1847 list-address) (raw)) => 1910
run: list-next/init-file/init-board/main 2: 1910 => ((2 list-address))
mem: ((2 list-address)): 10184 <= 1910
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1910
run: init-file/init-board/main 9: 1910 => ((1 list-address))
mem: ((1 list-address)): 9864 <= 1910
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 9866 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9867 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1910
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10212 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: list-value-address/init-file/init-board/main 1: 1910 => ((1 list-address))
mem: ((1 list-address)): 10214 <= 1910
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1910 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10215 <= 1910
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1910
run: init-file/init-board/main 6: 1910 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9868 <= 1910
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
run: init-file/init-board/main 7: 9899 => ((6 square-address))
mem: ((6 square-address)): 9869 <= 9899
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1911 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9899 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1910
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10243 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: list-next/init-file/init-board/main 1: 1910 => ((1 list-address))
mem: ((1 list-address)): 10245 <= 1910
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1912 list-address) (raw)) => 1975
run: list-next/init-file/init-board/main 2: 1975 => ((2 list-address))
mem: ((2 list-address)): 10246 <= 1975
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1975
run: init-file/init-board/main 9: 1975 => ((1 list-address))
mem: ((1 list-address)): 9864 <= 1975
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 9866 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9867 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1975
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10274 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: list-value-address/init-file/init-board/main 1: 1975 => ((1 list-address))
mem: ((1 list-address)): 10276 <= 1975
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1975 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10277 <= 1975
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1975
run: init-file/init-board/main 6: 1975 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9868 <= 1975
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
run: init-file/init-board/main 7: 9900 => ((6 square-address))
mem: ((6 square-address)): 9869 <= 9900
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1976 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9900 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1975
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10305 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: list-next/init-file/init-board/main 1: 1975 => ((1 list-address))
mem: ((1 list-address)): 10307 <= 1975
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1977 list-address) (raw)) => 2040
run: list-next/init-file/init-board/main 2: 2040 => ((2 list-address))
mem: ((2 list-address)): 10308 <= 2040
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2040
run: init-file/init-board/main 9: 2040 => ((1 list-address))
mem: ((1 list-address)): 9864 <= 2040
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 9866 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9867 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2040
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10336 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: list-value-address/init-file/init-board/main 1: 2040 => ((1 list-address))
mem: ((1 list-address)): 10338 <= 2040
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2040 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10339 <= 2040
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2040
run: init-file/init-board/main 6: 2040 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9868 <= 2040
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
run: init-file/init-board/main 7: 9901 => ((6 square-address))
mem: ((6 square-address)): 9869 <= 9901
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2041 location) (raw)) => n
run: init-file/init-board/main 8: #\n => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9901 <= #\n
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2040
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10367 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: list-next/init-file/init-board/main 1: 2040 => ((1 list-address))
mem: ((1 list-address)): 10369 <= 2040
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2042 list-address) (raw)) => 2105
run: list-next/init-file/init-board/main 2: 2105 => ((2 list-address))
mem: ((2 list-address)): 10370 <= 2105
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2105
run: init-file/init-board/main 9: 2105 => ((1 list-address))
mem: ((1 list-address)): 9864 <= 2105
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 9866 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 9867 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 9893
mem: ((1 list-address)) => 2105
run: init-board/main 11: 9893 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9319 <= 9893
run: init-board/main 11: 2105 => ((6 list-address))
mem: ((6 list-address)): 5263 <= 2105
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 1
run: init-board/main 12: 2 => ((5 integer))
mem: ((5 integer)): 5262 <= 2
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 2
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5264 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 2
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
run: init-board/main 10: 9320 => ((8 file-address-address))
mem: ((8 file-address-address)): 5265 <= 9320
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 2105
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 10398 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: init-file/init-board/main 1: 2105 => ((1 list-address))
mem: ((1 list-address)): 10400 <= 2105
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 10429 => ((2 file-address))
mem: ((2 file-address)): 10401 <= 10429
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 10402 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10403 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2105
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10438 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: list-value-address/init-file/init-board/main 1: 2105 => ((1 list-address))
mem: ((1 list-address)): 10440 <= 2105
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2105 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10441 <= 2105
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2105
run: init-file/init-board/main 6: 2105 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10404 <= 2105
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
run: init-file/init-board/main 7: 10430 => ((6 square-address))
mem: ((6 square-address)): 10405 <= 10430
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2106 location) (raw)) => B
run: init-file/init-board/main 8: #\B => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10430 <= #\B
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2105
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10469 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: list-next/init-file/init-board/main 1: 2105 => ((1 list-address))
mem: ((1 list-address)): 10471 <= 2105
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2107 list-address) (raw)) => 2170
run: list-next/init-file/init-board/main 2: 2170 => ((2 list-address))
mem: ((2 list-address)): 10472 <= 2170
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2170
run: init-file/init-board/main 9: 2170 => ((1 list-address))
mem: ((1 list-address)): 10400 <= 2170
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 10402 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10403 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2170
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10500 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: list-value-address/init-file/init-board/main 1: 2170 => ((1 list-address))
mem: ((1 list-address)): 10502 <= 2170
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2170 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10503 <= 2170
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2170
run: init-file/init-board/main 6: 2170 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10404 <= 2170
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
run: init-file/init-board/main 7: 10431 => ((6 square-address))
mem: ((6 square-address)): 10405 <= 10431
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2171 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10431 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2170
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10531 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: list-next/init-file/init-board/main 1: 2170 => ((1 list-address))
mem: ((1 list-address)): 10533 <= 2170
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2172 list-address) (raw)) => 2235
run: list-next/init-file/init-board/main 2: 2235 => ((2 list-address))
mem: ((2 list-address)): 10534 <= 2235
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2235
run: init-file/init-board/main 9: 2235 => ((1 list-address))
mem: ((1 list-address)): 10400 <= 2235
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 10402 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10403 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2235
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10562 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: list-value-address/init-file/init-board/main 1: 2235 => ((1 list-address))
mem: ((1 list-address)): 10564 <= 2235
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2235 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10565 <= 2235
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2235
run: init-file/init-board/main 6: 2235 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10404 <= 2235
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
run: init-file/init-board/main 7: 10432 => ((6 square-address))
mem: ((6 square-address)): 10405 <= 10432
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2236 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10432 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2235
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10593 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: list-next/init-file/init-board/main 1: 2235 => ((1 list-address))
mem: ((1 list-address)): 10595 <= 2235
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2237 list-address) (raw)) => 2300
run: list-next/init-file/init-board/main 2: 2300 => ((2 list-address))
mem: ((2 list-address)): 10596 <= 2300
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2300
run: init-file/init-board/main 9: 2300 => ((1 list-address))
mem: ((1 list-address)): 10400 <= 2300
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 10402 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10403 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2300
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10624 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: list-value-address/init-file/init-board/main 1: 2300 => ((1 list-address))
mem: ((1 list-address)): 10626 <= 2300
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2300 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10627 <= 2300
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2300
run: init-file/init-board/main 6: 2300 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10404 <= 2300
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
run: init-file/init-board/main 7: 10433 => ((6 square-address))
mem: ((6 square-address)): 10405 <= 10433
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2301 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10433 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2300
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10655 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: list-next/init-file/init-board/main 1: 2300 => ((1 list-address))
mem: ((1 list-address)): 10657 <= 2300
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2302 list-address) (raw)) => 2365
run: list-next/init-file/init-board/main 2: 2365 => ((2 list-address))
mem: ((2 list-address)): 10658 <= 2365
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2365
run: init-file/init-board/main 9: 2365 => ((1 list-address))
mem: ((1 list-address)): 10400 <= 2365
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 10402 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10403 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2365
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10686 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: list-value-address/init-file/init-board/main 1: 2365 => ((1 list-address))
mem: ((1 list-address)): 10688 <= 2365
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2365 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10689 <= 2365
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2365
run: init-file/init-board/main 6: 2365 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10404 <= 2365
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
run: init-file/init-board/main 7: 10434 => ((6 square-address))
mem: ((6 square-address)): 10405 <= 10434
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2366 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10434 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2365
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10717 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: list-next/init-file/init-board/main 1: 2365 => ((1 list-address))
mem: ((1 list-address)): 10719 <= 2365
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2367 list-address) (raw)) => 2430
run: list-next/init-file/init-board/main 2: 2430 => ((2 list-address))
mem: ((2 list-address)): 10720 <= 2430
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2430
run: init-file/init-board/main 9: 2430 => ((1 list-address))
mem: ((1 list-address)): 10400 <= 2430
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 10402 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10403 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2430
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10748 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: list-value-address/init-file/init-board/main 1: 2430 => ((1 list-address))
mem: ((1 list-address)): 10750 <= 2430
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2430 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10751 <= 2430
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2430
run: init-file/init-board/main 6: 2430 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10404 <= 2430
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
run: init-file/init-board/main 7: 10435 => ((6 square-address))
mem: ((6 square-address)): 10405 <= 10435
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2431 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10435 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2430
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10779 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: list-next/init-file/init-board/main 1: 2430 => ((1 list-address))
mem: ((1 list-address)): 10781 <= 2430
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2432 list-address) (raw)) => 2495
run: list-next/init-file/init-board/main 2: 2495 => ((2 list-address))
mem: ((2 list-address)): 10782 <= 2495
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2495
run: init-file/init-board/main 9: 2495 => ((1 list-address))
mem: ((1 list-address)): 10400 <= 2495
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 10402 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10403 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2495
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10810 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: list-value-address/init-file/init-board/main 1: 2495 => ((1 list-address))
mem: ((1 list-address)): 10812 <= 2495
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2495 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10813 <= 2495
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2495
run: init-file/init-board/main 6: 2495 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10404 <= 2495
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
run: init-file/init-board/main 7: 10436 => ((6 square-address))
mem: ((6 square-address)): 10405 <= 10436
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2496 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10436 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2495
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10841 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: list-next/init-file/init-board/main 1: 2495 => ((1 list-address))
mem: ((1 list-address)): 10843 <= 2495
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2497 list-address) (raw)) => 2560
run: list-next/init-file/init-board/main 2: 2560 => ((2 list-address))
mem: ((2 list-address)): 10844 <= 2560
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2560
run: init-file/init-board/main 9: 2560 => ((1 list-address))
mem: ((1 list-address)): 10400 <= 2560
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 10402 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10403 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2560
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10872 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: list-value-address/init-file/init-board/main 1: 2560 => ((1 list-address))
mem: ((1 list-address)): 10874 <= 2560
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2560 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10875 <= 2560
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2560
run: init-file/init-board/main 6: 2560 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10404 <= 2560
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
run: init-file/init-board/main 7: 10437 => ((6 square-address))
mem: ((6 square-address)): 10405 <= 10437
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2561 location) (raw)) => b
run: init-file/init-board/main 8: #\b => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10437 <= #\b
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2560
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10903 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: list-next/init-file/init-board/main 1: 2560 => ((1 list-address))
mem: ((1 list-address)): 10905 <= 2560
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2562 list-address) (raw)) => 2625
run: list-next/init-file/init-board/main 2: 2625 => ((2 list-address))
mem: ((2 list-address)): 10906 <= 2625
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2625
run: init-file/init-board/main 9: 2625 => ((1 list-address))
mem: ((1 list-address)): 10400 <= 2625
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 10402 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 10403 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 10429
mem: ((1 list-address)) => 2625
run: init-board/main 11: 10429 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9320 <= 10429
run: init-board/main 11: 2625 => ((6 list-address))
mem: ((6 list-address)): 5263 <= 2625
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 2
run: init-board/main 12: 3 => ((5 integer))
mem: ((5 integer)): 5262 <= 3
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 3
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5264 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 3
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
run: init-board/main 10: 9321 => ((8 file-address-address))
mem: ((8 file-address-address)): 5265 <= 9321
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 2625
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 10934 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: init-file/init-board/main 1: 2625 => ((1 list-address))
mem: ((1 list-address)): 10936 <= 2625
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 10965 => ((2 file-address))
mem: ((2 file-address)): 10937 <= 10965
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 10938 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10939 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2625
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10974 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: list-value-address/init-file/init-board/main 1: 2625 => ((1 list-address))
mem: ((1 list-address)): 10976 <= 2625
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2625 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10977 <= 2625
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2625
run: init-file/init-board/main 6: 2625 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10940 <= 2625
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
run: init-file/init-board/main 7: 10966 => ((6 square-address))
mem: ((6 square-address)): 10941 <= 10966
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2626 location) (raw)) => Q
run: init-file/init-board/main 8: #\Q => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10966 <= #\Q
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2625
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11005 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: list-next/init-file/init-board/main 1: 2625 => ((1 list-address))
mem: ((1 list-address)): 11007 <= 2625
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2627 list-address) (raw)) => 2690
run: list-next/init-file/init-board/main 2: 2690 => ((2 list-address))
mem: ((2 list-address)): 11008 <= 2690
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2690
run: init-file/init-board/main 9: 2690 => ((1 list-address))
mem: ((1 list-address)): 10936 <= 2690
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 10938 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10939 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2690
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11036 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: list-value-address/init-file/init-board/main 1: 2690 => ((1 list-address))
mem: ((1 list-address)): 11038 <= 2690
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2690 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11039 <= 2690
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2690
run: init-file/init-board/main 6: 2690 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10940 <= 2690
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
run: init-file/init-board/main 7: 10967 => ((6 square-address))
mem: ((6 square-address)): 10941 <= 10967
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2691 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10967 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2690
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11067 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: list-next/init-file/init-board/main 1: 2690 => ((1 list-address))
mem: ((1 list-address)): 11069 <= 2690
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2692 list-address) (raw)) => 2755
run: list-next/init-file/init-board/main 2: 2755 => ((2 list-address))
mem: ((2 list-address)): 11070 <= 2755
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2755
run: init-file/init-board/main 9: 2755 => ((1 list-address))
mem: ((1 list-address)): 10936 <= 2755
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 10938 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10939 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2755
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11098 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: list-value-address/init-file/init-board/main 1: 2755 => ((1 list-address))
mem: ((1 list-address)): 11100 <= 2755
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2755 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11101 <= 2755
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2755
run: init-file/init-board/main 6: 2755 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10940 <= 2755
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
run: init-file/init-board/main 7: 10968 => ((6 square-address))
mem: ((6 square-address)): 10941 <= 10968
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2756 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10968 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2755
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11129 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: list-next/init-file/init-board/main 1: 2755 => ((1 list-address))
mem: ((1 list-address)): 11131 <= 2755
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2757 list-address) (raw)) => 2820
run: list-next/init-file/init-board/main 2: 2820 => ((2 list-address))
mem: ((2 list-address)): 11132 <= 2820
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2820
run: init-file/init-board/main 9: 2820 => ((1 list-address))
mem: ((1 list-address)): 10936 <= 2820
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 10938 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10939 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2820
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11160 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: list-value-address/init-file/init-board/main 1: 2820 => ((1 list-address))
mem: ((1 list-address)): 11162 <= 2820
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2820 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11163 <= 2820
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2820
run: init-file/init-board/main 6: 2820 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10940 <= 2820
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
run: init-file/init-board/main 7: 10969 => ((6 square-address))
mem: ((6 square-address)): 10941 <= 10969
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2821 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10969 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2820
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11191 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: list-next/init-file/init-board/main 1: 2820 => ((1 list-address))
mem: ((1 list-address)): 11193 <= 2820
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2822 list-address) (raw)) => 2885
run: list-next/init-file/init-board/main 2: 2885 => ((2 list-address))
mem: ((2 list-address)): 11194 <= 2885
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2885
run: init-file/init-board/main 9: 2885 => ((1 list-address))
mem: ((1 list-address)): 10936 <= 2885
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 10938 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10939 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2885
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11222 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: list-value-address/init-file/init-board/main 1: 2885 => ((1 list-address))
mem: ((1 list-address)): 11224 <= 2885
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2885 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11225 <= 2885
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2885
run: init-file/init-board/main 6: 2885 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10940 <= 2885
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
run: init-file/init-board/main 7: 10970 => ((6 square-address))
mem: ((6 square-address)): 10941 <= 10970
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2886 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10970 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2885
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11253 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: list-next/init-file/init-board/main 1: 2885 => ((1 list-address))
mem: ((1 list-address)): 11255 <= 2885
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2887 list-address) (raw)) => 2950
run: list-next/init-file/init-board/main 2: 2950 => ((2 list-address))
mem: ((2 list-address)): 11256 <= 2950
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2950
run: init-file/init-board/main 9: 2950 => ((1 list-address))
mem: ((1 list-address)): 10936 <= 2950
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 10938 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10939 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2950
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11284 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: list-value-address/init-file/init-board/main 1: 2950 => ((1 list-address))
mem: ((1 list-address)): 11286 <= 2950
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2950 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11287 <= 2950
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2950
run: init-file/init-board/main 6: 2950 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10940 <= 2950
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
run: init-file/init-board/main 7: 10971 => ((6 square-address))
mem: ((6 square-address)): 10941 <= 10971
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2951 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10971 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2950
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11315 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: list-next/init-file/init-board/main 1: 2950 => ((1 list-address))
mem: ((1 list-address)): 11317 <= 2950
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2952 list-address) (raw)) => 3015
run: list-next/init-file/init-board/main 2: 3015 => ((2 list-address))
mem: ((2 list-address)): 11318 <= 3015
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3015
run: init-file/init-board/main 9: 3015 => ((1 list-address))
mem: ((1 list-address)): 10936 <= 3015
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 10938 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10939 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3015
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11346 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: list-value-address/init-file/init-board/main 1: 3015 => ((1 list-address))
mem: ((1 list-address)): 11348 <= 3015
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3015 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11349 <= 3015
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3015
run: init-file/init-board/main 6: 3015 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10940 <= 3015
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
run: init-file/init-board/main 7: 10972 => ((6 square-address))
mem: ((6 square-address)): 10941 <= 10972
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3016 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10972 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3015
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11377 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: list-next/init-file/init-board/main 1: 3015 => ((1 list-address))
mem: ((1 list-address)): 11379 <= 3015
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3017 list-address) (raw)) => 3080
run: list-next/init-file/init-board/main 2: 3080 => ((2 list-address))
mem: ((2 list-address)): 11380 <= 3080
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3080
run: init-file/init-board/main 9: 3080 => ((1 list-address))
mem: ((1 list-address)): 10936 <= 3080
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 10938 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10939 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3080
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11408 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: list-value-address/init-file/init-board/main 1: 3080 => ((1 list-address))
mem: ((1 list-address)): 11410 <= 3080
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3080 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11411 <= 3080
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3080
run: init-file/init-board/main 6: 3080 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10940 <= 3080
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
run: init-file/init-board/main 7: 10973 => ((6 square-address))
mem: ((6 square-address)): 10941 <= 10973
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3081 location) (raw)) => q
run: init-file/init-board/main 8: #\q => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10973 <= #\q
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3080
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11439 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: list-next/init-file/init-board/main 1: 3080 => ((1 list-address))
mem: ((1 list-address)): 11441 <= 3080
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3082 list-address) (raw)) => 3145
run: list-next/init-file/init-board/main 2: 3145 => ((2 list-address))
mem: ((2 list-address)): 11442 <= 3145
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3145
run: init-file/init-board/main 9: 3145 => ((1 list-address))
mem: ((1 list-address)): 10936 <= 3145
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 10938 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 10939 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 10965
mem: ((1 list-address)) => 3145
run: init-board/main 11: 10965 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9321 <= 10965
run: init-board/main 11: 3145 => ((6 list-address))
mem: ((6 list-address)): 5263 <= 3145
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 3
run: init-board/main 12: 4 => ((5 integer))
mem: ((5 integer)): 5262 <= 4
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 4
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5264 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 4
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
run: init-board/main 10: 9322 => ((8 file-address-address))
mem: ((8 file-address-address)): 5265 <= 9322
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 3145
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 11470 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: init-file/init-board/main 1: 3145 => ((1 list-address))
mem: ((1 list-address)): 11472 <= 3145
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 11501 => ((2 file-address))
mem: ((2 file-address)): 11473 <= 11501
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 11474 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11475 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3145
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11510 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: list-value-address/init-file/init-board/main 1: 3145 => ((1 list-address))
mem: ((1 list-address)): 11512 <= 3145
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3145 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11513 <= 3145
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3145
run: init-file/init-board/main 6: 3145 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11476 <= 3145
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
run: init-file/init-board/main 7: 11502 => ((6 square-address))
mem: ((6 square-address)): 11477 <= 11502
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3146 location) (raw)) => K
run: init-file/init-board/main 8: #\K => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11502 <= #\K
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3145
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11541 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: list-next/init-file/init-board/main 1: 3145 => ((1 list-address))
mem: ((1 list-address)): 11543 <= 3145
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3147 list-address) (raw)) => 3210
run: list-next/init-file/init-board/main 2: 3210 => ((2 list-address))
mem: ((2 list-address)): 11544 <= 3210
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3210
run: init-file/init-board/main 9: 3210 => ((1 list-address))
mem: ((1 list-address)): 11472 <= 3210
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 11474 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11475 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3210
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11572 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: list-value-address/init-file/init-board/main 1: 3210 => ((1 list-address))
mem: ((1 list-address)): 11574 <= 3210
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3210 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11575 <= 3210
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3210
run: init-file/init-board/main 6: 3210 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11476 <= 3210
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
run: init-file/init-board/main 7: 11503 => ((6 square-address))
mem: ((6 square-address)): 11477 <= 11503
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3211 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11503 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3210
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11603 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: list-next/init-file/init-board/main 1: 3210 => ((1 list-address))
mem: ((1 list-address)): 11605 <= 3210
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3212 list-address) (raw)) => 3275
run: list-next/init-file/init-board/main 2: 3275 => ((2 list-address))
mem: ((2 list-address)): 11606 <= 3275
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3275
run: init-file/init-board/main 9: 3275 => ((1 list-address))
mem: ((1 list-address)): 11472 <= 3275
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 11474 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11475 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3275
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11634 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: list-value-address/init-file/init-board/main 1: 3275 => ((1 list-address))
mem: ((1 list-address)): 11636 <= 3275
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3275 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11637 <= 3275
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3275
run: init-file/init-board/main 6: 3275 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11476 <= 3275
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
run: init-file/init-board/main 7: 11504 => ((6 square-address))
mem: ((6 square-address)): 11477 <= 11504
schedule: scheduling init-file/init-board/main for further processing
schedule: init-file/init-board/main
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3276 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11504 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3275
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11665 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: list-next/init-file/init-board/main 1: 3275 => ((1 list-address))
mem: ((1 list-address)): 11667 <= 3275
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3277 list-address) (raw)) => 3340
run: list-next/init-file/init-board/main 2: 3340 => ((2 list-address))
mem: ((2 list-address)): 11668 <= 3340
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3340
run: init-file/init-board/main 9: 3340 => ((1 list-address))
mem: ((1 list-address)): 11472 <= 3340
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 11474 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11475 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3340
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11696 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: list-value-address/init-file/init-board/main 1: 3340 => ((1 list-address))
mem: ((1 list-address)): 11698 <= 3340
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3340 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11699 <= 3340
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3340
run: init-file/init-board/main 6: 3340 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11476 <= 3340
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
run: init-file/init-board/main 7: 11505 => ((6 square-address))
mem: ((6 square-address)): 11477 <= 11505
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3341 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11505 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3340
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11727 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: list-next/init-file/init-board/main 1: 3340 => ((1 list-address))
mem: ((1 list-address)): 11729 <= 3340
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3342 list-address) (raw)) => 3405
run: list-next/init-file/init-board/main 2: 3405 => ((2 list-address))
mem: ((2 list-address)): 11730 <= 3405
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3405
run: init-file/init-board/main 9: 3405 => ((1 list-address))
mem: ((1 list-address)): 11472 <= 3405
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 11474 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11475 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3405
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11758 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: list-value-address/init-file/init-board/main 1: 3405 => ((1 list-address))
mem: ((1 list-address)): 11760 <= 3405
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3405 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11761 <= 3405
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3405
run: init-file/init-board/main 6: 3405 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11476 <= 3405
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
run: init-file/init-board/main 7: 11506 => ((6 square-address))
mem: ((6 square-address)): 11477 <= 11506
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3406 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11506 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3405
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11789 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: list-next/init-file/init-board/main 1: 3405 => ((1 list-address))
mem: ((1 list-address)): 11791 <= 3405
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3407 list-address) (raw)) => 3470
run: list-next/init-file/init-board/main 2: 3470 => ((2 list-address))
mem: ((2 list-address)): 11792 <= 3470
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3470
run: init-file/init-board/main 9: 3470 => ((1 list-address))
mem: ((1 list-address)): 11472 <= 3470
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 11474 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11475 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3470
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11820 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: list-value-address/init-file/init-board/main 1: 3470 => ((1 list-address))
mem: ((1 list-address)): 11822 <= 3470
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3470 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11823 <= 3470
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3470
run: init-file/init-board/main 6: 3470 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11476 <= 3470
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
run: init-file/init-board/main 7: 11507 => ((6 square-address))
mem: ((6 square-address)): 11477 <= 11507
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3471 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11507 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3470
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11851 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: list-next/init-file/init-board/main 1: 3470 => ((1 list-address))
mem: ((1 list-address)): 11853 <= 3470
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3472 list-address) (raw)) => 3535
run: list-next/init-file/init-board/main 2: 3535 => ((2 list-address))
mem: ((2 list-address)): 11854 <= 3535
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3535
run: init-file/init-board/main 9: 3535 => ((1 list-address))
mem: ((1 list-address)): 11472 <= 3535
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 11474 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11475 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3535
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11882 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: list-value-address/init-file/init-board/main 1: 3535 => ((1 list-address))
mem: ((1 list-address)): 11884 <= 3535
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3535 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11885 <= 3535
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3535
run: init-file/init-board/main 6: 3535 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11476 <= 3535
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
run: init-file/init-board/main 7: 11508 => ((6 square-address))
mem: ((6 square-address)): 11477 <= 11508
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3536 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11508 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3535
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11913 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: list-next/init-file/init-board/main 1: 3535 => ((1 list-address))
mem: ((1 list-address)): 11915 <= 3535
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3537 list-address) (raw)) => 3600
run: list-next/init-file/init-board/main 2: 3600 => ((2 list-address))
mem: ((2 list-address)): 11916 <= 3600
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3600
run: init-file/init-board/main 9: 3600 => ((1 list-address))
mem: ((1 list-address)): 11472 <= 3600
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 11474 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11475 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3600
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11944 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: list-value-address/init-file/init-board/main 1: 3600 => ((1 list-address))
mem: ((1 list-address)): 11946 <= 3600
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3600 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11947 <= 3600
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3600
run: init-file/init-board/main 6: 3600 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11476 <= 3600
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
run: init-file/init-board/main 7: 11509 => ((6 square-address))
mem: ((6 square-address)): 11477 <= 11509
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3601 location) (raw)) => k
run: init-file/init-board/main 8: #\k => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11509 <= #\k
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3600
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11975 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: list-next/init-file/init-board/main 1: 3600 => ((1 list-address))
mem: ((1 list-address)): 11977 <= 3600
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3602 list-address) (raw)) => 3665
run: list-next/init-file/init-board/main 2: 3665 => ((2 list-address))
mem: ((2 list-address)): 11978 <= 3665
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3665
run: init-file/init-board/main 9: 3665 => ((1 list-address))
mem: ((1 list-address)): 11472 <= 3665
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 11474 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 11475 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 11501
mem: ((1 list-address)) => 3665
run: init-board/main 11: 11501 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9322 <= 11501
run: init-board/main 11: 3665 => ((6 list-address))
mem: ((6 list-address)): 5263 <= 3665
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 4
run: init-board/main 12: 5 => ((5 integer))
mem: ((5 integer)): 5262 <= 5
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 5
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5264 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 5
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
run: init-board/main 10: 9323 => ((8 file-address-address))
mem: ((8 file-address-address)): 5265 <= 9323
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 3665
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 12006 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: init-file/init-board/main 1: 3665 => ((1 list-address))
mem: ((1 list-address)): 12008 <= 3665
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 12037 => ((2 file-address))
mem: ((2 file-address)): 12009 <= 12037
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 12010 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12011 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3665
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12046 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: list-value-address/init-file/init-board/main 1: 3665 => ((1 list-address))
mem: ((1 list-address)): 12048 <= 3665
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3665 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12049 <= 3665
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3665
run: init-file/init-board/main 6: 3665 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12012 <= 3665
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
run: init-file/init-board/main 7: 12038 => ((6 square-address))
mem: ((6 square-address)): 12013 <= 12038
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3666 location) (raw)) => B
run: init-file/init-board/main 8: #\B => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12038 <= #\B
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3665
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12077 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: list-next/init-file/init-board/main 1: 3665 => ((1 list-address))
mem: ((1 list-address)): 12079 <= 3665
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3667 list-address) (raw)) => 3730
run: list-next/init-file/init-board/main 2: 3730 => ((2 list-address))
mem: ((2 list-address)): 12080 <= 3730
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3730
run: init-file/init-board/main 9: 3730 => ((1 list-address))
mem: ((1 list-address)): 12008 <= 3730
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 12010 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12011 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3730
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12108 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: list-value-address/init-file/init-board/main 1: 3730 => ((1 list-address))
mem: ((1 list-address)): 12110 <= 3730
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3730 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12111 <= 3730
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3730
run: init-file/init-board/main 6: 3730 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12012 <= 3730
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
run: init-file/init-board/main 7: 12039 => ((6 square-address))
mem: ((6 square-address)): 12013 <= 12039
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3731 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12039 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3730
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12139 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: list-next/init-file/init-board/main 1: 3730 => ((1 list-address))
mem: ((1 list-address)): 12141 <= 3730
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3732 list-address) (raw)) => 3795
run: list-next/init-file/init-board/main 2: 3795 => ((2 list-address))
mem: ((2 list-address)): 12142 <= 3795
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3795
run: init-file/init-board/main 9: 3795 => ((1 list-address))
mem: ((1 list-address)): 12008 <= 3795
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 12010 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12011 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3795
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12170 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: list-value-address/init-file/init-board/main 1: 3795 => ((1 list-address))
mem: ((1 list-address)): 12172 <= 3795
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3795 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12173 <= 3795
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3795
run: init-file/init-board/main 6: 3795 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12012 <= 3795
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
run: init-file/init-board/main 7: 12040 => ((6 square-address))
mem: ((6 square-address)): 12013 <= 12040
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3796 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12040 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3795
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12201 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: list-next/init-file/init-board/main 1: 3795 => ((1 list-address))
mem: ((1 list-address)): 12203 <= 3795
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3797 list-address) (raw)) => 3860
run: list-next/init-file/init-board/main 2: 3860 => ((2 list-address))
mem: ((2 list-address)): 12204 <= 3860
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3860
run: init-file/init-board/main 9: 3860 => ((1 list-address))
mem: ((1 list-address)): 12008 <= 3860
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 12010 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12011 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3860
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12232 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: list-value-address/init-file/init-board/main 1: 3860 => ((1 list-address))
mem: ((1 list-address)): 12234 <= 3860
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3860 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12235 <= 3860
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3860
run: init-file/init-board/main 6: 3860 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12012 <= 3860
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
run: init-file/init-board/main 7: 12041 => ((6 square-address))
mem: ((6 square-address)): 12013 <= 12041
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3861 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12041 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3860
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12263 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: list-next/init-file/init-board/main 1: 3860 => ((1 list-address))
mem: ((1 list-address)): 12265 <= 3860
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3862 list-address) (raw)) => 3925
run: list-next/init-file/init-board/main 2: 3925 => ((2 list-address))
mem: ((2 list-address)): 12266 <= 3925
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3925
run: init-file/init-board/main 9: 3925 => ((1 list-address))
mem: ((1 list-address)): 12008 <= 3925
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 12010 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12011 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3925
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12294 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: list-value-address/init-file/init-board/main 1: 3925 => ((1 list-address))
mem: ((1 list-address)): 12296 <= 3925
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3925 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12297 <= 3925
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3925
run: init-file/init-board/main 6: 3925 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12012 <= 3925
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
run: init-file/init-board/main 7: 12042 => ((6 square-address))
mem: ((6 square-address)): 12013 <= 12042
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3926 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12042 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3925
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12325 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: list-next/init-file/init-board/main 1: 3925 => ((1 list-address))
mem: ((1 list-address)): 12327 <= 3925
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3927 list-address) (raw)) => 3990
run: list-next/init-file/init-board/main 2: 3990 => ((2 list-address))
mem: ((2 list-address)): 12328 <= 3990
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3990
run: init-file/init-board/main 9: 3990 => ((1 list-address))
mem: ((1 list-address)): 12008 <= 3990
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 12010 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12011 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3990
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12356 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: list-value-address/init-file/init-board/main 1: 3990 => ((1 list-address))
mem: ((1 list-address)): 12358 <= 3990
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3990 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12359 <= 3990
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3990
run: init-file/init-board/main 6: 3990 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12012 <= 3990
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
run: init-file/init-board/main 7: 12043 => ((6 square-address))
mem: ((6 square-address)): 12013 <= 12043
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3991 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12043 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3990
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12387 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: list-next/init-file/init-board/main 1: 3990 => ((1 list-address))
mem: ((1 list-address)): 12389 <= 3990
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3992 list-address) (raw)) => 4055
run: list-next/init-file/init-board/main 2: 4055 => ((2 list-address))
mem: ((2 list-address)): 12390 <= 4055
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4055
run: init-file/init-board/main 9: 4055 => ((1 list-address))
mem: ((1 list-address)): 12008 <= 4055
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 12010 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12011 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4055
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12418 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: list-value-address/init-file/init-board/main 1: 4055 => ((1 list-address))
mem: ((1 list-address)): 12420 <= 4055
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4055 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12421 <= 4055
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4055
run: init-file/init-board/main 6: 4055 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12012 <= 4055
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
run: init-file/init-board/main 7: 12044 => ((6 square-address))
mem: ((6 square-address)): 12013 <= 12044
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4056 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12044 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4055
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12449 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: list-next/init-file/init-board/main 1: 4055 => ((1 list-address))
mem: ((1 list-address)): 12451 <= 4055
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4057 list-address) (raw)) => 4120
run: list-next/init-file/init-board/main 2: 4120 => ((2 list-address))
mem: ((2 list-address)): 12452 <= 4120
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4120
run: init-file/init-board/main 9: 4120 => ((1 list-address))
mem: ((1 list-address)): 12008 <= 4120
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 12010 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12011 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4120
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12480 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: list-value-address/init-file/init-board/main 1: 4120 => ((1 list-address))
mem: ((1 list-address)): 12482 <= 4120
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4120 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12483 <= 4120
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4120
run: init-file/init-board/main 6: 4120 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12012 <= 4120
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
run: init-file/init-board/main 7: 12045 => ((6 square-address))
mem: ((6 square-address)): 12013 <= 12045
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4121 location) (raw)) => b
run: init-file/init-board/main 8: #\b => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12045 <= #\b
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4120
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12511 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: list-next/init-file/init-board/main 1: 4120 => ((1 list-address))
mem: ((1 list-address)): 12513 <= 4120
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4122 list-address) (raw)) => 4185
run: list-next/init-file/init-board/main 2: 4185 => ((2 list-address))
mem: ((2 list-address)): 12514 <= 4185
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4185
run: init-file/init-board/main 9: 4185 => ((1 list-address))
mem: ((1 list-address)): 12008 <= 4185
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 12010 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 12011 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 12037
mem: ((1 list-address)) => 4185
run: init-board/main 11: 12037 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9323 <= 12037
run: init-board/main 11: 4185 => ((6 list-address))
mem: ((6 list-address)): 5263 <= 4185
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 5
run: init-board/main 12: 6 => ((5 integer))
mem: ((5 integer)): 5262 <= 6
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 6
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5264 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 6
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
run: init-board/main 10: 9324 => ((8 file-address-address))
mem: ((8 file-address-address)): 5265 <= 9324
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 4185
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 12542 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: init-file/init-board/main 1: 4185 => ((1 list-address))
mem: ((1 list-address)): 12544 <= 4185
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 12573 => ((2 file-address))
mem: ((2 file-address)): 12545 <= 12573
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 12546 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12547 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4185
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12582 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: list-value-address/init-file/init-board/main 1: 4185 => ((1 list-address))
mem: ((1 list-address)): 12584 <= 4185
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4185 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12585 <= 4185
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4185
run: init-file/init-board/main 6: 4185 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12548 <= 4185
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
run: init-file/init-board/main 7: 12574 => ((6 square-address))
mem: ((6 square-address)): 12549 <= 12574
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4186 location) (raw)) => N
run: init-file/init-board/main 8: #\N => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12574 <= #\N
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4185
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12613 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: list-next/init-file/init-board/main 1: 4185 => ((1 list-address))
mem: ((1 list-address)): 12615 <= 4185
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4187 list-address) (raw)) => 4250
run: list-next/init-file/init-board/main 2: 4250 => ((2 list-address))
mem: ((2 list-address)): 12616 <= 4250
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4250
run: init-file/init-board/main 9: 4250 => ((1 list-address))
mem: ((1 list-address)): 12544 <= 4250
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 12546 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12547 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4250
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12644 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: list-value-address/init-file/init-board/main 1: 4250 => ((1 list-address))
mem: ((1 list-address)): 12646 <= 4250
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4250 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12647 <= 4250
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4250
run: init-file/init-board/main 6: 4250 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12548 <= 4250
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
run: init-file/init-board/main 7: 12575 => ((6 square-address))
mem: ((6 square-address)): 12549 <= 12575
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4251 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12575 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4250
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12675 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: list-next/init-file/init-board/main 1: 4250 => ((1 list-address))
mem: ((1 list-address)): 12677 <= 4250
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4252 list-address) (raw)) => 4315
run: list-next/init-file/init-board/main 2: 4315 => ((2 list-address))
mem: ((2 list-address)): 12678 <= 4315
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4315
run: init-file/init-board/main 9: 4315 => ((1 list-address))
mem: ((1 list-address)): 12544 <= 4315
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 12546 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12547 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4315
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12706 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: list-value-address/init-file/init-board/main 1: 4315 => ((1 list-address))
mem: ((1 list-address)): 12708 <= 4315
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4315 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12709 <= 4315
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4315
run: init-file/init-board/main 6: 4315 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12548 <= 4315
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
run: init-file/init-board/main 7: 12576 => ((6 square-address))
mem: ((6 square-address)): 12549 <= 12576
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4316 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12576 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4315
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12737 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: list-next/init-file/init-board/main 1: 4315 => ((1 list-address))
mem: ((1 list-address)): 12739 <= 4315
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4317 list-address) (raw)) => 4380
run: list-next/init-file/init-board/main 2: 4380 => ((2 list-address))
mem: ((2 list-address)): 12740 <= 4380
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4380
run: init-file/init-board/main 9: 4380 => ((1 list-address))
mem: ((1 list-address)): 12544 <= 4380
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 12546 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12547 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4380
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12768 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: list-value-address/init-file/init-board/main 1: 4380 => ((1 list-address))
mem: ((1 list-address)): 12770 <= 4380
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4380 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12771 <= 4380
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4380
run: init-file/init-board/main 6: 4380 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12548 <= 4380
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
run: init-file/init-board/main 7: 12577 => ((6 square-address))
mem: ((6 square-address)): 12549 <= 12577
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4381 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12577 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4380
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12799 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: list-next/init-file/init-board/main 1: 4380 => ((1 list-address))
mem: ((1 list-address)): 12801 <= 4380
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4382 list-address) (raw)) => 4445
run: list-next/init-file/init-board/main 2: 4445 => ((2 list-address))
mem: ((2 list-address)): 12802 <= 4445
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4445
run: init-file/init-board/main 9: 4445 => ((1 list-address))
mem: ((1 list-address)): 12544 <= 4445
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 12546 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12547 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4445
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12830 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: list-value-address/init-file/init-board/main 1: 4445 => ((1 list-address))
mem: ((1 list-address)): 12832 <= 4445
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4445 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12833 <= 4445
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4445
run: init-file/init-board/main 6: 4445 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12548 <= 4445
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
run: init-file/init-board/main 7: 12578 => ((6 square-address))
mem: ((6 square-address)): 12549 <= 12578
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4446 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12578 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4445
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12861 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: list-next/init-file/init-board/main 1: 4445 => ((1 list-address))
mem: ((1 list-address)): 12863 <= 4445
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4447 list-address) (raw)) => 4510
run: list-next/init-file/init-board/main 2: 4510 => ((2 list-address))
mem: ((2 list-address)): 12864 <= 4510
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4510
run: init-file/init-board/main 9: 4510 => ((1 list-address))
mem: ((1 list-address)): 12544 <= 4510
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 12546 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12547 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4510
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12892 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: list-value-address/init-file/init-board/main 1: 4510 => ((1 list-address))
mem: ((1 list-address)): 12894 <= 4510
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4510 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12895 <= 4510
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4510
run: init-file/init-board/main 6: 4510 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12548 <= 4510
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
run: init-file/init-board/main 7: 12579 => ((6 square-address))
mem: ((6 square-address)): 12549 <= 12579
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4511 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12579 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4510
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12923 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: list-next/init-file/init-board/main 1: 4510 => ((1 list-address))
mem: ((1 list-address)): 12925 <= 4510
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4512 list-address) (raw)) => 4575
run: list-next/init-file/init-board/main 2: 4575 => ((2 list-address))
mem: ((2 list-address)): 12926 <= 4575
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4575
run: init-file/init-board/main 9: 4575 => ((1 list-address))
mem: ((1 list-address)): 12544 <= 4575
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 12546 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12547 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4575
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12954 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: list-value-address/init-file/init-board/main 1: 4575 => ((1 list-address))
mem: ((1 list-address)): 12956 <= 4575
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4575 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12957 <= 4575
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4575
run: init-file/init-board/main 6: 4575 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12548 <= 4575
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
run: init-file/init-board/main 7: 12580 => ((6 square-address))
mem: ((6 square-address)): 12549 <= 12580
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4576 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12580 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4575
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12985 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: list-next/init-file/init-board/main 1: 4575 => ((1 list-address))
mem: ((1 list-address)): 12987 <= 4575
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4577 list-address) (raw)) => 4640
run: list-next/init-file/init-board/main 2: 4640 => ((2 list-address))
mem: ((2 list-address)): 12988 <= 4640
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4640
run: init-file/init-board/main 9: 4640 => ((1 list-address))
mem: ((1 list-address)): 12544 <= 4640
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 12546 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12547 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4640
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13016 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: list-value-address/init-file/init-board/main 1: 4640 => ((1 list-address))
mem: ((1 list-address)): 13018 <= 4640
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4640 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13019 <= 4640
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4640
run: init-file/init-board/main 6: 4640 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12548 <= 4640
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
run: init-file/init-board/main 7: 12581 => ((6 square-address))
mem: ((6 square-address)): 12549 <= 12581
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4641 location) (raw)) => n
run: init-file/init-board/main 8: #\n => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12581 <= #\n
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4640
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13047 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: list-next/init-file/init-board/main 1: 4640 => ((1 list-address))
mem: ((1 list-address)): 13049 <= 4640
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4642 list-address) (raw)) => 4705
run: list-next/init-file/init-board/main 2: 4705 => ((2 list-address))
mem: ((2 list-address)): 13050 <= 4705
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4705
run: init-file/init-board/main 9: 4705 => ((1 list-address))
mem: ((1 list-address)): 12544 <= 4705
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 12546 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 12547 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 12573
mem: ((1 list-address)) => 4705
run: init-board/main 11: 12573 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9324 <= 12573
run: init-board/main 11: 4705 => ((6 list-address))
mem: ((6 list-address)): 5263 <= 4705
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 6
run: init-board/main 12: 7 => ((5 integer))
mem: ((5 integer)): 5262 <= 7
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 7
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5264 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 7
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
run: init-board/main 10: 9325 => ((8 file-address-address))
mem: ((8 file-address-address)): 5265 <= 9325
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 4705
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 13078 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: init-file/init-board/main 1: 4705 => ((1 list-address))
mem: ((1 list-address)): 13080 <= 4705
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 13109 => ((2 file-address))
mem: ((2 file-address)): 13081 <= 13109
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 13082 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13083 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4705
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13118 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: list-value-address/init-file/init-board/main 1: 4705 => ((1 list-address))
mem: ((1 list-address)): 13120 <= 4705
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4705 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13121 <= 4705
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4705
run: init-file/init-board/main 6: 4705 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13084 <= 4705
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
run: init-file/init-board/main 7: 13110 => ((6 square-address))
mem: ((6 square-address)): 13085 <= 13110
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4706 location) (raw)) => R
run: init-file/init-board/main 8: #\R => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13110 <= #\R
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4705
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13149 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: list-next/init-file/init-board/main 1: 4705 => ((1 list-address))
mem: ((1 list-address)): 13151 <= 4705
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4707 list-address) (raw)) => 4770
run: list-next/init-file/init-board/main 2: 4770 => ((2 list-address))
mem: ((2 list-address)): 13152 <= 4770
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4770
run: init-file/init-board/main 9: 4770 => ((1 list-address))
mem: ((1 list-address)): 13080 <= 4770
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 13082 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13083 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4770
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13180 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: list-value-address/init-file/init-board/main 1: 4770 => ((1 list-address))
mem: ((1 list-address)): 13182 <= 4770
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4770 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13183 <= 4770
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4770
run: init-file/init-board/main 6: 4770 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13084 <= 4770
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
run: init-file/init-board/main 7: 13111 => ((6 square-address))
mem: ((6 square-address)): 13085 <= 13111
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4771 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13111 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4770
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13211 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: list-next/init-file/init-board/main 1: 4770 => ((1 list-address))
mem: ((1 list-address)): 13213 <= 4770
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4772 list-address) (raw)) => 4835
run: list-next/init-file/init-board/main 2: 4835 => ((2 list-address))
mem: ((2 list-address)): 13214 <= 4835
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4835
run: init-file/init-board/main 9: 4835 => ((1 list-address))
mem: ((1 list-address)): 13080 <= 4835
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 13082 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13083 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4835
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13242 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: list-value-address/init-file/init-board/main 1: 4835 => ((1 list-address))
mem: ((1 list-address)): 13244 <= 4835
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4835 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13245 <= 4835
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4835
run: init-file/init-board/main 6: 4835 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13084 <= 4835
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
run: init-file/init-board/main 7: 13112 => ((6 square-address))
mem: ((6 square-address)): 13085 <= 13112
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4836 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13112 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4835
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13273 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: list-next/init-file/init-board/main 1: 4835 => ((1 list-address))
mem: ((1 list-address)): 13275 <= 4835
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4837 list-address) (raw)) => 4900
run: list-next/init-file/init-board/main 2: 4900 => ((2 list-address))
mem: ((2 list-address)): 13276 <= 4900
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4900
run: init-file/init-board/main 9: 4900 => ((1 list-address))
mem: ((1 list-address)): 13080 <= 4900
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 13082 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13083 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4900
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13304 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: list-value-address/init-file/init-board/main 1: 4900 => ((1 list-address))
mem: ((1 list-address)): 13306 <= 4900
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4900 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13307 <= 4900
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4900
run: init-file/init-board/main 6: 4900 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13084 <= 4900
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
run: init-file/init-board/main 7: 13113 => ((6 square-address))
mem: ((6 square-address)): 13085 <= 13113
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4901 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13113 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4900
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13335 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: list-next/init-file/init-board/main 1: 4900 => ((1 list-address))
mem: ((1 list-address)): 13337 <= 4900
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4902 list-address) (raw)) => 4965
run: list-next/init-file/init-board/main 2: 4965 => ((2 list-address))
mem: ((2 list-address)): 13338 <= 4965
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4965
run: init-file/init-board/main 9: 4965 => ((1 list-address))
mem: ((1 list-address)): 13080 <= 4965
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 13082 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13083 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4965
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13366 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: list-value-address/init-file/init-board/main 1: 4965 => ((1 list-address))
mem: ((1 list-address)): 13368 <= 4965
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4965 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13369 <= 4965
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4965
run: init-file/init-board/main 6: 4965 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13084 <= 4965
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
run: init-file/init-board/main 7: 13114 => ((6 square-address))
mem: ((6 square-address)): 13085 <= 13114
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4966 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13114 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4965
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13397 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: list-next/init-file/init-board/main 1: 4965 => ((1 list-address))
mem: ((1 list-address)): 13399 <= 4965
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4967 list-address) (raw)) => 5030
run: list-next/init-file/init-board/main 2: 5030 => ((2 list-address))
mem: ((2 list-address)): 13400 <= 5030
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5030
run: init-file/init-board/main 9: 5030 => ((1 list-address))
mem: ((1 list-address)): 13080 <= 5030
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 13082 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13083 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5030
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13428 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: list-value-address/init-file/init-board/main 1: 5030 => ((1 list-address))
mem: ((1 list-address)): 13430 <= 5030
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5030 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13431 <= 5030
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5030
run: init-file/init-board/main 6: 5030 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13084 <= 5030
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
run: init-file/init-board/main 7: 13115 => ((6 square-address))
mem: ((6 square-address)): 13085 <= 13115
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5031 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13115 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5030
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13459 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: list-next/init-file/init-board/main 1: 5030 => ((1 list-address))
mem: ((1 list-address)): 13461 <= 5030
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5032 list-address) (raw)) => 5095
run: list-next/init-file/init-board/main 2: 5095 => ((2 list-address))
mem: ((2 list-address)): 13462 <= 5095
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5095
run: init-file/init-board/main 9: 5095 => ((1 list-address))
mem: ((1 list-address)): 13080 <= 5095
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 13082 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13083 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5095
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13490 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: list-value-address/init-file/init-board/main 1: 5095 => ((1 list-address))
mem: ((1 list-address)): 13492 <= 5095
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5095 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13493 <= 5095
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5095
run: init-file/init-board/main 6: 5095 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13084 <= 5095
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
run: init-file/init-board/main 7: 13116 => ((6 square-address))
mem: ((6 square-address)): 13085 <= 13116
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5096 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13116 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5095
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13521 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: list-next/init-file/init-board/main 1: 5095 => ((1 list-address))
mem: ((1 list-address)): 13523 <= 5095
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5097 list-address) (raw)) => 5160
run: list-next/init-file/init-board/main 2: 5160 => ((2 list-address))
mem: ((2 list-address)): 13524 <= 5160
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5160
run: init-file/init-board/main 9: 5160 => ((1 list-address))
mem: ((1 list-address)): 13080 <= 5160
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 13082 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13083 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5160
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13552 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: list-value-address/init-file/init-board/main 1: 5160 => ((1 list-address))
mem: ((1 list-address)): 13554 <= 5160
schedule: scheduling list-value-address/init-file/init-board/main for further processing
schedule: list-value-address/init-file/init-board/main
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5160 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13555 <= 5160
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5160
run: init-file/init-board/main 6: 5160 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13084 <= 5160
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
run: init-file/init-board/main 7: 13117 => ((6 square-address))
mem: ((6 square-address)): 13085 <= 13117
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5161 location) (raw)) => r
run: init-file/init-board/main 8: #\r => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13117 <= #\r
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5160
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13583 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: list-next/init-file/init-board/main 1: 5160 => ((1 list-address))
mem: ((1 list-address)): 13585 <= 5160
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5162 list-address) (raw)) => nil
run: list-next/init-file/init-board/main 2: nil => ((2 list-address))
mem: ((2 list-address)): 13586 <= nil
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => nil
run: init-file/init-board/main 9: nil => ((1 list-address))
mem: ((1 list-address)): 13080 <= nil
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 13082 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 13083 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 13109
mem: ((1 list-address)) => nil
run: init-board/main 11: 13109 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9325 <= 13109
run: init-board/main 11: nil => ((6 list-address))
mem: ((6 list-address)): 5263 <= nil
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 7
run: init-board/main 12: 8 => ((5 integer))
mem: ((5 integer)): 5262 <= 8
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 8
run: init-board/main 8: t => ((7 boolean))
mem: ((7 boolean)): 5264 <= t
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => t
run: init-board/main 14: (((reply)) ((4 board-address)))
mem: ((4 board-address)) => 9317
run: main 2: 9317 => ((2 board-address))
mem: ((2 board-address)): 1003 <= 9317
run: main 3: (((3 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
run: init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: init-fake-terminal/main 0: 13614 => ((default-space space-address))
run: init-fake-terminal/main 1: (((1 terminal-address)) <- ((new)) ((terminal literal)))
run: init-fake-terminal/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 13616 <= 13645
run: init-fake-terminal/main 2: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((1 offset)))
run: init-fake-terminal/main 2: 13646 => ((2 integer-address))
mem: ((2 integer-address)): 13617 <= 13646
run: init-fake-terminal/main 3: (((2 integer-address) (deref)) <- ((next-input)))
arg: nil 0 (20 10)
run: init-fake-terminal/main 3: 20 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13646 <= 20
run: init-fake-terminal/main 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((0 offset)))
run: init-fake-terminal/main 4: 13645 => ((3 integer-address))
mem: ((3 integer-address)): 13618 <= 13645
run: init-fake-terminal/main 5: (((3 integer-address) (deref)) <- ((next-input)))
arg: nil 1 (20 10)
run: init-fake-terminal/main 5: 10 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13645 <= 10
run: init-fake-terminal/main 6: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: init-fake-terminal/main 6: 13647 => ((4 integer-address))
mem: ((4 integer-address)): 13619 <= 13647
run: init-fake-terminal/main 7: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 7: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 13647 <= 0
run: init-fake-terminal/main 8: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: init-fake-terminal/main 8: 13648 => ((5 integer-address))
mem: ((5 integer-address)): 13620 <= 13648
run: init-fake-terminal/main 9: (((5 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 9: 0 => ((5 integer-address) (deref))
mem: ((5 integer-address) (deref)): 13648 <= 0
run: init-fake-terminal/main 10: (((6 integer)) <- ((multiply)) ((2 integer-address) (deref)) ((3 integer-address) (deref)))
mem: ((2 integer-address) (deref)) => 20
mem: ((3 integer-address) (deref)) => 10
run: init-fake-terminal/main 10: 200 => ((6 integer))
mem: ((6 integer)): 13621 <= 200
run: init-fake-terminal/main 11: (((7 string-address-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((4 offset)))
run: init-fake-terminal/main 11: 13649 => ((7 string-address-address))
mem: ((7 string-address-address)): 13622 <= 13649
run: init-fake-terminal/main 12: (((7 string-address-address) (deref)) <- ((new)) ((string literal)) ((6 integer)))
mem: ((6 integer)) => 200
run: init-fake-terminal/main 12: 13650 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 13649 <= 13650
run: init-fake-terminal/main 13: (((clear-screen)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: clear-screen/init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: clear-screen/init-fake-terminal/main 0: 13851 => ((default-space space-address))
run: clear-screen/init-fake-terminal/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: clear-screen/init-fake-terminal/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 13853 <= 13645
run: clear-screen/init-fake-terminal/main 2: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: clear-screen/init-fake-terminal/main 3: (((2 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: clear-screen/init-fake-terminal/main 3: 13650 => ((2 string-address))
mem: ((2 string-address)): 13854 <= 13650
run: clear-screen/init-fake-terminal/main 4: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 4: 200 => ((3 integer))
mem: ((3 integer)): 13855 <= 200
run: clear-screen/init-fake-terminal/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: clear-screen/init-fake-terminal/main 5: 0 => ((4 integer))
mem: ((4 integer)): 13856 <= 0
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13651 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13651
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13651 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: clear-screen/init-fake-terminal/main 10: 1 => ((4 integer))
mem: ((4 integer)): 13856 <= 1
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13652 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13652
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13652 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: clear-screen/init-fake-terminal/main 10: 2 => ((4 integer))
mem: ((4 integer)): 13856 <= 2
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13653 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13653
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13653 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: clear-screen/init-fake-terminal/main 10: 3 => ((4 integer))
mem: ((4 integer)): 13856 <= 3
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13654 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13654
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13654 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: clear-screen/init-fake-terminal/main 10: 4 => ((4 integer))
mem: ((4 integer)): 13856 <= 4
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13655 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13655
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13655 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: clear-screen/init-fake-terminal/main 10: 5 => ((4 integer))
mem: ((4 integer)): 13856 <= 5
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13656 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13656
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13656 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: clear-screen/init-fake-terminal/main 10: 6 => ((4 integer))
mem: ((4 integer)): 13856 <= 6
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13657 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13657
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13657 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: clear-screen/init-fake-terminal/main 10: 7 => ((4 integer))
mem: ((4 integer)): 13856 <= 7
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13658 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13658
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13658 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: clear-screen/init-fake-terminal/main 10: 8 => ((4 integer))
mem: ((4 integer)): 13856 <= 8
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13659 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13659
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13659 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: clear-screen/init-fake-terminal/main 10: 9 => ((4 integer))
mem: ((4 integer)): 13856 <= 9
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13660 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13660
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13660 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: clear-screen/init-fake-terminal/main 10: 10 => ((4 integer))
mem: ((4 integer)): 13856 <= 10
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13661 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13661
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13661 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: clear-screen/init-fake-terminal/main 10: 11 => ((4 integer))
mem: ((4 integer)): 13856 <= 11
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13662 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13662
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13662 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: clear-screen/init-fake-terminal/main 10: 12 => ((4 integer))
mem: ((4 integer)): 13856 <= 12
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13663 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13663
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13663 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: clear-screen/init-fake-terminal/main 10: 13 => ((4 integer))
mem: ((4 integer)): 13856 <= 13
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13664 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13664
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13664 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: clear-screen/init-fake-terminal/main 10: 14 => ((4 integer))
mem: ((4 integer)): 13856 <= 14
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13665 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13665
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13665 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: clear-screen/init-fake-terminal/main 10: 15 => ((4 integer))
mem: ((4 integer)): 13856 <= 15
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13666 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13666
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13666 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: clear-screen/init-fake-terminal/main 10: 16 => ((4 integer))
mem: ((4 integer)): 13856 <= 16
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13667 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13667
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13667 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: clear-screen/init-fake-terminal/main 10: 17 => ((4 integer))
mem: ((4 integer)): 13856 <= 17
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13668 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13668
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13668 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: clear-screen/init-fake-terminal/main 10: 18 => ((4 integer))
mem: ((4 integer)): 13856 <= 18
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13669 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13669
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13669 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: clear-screen/init-fake-terminal/main 10: 19 => ((4 integer))
mem: ((4 integer)): 13856 <= 19
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 19
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13670 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13670
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13670 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 19
run: clear-screen/init-fake-terminal/main 10: 20 => ((4 integer))
mem: ((4 integer)): 13856 <= 20
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 20
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 20
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13671 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13671
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13671 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 20
run: clear-screen/init-fake-terminal/main 10: 21 => ((4 integer))
mem: ((4 integer)): 13856 <= 21
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 21
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13672 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13672
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13672 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 21
run: clear-screen/init-fake-terminal/main 10: 22 => ((4 integer))
mem: ((4 integer)): 13856 <= 22
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 22
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 22
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13673 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13673
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13673 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 22
run: clear-screen/init-fake-terminal/main 10: 23 => ((4 integer))
mem: ((4 integer)): 13856 <= 23
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 23
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 23
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13674 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13674
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13674 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 23
run: clear-screen/init-fake-terminal/main 10: 24 => ((4 integer))
mem: ((4 integer)): 13856 <= 24
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 24
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 24
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13675 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13675
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13675 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 24
run: clear-screen/init-fake-terminal/main 10: 25 => ((4 integer))
mem: ((4 integer)): 13856 <= 25
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 25
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 25
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13676 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13676
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13676 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 25
run: clear-screen/init-fake-terminal/main 10: 26 => ((4 integer))
mem: ((4 integer)): 13856 <= 26
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 26
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13677 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13677
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13677 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 26
run: clear-screen/init-fake-terminal/main 10: 27 => ((4 integer))
mem: ((4 integer)): 13856 <= 27
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 27
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 27
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13678 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13678
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13678 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 27
run: clear-screen/init-fake-terminal/main 10: 28 => ((4 integer))
mem: ((4 integer)): 13856 <= 28
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 28
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 28
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13679 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13679
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13679 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 28
run: clear-screen/init-fake-terminal/main 10: 29 => ((4 integer))
mem: ((4 integer)): 13856 <= 29
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 29
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 29
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13680 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13680
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13680 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 29
run: clear-screen/init-fake-terminal/main 10: 30 => ((4 integer))
mem: ((4 integer)): 13856 <= 30
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 30
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 30
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13681 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13681
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13681 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 30
run: clear-screen/init-fake-terminal/main 10: 31 => ((4 integer))
mem: ((4 integer)): 13856 <= 31
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 31
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13682 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13682
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13682 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 31
run: clear-screen/init-fake-terminal/main 10: 32 => ((4 integer))
mem: ((4 integer)): 13856 <= 32
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 32
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 32
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13683 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13683
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13683 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 32
run: clear-screen/init-fake-terminal/main 10: 33 => ((4 integer))
mem: ((4 integer)): 13856 <= 33
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 33
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 33
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13684 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13684
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13684 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 33
run: clear-screen/init-fake-terminal/main 10: 34 => ((4 integer))
mem: ((4 integer)): 13856 <= 34
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 34
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 34
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13685 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13685
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13685 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 34
run: clear-screen/init-fake-terminal/main 10: 35 => ((4 integer))
mem: ((4 integer)): 13856 <= 35
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 35
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 35
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13686 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13686
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13686 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 35
run: clear-screen/init-fake-terminal/main 10: 36 => ((4 integer))
mem: ((4 integer)): 13856 <= 36
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 36
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 36
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13687 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13687
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13687 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 36
run: clear-screen/init-fake-terminal/main 10: 37 => ((4 integer))
mem: ((4 integer)): 13856 <= 37
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 37
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 37
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13688 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13688
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13688 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 37
run: clear-screen/init-fake-terminal/main 10: 38 => ((4 integer))
mem: ((4 integer)): 13856 <= 38
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 38
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 38
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13689 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13689
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13689 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 38
run: clear-screen/init-fake-terminal/main 10: 39 => ((4 integer))
mem: ((4 integer)): 13856 <= 39
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 39
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 39
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13690 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13690
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13690 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 39
run: clear-screen/init-fake-terminal/main 10: 40 => ((4 integer))
mem: ((4 integer)): 13856 <= 40
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 40
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 40
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13691 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13691
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13691 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 40
run: clear-screen/init-fake-terminal/main 10: 41 => ((4 integer))
mem: ((4 integer)): 13856 <= 41
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 41
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 41
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13692 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13692
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13692 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 41
run: clear-screen/init-fake-terminal/main 10: 42 => ((4 integer))
mem: ((4 integer)): 13856 <= 42
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 42
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 42
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13693 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13693
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13693 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 42
run: clear-screen/init-fake-terminal/main 10: 43 => ((4 integer))
mem: ((4 integer)): 13856 <= 43
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 43
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 43
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13694 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13694
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13694 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 43
run: clear-screen/init-fake-terminal/main 10: 44 => ((4 integer))
mem: ((4 integer)): 13856 <= 44
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 44
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13695 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13695
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13695 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 44
run: clear-screen/init-fake-terminal/main 10: 45 => ((4 integer))
mem: ((4 integer)): 13856 <= 45
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 45
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 45
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13696 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13696
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13696 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 45
run: clear-screen/init-fake-terminal/main 10: 46 => ((4 integer))
mem: ((4 integer)): 13856 <= 46
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 46
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 46
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13697 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13697
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13697 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 46
run: clear-screen/init-fake-terminal/main 10: 47 => ((4 integer))
mem: ((4 integer)): 13856 <= 47
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 47
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 47
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13698 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13698
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13698 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 47
run: clear-screen/init-fake-terminal/main 10: 48 => ((4 integer))
mem: ((4 integer)): 13856 <= 48
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 48
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 48
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13699 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13699
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13699 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 48
run: clear-screen/init-fake-terminal/main 10: 49 => ((4 integer))
mem: ((4 integer)): 13856 <= 49
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 49
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13700 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13700
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13700 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 49
run: clear-screen/init-fake-terminal/main 10: 50 => ((4 integer))
mem: ((4 integer)): 13856 <= 50
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 50
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 50
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13701 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13701
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13701 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 50
run: clear-screen/init-fake-terminal/main 10: 51 => ((4 integer))
mem: ((4 integer)): 13856 <= 51
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 51
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 51
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13702 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13702
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13702 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 51
run: clear-screen/init-fake-terminal/main 10: 52 => ((4 integer))
mem: ((4 integer)): 13856 <= 52
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 52
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 52
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13703 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13703
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13703 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 52
run: clear-screen/init-fake-terminal/main 10: 53 => ((4 integer))
mem: ((4 integer)): 13856 <= 53
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 53
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 53
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13704 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13704
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13704 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 53
run: clear-screen/init-fake-terminal/main 10: 54 => ((4 integer))
mem: ((4 integer)): 13856 <= 54
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 54
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13705 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13705
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13705 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 54
run: clear-screen/init-fake-terminal/main 10: 55 => ((4 integer))
mem: ((4 integer)): 13856 <= 55
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 55
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 55
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13706 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13706
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13706 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 55
run: clear-screen/init-fake-terminal/main 10: 56 => ((4 integer))
mem: ((4 integer)): 13856 <= 56
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 56
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 56
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13707 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13707
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13707 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 56
run: clear-screen/init-fake-terminal/main 10: 57 => ((4 integer))
mem: ((4 integer)): 13856 <= 57
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 57
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 57
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13708 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13708
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13708 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 57
run: clear-screen/init-fake-terminal/main 10: 58 => ((4 integer))
mem: ((4 integer)): 13856 <= 58
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 58
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 58
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13709 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13709
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13709 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 58
run: clear-screen/init-fake-terminal/main 10: 59 => ((4 integer))
mem: ((4 integer)): 13856 <= 59
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 59
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 59
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13710 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13710
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13710 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 59
run: clear-screen/init-fake-terminal/main 10: 60 => ((4 integer))
mem: ((4 integer)): 13856 <= 60
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 60
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 60
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13711 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13711
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13711 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 60
run: clear-screen/init-fake-terminal/main 10: 61 => ((4 integer))
mem: ((4 integer)): 13856 <= 61
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 61
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 61
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13712 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13712
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13712 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 61
run: clear-screen/init-fake-terminal/main 10: 62 => ((4 integer))
mem: ((4 integer)): 13856 <= 62
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 62
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 62
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13713 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13713
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13713 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 62
run: clear-screen/init-fake-terminal/main 10: 63 => ((4 integer))
mem: ((4 integer)): 13856 <= 63
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 63
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 63
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13714 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13714
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13714 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 63
run: clear-screen/init-fake-terminal/main 10: 64 => ((4 integer))
mem: ((4 integer)): 13856 <= 64
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 64
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 64
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13715 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13715
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13715 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 64
run: clear-screen/init-fake-terminal/main 10: 65 => ((4 integer))
mem: ((4 integer)): 13856 <= 65
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 65
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 65
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13716 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13716
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13716 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 65
run: clear-screen/init-fake-terminal/main 10: 66 => ((4 integer))
mem: ((4 integer)): 13856 <= 66
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 66
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 66
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13717 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13717
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13717 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 66
run: clear-screen/init-fake-terminal/main 10: 67 => ((4 integer))
mem: ((4 integer)): 13856 <= 67
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 67
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 67
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13718 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13718
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13718 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 67
run: clear-screen/init-fake-terminal/main 10: 68 => ((4 integer))
mem: ((4 integer)): 13856 <= 68
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 68
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 68
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13719 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13719
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13719 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 68
run: clear-screen/init-fake-terminal/main 10: 69 => ((4 integer))
mem: ((4 integer)): 13856 <= 69
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 69
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 69
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13720 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13720
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13720 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 69
run: clear-screen/init-fake-terminal/main 10: 70 => ((4 integer))
mem: ((4 integer)): 13856 <= 70
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 70
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 70
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13721 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13721
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13721 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 70
run: clear-screen/init-fake-terminal/main 10: 71 => ((4 integer))
mem: ((4 integer)): 13856 <= 71
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 71
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 71
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13722 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13722
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13722 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 71
run: clear-screen/init-fake-terminal/main 10: 72 => ((4 integer))
mem: ((4 integer)): 13856 <= 72
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 72
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 72
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13723 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13723
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13723 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 72
run: clear-screen/init-fake-terminal/main 10: 73 => ((4 integer))
mem: ((4 integer)): 13856 <= 73
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 73
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 73
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13724 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13724
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13724 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 73
run: clear-screen/init-fake-terminal/main 10: 74 => ((4 integer))
mem: ((4 integer)): 13856 <= 74
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 74
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 74
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13725 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13725
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13725 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 74
run: clear-screen/init-fake-terminal/main 10: 75 => ((4 integer))
mem: ((4 integer)): 13856 <= 75
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 75
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 75
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13726 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13726
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13726 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 75
run: clear-screen/init-fake-terminal/main 10: 76 => ((4 integer))
mem: ((4 integer)): 13856 <= 76
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 76
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 76
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13727 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13727
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13727 <= #\space
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 76
run: clear-screen/init-fake-terminal/main 10: 77 => ((4 integer))
mem: ((4 integer)): 13856 <= 77
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 77
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 77
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13728 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13728
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13728 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 77
run: clear-screen/init-fake-terminal/main 10: 78 => ((4 integer))
mem: ((4 integer)): 13856 <= 78
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 78
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 78
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13729 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13729
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13729 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 78
run: clear-screen/init-fake-terminal/main 10: 79 => ((4 integer))
mem: ((4 integer)): 13856 <= 79
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 79
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 79
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13730 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13730
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13730 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 79
run: clear-screen/init-fake-terminal/main 10: 80 => ((4 integer))
mem: ((4 integer)): 13856 <= 80
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 80
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 80
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13731 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13731
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13731 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 80
run: clear-screen/init-fake-terminal/main 10: 81 => ((4 integer))
mem: ((4 integer)): 13856 <= 81
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 81
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 81
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13732 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13732
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13732 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 81
run: clear-screen/init-fake-terminal/main 10: 82 => ((4 integer))
mem: ((4 integer)): 13856 <= 82
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 82
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 82
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13733 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13733
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13733 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 82
run: clear-screen/init-fake-terminal/main 10: 83 => ((4 integer))
mem: ((4 integer)): 13856 <= 83
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 83
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 83
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13734 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13734
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13734 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 83
run: clear-screen/init-fake-terminal/main 10: 84 => ((4 integer))
mem: ((4 integer)): 13856 <= 84
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 84
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 84
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13735 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13735
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13735 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 84
run: clear-screen/init-fake-terminal/main 10: 85 => ((4 integer))
mem: ((4 integer)): 13856 <= 85
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 85
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 85
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13736 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13736
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13736 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 85
run: clear-screen/init-fake-terminal/main 10: 86 => ((4 integer))
mem: ((4 integer)): 13856 <= 86
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 86
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 86
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13737 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13737
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13737 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 86
run: clear-screen/init-fake-terminal/main 10: 87 => ((4 integer))
mem: ((4 integer)): 13856 <= 87
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 87
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 87
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13738 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13738
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13738 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 87
run: clear-screen/init-fake-terminal/main 10: 88 => ((4 integer))
mem: ((4 integer)): 13856 <= 88
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 88
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 88
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13739 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13739
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13739 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 88
run: clear-screen/init-fake-terminal/main 10: 89 => ((4 integer))
mem: ((4 integer)): 13856 <= 89
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 89
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 89
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13740 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13740
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13740 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 89
run: clear-screen/init-fake-terminal/main 10: 90 => ((4 integer))
mem: ((4 integer)): 13856 <= 90
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 90
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 90
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13741 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13741
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13741 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 90
run: clear-screen/init-fake-terminal/main 10: 91 => ((4 integer))
mem: ((4 integer)): 13856 <= 91
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 91
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 91
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13742 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13742
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13742 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 91
run: clear-screen/init-fake-terminal/main 10: 92 => ((4 integer))
mem: ((4 integer)): 13856 <= 92
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 92
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 92
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13743 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13743
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13743 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 92
run: clear-screen/init-fake-terminal/main 10: 93 => ((4 integer))
mem: ((4 integer)): 13856 <= 93
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 93
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 93
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13744 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13744
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13744 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 93
run: clear-screen/init-fake-terminal/main 10: 94 => ((4 integer))
mem: ((4 integer)): 13856 <= 94
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 94
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 94
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13745 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13745
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13745 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 94
run: clear-screen/init-fake-terminal/main 10: 95 => ((4 integer))
mem: ((4 integer)): 13856 <= 95
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 95
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 95
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13746 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13746
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13746 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 95
run: clear-screen/init-fake-terminal/main 10: 96 => ((4 integer))
mem: ((4 integer)): 13856 <= 96
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 96
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 96
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13747 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13747
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13747 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 96
run: clear-screen/init-fake-terminal/main 10: 97 => ((4 integer))
mem: ((4 integer)): 13856 <= 97
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 97
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 97
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13748 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13748
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13748 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 97
run: clear-screen/init-fake-terminal/main 10: 98 => ((4 integer))
mem: ((4 integer)): 13856 <= 98
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 98
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 98
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13749 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13749
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13749 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 98
run: clear-screen/init-fake-terminal/main 10: 99 => ((4 integer))
mem: ((4 integer)): 13856 <= 99
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 99
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 99
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13750 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13750
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13750 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 99
run: clear-screen/init-fake-terminal/main 10: 100 => ((4 integer))
mem: ((4 integer)): 13856 <= 100
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 100
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 100
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13751 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13751
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13751 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 100
run: clear-screen/init-fake-terminal/main 10: 101 => ((4 integer))
mem: ((4 integer)): 13856 <= 101
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 101
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 101
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13752 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13752
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13752 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 101
run: clear-screen/init-fake-terminal/main 10: 102 => ((4 integer))
mem: ((4 integer)): 13856 <= 102
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 102
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 102
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13753 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13753
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13753 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 102
run: clear-screen/init-fake-terminal/main 10: 103 => ((4 integer))
mem: ((4 integer)): 13856 <= 103
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 103
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 103
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13754 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13754
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13754 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 103
run: clear-screen/init-fake-terminal/main 10: 104 => ((4 integer))
mem: ((4 integer)): 13856 <= 104
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 104
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 104
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13755 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13755
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13755 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 104
run: clear-screen/init-fake-terminal/main 10: 105 => ((4 integer))
mem: ((4 integer)): 13856 <= 105
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 105
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 105
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13756 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13756
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13756 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 105
run: clear-screen/init-fake-terminal/main 10: 106 => ((4 integer))
mem: ((4 integer)): 13856 <= 106
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 106
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 106
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13757 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13757
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13757 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 106
run: clear-screen/init-fake-terminal/main 10: 107 => ((4 integer))
mem: ((4 integer)): 13856 <= 107
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 107
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 107
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13758 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13758
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13758 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 107
run: clear-screen/init-fake-terminal/main 10: 108 => ((4 integer))
mem: ((4 integer)): 13856 <= 108
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 108
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 108
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13759 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13759
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13759 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 108
run: clear-screen/init-fake-terminal/main 10: 109 => ((4 integer))
mem: ((4 integer)): 13856 <= 109
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 109
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 109
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13760 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13760
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13760 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 109
run: clear-screen/init-fake-terminal/main 10: 110 => ((4 integer))
mem: ((4 integer)): 13856 <= 110
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 110
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 110
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13761 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13761
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13761 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 110
run: clear-screen/init-fake-terminal/main 10: 111 => ((4 integer))
mem: ((4 integer)): 13856 <= 111
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 111
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 111
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13762 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13762
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13762 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 111
run: clear-screen/init-fake-terminal/main 10: 112 => ((4 integer))
mem: ((4 integer)): 13856 <= 112
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 112
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 112
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13763 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13763
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13763 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 112
run: clear-screen/init-fake-terminal/main 10: 113 => ((4 integer))
mem: ((4 integer)): 13856 <= 113
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 113
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 113
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13764 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13764
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13764 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 113
run: clear-screen/init-fake-terminal/main 10: 114 => ((4 integer))
mem: ((4 integer)): 13856 <= 114
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 114
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 114
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13765 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13765
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13765 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 114
run: clear-screen/init-fake-terminal/main 10: 115 => ((4 integer))
mem: ((4 integer)): 13856 <= 115
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 115
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 115
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13766 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13766
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13766 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 115
run: clear-screen/init-fake-terminal/main 10: 116 => ((4 integer))
mem: ((4 integer)): 13856 <= 116
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 116
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 116
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13767 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13767
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13767 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 116
run: clear-screen/init-fake-terminal/main 10: 117 => ((4 integer))
mem: ((4 integer)): 13856 <= 117
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 117
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 117
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13768 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13768
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13768 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 117
run: clear-screen/init-fake-terminal/main 10: 118 => ((4 integer))
mem: ((4 integer)): 13856 <= 118
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 118
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 118
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13769 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13769
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13769 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 118
run: clear-screen/init-fake-terminal/main 10: 119 => ((4 integer))
mem: ((4 integer)): 13856 <= 119
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 119
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 119
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13770 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13770
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13770 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 119
run: clear-screen/init-fake-terminal/main 10: 120 => ((4 integer))
mem: ((4 integer)): 13856 <= 120
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 120
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 120
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13771 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13771
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13771 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 120
run: clear-screen/init-fake-terminal/main 10: 121 => ((4 integer))
mem: ((4 integer)): 13856 <= 121
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 121
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 121
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13772 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13772
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13772 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 121
run: clear-screen/init-fake-terminal/main 10: 122 => ((4 integer))
mem: ((4 integer)): 13856 <= 122
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 122
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 122
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13773 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13773
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13773 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 122
run: clear-screen/init-fake-terminal/main 10: 123 => ((4 integer))
mem: ((4 integer)): 13856 <= 123
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 123
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 123
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13774 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13774
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13774 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 123
run: clear-screen/init-fake-terminal/main 10: 124 => ((4 integer))
mem: ((4 integer)): 13856 <= 124
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 124
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 124
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13775 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13775
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13775 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 124
run: clear-screen/init-fake-terminal/main 10: 125 => ((4 integer))
mem: ((4 integer)): 13856 <= 125
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 125
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 125
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13776 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13776
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13776 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 125
run: clear-screen/init-fake-terminal/main 10: 126 => ((4 integer))
mem: ((4 integer)): 13856 <= 126
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 126
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 126
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13777 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13777
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13777 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 126
run: clear-screen/init-fake-terminal/main 10: 127 => ((4 integer))
mem: ((4 integer)): 13856 <= 127
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 127
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 127
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13778 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13778
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13778 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 127
run: clear-screen/init-fake-terminal/main 10: 128 => ((4 integer))
mem: ((4 integer)): 13856 <= 128
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 128
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13779 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13779
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13779 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 128
run: clear-screen/init-fake-terminal/main 10: 129 => ((4 integer))
mem: ((4 integer)): 13856 <= 129
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 129
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 129
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13780 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13780
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13780 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 129
run: clear-screen/init-fake-terminal/main 10: 130 => ((4 integer))
mem: ((4 integer)): 13856 <= 130
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 130
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 130
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13781 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13781
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13781 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 130
run: clear-screen/init-fake-terminal/main 10: 131 => ((4 integer))
mem: ((4 integer)): 13856 <= 131
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 131
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 131
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13782 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13782
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13782 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 131
run: clear-screen/init-fake-terminal/main 10: 132 => ((4 integer))
mem: ((4 integer)): 13856 <= 132
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 132
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 132
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13783 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13783
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13783 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 132
run: clear-screen/init-fake-terminal/main 10: 133 => ((4 integer))
mem: ((4 integer)): 13856 <= 133
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 133
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 133
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13784 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13784
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13784 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 133
run: clear-screen/init-fake-terminal/main 10: 134 => ((4 integer))
mem: ((4 integer)): 13856 <= 134
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 134
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 134
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13785 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13785
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13785 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 134
run: clear-screen/init-fake-terminal/main 10: 135 => ((4 integer))
mem: ((4 integer)): 13856 <= 135
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 135
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 135
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13786 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13786
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13786 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 135
run: clear-screen/init-fake-terminal/main 10: 136 => ((4 integer))
mem: ((4 integer)): 13856 <= 136
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 136
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 136
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13787 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13787
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13787 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 136
run: clear-screen/init-fake-terminal/main 10: 137 => ((4 integer))
mem: ((4 integer)): 13856 <= 137
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 137
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 137
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13788 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13788
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13788 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 137
run: clear-screen/init-fake-terminal/main 10: 138 => ((4 integer))
mem: ((4 integer)): 13856 <= 138
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 138
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 138
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13789 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13789
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13789 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 138
run: clear-screen/init-fake-terminal/main 10: 139 => ((4 integer))
mem: ((4 integer)): 13856 <= 139
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 139
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 139
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13790 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13790
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13790 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 139
run: clear-screen/init-fake-terminal/main 10: 140 => ((4 integer))
mem: ((4 integer)): 13856 <= 140
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 140
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 140
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13791 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13791
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13791 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 140
run: clear-screen/init-fake-terminal/main 10: 141 => ((4 integer))
mem: ((4 integer)): 13856 <= 141
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 141
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 141
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13792 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13792
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13792 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 141
run: clear-screen/init-fake-terminal/main 10: 142 => ((4 integer))
mem: ((4 integer)): 13856 <= 142
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 142
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 142
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13793 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13793
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13793 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 142
run: clear-screen/init-fake-terminal/main 10: 143 => ((4 integer))
mem: ((4 integer)): 13856 <= 143
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 143
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 143
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13794 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13794
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13794 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 143
run: clear-screen/init-fake-terminal/main 10: 144 => ((4 integer))
mem: ((4 integer)): 13856 <= 144
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 144
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 144
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13795 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13795
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13795 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 144
run: clear-screen/init-fake-terminal/main 10: 145 => ((4 integer))
mem: ((4 integer)): 13856 <= 145
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 145
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 145
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13796 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13796
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13796 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 145
run: clear-screen/init-fake-terminal/main 10: 146 => ((4 integer))
mem: ((4 integer)): 13856 <= 146
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 146
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 146
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13797 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13797
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13797 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 146
run: clear-screen/init-fake-terminal/main 10: 147 => ((4 integer))
mem: ((4 integer)): 13856 <= 147
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 147
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 147
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13798 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13798
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13798 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 147
run: clear-screen/init-fake-terminal/main 10: 148 => ((4 integer))
mem: ((4 integer)): 13856 <= 148
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 148
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 148
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13799 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13799
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13799 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 148
run: clear-screen/init-fake-terminal/main 10: 149 => ((4 integer))
mem: ((4 integer)): 13856 <= 149
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 149
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 149
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13800 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13800
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13800 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 149
run: clear-screen/init-fake-terminal/main 10: 150 => ((4 integer))
mem: ((4 integer)): 13856 <= 150
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 150
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 150
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13801 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13801
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13801 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 150
run: clear-screen/init-fake-terminal/main 10: 151 => ((4 integer))
mem: ((4 integer)): 13856 <= 151
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 151
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 151
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13802 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13802
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13802 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 151
run: clear-screen/init-fake-terminal/main 10: 152 => ((4 integer))
mem: ((4 integer)): 13856 <= 152
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 152
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 152
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13803 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13803
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13803 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 152
run: clear-screen/init-fake-terminal/main 10: 153 => ((4 integer))
mem: ((4 integer)): 13856 <= 153
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 153
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 153
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13804 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13804
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13804 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 153
run: clear-screen/init-fake-terminal/main 10: 154 => ((4 integer))
mem: ((4 integer)): 13856 <= 154
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 154
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 154
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13805 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13805
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13805 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 154
run: clear-screen/init-fake-terminal/main 10: 155 => ((4 integer))
mem: ((4 integer)): 13856 <= 155
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 155
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 155
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13806 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13806
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13806 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 155
run: clear-screen/init-fake-terminal/main 10: 156 => ((4 integer))
mem: ((4 integer)): 13856 <= 156
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 156
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 156
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13807 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13807
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13807 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 156
run: clear-screen/init-fake-terminal/main 10: 157 => ((4 integer))
mem: ((4 integer)): 13856 <= 157
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 157
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 157
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13808 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13808
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13808 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 157
run: clear-screen/init-fake-terminal/main 10: 158 => ((4 integer))
mem: ((4 integer)): 13856 <= 158
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 158
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 158
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13809 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13809
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13809 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 158
run: clear-screen/init-fake-terminal/main 10: 159 => ((4 integer))
mem: ((4 integer)): 13856 <= 159
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 159
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 159
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13810 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13810
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13810 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 159
run: clear-screen/init-fake-terminal/main 10: 160 => ((4 integer))
mem: ((4 integer)): 13856 <= 160
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 160
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 160
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13811 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13811
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13811 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 160
run: clear-screen/init-fake-terminal/main 10: 161 => ((4 integer))
mem: ((4 integer)): 13856 <= 161
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 161
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 161
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13812 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13812
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13812 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 161
run: clear-screen/init-fake-terminal/main 10: 162 => ((4 integer))
mem: ((4 integer)): 13856 <= 162
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 162
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 162
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13813 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13813
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13813 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 162
run: clear-screen/init-fake-terminal/main 10: 163 => ((4 integer))
mem: ((4 integer)): 13856 <= 163
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 163
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 163
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13814 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13814
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13814 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 163
run: clear-screen/init-fake-terminal/main 10: 164 => ((4 integer))
mem: ((4 integer)): 13856 <= 164
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 164
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 164
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13815 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13815
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13815 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 164
run: clear-screen/init-fake-terminal/main 10: 165 => ((4 integer))
mem: ((4 integer)): 13856 <= 165
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 165
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 165
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13816 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13816
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13816 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 165
run: clear-screen/init-fake-terminal/main 10: 166 => ((4 integer))
mem: ((4 integer)): 13856 <= 166
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 166
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 166
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13817 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13817
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13817 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 166
run: clear-screen/init-fake-terminal/main 10: 167 => ((4 integer))
mem: ((4 integer)): 13856 <= 167
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 167
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 167
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13818 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13818
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13818 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 167
run: clear-screen/init-fake-terminal/main 10: 168 => ((4 integer))
mem: ((4 integer)): 13856 <= 168
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 168
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 168
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13819 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13819
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13819 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 168
run: clear-screen/init-fake-terminal/main 10: 169 => ((4 integer))
mem: ((4 integer)): 13856 <= 169
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 169
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 169
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13820 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13820
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13820 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 169
run: clear-screen/init-fake-terminal/main 10: 170 => ((4 integer))
mem: ((4 integer)): 13856 <= 170
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 170
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 170
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13821 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13821
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13821 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 170
run: clear-screen/init-fake-terminal/main 10: 171 => ((4 integer))
mem: ((4 integer)): 13856 <= 171
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 171
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 171
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13822 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13822
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13822 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 171
run: clear-screen/init-fake-terminal/main 10: 172 => ((4 integer))
mem: ((4 integer)): 13856 <= 172
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 172
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 172
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13823 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13823
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13823 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 172
run: clear-screen/init-fake-terminal/main 10: 173 => ((4 integer))
mem: ((4 integer)): 13856 <= 173
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 173
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 173
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13824 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13824
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13824 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 173
run: clear-screen/init-fake-terminal/main 10: 174 => ((4 integer))
mem: ((4 integer)): 13856 <= 174
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 174
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 174
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13825 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13825
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13825 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 174
run: clear-screen/init-fake-terminal/main 10: 175 => ((4 integer))
mem: ((4 integer)): 13856 <= 175
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 175
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 175
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13826 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13826
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13826 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 175
run: clear-screen/init-fake-terminal/main 10: 176 => ((4 integer))
mem: ((4 integer)): 13856 <= 176
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 176
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 176
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13827 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13827
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13827 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 176
run: clear-screen/init-fake-terminal/main 10: 177 => ((4 integer))
mem: ((4 integer)): 13856 <= 177
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 177
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 177
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13828 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13828
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13828 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 177
run: clear-screen/init-fake-terminal/main 10: 178 => ((4 integer))
mem: ((4 integer)): 13856 <= 178
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 178
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 178
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13829 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13829
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13829 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 178
run: clear-screen/init-fake-terminal/main 10: 179 => ((4 integer))
mem: ((4 integer)): 13856 <= 179
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 179
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 179
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13830 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13830
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13830 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 179
run: clear-screen/init-fake-terminal/main 10: 180 => ((4 integer))
mem: ((4 integer)): 13856 <= 180
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 180
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 180
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13831 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13831
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13831 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 180
run: clear-screen/init-fake-terminal/main 10: 181 => ((4 integer))
mem: ((4 integer)): 13856 <= 181
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 181
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 181
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13832 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13832
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13832 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 181
run: clear-screen/init-fake-terminal/main 10: 182 => ((4 integer))
mem: ((4 integer)): 13856 <= 182
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 182
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 182
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13833 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13833
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13833 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 182
run: clear-screen/init-fake-terminal/main 10: 183 => ((4 integer))
mem: ((4 integer)): 13856 <= 183
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 183
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 183
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13834 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13834
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13834 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 183
run: clear-screen/init-fake-terminal/main 10: 184 => ((4 integer))
mem: ((4 integer)): 13856 <= 184
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 184
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 184
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13835 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13835
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13835 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 184
run: clear-screen/init-fake-terminal/main 10: 185 => ((4 integer))
mem: ((4 integer)): 13856 <= 185
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 185
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 185
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13836 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13836
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13836 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 185
run: clear-screen/init-fake-terminal/main 10: 186 => ((4 integer))
mem: ((4 integer)): 13856 <= 186
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 186
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 186
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13837 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13837
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13837 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 186
run: clear-screen/init-fake-terminal/main 10: 187 => ((4 integer))
mem: ((4 integer)): 13856 <= 187
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 187
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 187
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13838 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13838
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13838 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 187
run: clear-screen/init-fake-terminal/main 10: 188 => ((4 integer))
mem: ((4 integer)): 13856 <= 188
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 188
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 188
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13839 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13839
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13839 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 188
run: clear-screen/init-fake-terminal/main 10: 189 => ((4 integer))
mem: ((4 integer)): 13856 <= 189
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 189
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 189
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13840 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13840
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13840 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 189
run: clear-screen/init-fake-terminal/main 10: 190 => ((4 integer))
mem: ((4 integer)): 13856 <= 190
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 190
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 190
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13841 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13841
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13841 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 190
run: clear-screen/init-fake-terminal/main 10: 191 => ((4 integer))
mem: ((4 integer)): 13856 <= 191
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 191
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 191
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13842 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13842
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13842 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 191
run: clear-screen/init-fake-terminal/main 10: 192 => ((4 integer))
mem: ((4 integer)): 13856 <= 192
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 192
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 192
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13843 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13843
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13843 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 192
run: clear-screen/init-fake-terminal/main 10: 193 => ((4 integer))
mem: ((4 integer)): 13856 <= 193
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 193
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 193
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13844 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13844
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13844 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 193
run: clear-screen/init-fake-terminal/main 10: 194 => ((4 integer))
mem: ((4 integer)): 13856 <= 194
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 194
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 194
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13845 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13845
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13845 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 194
run: clear-screen/init-fake-terminal/main 10: 195 => ((4 integer))
mem: ((4 integer)): 13856 <= 195
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 195
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 195
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13846 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13846
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13846 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 195
run: clear-screen/init-fake-terminal/main 10: 196 => ((4 integer))
mem: ((4 integer)): 13856 <= 196
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 196
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 196
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13847 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13847
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13847 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 196
run: clear-screen/init-fake-terminal/main 10: 197 => ((4 integer))
mem: ((4 integer)): 13856 <= 197
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 197
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 197
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13848 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13848
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13848 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 197
run: clear-screen/init-fake-terminal/main 10: 198 => ((4 integer))
mem: ((4 integer)): 13856 <= 198
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 198
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 198
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13849 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13849
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13849 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 198
run: clear-screen/init-fake-terminal/main 10: 199 => ((4 integer))
mem: ((4 integer)): 13856 <= 199
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 199
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 13857 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 199
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 13850 => ((1 byte-address))
mem: ((1 byte-address)): 13853 <= 13850
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 13850 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 199
run: clear-screen/init-fake-terminal/main 10: 200 => ((4 integer))
mem: ((4 integer)): 13856 <= 200
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 200
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: t => ((5 boolean))
mem: ((5 boolean)): 13857 <= t
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: clear-screen/init-fake-terminal/main 12: (((reply)))
run: init-fake-terminal/main 14: (((reply)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: main 3: 13645 => ((3 terminal-address))
mem: ((3 terminal-address)): 1004 <= 13645
run: main 4: (((print-board)) ((3 terminal-address)) ((2 board-address)))
mem: ((3 terminal-address)) => 13645
mem: ((2 board-address)) => 9317
run: print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-board/main 0: 13882 => ((default-space space-address))
run: print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 9317)
run: print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 13884 <= 13645
run: print-board/main 2: (((2 board-address)) <- ((next-input)))
arg: nil 1 (13645 9317)
run: print-board/main 2: 9317 => ((2 board-address))
mem: ((2 board-address)): 13885 <= 9317
run: print-board/main 3: (((3 integer)) <- ((copy)) ((7 literal)))
run: print-board/main 3: 7 => ((3 integer))
mem: ((3 integer)): 13886 <= 7
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 7
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: print-board/main 6: 8 => ((5 integer))
mem: ((5 integer)): 13888 <= 8
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 13645
mem: ((5 integer)) => 8
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 13913 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 8)
run: print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 13915 <= 13645
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 8)
run: print-integer/print-board/main 2: 8 => ((2 integer))
mem: ((2 integer)): 13916 <= 8
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 13944 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (8)
run: integer-to-decimal-string/print-integer/print-board/main 1: 8 => ((1 integer))
mem: ((1 integer)): 13946 <= 8
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 13947 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 13949 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 13950 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 13975 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 14006 => ((1 buffer-address))
mem: ((1 buffer-address)): 13977 <= 14006
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 14006 => ((2 integer-address))
mem: ((2 integer-address)): 13978 <= 14006
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 14006 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 14007 => ((3 string-address-address))
mem: ((3 string-address-address)): 13979 <= 14007
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 13980 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 14008 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 14007 <= 14008
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 14006
run: integer-to-decimal-string/print-integer/print-board/main 11: 14006 => ((6 buffer-address))
mem: ((6 buffer-address)): 13951 <= 14006
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 13952 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 13953 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 13954 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 8
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 13946 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 8 => ((10 integer))
mem: ((10 integer)): 13955 <= 8
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 17: 56 => ((11 integer))
mem: ((11 integer)): 13956 <= 56
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 56
run: integer-to-decimal-string/print-integer/print-board/main 18: #\8 => ((12 character))
mem: ((12 character)): 13957 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 14006
mem: ((12 character)) => 8
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 14039 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14006 #\8)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 14006 => ((1 buffer-address))
mem: ((1 buffer-address)): 14041 <= 14006
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (14006 #\8)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\8 => ((2 character))
mem: ((2 character)): 14042 <= #\8
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 14006
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 14070 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14006)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 14006 => ((1 buffer-address))
mem: ((1 buffer-address)): 14072 <= 14006
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((14006 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 14073 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((14007 string-address) (raw)) => 14008
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 14008 => ((3 string-address))
mem: ((3 string-address)): 14074 <= 14008
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((14008 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 14075 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14076 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 14043 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 14006 => ((4 integer-address))
mem: ((4 integer-address)): 14044 <= 14006
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((14007 string-address) (raw)) => 14008
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 14008 => ((5 string-address))
mem: ((5 string-address)): 14045 <= 14008
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((14008 string) (raw))
mem: ((14008 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 14009 => ((6 byte-address))
mem: ((6 byte-address)): 14046 <= 14009
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 8
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\8 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 14009 <= #\8
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 14006 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 14006
run: integer-to-decimal-string/print-integer/print-board/main 19: 14006 => ((6 buffer-address))
mem: ((6 buffer-address)): 13951 <= 14006
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 13954 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((14006 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 13958 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((14007 string-address) (raw)) => 14008
run: integer-to-decimal-string/print-integer/print-board/main 24: 14008 => ((14 string-address))
mem: ((14 string-address)): 13959 <= 14008
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 14101 => ((15 string-address))
mem: ((15 string-address)): 13960 <= 14101
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 13961 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 13962 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 13954 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((14008 string) (raw))
mem: ((14008 integer) (raw)) => 30
mem: ((14009 byte) (raw)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 30: #\8 => ((18 byte))
mem: ((18 byte)): 13963 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((14101 string) (raw))
mem: ((14101 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 14102 => ((19 byte-address))
mem: ((19 byte-address)): 13964 <= 14102
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 32: #\8 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 14102 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 13961 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 13962 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 13954 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 14101
run: print-integer/print-board/main 3: 14101 => ((3 string-address))
mem: ((3 string-address)): 13917 <= 14101
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((3 string-address)) => 14101
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 14103 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 14101)
run: print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14105 <= 13645
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 14101)
run: print-string/print-integer/print-board/main 2: 14101 => ((2 string-address))
mem: ((2 string-address)): 14106 <= 14101
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((14101 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 14107 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 14108 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14109 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((14101 string) (raw))
mem: ((14101 integer) (raw)) => 1
mem: ((14102 byte) (raw)) => 8
run: print-string/print-integer/print-board/main 7: #\8 => ((6 character))
mem: ((6 character)): 14110 <= #\8
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => 8
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 14134 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\8)
run: print-character/print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14136 <= 13645
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\8)
run: print-character/print-string/print-integer/print-board/main 2: #\8 => ((2 character))
mem: ((2 character)): 14137 <= #\8
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\8)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14138 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\8)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14139 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14140 <= 13647
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14141 <= 13648
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14142 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14143 <= 0
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 0 => ((9 integer))
mem: ((9 integer)): 14144 <= 0
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-integer/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14145 <= 13650
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 13651 => ((11 byte-address))
mem: ((11 byte-address)): 14146 <= 13651
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 8
run: print-character/print-string/print-integer/print-board/main 13: #\8 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13651 <= #\8
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 14108 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 14109 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 14165 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 14165
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 14165
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 14169 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 14165)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14171 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 14165)
run: print-string/print-board/main 2: 14165 => ((2 string-address))
mem: ((2 string-address)): 14172 <= 14165
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((14165 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 14173 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 14174 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14175 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((14165 string) (raw))
mem: ((14165 integer) (raw)) => 3
mem: ((14166 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 14176 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 14200 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14202 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14203 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14204 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14205 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14206 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14207 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14208 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14209 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 1 => ((9 integer))
mem: ((9 integer)): 14210 <= 1
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14211 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 1
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13652 => ((11 byte-address))
mem: ((11 byte-address)): 14212 <= 13652
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13652 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 14174 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14175 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((14165 string) (raw))
mem: ((14165 integer) (raw)) => 3
mem: ((14167 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 14176 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 14231 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14233 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 14234 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14235 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14236 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14237 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14238 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14239 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14240 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 2 => ((9 integer))
mem: ((9 integer)): 14241 <= 2
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14242 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 2
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13653 => ((11 byte-address))
mem: ((11 byte-address)): 14243 <= 13653
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13653 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 14174 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14175 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((14165 string) (raw))
mem: ((14165 integer) (raw)) => 3
mem: ((14168 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 14176 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 14262 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14264 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14265 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14266 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14267 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14268 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14269 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14270 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14271 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 3 => ((9 integer))
mem: ((9 integer)): 14272 <= 3
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14273 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 3
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13654 => ((11 byte-address))
mem: ((11 byte-address)): 14274 <= 13654
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13654 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 14174 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 14175 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13890 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9318 file-address) (raw)) => 9357
run: print-board/main 13: 9357 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9357
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
mem: ((9365 square) (raw)) => r
run: print-board/main 14: #\r => ((6 square))
mem: ((6 square)): 13889 <= #\r
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => r
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14293 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\r)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14295 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\r)
run: print-character/print-board/main 2: #\r => ((2 character))
mem: ((2 character)): 14296 <= #\r
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\r)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14297 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\r)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14298 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14299 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14300 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14301 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14302 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 4 => ((9 integer))
mem: ((9 integer)): 14303 <= 4
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14304 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 4
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13655 => ((11 byte-address))
mem: ((11 byte-address)): 14305 <= 13655
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => r
run: print-character/print-board/main 13: #\r => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13655 <= #\r
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14324 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14326 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14327 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14328 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14329 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14330 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14331 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14332 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14333 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 5 => ((9 integer))
mem: ((9 integer)): 14334 <= 5
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14335 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 5
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13656 => ((11 byte-address))
mem: ((11 byte-address)): 14336 <= 13656
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13656 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13890 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9319 file-address) (raw)) => 9893
run: print-board/main 13: 9893 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9893
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
mem: ((9901 square) (raw)) => n
run: print-board/main 14: #\n => ((6 square))
mem: ((6 square)): 13889 <= #\n
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => n
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14355 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\n)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14357 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\n)
run: print-character/print-board/main 2: #\n => ((2 character))
mem: ((2 character)): 14358 <= #\n
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\n)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14359 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\n)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14360 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14361 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14362 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14363 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14364 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 6 => ((9 integer))
mem: ((9 integer)): 14365 <= 6
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14366 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 6
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13657 => ((11 byte-address))
mem: ((11 byte-address)): 14367 <= 13657
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => n
run: print-character/print-board/main 13: #\n => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13657 <= #\n
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14386 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14388 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14389 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14390 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14391 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14392 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14393 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14394 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14395 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 7 => ((9 integer))
mem: ((9 integer)): 14396 <= 7
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14397 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 7
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13658 => ((11 byte-address))
mem: ((11 byte-address)): 14398 <= 13658
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13658 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13890 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9320 file-address) (raw)) => 10429
run: print-board/main 13: 10429 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10429
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
mem: ((10437 square) (raw)) => b
run: print-board/main 14: #\b => ((6 square))
mem: ((6 square)): 13889 <= #\b
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => b
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14417 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\b)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14419 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\b)
run: print-character/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 14420 <= #\b
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\b)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14421 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\b)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14422 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14423 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14424 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14425 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14426 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 8 => ((9 integer))
mem: ((9 integer)): 14427 <= 8
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14428 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 8
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13659 => ((11 byte-address))
mem: ((11 byte-address)): 14429 <= 13659
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13659 <= #\b
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14448 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14450 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14451 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14452 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14453 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14454 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14455 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14456 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14457 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 9 => ((9 integer))
mem: ((9 integer)): 14458 <= 9
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14459 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 9
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13660 => ((11 byte-address))
mem: ((11 byte-address)): 14460 <= 13660
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13660 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13890 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9321 file-address) (raw)) => 10965
run: print-board/main 13: 10965 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10965
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
mem: ((10973 square) (raw)) => q
run: print-board/main 14: #\q => ((6 square))
mem: ((6 square)): 13889 <= #\q
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => q
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14479 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\q)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14481 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\q)
run: print-character/print-board/main 2: #\q => ((2 character))
mem: ((2 character)): 14482 <= #\q
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\q)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14483 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\q)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14484 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14485 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14486 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14487 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14488 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 10 => ((9 integer))
mem: ((9 integer)): 14489 <= 10
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14490 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 10
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13661 => ((11 byte-address))
mem: ((11 byte-address)): 14491 <= 13661
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => q
run: print-character/print-board/main 13: #\q => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13661 <= #\q
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14510 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14512 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14513 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14514 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14515 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14516 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14517 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14518 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14519 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 11 => ((9 integer))
mem: ((9 integer)): 14520 <= 11
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14521 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 11
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13662 => ((11 byte-address))
mem: ((11 byte-address)): 14522 <= 13662
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13662 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13890 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9322 file-address) (raw)) => 11501
run: print-board/main 13: 11501 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 11501
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
mem: ((11509 square) (raw)) => k
run: print-board/main 14: #\k => ((6 square))
mem: ((6 square)): 13889 <= #\k
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => k
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14541 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\k)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14543 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\k)
run: print-character/print-board/main 2: #\k => ((2 character))
mem: ((2 character)): 14544 <= #\k
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\k)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14545 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\k)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14546 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14547 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14548 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14549 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14550 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 12 => ((9 integer))
mem: ((9 integer)): 14551 <= 12
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14552 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 12
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13663 => ((11 byte-address))
mem: ((11 byte-address)): 14553 <= 13663
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => k
run: print-character/print-board/main 13: #\k => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13663 <= #\k
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14572 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14574 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14575 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14576 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14577 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14578 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14579 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14580 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14581 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 13 => ((9 integer))
mem: ((9 integer)): 14582 <= 13
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14583 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 13
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13664 => ((11 byte-address))
mem: ((11 byte-address)): 14584 <= 13664
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13664 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13890 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9323 file-address) (raw)) => 12037
run: print-board/main 13: 12037 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12037
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
mem: ((12045 square) (raw)) => b
run: print-board/main 14: #\b => ((6 square))
mem: ((6 square)): 13889 <= #\b
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => b
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14603 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\b)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14605 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\b)
run: print-character/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 14606 <= #\b
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\b)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14607 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\b)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14608 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14609 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14610 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14611 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14612 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 14 => ((9 integer))
mem: ((9 integer)): 14613 <= 14
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14614 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 14
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13665 => ((11 byte-address))
mem: ((11 byte-address)): 14615 <= 13665
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13665 <= #\b
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14634 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14636 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14637 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14638 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14639 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14640 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14641 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14642 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14643 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 15 => ((9 integer))
mem: ((9 integer)): 14644 <= 15
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14645 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 15
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13666 => ((11 byte-address))
mem: ((11 byte-address)): 14646 <= 13666
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13666 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13890 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9324 file-address) (raw)) => 12573
run: print-board/main 13: 12573 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12573
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
mem: ((12581 square) (raw)) => n
run: print-board/main 14: #\n => ((6 square))
mem: ((6 square)): 13889 <= #\n
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => n
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14665 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\n)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14667 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\n)
run: print-character/print-board/main 2: #\n => ((2 character))
mem: ((2 character)): 14668 <= #\n
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\n)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14669 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\n)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14670 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14671 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14672 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14673 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14674 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 16 => ((9 integer))
mem: ((9 integer)): 14675 <= 16
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14676 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 16
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13667 => ((11 byte-address))
mem: ((11 byte-address)): 14677 <= 13667
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => n
run: print-character/print-board/main 13: #\n => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13667 <= #\n
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14696 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14698 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14699 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14700 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14701 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14702 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14703 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14704 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14705 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 17 => ((9 integer))
mem: ((9 integer)): 14706 <= 17
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14707 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 17
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13668 => ((11 byte-address))
mem: ((11 byte-address)): 14708 <= 13668
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13668 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13890 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9325 file-address) (raw)) => 13109
run: print-board/main 13: 13109 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 13109
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
mem: ((13117 square) (raw)) => r
run: print-board/main 14: #\r => ((6 square))
mem: ((6 square)): 13889 <= #\r
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => r
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14727 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\r)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14729 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\r)
run: print-character/print-board/main 2: #\r => ((2 character))
mem: ((2 character)): 14730 <= #\r
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\r)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14731 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\r)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14732 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14733 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14734 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14735 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14736 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 18 => ((9 integer))
mem: ((9 integer)): 14737 <= 18
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14738 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 18
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13669 => ((11 byte-address))
mem: ((11 byte-address)): 14739 <= 13669
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => r
run: print-character/print-board/main 13: #\r => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13669 <= #\r
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14758 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14760 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14761 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14762 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14763 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 14764 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 14765 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14766 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14767 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 19 => ((9 integer))
mem: ((9 integer)): 14768 <= 19
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 14769 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 19
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13670 => ((11 byte-address))
mem: ((11 byte-address)): 14770 <= 13670
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13670 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13890 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13887 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: print-board/main 19: 6 => ((3 integer))
mem: ((3 integer)): 13886 <= 6
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 14789 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14791 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 14792 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 0
run: cursor-to-next-line/print-board/main 4: 1 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 1
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 14793 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 6
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: print-board/main 6: 7 => ((5 integer))
mem: ((5 integer)): 13888 <= 7
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 13645
mem: ((5 integer)) => 7
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 14820 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 7)
run: print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 14822 <= 13645
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 7)
run: print-integer/print-board/main 2: 7 => ((2 integer))
mem: ((2 integer)): 14823 <= 7
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 14851 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (7)
run: integer-to-decimal-string/print-integer/print-board/main 1: 7 => ((1 integer))
mem: ((1 integer)): 14853 <= 7
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 14854 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 14856 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 14857 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 14882 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 14913 => ((1 buffer-address))
mem: ((1 buffer-address)): 14884 <= 14913
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 14913 => ((2 integer-address))
mem: ((2 integer-address)): 14885 <= 14913
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 14913 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 14914 => ((3 string-address-address))
mem: ((3 string-address-address)): 14886 <= 14914
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 14887 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 14915 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 14914 <= 14915
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 14913
run: integer-to-decimal-string/print-integer/print-board/main 11: 14913 => ((6 buffer-address))
mem: ((6 buffer-address)): 14858 <= 14913
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 14859 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 14860 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 14861 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 7
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 14853 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 7 => ((10 integer))
mem: ((10 integer)): 14862 <= 7
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 17: 55 => ((11 integer))
mem: ((11 integer)): 14863 <= 55
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 55
run: integer-to-decimal-string/print-integer/print-board/main 18: #\7 => ((12 character))
mem: ((12 character)): 14864 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 14913
mem: ((12 character)) => 7
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 14946 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14913 #\7)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 14913 => ((1 buffer-address))
mem: ((1 buffer-address)): 14948 <= 14913
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (14913 #\7)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\7 => ((2 character))
mem: ((2 character)): 14949 <= #\7
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 14913
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 14977 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14913)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 14913 => ((1 buffer-address))
mem: ((1 buffer-address)): 14979 <= 14913
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((14913 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 14980 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((14914 string-address) (raw)) => 14915
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 14915 => ((3 string-address))
mem: ((3 string-address)): 14981 <= 14915
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((14915 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 14982 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14983 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 14950 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 14913 => ((4 integer-address))
mem: ((4 integer-address)): 14951 <= 14913
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((14914 string-address) (raw)) => 14915
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 14915 => ((5 string-address))
mem: ((5 string-address)): 14952 <= 14915
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((14915 string) (raw))
mem: ((14915 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 14916 => ((6 byte-address))
mem: ((6 byte-address)): 14953 <= 14916
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\7 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 14916 <= #\7
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 14913 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 14913
run: integer-to-decimal-string/print-integer/print-board/main 19: 14913 => ((6 buffer-address))
mem: ((6 buffer-address)): 14858 <= 14913
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 14861 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((14913 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 14865 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((14914 string-address) (raw)) => 14915
run: integer-to-decimal-string/print-integer/print-board/main 24: 14915 => ((14 string-address))
mem: ((14 string-address)): 14866 <= 14915
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 15008 => ((15 string-address))
mem: ((15 string-address)): 14867 <= 15008
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 14868 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 14869 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 14861 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((14915 string) (raw))
mem: ((14915 integer) (raw)) => 30
mem: ((14916 byte) (raw)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 30: #\7 => ((18 byte))
mem: ((18 byte)): 14870 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((15008 string) (raw))
mem: ((15008 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 15009 => ((19 byte-address))
mem: ((19 byte-address)): 14871 <= 15009
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 32: #\7 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 15009 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 14868 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 14869 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 14861 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 15008
run: print-integer/print-board/main 3: 15008 => ((3 string-address))
mem: ((3 string-address)): 14824 <= 15008
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((3 string-address)) => 15008
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 15010 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 15008)
run: print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15012 <= 13645
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 15008)
run: print-string/print-integer/print-board/main 2: 15008 => ((2 string-address))
mem: ((2 string-address)): 15013 <= 15008
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((15008 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 15014 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 15015 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15016 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((15008 string) (raw))
mem: ((15008 integer) (raw)) => 1
mem: ((15009 byte) (raw)) => 7
run: print-string/print-integer/print-board/main 7: #\7 => ((6 character))
mem: ((6 character)): 15017 <= #\7
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => 7
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 15041 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\7)
run: print-character/print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15043 <= 13645
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\7)
run: print-character/print-string/print-integer/print-board/main 2: #\7 => ((2 character))
mem: ((2 character)): 15044 <= #\7
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\7)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15045 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\7)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15046 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15047 <= 13647
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15048 <= 13648
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15049 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15050 <= 20
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 20 => ((9 integer))
mem: ((9 integer)): 15051 <= 20
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-integer/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15052 <= 13650
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 20
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 13671 => ((11 byte-address))
mem: ((11 byte-address)): 15053 <= 13671
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7
run: print-character/print-string/print-integer/print-board/main 13: #\7 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13671 <= #\7
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 15015 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 15016 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 15072 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 15072
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 15072
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 15076 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 15072)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15078 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 15072)
run: print-string/print-board/main 2: 15072 => ((2 string-address))
mem: ((2 string-address)): 15079 <= 15072
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((15072 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 15080 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 15081 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15082 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((15072 string) (raw))
mem: ((15072 integer) (raw)) => 3
mem: ((15073 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 15083 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 15107 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15109 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15110 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15111 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15112 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15113 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15114 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15115 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15116 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 21 => ((9 integer))
mem: ((9 integer)): 15117 <= 21
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15118 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 21
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13672 => ((11 byte-address))
mem: ((11 byte-address)): 15119 <= 13672
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13672 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 15081 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15082 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((15072 string) (raw))
mem: ((15072 integer) (raw)) => 3
mem: ((15074 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 15083 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 15138 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15140 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 15141 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15142 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15143 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15144 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15145 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15146 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15147 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 22 => ((9 integer))
mem: ((9 integer)): 15148 <= 22
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15149 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 22
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13673 => ((11 byte-address))
mem: ((11 byte-address)): 15150 <= 13673
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13673 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 15081 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15082 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((15072 string) (raw))
mem: ((15072 integer) (raw)) => 3
mem: ((15075 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 15083 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 15169 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15171 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15172 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15173 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15174 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15175 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15176 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15177 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15178 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 23 => ((9 integer))
mem: ((9 integer)): 15179 <= 23
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15180 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 23
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13674 => ((11 byte-address))
mem: ((11 byte-address)): 15181 <= 13674
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13674 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 15081 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 15082 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13890 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9318 file-address) (raw)) => 9357
run: print-board/main 13: 9357 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9357
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
mem: ((9364 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13889 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15200 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15202 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15203 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15204 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15205 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15206 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15207 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15208 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15209 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 24 => ((9 integer))
mem: ((9 integer)): 15210 <= 24
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15211 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 24
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13675 => ((11 byte-address))
mem: ((11 byte-address)): 15212 <= 13675
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13675 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15231 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15233 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15234 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15235 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15236 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15237 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15238 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15239 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15240 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 25 => ((9 integer))
mem: ((9 integer)): 15241 <= 25
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15242 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 25
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13676 => ((11 byte-address))
mem: ((11 byte-address)): 15243 <= 13676
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13676 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13890 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9319 file-address) (raw)) => 9893
run: print-board/main 13: 9893 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9893
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
mem: ((9900 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13889 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15262 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15264 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15265 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15266 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15267 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15268 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15269 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15270 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15271 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 26 => ((9 integer))
mem: ((9 integer)): 15272 <= 26
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15273 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 26
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13677 => ((11 byte-address))
mem: ((11 byte-address)): 15274 <= 13677
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13677 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15293 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15295 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15296 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15297 <= nil
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15298 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15299 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15300 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15301 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15302 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 27 => ((9 integer))
mem: ((9 integer)): 15303 <= 27
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15304 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 27
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13678 => ((11 byte-address))
mem: ((11 byte-address)): 15305 <= 13678
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13678 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13890 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9320 file-address) (raw)) => 10429
run: print-board/main 13: 10429 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10429
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
mem: ((10436 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13889 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15324 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15326 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15327 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15328 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15329 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15330 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15331 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15332 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15333 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 28 => ((9 integer))
mem: ((9 integer)): 15334 <= 28
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15335 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 28
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13679 => ((11 byte-address))
mem: ((11 byte-address)): 15336 <= 13679
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13679 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15355 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15357 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15358 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15359 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15360 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15361 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15362 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15363 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15364 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 29 => ((9 integer))
mem: ((9 integer)): 15365 <= 29
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15366 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 29
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13680 => ((11 byte-address))
mem: ((11 byte-address)): 15367 <= 13680
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13680 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13890 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9321 file-address) (raw)) => 10965
run: print-board/main 13: 10965 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10965
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
mem: ((10972 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13889 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15386 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15388 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15389 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15390 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15391 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15392 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15393 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15394 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15395 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 30 => ((9 integer))
mem: ((9 integer)): 15396 <= 30
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15397 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 30
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13681 => ((11 byte-address))
mem: ((11 byte-address)): 15398 <= 13681
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13681 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15417 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15419 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15420 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15421 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15422 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15423 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15424 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15425 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15426 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 31 => ((9 integer))
mem: ((9 integer)): 15427 <= 31
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15428 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 31
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13682 => ((11 byte-address))
mem: ((11 byte-address)): 15429 <= 13682
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13682 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13890 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9322 file-address) (raw)) => 11501
run: print-board/main 13: 11501 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 11501
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
mem: ((11508 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13889 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15448 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15450 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15451 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15452 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15453 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15454 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15455 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15456 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15457 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 32 => ((9 integer))
mem: ((9 integer)): 15458 <= 32
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15459 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 32
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13683 => ((11 byte-address))
mem: ((11 byte-address)): 15460 <= 13683
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13683 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15479 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15481 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15482 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15483 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15484 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15485 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15486 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15487 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15488 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 33 => ((9 integer))
mem: ((9 integer)): 15489 <= 33
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15490 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 33
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13684 => ((11 byte-address))
mem: ((11 byte-address)): 15491 <= 13684
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13684 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13890 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9323 file-address) (raw)) => 12037
run: print-board/main 13: 12037 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12037
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
mem: ((12044 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13889 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15510 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15512 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15513 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15514 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15515 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15516 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15517 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15518 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15519 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 34 => ((9 integer))
mem: ((9 integer)): 15520 <= 34
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15521 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 34
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13685 => ((11 byte-address))
mem: ((11 byte-address)): 15522 <= 13685
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13685 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15541 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15543 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15544 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15545 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15546 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15547 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15548 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15549 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15550 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 35 => ((9 integer))
mem: ((9 integer)): 15551 <= 35
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15552 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 35
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13686 => ((11 byte-address))
mem: ((11 byte-address)): 15553 <= 13686
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13686 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13890 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9324 file-address) (raw)) => 12573
run: print-board/main 13: 12573 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12573
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
mem: ((12580 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13889 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15572 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15574 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15575 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15576 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15577 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15578 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15579 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15580 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15581 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 36 => ((9 integer))
mem: ((9 integer)): 15582 <= 36
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15583 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 36
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13687 => ((11 byte-address))
mem: ((11 byte-address)): 15584 <= 13687
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13687 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15603 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15605 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15606 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15607 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15608 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15609 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15610 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15611 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15612 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 37 => ((9 integer))
mem: ((9 integer)): 15613 <= 37
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15614 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 37
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13688 => ((11 byte-address))
mem: ((11 byte-address)): 15615 <= 13688
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13688 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13890 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9325 file-address) (raw)) => 13109
run: print-board/main 13: 13109 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 13109
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
mem: ((13116 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13889 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15634 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15636 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15637 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15638 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15639 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15640 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15641 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15642 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15643 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 38 => ((9 integer))
mem: ((9 integer)): 15644 <= 38
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15645 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 38
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13689 => ((11 byte-address))
mem: ((11 byte-address)): 15646 <= 13689
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13689 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15665 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15667 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15668 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15669 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15670 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15671 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15672 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15673 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15674 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 39 => ((9 integer))
mem: ((9 integer)): 15675 <= 39
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15676 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 39
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13690 => ((11 byte-address))
mem: ((11 byte-address)): 15677 <= 13690
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13690 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13890 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13887 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: print-board/main 19: 5 => ((3 integer))
mem: ((3 integer)): 13886 <= 5
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 15696 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15698 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 15699 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 1
run: cursor-to-next-line/print-board/main 4: 2 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 2
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 15700 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 5
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: print-board/main 6: 6 => ((5 integer))
mem: ((5 integer)): 13888 <= 6
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 13645
mem: ((5 integer)) => 6
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 15727 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 6)
run: print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15729 <= 13645
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 6)
run: print-integer/print-board/main 2: 6 => ((2 integer))
mem: ((2 integer)): 15730 <= 6
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 15758 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (6)
run: integer-to-decimal-string/print-integer/print-board/main 1: 6 => ((1 integer))
mem: ((1 integer)): 15760 <= 6
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 15761 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 15763 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 15764 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 15789 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 15820 => ((1 buffer-address))
mem: ((1 buffer-address)): 15791 <= 15820
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 15820 => ((2 integer-address))
mem: ((2 integer-address)): 15792 <= 15820
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 15820 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 15821 => ((3 string-address-address))
mem: ((3 string-address-address)): 15793 <= 15821
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 15794 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 15822 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 15821 <= 15822
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 15820
run: integer-to-decimal-string/print-integer/print-board/main 11: 15820 => ((6 buffer-address))
mem: ((6 buffer-address)): 15765 <= 15820
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 15766 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 15767 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 15768 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 6
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 15760 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 6 => ((10 integer))
mem: ((10 integer)): 15769 <= 6
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 17: 54 => ((11 integer))
mem: ((11 integer)): 15770 <= 54
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 54
run: integer-to-decimal-string/print-integer/print-board/main 18: #\6 => ((12 character))
mem: ((12 character)): 15771 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 15820
mem: ((12 character)) => 6
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 15853 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (15820 #\6)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 15820 => ((1 buffer-address))
mem: ((1 buffer-address)): 15855 <= 15820
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (15820 #\6)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\6 => ((2 character))
mem: ((2 character)): 15856 <= #\6
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 15820
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 15884 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (15820)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 15820 => ((1 buffer-address))
mem: ((1 buffer-address)): 15886 <= 15820
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((15820 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 15887 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((15821 string-address) (raw)) => 15822
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 15822 => ((3 string-address))
mem: ((3 string-address)): 15888 <= 15822
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((15822 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 15889 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15890 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 15857 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 15820 => ((4 integer-address))
mem: ((4 integer-address)): 15858 <= 15820
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((15821 string-address) (raw)) => 15822
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 15822 => ((5 string-address))
mem: ((5 string-address)): 15859 <= 15822
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((15822 string) (raw))
mem: ((15822 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 15823 => ((6 byte-address))
mem: ((6 byte-address)): 15860 <= 15823
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 6
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\6 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 15823 <= #\6
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 15820 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 15820
run: integer-to-decimal-string/print-integer/print-board/main 19: 15820 => ((6 buffer-address))
mem: ((6 buffer-address)): 15765 <= 15820
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 15768 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((15820 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 15772 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((15821 string-address) (raw)) => 15822
run: integer-to-decimal-string/print-integer/print-board/main 24: 15822 => ((14 string-address))
mem: ((14 string-address)): 15773 <= 15822
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 15915 => ((15 string-address))
mem: ((15 string-address)): 15774 <= 15915
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 15775 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 15776 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 15768 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((15822 string) (raw))
mem: ((15822 integer) (raw)) => 30
mem: ((15823 byte) (raw)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 30: #\6 => ((18 byte))
mem: ((18 byte)): 15777 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((15915 string) (raw))
mem: ((15915 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 15916 => ((19 byte-address))
mem: ((19 byte-address)): 15778 <= 15916
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 32: #\6 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 15916 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 15775 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 15776 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 15768 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 15915
run: print-integer/print-board/main 3: 15915 => ((3 string-address))
mem: ((3 string-address)): 15731 <= 15915
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((3 string-address)) => 15915
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 15917 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 15915)
run: print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15919 <= 13645
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 15915)
run: print-string/print-integer/print-board/main 2: 15915 => ((2 string-address))
mem: ((2 string-address)): 15920 <= 15915
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((15915 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 15921 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 15922 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15923 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((15915 string) (raw))
mem: ((15915 integer) (raw)) => 1
mem: ((15916 byte) (raw)) => 6
run: print-string/print-integer/print-board/main 7: #\6 => ((6 character))
mem: ((6 character)): 15924 <= #\6
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => 6
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 15948 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\6)
run: print-character/print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15950 <= 13645
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\6)
run: print-character/print-string/print-integer/print-board/main 2: #\6 => ((2 character))
mem: ((2 character)): 15951 <= #\6
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\6)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15952 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\6)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15953 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 15954 <= 13647
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 15955 <= 13648
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15956 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 15957 <= 40
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 40 => ((9 integer))
mem: ((9 integer)): 15958 <= 40
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-integer/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 15959 <= 13650
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 40
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 13691 => ((11 byte-address))
mem: ((11 byte-address)): 15960 <= 13691
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 6
run: print-character/print-string/print-integer/print-board/main 13: #\6 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13691 <= #\6
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 15922 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 15923 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 15979 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 15979
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 15979
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 15983 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 15979)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 15985 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 15979)
run: print-string/print-board/main 2: 15979 => ((2 string-address))
mem: ((2 string-address)): 15986 <= 15979
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((15979 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 15987 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 15988 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15989 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((15979 string) (raw))
mem: ((15979 integer) (raw)) => 3
mem: ((15980 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 15990 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16014 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16016 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16017 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16018 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16019 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16020 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16021 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16022 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16023 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 41 => ((9 integer))
mem: ((9 integer)): 16024 <= 41
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16025 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 41
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13692 => ((11 byte-address))
mem: ((11 byte-address)): 16026 <= 13692
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13692 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 15988 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15989 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((15979 string) (raw))
mem: ((15979 integer) (raw)) => 3
mem: ((15981 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 15990 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16045 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16047 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 16048 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16049 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16050 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16051 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16052 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16053 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16054 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 42 => ((9 integer))
mem: ((9 integer)): 16055 <= 42
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16056 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 42
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13693 => ((11 byte-address))
mem: ((11 byte-address)): 16057 <= 13693
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13693 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 15988 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15989 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((15979 string) (raw))
mem: ((15979 integer) (raw)) => 3
mem: ((15982 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 15990 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16076 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16078 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16079 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16080 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16081 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16082 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16083 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16084 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16085 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 43 => ((9 integer))
mem: ((9 integer)): 16086 <= 43
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16087 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 43
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13694 => ((11 byte-address))
mem: ((11 byte-address)): 16088 <= 13694
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13694 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 15988 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 15989 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13890 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9318 file-address) (raw)) => 9357
run: print-board/main 13: 9357 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9357
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
mem: ((9363 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16107 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16109 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16110 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16111 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16112 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16113 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16114 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16115 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16116 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 44 => ((9 integer))
mem: ((9 integer)): 16117 <= 44
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16118 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 44
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13695 => ((11 byte-address))
mem: ((11 byte-address)): 16119 <= 13695
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13695 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16138 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16140 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16141 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16142 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16143 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16144 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16145 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16146 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16147 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 45 => ((9 integer))
mem: ((9 integer)): 16148 <= 45
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16149 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 45
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13696 => ((11 byte-address))
mem: ((11 byte-address)): 16150 <= 13696
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13696 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13890 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9319 file-address) (raw)) => 9893
run: print-board/main 13: 9893 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9893
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
mem: ((9899 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16169 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16171 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16172 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16173 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16174 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16175 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16176 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16177 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16178 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 46 => ((9 integer))
mem: ((9 integer)): 16179 <= 46
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16180 <= 13650
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 46
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13697 => ((11 byte-address))
mem: ((11 byte-address)): 16181 <= 13697
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13697 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16200 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16202 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16203 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16204 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16205 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16206 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16207 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16208 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16209 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 47 => ((9 integer))
mem: ((9 integer)): 16210 <= 47
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16211 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 47
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13698 => ((11 byte-address))
mem: ((11 byte-address)): 16212 <= 13698
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13698 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13890 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9320 file-address) (raw)) => 10429
run: print-board/main 13: 10429 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10429
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
mem: ((10435 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16231 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16233 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16234 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16235 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16236 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16237 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16238 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16239 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16240 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 48 => ((9 integer))
mem: ((9 integer)): 16241 <= 48
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16242 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 48
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13699 => ((11 byte-address))
mem: ((11 byte-address)): 16243 <= 13699
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13699 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16262 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16264 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16265 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16266 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16267 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16268 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16269 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16270 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16271 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 49 => ((9 integer))
mem: ((9 integer)): 16272 <= 49
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16273 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 49
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13700 => ((11 byte-address))
mem: ((11 byte-address)): 16274 <= 13700
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13700 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13890 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9321 file-address) (raw)) => 10965
run: print-board/main 13: 10965 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10965
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
mem: ((10971 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16293 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16295 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16296 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16297 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16298 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16299 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16300 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16301 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16302 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 50 => ((9 integer))
mem: ((9 integer)): 16303 <= 50
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16304 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 50
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13701 => ((11 byte-address))
mem: ((11 byte-address)): 16305 <= 13701
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13701 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16324 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16326 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16327 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16328 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16329 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16330 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16331 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16332 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16333 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 51 => ((9 integer))
mem: ((9 integer)): 16334 <= 51
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16335 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 51
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13702 => ((11 byte-address))
mem: ((11 byte-address)): 16336 <= 13702
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13702 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13890 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9322 file-address) (raw)) => 11501
run: print-board/main 13: 11501 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 11501
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
mem: ((11507 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16355 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16357 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16358 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16359 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16360 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16361 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16362 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16363 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16364 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 52 => ((9 integer))
mem: ((9 integer)): 16365 <= 52
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16366 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 52
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13703 => ((11 byte-address))
mem: ((11 byte-address)): 16367 <= 13703
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13703 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16386 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16388 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16389 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16390 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16391 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16392 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16393 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16394 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16395 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 53 => ((9 integer))
mem: ((9 integer)): 16396 <= 53
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16397 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 53
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13704 => ((11 byte-address))
mem: ((11 byte-address)): 16398 <= 13704
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13704 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13890 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9323 file-address) (raw)) => 12037
run: print-board/main 13: 12037 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12037
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
mem: ((12043 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16417 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16419 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16420 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16421 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16422 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16423 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16424 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16425 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16426 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 54 => ((9 integer))
mem: ((9 integer)): 16427 <= 54
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16428 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 54
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13705 => ((11 byte-address))
mem: ((11 byte-address)): 16429 <= 13705
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13705 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16448 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16450 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16451 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16452 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16453 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16454 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16455 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16456 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16457 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 55 => ((9 integer))
mem: ((9 integer)): 16458 <= 55
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16459 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 55
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13706 => ((11 byte-address))
mem: ((11 byte-address)): 16460 <= 13706
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13706 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13890 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9324 file-address) (raw)) => 12573
run: print-board/main 13: 12573 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12573
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
mem: ((12579 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16479 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16481 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16482 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16483 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16484 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16485 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16486 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16487 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16488 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 56 => ((9 integer))
mem: ((9 integer)): 16489 <= 56
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16490 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 56
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13707 => ((11 byte-address))
mem: ((11 byte-address)): 16491 <= 13707
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13707 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16510 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16512 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16513 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16514 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16515 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16516 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16517 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16518 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16519 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 57 => ((9 integer))
mem: ((9 integer)): 16520 <= 57
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16521 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 57
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13708 => ((11 byte-address))
mem: ((11 byte-address)): 16522 <= 13708
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13708 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13890 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9325 file-address) (raw)) => 13109
run: print-board/main 13: 13109 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 13109
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
mem: ((13115 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16541 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16543 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16544 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16545 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16546 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16547 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16548 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16549 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16550 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 58 => ((9 integer))
mem: ((9 integer)): 16551 <= 58
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16552 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 58
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13709 => ((11 byte-address))
mem: ((11 byte-address)): 16553 <= 13709
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13709 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16572 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16574 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16575 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16576 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16577 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16578 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16579 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16580 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16581 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 59 => ((9 integer))
mem: ((9 integer)): 16582 <= 59
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16583 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 59
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13710 => ((11 byte-address))
mem: ((11 byte-address)): 16584 <= 13710
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13710 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13890 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13887 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: print-board/main 19: 4 => ((3 integer))
mem: ((3 integer)): 13886 <= 4
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 16603 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16605 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 16606 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 2
run: cursor-to-next-line/print-board/main 4: 3 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 3
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 16607 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: print-board/main 6: 5 => ((5 integer))
mem: ((5 integer)): 13888 <= 5
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 13645
mem: ((5 integer)) => 5
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 16634 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 5)
run: print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16636 <= 13645
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 5)
run: print-integer/print-board/main 2: 5 => ((2 integer))
mem: ((2 integer)): 16637 <= 5
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 16665 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (5)
run: integer-to-decimal-string/print-integer/print-board/main 1: 5 => ((1 integer))
mem: ((1 integer)): 16667 <= 5
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 16668 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 16670 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 16671 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 16696 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 16727 => ((1 buffer-address))
mem: ((1 buffer-address)): 16698 <= 16727
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 16727 => ((2 integer-address))
mem: ((2 integer-address)): 16699 <= 16727
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 16727 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 16728 => ((3 string-address-address))
mem: ((3 string-address-address)): 16700 <= 16728
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 16701 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 16729 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 16728 <= 16729
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 16727
run: integer-to-decimal-string/print-integer/print-board/main 11: 16727 => ((6 buffer-address))
mem: ((6 buffer-address)): 16672 <= 16727
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 16673 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 16674 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 16675 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 5
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 16667 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 5 => ((10 integer))
mem: ((10 integer)): 16676 <= 5
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 17: 53 => ((11 integer))
mem: ((11 integer)): 16677 <= 53
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 53
run: integer-to-decimal-string/print-integer/print-board/main 18: #\5 => ((12 character))
mem: ((12 character)): 16678 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 16727
mem: ((12 character)) => 5
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 16760 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (16727 #\5)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 16727 => ((1 buffer-address))
mem: ((1 buffer-address)): 16762 <= 16727
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (16727 #\5)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\5 => ((2 character))
mem: ((2 character)): 16763 <= #\5
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 16727
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 16791 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (16727)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 16727 => ((1 buffer-address))
mem: ((1 buffer-address)): 16793 <= 16727
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((16727 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 16794 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((16728 string-address) (raw)) => 16729
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 16729 => ((3 string-address))
mem: ((3 string-address)): 16795 <= 16729
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((16729 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 16796 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16797 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 16764 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 16727 => ((4 integer-address))
mem: ((4 integer-address)): 16765 <= 16727
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((16728 string-address) (raw)) => 16729
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 16729 => ((5 string-address))
mem: ((5 string-address)): 16766 <= 16729
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((16729 string) (raw))
mem: ((16729 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 16730 => ((6 byte-address))
mem: ((6 byte-address)): 16767 <= 16730
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 5
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\5 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 16730 <= #\5
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 16727 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 16727
run: integer-to-decimal-string/print-integer/print-board/main 19: 16727 => ((6 buffer-address))
mem: ((6 buffer-address)): 16672 <= 16727
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 16675 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((16727 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 16679 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((16728 string-address) (raw)) => 16729
run: integer-to-decimal-string/print-integer/print-board/main 24: 16729 => ((14 string-address))
mem: ((14 string-address)): 16680 <= 16729
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 16822 => ((15 string-address))
mem: ((15 string-address)): 16681 <= 16822
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 16682 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 16683 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 16675 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((16729 string) (raw))
mem: ((16729 integer) (raw)) => 30
mem: ((16730 byte) (raw)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 30: #\5 => ((18 byte))
mem: ((18 byte)): 16684 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((16822 string) (raw))
mem: ((16822 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 16823 => ((19 byte-address))
mem: ((19 byte-address)): 16685 <= 16823
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 32: #\5 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 16823 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 16682 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 16683 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 16675 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 16822
run: print-integer/print-board/main 3: 16822 => ((3 string-address))
mem: ((3 string-address)): 16638 <= 16822
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((3 string-address)) => 16822
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 16824 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 16822)
run: print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16826 <= 13645
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 16822)
run: print-string/print-integer/print-board/main 2: 16822 => ((2 string-address))
mem: ((2 string-address)): 16827 <= 16822
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((16822 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 16828 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 16829 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16830 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((16822 string) (raw))
mem: ((16822 integer) (raw)) => 1
mem: ((16823 byte) (raw)) => 5
run: print-string/print-integer/print-board/main 7: #\5 => ((6 character))
mem: ((6 character)): 16831 <= #\5
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => 5
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 16855 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\5)
run: print-character/print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16857 <= 13645
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\5)
run: print-character/print-string/print-integer/print-board/main 2: #\5 => ((2 character))
mem: ((2 character)): 16858 <= #\5
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\5)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16859 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\5)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16860 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16861 <= 13647
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16862 <= 13648
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16863 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 16864 <= 60
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 60 => ((9 integer))
mem: ((9 integer)): 16865 <= 60
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-integer/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16866 <= 13650
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 60
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 13711 => ((11 byte-address))
mem: ((11 byte-address)): 16867 <= 13711
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 5
run: print-character/print-string/print-integer/print-board/main 13: #\5 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13711 <= #\5
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 16829 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 16830 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 16886 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 16886
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 16886
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 16890 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 16886)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16892 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 16886)
run: print-string/print-board/main 2: 16886 => ((2 string-address))
mem: ((2 string-address)): 16893 <= 16886
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((16886 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 16894 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 16895 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16896 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((16886 string) (raw))
mem: ((16886 integer) (raw)) => 3
mem: ((16887 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 16897 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16921 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16923 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16924 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16925 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16926 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16927 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16928 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16929 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 16930 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 61 => ((9 integer))
mem: ((9 integer)): 16931 <= 61
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16932 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 61
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13712 => ((11 byte-address))
mem: ((11 byte-address)): 16933 <= 13712
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13712 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 16895 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16896 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((16886 string) (raw))
mem: ((16886 integer) (raw)) => 3
mem: ((16888 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 16897 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16952 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16954 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 16955 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16956 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16957 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16958 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16959 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16960 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 16961 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 62 => ((9 integer))
mem: ((9 integer)): 16962 <= 62
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16963 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 62
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13713 => ((11 byte-address))
mem: ((11 byte-address)): 16964 <= 13713
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13713 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 16895 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16896 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((16886 string) (raw))
mem: ((16886 integer) (raw)) => 3
mem: ((16889 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 16897 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16983 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 16985 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16986 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16987 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16988 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 16989 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 16990 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16991 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 16992 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 63 => ((9 integer))
mem: ((9 integer)): 16993 <= 63
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 16994 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 63
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13714 => ((11 byte-address))
mem: ((11 byte-address)): 16995 <= 13714
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13714 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 16895 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 16896 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13890 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9318 file-address) (raw)) => 9357
run: print-board/main 13: 9357 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9357
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
mem: ((9362 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17014 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17016 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17017 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17018 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17019 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17020 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17021 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17022 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17023 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 64 => ((9 integer))
mem: ((9 integer)): 17024 <= 64
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17025 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 64
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13715 => ((11 byte-address))
mem: ((11 byte-address)): 17026 <= 13715
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13715 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17045 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17047 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17048 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17049 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17050 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17051 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17052 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17053 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17054 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 65 => ((9 integer))
mem: ((9 integer)): 17055 <= 65
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17056 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 65
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13716 => ((11 byte-address))
mem: ((11 byte-address)): 17057 <= 13716
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13716 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13890 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9319 file-address) (raw)) => 9893
run: print-board/main 13: 9893 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9893
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
mem: ((9898 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17076 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17078 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17079 <= #\_
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17080 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17081 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17082 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17083 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17084 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17085 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 66 => ((9 integer))
mem: ((9 integer)): 17086 <= 66
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17087 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 66
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13717 => ((11 byte-address))
mem: ((11 byte-address)): 17088 <= 13717
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13717 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17107 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17109 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17110 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17111 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17112 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17113 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17114 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17115 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17116 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 67 => ((9 integer))
mem: ((9 integer)): 17117 <= 67
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17118 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 67
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13718 => ((11 byte-address))
mem: ((11 byte-address)): 17119 <= 13718
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13718 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13890 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9320 file-address) (raw)) => 10429
run: print-board/main 13: 10429 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10429
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
mem: ((10434 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17138 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17140 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17141 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17142 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17143 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17144 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17145 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17146 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17147 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 68 => ((9 integer))
mem: ((9 integer)): 17148 <= 68
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17149 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 68
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13719 => ((11 byte-address))
mem: ((11 byte-address)): 17150 <= 13719
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13719 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17169 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17171 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17172 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17173 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17174 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17175 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17176 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17177 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17178 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 69 => ((9 integer))
mem: ((9 integer)): 17179 <= 69
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17180 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 69
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13720 => ((11 byte-address))
mem: ((11 byte-address)): 17181 <= 13720
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13720 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13890 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9321 file-address) (raw)) => 10965
run: print-board/main 13: 10965 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10965
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
mem: ((10970 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17200 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17202 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17203 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17204 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17205 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17206 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17207 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17208 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17209 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 70 => ((9 integer))
mem: ((9 integer)): 17210 <= 70
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17211 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 70
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13721 => ((11 byte-address))
mem: ((11 byte-address)): 17212 <= 13721
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13721 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17231 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17233 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17234 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17235 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17236 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17237 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17238 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17239 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17240 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 71 => ((9 integer))
mem: ((9 integer)): 17241 <= 71
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17242 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 71
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13722 => ((11 byte-address))
mem: ((11 byte-address)): 17243 <= 13722
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13722 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13890 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9322 file-address) (raw)) => 11501
run: print-board/main 13: 11501 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 11501
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
mem: ((11506 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17262 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17264 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17265 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17266 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17267 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17268 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17269 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17270 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17271 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 72 => ((9 integer))
mem: ((9 integer)): 17272 <= 72
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17273 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 72
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13723 => ((11 byte-address))
mem: ((11 byte-address)): 17274 <= 13723
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13723 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17293 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17295 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17296 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17297 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17298 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17299 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17300 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17301 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17302 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 73 => ((9 integer))
mem: ((9 integer)): 17303 <= 73
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17304 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 73
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13724 => ((11 byte-address))
mem: ((11 byte-address)): 17305 <= 13724
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13724 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13890 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9323 file-address) (raw)) => 12037
run: print-board/main 13: 12037 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12037
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
mem: ((12042 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17324 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17326 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17327 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17328 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17329 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17330 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17331 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17332 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17333 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 74 => ((9 integer))
mem: ((9 integer)): 17334 <= 74
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17335 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 74
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13725 => ((11 byte-address))
mem: ((11 byte-address)): 17336 <= 13725
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13725 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17355 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17357 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17358 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17359 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17360 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17361 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17362 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17363 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17364 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 75 => ((9 integer))
mem: ((9 integer)): 17365 <= 75
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17366 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 75
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13726 => ((11 byte-address))
mem: ((11 byte-address)): 17367 <= 13726
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13726 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13890 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9324 file-address) (raw)) => 12573
run: print-board/main 13: 12573 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12573
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
mem: ((12578 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17386 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17388 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17389 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17390 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17391 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17392 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17393 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17394 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17395 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 76 => ((9 integer))
mem: ((9 integer)): 17396 <= 76
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17397 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 76
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13727 => ((11 byte-address))
mem: ((11 byte-address)): 17398 <= 13727
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13727 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17417 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17419 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17420 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17421 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17422 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17423 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17424 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17425 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17426 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 77 => ((9 integer))
mem: ((9 integer)): 17427 <= 77
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17428 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 77
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13728 => ((11 byte-address))
mem: ((11 byte-address)): 17429 <= 13728
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13728 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13890 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9325 file-address) (raw)) => 13109
run: print-board/main 13: 13109 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 13109
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
mem: ((13114 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17448 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17450 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17451 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17452 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17453 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17454 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17455 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17456 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17457 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 78 => ((9 integer))
mem: ((9 integer)): 17458 <= 78
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17459 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 78
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13729 => ((11 byte-address))
mem: ((11 byte-address)): 17460 <= 13729
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13729 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17479 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17481 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17482 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17483 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17484 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17485 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17486 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17487 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17488 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 79 => ((9 integer))
mem: ((9 integer)): 17489 <= 79
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17490 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 79
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13730 => ((11 byte-address))
mem: ((11 byte-address)): 17491 <= 13730
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13730 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13890 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13887 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: print-board/main 19: 3 => ((3 integer))
mem: ((3 integer)): 13886 <= 3
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 17510 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17512 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 17513 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 3
run: cursor-to-next-line/print-board/main 4: 4 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 4
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 17514 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 3
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: print-board/main 6: 4 => ((5 integer))
mem: ((5 integer)): 13888 <= 4
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 13645
mem: ((5 integer)) => 4
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 17541 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 4)
run: print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17543 <= 13645
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 4)
run: print-integer/print-board/main 2: 4 => ((2 integer))
mem: ((2 integer)): 17544 <= 4
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 17572 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4)
run: integer-to-decimal-string/print-integer/print-board/main 1: 4 => ((1 integer))
mem: ((1 integer)): 17574 <= 4
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 17575 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 17577 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 17578 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 17603 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 17634 => ((1 buffer-address))
mem: ((1 buffer-address)): 17605 <= 17634
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 17634 => ((2 integer-address))
mem: ((2 integer-address)): 17606 <= 17634
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 17634 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 17635 => ((3 string-address-address))
mem: ((3 string-address-address)): 17607 <= 17635
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 17608 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 17636 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 17635 <= 17636
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 17634
run: integer-to-decimal-string/print-integer/print-board/main 11: 17634 => ((6 buffer-address))
mem: ((6 buffer-address)): 17579 <= 17634
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 17580 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 17581 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 17582 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 4
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 17574 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 4 => ((10 integer))
mem: ((10 integer)): 17583 <= 4
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 17: 52 => ((11 integer))
mem: ((11 integer)): 17584 <= 52
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 52
run: integer-to-decimal-string/print-integer/print-board/main 18: #\4 => ((12 character))
mem: ((12 character)): 17585 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 17634
mem: ((12 character)) => 4
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 17667 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (17634 #\4)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 17634 => ((1 buffer-address))
mem: ((1 buffer-address)): 17669 <= 17634
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (17634 #\4)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\4 => ((2 character))
mem: ((2 character)): 17670 <= #\4
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 17634
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 17698 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (17634)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 17634 => ((1 buffer-address))
mem: ((1 buffer-address)): 17700 <= 17634
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((17634 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 17701 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((17635 string-address) (raw)) => 17636
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 17636 => ((3 string-address))
mem: ((3 string-address)): 17702 <= 17636
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((17636 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 17703 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17704 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 17671 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 17634 => ((4 integer-address))
mem: ((4 integer-address)): 17672 <= 17634
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((17635 string-address) (raw)) => 17636
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 17636 => ((5 string-address))
mem: ((5 string-address)): 17673 <= 17636
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((17636 string) (raw))
mem: ((17636 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 17637 => ((6 byte-address))
mem: ((6 byte-address)): 17674 <= 17637
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\4 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 17637 <= #\4
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 17634 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 17634
run: integer-to-decimal-string/print-integer/print-board/main 19: 17634 => ((6 buffer-address))
mem: ((6 buffer-address)): 17579 <= 17634
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 17582 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((17634 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 17586 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((17635 string-address) (raw)) => 17636
run: integer-to-decimal-string/print-integer/print-board/main 24: 17636 => ((14 string-address))
mem: ((14 string-address)): 17587 <= 17636
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 17729 => ((15 string-address))
mem: ((15 string-address)): 17588 <= 17729
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 17589 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 17590 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 17582 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((17636 string) (raw))
mem: ((17636 integer) (raw)) => 30
mem: ((17637 byte) (raw)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 30: #\4 => ((18 byte))
mem: ((18 byte)): 17591 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((17729 string) (raw))
mem: ((17729 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 17730 => ((19 byte-address))
mem: ((19 byte-address)): 17592 <= 17730
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 32: #\4 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 17730 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 17589 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 17590 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 17582 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 17729
run: print-integer/print-board/main 3: 17729 => ((3 string-address))
mem: ((3 string-address)): 17545 <= 17729
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((3 string-address)) => 17729
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 17731 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 17729)
run: print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17733 <= 13645
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 17729)
run: print-string/print-integer/print-board/main 2: 17729 => ((2 string-address))
mem: ((2 string-address)): 17734 <= 17729
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((17729 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 17735 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 17736 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17737 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((17729 string) (raw))
mem: ((17729 integer) (raw)) => 1
mem: ((17730 byte) (raw)) => 4
run: print-string/print-integer/print-board/main 7: #\4 => ((6 character))
mem: ((6 character)): 17738 <= #\4
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => 4
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 17762 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\4)
run: print-character/print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17764 <= 13645
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\4)
run: print-character/print-string/print-integer/print-board/main 2: #\4 => ((2 character))
mem: ((2 character)): 17765 <= #\4
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\4)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17766 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\4)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17767 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17768 <= 13647
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17769 <= 13648
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17770 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17771 <= 80
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 80 => ((9 integer))
mem: ((9 integer)): 17772 <= 80
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-integer/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17773 <= 13650
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 80
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 13731 => ((11 byte-address))
mem: ((11 byte-address)): 17774 <= 13731
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4
run: print-character/print-string/print-integer/print-board/main 13: #\4 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13731 <= #\4
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 17736 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 17737 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 17793 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 17793
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 17793
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 17797 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 17793)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17799 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 17793)
run: print-string/print-board/main 2: 17793 => ((2 string-address))
mem: ((2 string-address)): 17800 <= 17793
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((17793 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 17801 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 17802 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17803 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((17793 string) (raw))
mem: ((17793 integer) (raw)) => 3
mem: ((17794 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 17804 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 17828 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17830 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17831 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17832 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17833 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17834 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17835 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17836 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17837 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 81 => ((9 integer))
mem: ((9 integer)): 17838 <= 81
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17839 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 81
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13732 => ((11 byte-address))
mem: ((11 byte-address)): 17840 <= 13732
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13732 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 17802 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17803 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((17793 string) (raw))
mem: ((17793 integer) (raw)) => 3
mem: ((17795 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 17804 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 17859 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17861 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 17862 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17863 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17864 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17865 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17866 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17867 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17868 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 82 => ((9 integer))
mem: ((9 integer)): 17869 <= 82
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17870 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 82
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13733 => ((11 byte-address))
mem: ((11 byte-address)): 17871 <= 13733
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13733 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 17802 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17803 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((17793 string) (raw))
mem: ((17793 integer) (raw)) => 3
mem: ((17796 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 17804 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 17890 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17892 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17893 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17894 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17895 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17896 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17897 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17898 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17899 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 83 => ((9 integer))
mem: ((9 integer)): 17900 <= 83
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17901 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 83
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13734 => ((11 byte-address))
mem: ((11 byte-address)): 17902 <= 13734
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13734 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 17802 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 17803 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13890 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9318 file-address) (raw)) => 9357
run: print-board/main 13: 9357 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9357
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
mem: ((9361 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17921 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17923 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17924 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17925 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17926 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17927 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17928 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17929 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17930 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 84 => ((9 integer))
mem: ((9 integer)): 17931 <= 84
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17932 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 84
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13735 => ((11 byte-address))
mem: ((11 byte-address)): 17933 <= 13735
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13735 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17952 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17954 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17955 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17956 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17957 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17958 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17959 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17960 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17961 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 85 => ((9 integer))
mem: ((9 integer)): 17962 <= 85
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17963 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 85
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13736 => ((11 byte-address))
mem: ((11 byte-address)): 17964 <= 13736
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13736 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13890 <= 1
schedule: scheduling print-board/main for further processing
schedule: print-board/main
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9319 file-address) (raw)) => 9893
run: print-board/main 13: 9893 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9893
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
mem: ((9897 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17983 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 17985 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17986 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17987 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17988 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 17989 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 17990 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17991 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17992 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 86 => ((9 integer))
mem: ((9 integer)): 17993 <= 86
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 17994 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 86
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13737 => ((11 byte-address))
mem: ((11 byte-address)): 17995 <= 13737
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13737 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18014 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18016 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18017 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18018 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18019 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18020 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18021 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18022 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18023 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 87 => ((9 integer))
mem: ((9 integer)): 18024 <= 87
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18025 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 87
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13738 => ((11 byte-address))
mem: ((11 byte-address)): 18026 <= 13738
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13738 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13890 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9320 file-address) (raw)) => 10429
run: print-board/main 13: 10429 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10429
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
mem: ((10433 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18045 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18047 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18048 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18049 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18050 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18051 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18052 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18053 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18054 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 88 => ((9 integer))
mem: ((9 integer)): 18055 <= 88
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18056 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 88
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13739 => ((11 byte-address))
mem: ((11 byte-address)): 18057 <= 13739
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13739 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18076 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18078 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18079 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18080 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18081 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18082 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18083 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18084 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18085 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 89 => ((9 integer))
mem: ((9 integer)): 18086 <= 89
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18087 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 89
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13740 => ((11 byte-address))
mem: ((11 byte-address)): 18088 <= 13740
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13740 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13890 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9321 file-address) (raw)) => 10965
run: print-board/main 13: 10965 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10965
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
mem: ((10969 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18107 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18109 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18110 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18111 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18112 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18113 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18114 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18115 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18116 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 90 => ((9 integer))
mem: ((9 integer)): 18117 <= 90
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18118 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 90
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13741 => ((11 byte-address))
mem: ((11 byte-address)): 18119 <= 13741
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13741 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18138 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18140 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18141 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18142 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18143 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18144 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18145 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18146 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18147 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 91 => ((9 integer))
mem: ((9 integer)): 18148 <= 91
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18149 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 91
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13742 => ((11 byte-address))
mem: ((11 byte-address)): 18150 <= 13742
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13742 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13890 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9322 file-address) (raw)) => 11501
run: print-board/main 13: 11501 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 11501
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
mem: ((11505 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18169 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18171 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18172 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18173 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18174 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18175 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18176 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18177 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18178 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 92 => ((9 integer))
mem: ((9 integer)): 18179 <= 92
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18180 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 92
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13743 => ((11 byte-address))
mem: ((11 byte-address)): 18181 <= 13743
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13743 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18200 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18202 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18203 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18204 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18205 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18206 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18207 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18208 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18209 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 93 => ((9 integer))
mem: ((9 integer)): 18210 <= 93
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18211 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 93
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13744 => ((11 byte-address))
mem: ((11 byte-address)): 18212 <= 13744
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13744 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13890 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9323 file-address) (raw)) => 12037
run: print-board/main 13: 12037 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12037
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
mem: ((12041 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18231 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18233 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18234 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18235 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18236 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18237 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18238 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18239 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18240 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 94 => ((9 integer))
mem: ((9 integer)): 18241 <= 94
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18242 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 94
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13745 => ((11 byte-address))
mem: ((11 byte-address)): 18243 <= 13745
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13745 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18262 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18264 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18265 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18266 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18267 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18268 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18269 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18270 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18271 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 95 => ((9 integer))
mem: ((9 integer)): 18272 <= 95
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18273 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 95
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13746 => ((11 byte-address))
mem: ((11 byte-address)): 18274 <= 13746
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13746 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13890 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9324 file-address) (raw)) => 12573
run: print-board/main 13: 12573 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12573
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
mem: ((12577 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18293 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18295 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18296 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18297 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18298 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18299 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18300 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18301 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18302 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 96 => ((9 integer))
mem: ((9 integer)): 18303 <= 96
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18304 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 96
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13747 => ((11 byte-address))
mem: ((11 byte-address)): 18305 <= 13747
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13747 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18324 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18326 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18327 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18328 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18329 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18330 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18331 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18332 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18333 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 97 => ((9 integer))
mem: ((9 integer)): 18334 <= 97
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18335 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 97
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13748 => ((11 byte-address))
mem: ((11 byte-address)): 18336 <= 13748
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13748 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13890 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9325 file-address) (raw)) => 13109
run: print-board/main 13: 13109 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 13109
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
mem: ((13113 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18355 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18357 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18358 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18359 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18360 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18361 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18362 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18363 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18364 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 98 => ((9 integer))
mem: ((9 integer)): 18365 <= 98
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18366 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 98
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13749 => ((11 byte-address))
mem: ((11 byte-address)): 18367 <= 13749
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13749 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18386 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18388 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18389 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18390 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18391 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18392 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18393 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18394 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18395 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 99 => ((9 integer))
mem: ((9 integer)): 18396 <= 99
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18397 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 99
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13750 => ((11 byte-address))
mem: ((11 byte-address)): 18398 <= 13750
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13750 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13890 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13887 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: print-board/main 19: 2 => ((3 integer))
mem: ((3 integer)): 13886 <= 2
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 18417 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18419 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 18420 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 4
run: cursor-to-next-line/print-board/main 4: 5 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 5
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 18421 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 2
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: print-board/main 6: 3 => ((5 integer))
mem: ((5 integer)): 13888 <= 3
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 13645
mem: ((5 integer)) => 3
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 18448 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 3)
run: print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18450 <= 13645
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 3)
run: print-integer/print-board/main 2: 3 => ((2 integer))
mem: ((2 integer)): 18451 <= 3
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 18479 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (3)
run: integer-to-decimal-string/print-integer/print-board/main 1: 3 => ((1 integer))
mem: ((1 integer)): 18481 <= 3
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 18482 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 18484 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 18485 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 18510 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 18541 => ((1 buffer-address))
mem: ((1 buffer-address)): 18512 <= 18541
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 18541 => ((2 integer-address))
mem: ((2 integer-address)): 18513 <= 18541
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 18541 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 18542 => ((3 string-address-address))
mem: ((3 string-address-address)): 18514 <= 18542
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 18515 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 18543 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 18542 <= 18543
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 18541
run: integer-to-decimal-string/print-integer/print-board/main 11: 18541 => ((6 buffer-address))
mem: ((6 buffer-address)): 18486 <= 18541
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 18487 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 18488 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 18489 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 3
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 18481 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 3 => ((10 integer))
mem: ((10 integer)): 18490 <= 3
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 17: 51 => ((11 integer))
mem: ((11 integer)): 18491 <= 51
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 51
run: integer-to-decimal-string/print-integer/print-board/main 18: #\3 => ((12 character))
mem: ((12 character)): 18492 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 18541
mem: ((12 character)) => 3
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 18574 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (18541 #\3)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 18541 => ((1 buffer-address))
mem: ((1 buffer-address)): 18576 <= 18541
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (18541 #\3)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\3 => ((2 character))
mem: ((2 character)): 18577 <= #\3
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 18541
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 18605 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (18541)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 18541 => ((1 buffer-address))
mem: ((1 buffer-address)): 18607 <= 18541
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((18541 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 18608 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((18542 string-address) (raw)) => 18543
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 18543 => ((3 string-address))
mem: ((3 string-address)): 18609 <= 18543
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((18543 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 18610 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18611 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 18578 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 18541 => ((4 integer-address))
mem: ((4 integer-address)): 18579 <= 18541
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((18542 string-address) (raw)) => 18543
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 18543 => ((5 string-address))
mem: ((5 string-address)): 18580 <= 18543
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((18543 string) (raw))
mem: ((18543 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 18544 => ((6 byte-address))
mem: ((6 byte-address)): 18581 <= 18544
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\3 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 18544 <= #\3
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 18541 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 18541
run: integer-to-decimal-string/print-integer/print-board/main 19: 18541 => ((6 buffer-address))
mem: ((6 buffer-address)): 18486 <= 18541
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 18489 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((18541 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 18493 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((18542 string-address) (raw)) => 18543
run: integer-to-decimal-string/print-integer/print-board/main 24: 18543 => ((14 string-address))
mem: ((14 string-address)): 18494 <= 18543
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 18636 => ((15 string-address))
mem: ((15 string-address)): 18495 <= 18636
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 18496 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 18497 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 18489 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((18543 string) (raw))
mem: ((18543 integer) (raw)) => 30
mem: ((18544 byte) (raw)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 30: #\3 => ((18 byte))
mem: ((18 byte)): 18498 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((18636 string) (raw))
mem: ((18636 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 18637 => ((19 byte-address))
mem: ((19 byte-address)): 18499 <= 18637
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 32: #\3 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 18637 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 18496 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 18497 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 18489 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 18636
run: print-integer/print-board/main 3: 18636 => ((3 string-address))
mem: ((3 string-address)): 18452 <= 18636
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((3 string-address)) => 18636
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 18638 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 18636)
run: print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18640 <= 13645
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 18636)
run: print-string/print-integer/print-board/main 2: 18636 => ((2 string-address))
mem: ((2 string-address)): 18641 <= 18636
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((18636 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 18642 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 18643 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18644 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((18636 string) (raw))
mem: ((18636 integer) (raw)) => 1
mem: ((18637 byte) (raw)) => 3
run: print-string/print-integer/print-board/main 7: #\3 => ((6 character))
mem: ((6 character)): 18645 <= #\3
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => 3
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 18669 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\3)
run: print-character/print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18671 <= 13645
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\3)
run: print-character/print-string/print-integer/print-board/main 2: #\3 => ((2 character))
mem: ((2 character)): 18672 <= #\3
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\3)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18673 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\3)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18674 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18675 <= 13647
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18676 <= 13648
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18677 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18678 <= 100
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 100 => ((9 integer))
mem: ((9 integer)): 18679 <= 100
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-integer/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18680 <= 13650
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 100
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 13751 => ((11 byte-address))
mem: ((11 byte-address)): 18681 <= 13751
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3
run: print-character/print-string/print-integer/print-board/main 13: #\3 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13751 <= #\3
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 18643 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 18644 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 18700 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 18700
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 18700
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 18704 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 18700)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18706 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 18700)
run: print-string/print-board/main 2: 18700 => ((2 string-address))
mem: ((2 string-address)): 18707 <= 18700
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((18700 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 18708 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 18709 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18710 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((18700 string) (raw))
mem: ((18700 integer) (raw)) => 3
mem: ((18701 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 18711 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 18735 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18737 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18738 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18739 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18740 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18741 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18742 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18743 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18744 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 101 => ((9 integer))
mem: ((9 integer)): 18745 <= 101
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18746 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 101
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13752 => ((11 byte-address))
mem: ((11 byte-address)): 18747 <= 13752
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13752 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 18709 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18710 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((18700 string) (raw))
mem: ((18700 integer) (raw)) => 3
mem: ((18702 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 18711 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 18766 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18768 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 18769 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18770 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18771 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18772 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18773 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18774 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18775 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 102 => ((9 integer))
mem: ((9 integer)): 18776 <= 102
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18777 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 102
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13753 => ((11 byte-address))
mem: ((11 byte-address)): 18778 <= 13753
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13753 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 18709 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18710 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((18700 string) (raw))
mem: ((18700 integer) (raw)) => 3
mem: ((18703 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 18711 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 18797 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18799 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18800 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18801 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18802 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18803 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18804 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18805 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18806 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 103 => ((9 integer))
mem: ((9 integer)): 18807 <= 103
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18808 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 103
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13754 => ((11 byte-address))
mem: ((11 byte-address)): 18809 <= 13754
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13754 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 18709 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 18710 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13890 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9318 file-address) (raw)) => 9357
run: print-board/main 13: 9357 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9357
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
mem: ((9360 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18828 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18830 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18831 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18832 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18833 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18834 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18835 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18836 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18837 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 104 => ((9 integer))
mem: ((9 integer)): 18838 <= 104
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18839 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 104
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13755 => ((11 byte-address))
mem: ((11 byte-address)): 18840 <= 13755
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13755 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18859 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18861 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18862 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18863 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18864 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18865 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18866 <= 13648
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18867 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18868 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 105 => ((9 integer))
mem: ((9 integer)): 18869 <= 105
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18870 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 105
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13756 => ((11 byte-address))
mem: ((11 byte-address)): 18871 <= 13756
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13756 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13890 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9319 file-address) (raw)) => 9893
run: print-board/main 13: 9893 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9893
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
mem: ((9896 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18890 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18892 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18893 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18894 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18895 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18896 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18897 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18898 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18899 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 106 => ((9 integer))
mem: ((9 integer)): 18900 <= 106
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18901 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 106
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13757 => ((11 byte-address))
mem: ((11 byte-address)): 18902 <= 13757
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13757 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18921 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18923 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18924 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18925 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18926 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18927 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18928 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18929 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18930 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 107 => ((9 integer))
mem: ((9 integer)): 18931 <= 107
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18932 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 107
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13758 => ((11 byte-address))
mem: ((11 byte-address)): 18933 <= 13758
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13758 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13890 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9320 file-address) (raw)) => 10429
run: print-board/main 13: 10429 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10429
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
mem: ((10432 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18952 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18954 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18955 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18956 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18957 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18958 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18959 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18960 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18961 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 108 => ((9 integer))
mem: ((9 integer)): 18962 <= 108
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18963 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 108
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13759 => ((11 byte-address))
mem: ((11 byte-address)): 18964 <= 13759
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13759 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18983 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 18985 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18986 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18987 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18988 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 18989 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 18990 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18991 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18992 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 109 => ((9 integer))
mem: ((9 integer)): 18993 <= 109
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 18994 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 109
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13760 => ((11 byte-address))
mem: ((11 byte-address)): 18995 <= 13760
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13760 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13890 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9321 file-address) (raw)) => 10965
run: print-board/main 13: 10965 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10965
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
mem: ((10968 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19014 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19016 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19017 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19018 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19019 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19020 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19021 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19022 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19023 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 110 => ((9 integer))
mem: ((9 integer)): 19024 <= 110
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19025 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 110
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13761 => ((11 byte-address))
mem: ((11 byte-address)): 19026 <= 13761
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13761 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19045 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19047 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19048 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19049 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19050 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19051 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19052 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19053 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19054 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 111 => ((9 integer))
mem: ((9 integer)): 19055 <= 111
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19056 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 111
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13762 => ((11 byte-address))
mem: ((11 byte-address)): 19057 <= 13762
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13762 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13890 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9322 file-address) (raw)) => 11501
run: print-board/main 13: 11501 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 11501
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
mem: ((11504 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19076 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19078 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19079 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19080 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19081 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19082 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19083 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19084 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19085 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 112 => ((9 integer))
mem: ((9 integer)): 19086 <= 112
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19087 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 112
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13763 => ((11 byte-address))
mem: ((11 byte-address)): 19088 <= 13763
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13763 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19107 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19109 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19110 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19111 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19112 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19113 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19114 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19115 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19116 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 113 => ((9 integer))
mem: ((9 integer)): 19117 <= 113
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19118 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 113
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13764 => ((11 byte-address))
mem: ((11 byte-address)): 19119 <= 13764
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13764 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13890 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9323 file-address) (raw)) => 12037
run: print-board/main 13: 12037 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12037
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
mem: ((12040 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19138 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19140 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19141 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19142 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19143 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19144 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19145 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19146 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19147 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 114 => ((9 integer))
mem: ((9 integer)): 19148 <= 114
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19149 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 114
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13765 => ((11 byte-address))
mem: ((11 byte-address)): 19150 <= 13765
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13765 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19169 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19171 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19172 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19173 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19174 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19175 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19176 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19177 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19178 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 115 => ((9 integer))
mem: ((9 integer)): 19179 <= 115
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19180 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 115
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13766 => ((11 byte-address))
mem: ((11 byte-address)): 19181 <= 13766
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13766 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13890 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9324 file-address) (raw)) => 12573
run: print-board/main 13: 12573 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12573
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
mem: ((12576 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19200 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19202 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19203 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19204 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19205 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19206 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19207 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19208 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19209 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 116 => ((9 integer))
mem: ((9 integer)): 19210 <= 116
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19211 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 116
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13767 => ((11 byte-address))
mem: ((11 byte-address)): 19212 <= 13767
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13767 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19231 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19233 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19234 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19235 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19236 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19237 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19238 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19239 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19240 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 117 => ((9 integer))
mem: ((9 integer)): 19241 <= 117
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19242 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 117
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13768 => ((11 byte-address))
mem: ((11 byte-address)): 19243 <= 13768
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13768 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13890 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9325 file-address) (raw)) => 13109
run: print-board/main 13: 13109 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 13109
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
mem: ((13112 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13889 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19262 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19264 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19265 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19266 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19267 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19268 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19269 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19270 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19271 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 118 => ((9 integer))
mem: ((9 integer)): 19272 <= 118
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19273 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 118
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13769 => ((11 byte-address))
mem: ((11 byte-address)): 19274 <= 13769
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13769 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19293 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19295 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19296 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19297 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19298 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19299 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19300 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19301 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19302 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 119 => ((9 integer))
mem: ((9 integer)): 19303 <= 119
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19304 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 119
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13770 => ((11 byte-address))
mem: ((11 byte-address)): 19305 <= 13770
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13770 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13890 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13887 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: print-board/main 19: 1 => ((3 integer))
mem: ((3 integer)): 13886 <= 1
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 19324 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19326 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 19327 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 5
run: cursor-to-next-line/print-board/main 4: 6 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 6
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 19328 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 1
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: print-board/main 6: 2 => ((5 integer))
mem: ((5 integer)): 13888 <= 2
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 13645
mem: ((5 integer)) => 2
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 19355 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 2)
run: print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19357 <= 13645
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 2)
run: print-integer/print-board/main 2: 2 => ((2 integer))
mem: ((2 integer)): 19358 <= 2
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 19386 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (2)
run: integer-to-decimal-string/print-integer/print-board/main 1: 2 => ((1 integer))
mem: ((1 integer)): 19388 <= 2
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 19389 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 19391 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 19392 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 19417 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 19448 => ((1 buffer-address))
mem: ((1 buffer-address)): 19419 <= 19448
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 19448 => ((2 integer-address))
mem: ((2 integer-address)): 19420 <= 19448
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 19448 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 19449 => ((3 string-address-address))
mem: ((3 string-address-address)): 19421 <= 19449
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 19422 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 19450 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 19449 <= 19450
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 19448
run: integer-to-decimal-string/print-integer/print-board/main 11: 19448 => ((6 buffer-address))
mem: ((6 buffer-address)): 19393 <= 19448
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 19394 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 19395 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 19396 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 2
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 19388 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 2 => ((10 integer))
mem: ((10 integer)): 19397 <= 2
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 17: 50 => ((11 integer))
mem: ((11 integer)): 19398 <= 50
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 50
run: integer-to-decimal-string/print-integer/print-board/main 18: #\2 => ((12 character))
mem: ((12 character)): 19399 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 19448
mem: ((12 character)) => 2
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 19481 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (19448 #\2)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 19448 => ((1 buffer-address))
mem: ((1 buffer-address)): 19483 <= 19448
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (19448 #\2)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\2 => ((2 character))
mem: ((2 character)): 19484 <= #\2
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 19448
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 19512 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (19448)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 19448 => ((1 buffer-address))
mem: ((1 buffer-address)): 19514 <= 19448
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((19448 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 19515 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((19449 string-address) (raw)) => 19450
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 19450 => ((3 string-address))
mem: ((3 string-address)): 19516 <= 19450
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((19450 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 19517 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19518 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 19485 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 19448 => ((4 integer-address))
mem: ((4 integer-address)): 19486 <= 19448
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((19449 string-address) (raw)) => 19450
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 19450 => ((5 string-address))
mem: ((5 string-address)): 19487 <= 19450
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((19450 string) (raw))
mem: ((19450 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 19451 => ((6 byte-address))
mem: ((6 byte-address)): 19488 <= 19451
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\2 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 19451 <= #\2
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 19448 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 19448
run: integer-to-decimal-string/print-integer/print-board/main 19: 19448 => ((6 buffer-address))
mem: ((6 buffer-address)): 19393 <= 19448
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 19396 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((19448 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 19400 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((19449 string-address) (raw)) => 19450
run: integer-to-decimal-string/print-integer/print-board/main 24: 19450 => ((14 string-address))
mem: ((14 string-address)): 19401 <= 19450
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 19543 => ((15 string-address))
mem: ((15 string-address)): 19402 <= 19543
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 19403 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 19404 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 19396 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((19450 string) (raw))
mem: ((19450 integer) (raw)) => 30
mem: ((19451 byte) (raw)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 30: #\2 => ((18 byte))
mem: ((18 byte)): 19405 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((19543 string) (raw))
mem: ((19543 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 19544 => ((19 byte-address))
mem: ((19 byte-address)): 19406 <= 19544
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 32: #\2 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 19544 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 19403 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 19404 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 19396 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 19543
run: print-integer/print-board/main 3: 19543 => ((3 string-address))
mem: ((3 string-address)): 19359 <= 19543
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((3 string-address)) => 19543
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 19545 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 19543)
run: print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19547 <= 13645
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 19543)
run: print-string/print-integer/print-board/main 2: 19543 => ((2 string-address))
mem: ((2 string-address)): 19548 <= 19543
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((19543 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 19549 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 19550 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19551 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((19543 string) (raw))
mem: ((19543 integer) (raw)) => 1
mem: ((19544 byte) (raw)) => 2
run: print-string/print-integer/print-board/main 7: #\2 => ((6 character))
mem: ((6 character)): 19552 <= #\2
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => 2
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 19576 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\2)
run: print-character/print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19578 <= 13645
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\2)
run: print-character/print-string/print-integer/print-board/main 2: #\2 => ((2 character))
mem: ((2 character)): 19579 <= #\2
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\2)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19580 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\2)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19581 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19582 <= 13647
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19583 <= 13648
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19584 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19585 <= 120
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 120 => ((9 integer))
mem: ((9 integer)): 19586 <= 120
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-integer/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19587 <= 13650
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 120
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 13771 => ((11 byte-address))
mem: ((11 byte-address)): 19588 <= 13771
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: print-character/print-string/print-integer/print-board/main 13: #\2 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13771 <= #\2
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 19550 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 19551 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 19607 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 19607
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 19607
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 19611 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 19607)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19613 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 19607)
run: print-string/print-board/main 2: 19607 => ((2 string-address))
mem: ((2 string-address)): 19614 <= 19607
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((19607 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 19615 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 19616 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19617 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((19607 string) (raw))
mem: ((19607 integer) (raw)) => 3
mem: ((19608 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 19618 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 19642 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19644 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19645 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19646 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19647 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19648 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19649 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19650 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19651 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 121 => ((9 integer))
mem: ((9 integer)): 19652 <= 121
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19653 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 121
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13772 => ((11 byte-address))
mem: ((11 byte-address)): 19654 <= 13772
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13772 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 19616 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19617 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((19607 string) (raw))
mem: ((19607 integer) (raw)) => 3
mem: ((19609 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 19618 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 19673 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19675 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 19676 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19677 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19678 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19679 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19680 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19681 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19682 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 122 => ((9 integer))
mem: ((9 integer)): 19683 <= 122
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19684 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 122
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13773 => ((11 byte-address))
mem: ((11 byte-address)): 19685 <= 13773
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13773 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 19616 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19617 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((19607 string) (raw))
mem: ((19607 integer) (raw)) => 3
mem: ((19610 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 19618 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 19704 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19706 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19707 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19708 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19709 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19710 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19711 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19712 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19713 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 123 => ((9 integer))
mem: ((9 integer)): 19714 <= 123
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19715 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 123
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13774 => ((11 byte-address))
mem: ((11 byte-address)): 19716 <= 13774
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13774 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 19616 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 19617 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13890 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9318 file-address) (raw)) => 9357
run: print-board/main 13: 9357 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9357
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
mem: ((9359 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13889 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19735 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19737 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 19738 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19739 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19740 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19741 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19742 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19743 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19744 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 124 => ((9 integer))
mem: ((9 integer)): 19745 <= 124
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19746 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 124
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13775 => ((11 byte-address))
mem: ((11 byte-address)): 19747 <= 13775
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13775 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-board/main 15: (((reply)))
schedule: scheduling print-board/main for further processing
schedule: print-board/main
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19766 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19768 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19769 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19770 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19771 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19772 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19773 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19774 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19775 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 125 => ((9 integer))
mem: ((9 integer)): 19776 <= 125
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19777 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 125
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13776 => ((11 byte-address))
mem: ((11 byte-address)): 19778 <= 13776
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13776 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13890 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9319 file-address) (raw)) => 9893
run: print-board/main 13: 9893 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9893
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
mem: ((9895 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13889 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19797 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19799 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 19800 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19801 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19802 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19803 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19804 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19805 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19806 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 126 => ((9 integer))
mem: ((9 integer)): 19807 <= 126
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19808 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 126
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13777 => ((11 byte-address))
mem: ((11 byte-address)): 19809 <= 13777
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13777 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19828 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19830 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19831 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19832 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19833 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19834 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19835 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19836 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19837 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 127 => ((9 integer))
mem: ((9 integer)): 19838 <= 127
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19839 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 127
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13778 => ((11 byte-address))
mem: ((11 byte-address)): 19840 <= 13778
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13778 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13890 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9320 file-address) (raw)) => 10429
run: print-board/main 13: 10429 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10429
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
mem: ((10431 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13889 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19859 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19861 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 19862 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19863 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19864 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19865 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19866 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19867 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19868 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 128 => ((9 integer))
mem: ((9 integer)): 19869 <= 128
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19870 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 128
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13779 => ((11 byte-address))
mem: ((11 byte-address)): 19871 <= 13779
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13779 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19890 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19892 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19893 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19894 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19895 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19896 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19897 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19898 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19899 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 129 => ((9 integer))
mem: ((9 integer)): 19900 <= 129
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19901 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 129
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13780 => ((11 byte-address))
mem: ((11 byte-address)): 19902 <= 13780
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13780 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13890 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9321 file-address) (raw)) => 10965
run: print-board/main 13: 10965 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10965
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
mem: ((10967 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13889 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19921 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19923 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 19924 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19925 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19926 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19927 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19928 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19929 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19930 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 130 => ((9 integer))
mem: ((9 integer)): 19931 <= 130
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19932 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 130
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13781 => ((11 byte-address))
mem: ((11 byte-address)): 19933 <= 13781
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13781 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19952 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19954 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19955 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19956 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19957 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19958 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19959 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19960 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19961 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 131 => ((9 integer))
mem: ((9 integer)): 19962 <= 131
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19963 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 131
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13782 => ((11 byte-address))
mem: ((11 byte-address)): 19964 <= 13782
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13782 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13890 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9322 file-address) (raw)) => 11501
run: print-board/main 13: 11501 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 11501
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
mem: ((11503 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13889 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19983 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 19985 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 19986 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19987 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19988 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 19989 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 19990 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19991 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19992 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 132 => ((9 integer))
mem: ((9 integer)): 19993 <= 132
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 19994 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 132
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13783 => ((11 byte-address))
mem: ((11 byte-address)): 19995 <= 13783
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13783 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20014 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20016 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20017 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20018 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20019 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20020 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20021 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20022 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20023 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 133 => ((9 integer))
mem: ((9 integer)): 20024 <= 133
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20025 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 133
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13784 => ((11 byte-address))
mem: ((11 byte-address)): 20026 <= 13784
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13784 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13890 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9323 file-address) (raw)) => 12037
run: print-board/main 13: 12037 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12037
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
mem: ((12039 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13889 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20045 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20047 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 20048 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20049 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20050 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20051 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20052 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20053 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20054 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 134 => ((9 integer))
mem: ((9 integer)): 20055 <= 134
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20056 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 134
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13785 => ((11 byte-address))
mem: ((11 byte-address)): 20057 <= 13785
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13785 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20076 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20078 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20079 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20080 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20081 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20082 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20083 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20084 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20085 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 135 => ((9 integer))
mem: ((9 integer)): 20086 <= 135
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20087 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 135
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13786 => ((11 byte-address))
mem: ((11 byte-address)): 20088 <= 13786
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13786 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13890 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9324 file-address) (raw)) => 12573
run: print-board/main 13: 12573 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12573
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
mem: ((12575 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13889 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20107 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20109 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 20110 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20111 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20112 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20113 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20114 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20115 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20116 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 136 => ((9 integer))
mem: ((9 integer)): 20117 <= 136
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20118 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 136
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13787 => ((11 byte-address))
mem: ((11 byte-address)): 20119 <= 13787
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13787 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20138 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20140 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20141 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20142 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20143 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20144 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20145 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20146 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20147 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 137 => ((9 integer))
mem: ((9 integer)): 20148 <= 137
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20149 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 137
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13788 => ((11 byte-address))
mem: ((11 byte-address)): 20150 <= 13788
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13788 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13890 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9325 file-address) (raw)) => 13109
run: print-board/main 13: 13109 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 13109
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
mem: ((13111 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13889 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20169 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20171 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 20172 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20173 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20174 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20175 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20176 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20177 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20178 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 138 => ((9 integer))
mem: ((9 integer)): 20179 <= 138
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20180 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 138
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13789 => ((11 byte-address))
mem: ((11 byte-address)): 20181 <= 13789
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13789 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20200 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20202 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20203 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20204 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20205 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20206 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20207 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20208 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20209 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 139 => ((9 integer))
mem: ((9 integer)): 20210 <= 139
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20211 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 139
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13790 => ((11 byte-address))
mem: ((11 byte-address)): 20212 <= 13790
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13790 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13890 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13887 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: print-board/main 19: 0 => ((3 integer))
mem: ((3 integer)): 13886 <= 0
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 20231 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20233 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 20234 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 6
run: cursor-to-next-line/print-board/main 4: 7 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 7
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 20235 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 0
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: print-board/main 6: 1 => ((5 integer))
mem: ((5 integer)): 13888 <= 1
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 13645
mem: ((5 integer)) => 1
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 20262 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 1)
run: print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20264 <= 13645
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 1)
run: print-integer/print-board/main 2: 1 => ((2 integer))
mem: ((2 integer)): 20265 <= 1
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 20293 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (1)
run: integer-to-decimal-string/print-integer/print-board/main 1: 1 => ((1 integer))
mem: ((1 integer)): 20295 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 20296 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 20298 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 20299 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 20324 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 20355 => ((1 buffer-address))
mem: ((1 buffer-address)): 20326 <= 20355
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 20355 => ((2 integer-address))
mem: ((2 integer-address)): 20327 <= 20355
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 20355 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 20356 => ((3 string-address-address))
mem: ((3 string-address-address)): 20328 <= 20356
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 20329 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 20357 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 20356 <= 20357
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 20355
run: integer-to-decimal-string/print-integer/print-board/main 11: 20355 => ((6 buffer-address))
mem: ((6 buffer-address)): 20300 <= 20355
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 20301 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 20302 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 20303 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 1
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 20295 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 1 => ((10 integer))
mem: ((10 integer)): 20304 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 17: 49 => ((11 integer))
mem: ((11 integer)): 20305 <= 49
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 49
run: integer-to-decimal-string/print-integer/print-board/main 18: #\1 => ((12 character))
mem: ((12 character)): 20306 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 20355
mem: ((12 character)) => 1
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 20388 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (20355 #\1)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 20355 => ((1 buffer-address))
mem: ((1 buffer-address)): 20390 <= 20355
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (20355 #\1)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\1 => ((2 character))
mem: ((2 character)): 20391 <= #\1
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 20355
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 20419 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (20355)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 20355 => ((1 buffer-address))
mem: ((1 buffer-address)): 20421 <= 20355
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((20355 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 20422 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((20356 string-address) (raw)) => 20357
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 20357 => ((3 string-address))
mem: ((3 string-address)): 20423 <= 20357
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((20357 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 20424 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20425 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 20392 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 20355 => ((4 integer-address))
mem: ((4 integer-address)): 20393 <= 20355
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((20356 string-address) (raw)) => 20357
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 20357 => ((5 string-address))
mem: ((5 string-address)): 20394 <= 20357
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((20357 string) (raw))
mem: ((20357 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 20358 => ((6 byte-address))
mem: ((6 byte-address)): 20395 <= 20358
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 1
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\1 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 20358 <= #\1
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 20355 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 20355
run: integer-to-decimal-string/print-integer/print-board/main 19: 20355 => ((6 buffer-address))
mem: ((6 buffer-address)): 20300 <= 20355
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 20303 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((20355 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 20307 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((20356 string-address) (raw)) => 20357
run: integer-to-decimal-string/print-integer/print-board/main 24: 20357 => ((14 string-address))
mem: ((14 string-address)): 20308 <= 20357
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 20450 => ((15 string-address))
mem: ((15 string-address)): 20309 <= 20450
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 20310 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 20311 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 20303 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((20357 string) (raw))
mem: ((20357 integer) (raw)) => 30
mem: ((20358 byte) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 30: #\1 => ((18 byte))
mem: ((18 byte)): 20312 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((20450 string) (raw))
mem: ((20450 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 20451 => ((19 byte-address))
mem: ((19 byte-address)): 20313 <= 20451
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 32: #\1 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 20451 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 20310 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 20311 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 20303 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 20450
run: print-integer/print-board/main 3: 20450 => ((3 string-address))
mem: ((3 string-address)): 20266 <= 20450
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((3 string-address)) => 20450
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 20452 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 20450)
run: print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20454 <= 13645
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 20450)
run: print-string/print-integer/print-board/main 2: 20450 => ((2 string-address))
mem: ((2 string-address)): 20455 <= 20450
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((20450 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 20456 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 20457 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20458 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((20450 string) (raw))
mem: ((20450 integer) (raw)) => 1
mem: ((20451 byte) (raw)) => 1
run: print-string/print-integer/print-board/main 7: #\1 => ((6 character))
mem: ((6 character)): 20459 <= #\1
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => 1
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 20483 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\1)
run: print-character/print-string/print-integer/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20485 <= 13645
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\1)
run: print-character/print-string/print-integer/print-board/main 2: #\1 => ((2 character))
mem: ((2 character)): 20486 <= #\1
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\1)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20487 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\1)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20488 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20489 <= 13647
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20490 <= 13648
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20491 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20492 <= 140
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 140 => ((9 integer))
mem: ((9 integer)): 20493 <= 140
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-integer/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20494 <= 13650
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 140
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 13791 => ((11 byte-address))
mem: ((11 byte-address)): 20495 <= 13791
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 1
run: print-character/print-string/print-integer/print-board/main 13: #\1 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13791 <= #\1
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 20457 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 20458 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 20514 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 20514
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 20514
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 20518 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 20514)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20520 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 20514)
run: print-string/print-board/main 2: 20514 => ((2 string-address))
mem: ((2 string-address)): 20521 <= 20514
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((20514 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 20522 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 20523 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20524 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((20514 string) (raw))
mem: ((20514 integer) (raw)) => 3
mem: ((20515 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 20525 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 20549 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20551 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20552 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20553 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20554 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20555 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20556 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20557 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20558 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 141 => ((9 integer))
mem: ((9 integer)): 20559 <= 141
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20560 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 141
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13792 => ((11 byte-address))
mem: ((11 byte-address)): 20561 <= 13792
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13792 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 20523 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20524 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((20514 string) (raw))
mem: ((20514 integer) (raw)) => 3
mem: ((20516 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 20525 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 20580 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20582 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 20583 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20584 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20585 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20586 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20587 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20588 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20589 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 142 => ((9 integer))
mem: ((9 integer)): 20590 <= 142
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20591 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 142
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13793 => ((11 byte-address))
mem: ((11 byte-address)): 20592 <= 13793
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13793 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 20523 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20524 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((20514 string) (raw))
mem: ((20514 integer) (raw)) => 3
mem: ((20517 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 20525 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 20611 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20613 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20614 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20615 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20616 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20617 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20618 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20619 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20620 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 143 => ((9 integer))
mem: ((9 integer)): 20621 <= 143
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20622 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 143
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13794 => ((11 byte-address))
mem: ((11 byte-address)): 20623 <= 13794
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13794 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 20523 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 20524 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13890 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9318 file-address) (raw)) => 9357
run: print-board/main 13: 9357 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9357
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((9357 file) (raw))
mem: ((9357 integer) (raw)) => 8
mem: ((9358 square) (raw)) => R
run: print-board/main 14: #\R => ((6 square))
mem: ((6 square)): 13889 <= #\R
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => R
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20642 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\R)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20644 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\R)
run: print-character/print-board/main 2: #\R => ((2 character))
mem: ((2 character)): 20645 <= #\R
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\R)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20646 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\R)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20647 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20648 <= 13647
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20649 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20650 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20651 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 144 => ((9 integer))
mem: ((9 integer)): 20652 <= 144
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20653 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 144
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13795 => ((11 byte-address))
mem: ((11 byte-address)): 20654 <= 13795
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => R
run: print-character/print-board/main 13: #\R => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13795 <= #\R
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20673 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20675 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20676 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20677 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20678 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20679 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20680 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20681 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20682 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 145 => ((9 integer))
mem: ((9 integer)): 20683 <= 145
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20684 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 145
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13796 => ((11 byte-address))
mem: ((11 byte-address)): 20685 <= 13796
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13796 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13890 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9319 file-address) (raw)) => 9893
run: print-board/main 13: 9893 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 9893
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((9893 file) (raw))
mem: ((9893 integer) (raw)) => 8
mem: ((9894 square) (raw)) => N
run: print-board/main 14: #\N => ((6 square))
mem: ((6 square)): 13889 <= #\N
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => N
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20704 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\N)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20706 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\N)
run: print-character/print-board/main 2: #\N => ((2 character))
mem: ((2 character)): 20707 <= #\N
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\N)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20708 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\N)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20709 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20710 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20711 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20712 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20713 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 146 => ((9 integer))
mem: ((9 integer)): 20714 <= 146
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20715 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 146
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13797 => ((11 byte-address))
mem: ((11 byte-address)): 20716 <= 13797
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => N
run: print-character/print-board/main 13: #\N => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13797 <= #\N
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20735 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20737 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20738 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20739 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20740 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20741 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20742 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20743 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20744 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 147 => ((9 integer))
mem: ((9 integer)): 20745 <= 147
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20746 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 147
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13798 => ((11 byte-address))
mem: ((11 byte-address)): 20747 <= 13798
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13798 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13890 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9320 file-address) (raw)) => 10429
run: print-board/main 13: 10429 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10429
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((10429 file) (raw))
mem: ((10429 integer) (raw)) => 8
mem: ((10430 square) (raw)) => B
run: print-board/main 14: #\B => ((6 square))
mem: ((6 square)): 13889 <= #\B
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => B
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20766 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\B)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20768 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\B)
run: print-character/print-board/main 2: #\B => ((2 character))
mem: ((2 character)): 20769 <= #\B
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\B)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20770 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\B)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20771 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20772 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20773 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20774 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20775 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 148 => ((9 integer))
mem: ((9 integer)): 20776 <= 148
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20777 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 148
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13799 => ((11 byte-address))
mem: ((11 byte-address)): 20778 <= 13799
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => B
run: print-character/print-board/main 13: #\B => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13799 <= #\B
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20797 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20799 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20800 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20801 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20802 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20803 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20804 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20805 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20806 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 149 => ((9 integer))
mem: ((9 integer)): 20807 <= 149
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20808 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 149
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13800 => ((11 byte-address))
mem: ((11 byte-address)): 20809 <= 13800
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13800 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13890 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9321 file-address) (raw)) => 10965
run: print-board/main 13: 10965 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 10965
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((10965 file) (raw))
mem: ((10965 integer) (raw)) => 8
mem: ((10966 square) (raw)) => Q
run: print-board/main 14: #\Q => ((6 square))
mem: ((6 square)): 13889 <= #\Q
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => Q
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20828 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\Q)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20830 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\Q)
run: print-character/print-board/main 2: #\Q => ((2 character))
mem: ((2 character)): 20831 <= #\Q
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\Q)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20832 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\Q)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20833 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20834 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20835 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20836 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20837 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 150 => ((9 integer))
mem: ((9 integer)): 20838 <= 150
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20839 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 150
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13801 => ((11 byte-address))
mem: ((11 byte-address)): 20840 <= 13801
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => Q
run: print-character/print-board/main 13: #\Q => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13801 <= #\Q
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20859 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20861 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20862 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20863 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20864 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20865 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20866 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20867 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20868 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 151 => ((9 integer))
mem: ((9 integer)): 20869 <= 151
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20870 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 151
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13802 => ((11 byte-address))
mem: ((11 byte-address)): 20871 <= 13802
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13802 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13890 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9322 file-address) (raw)) => 11501
run: print-board/main 13: 11501 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 11501
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((11501 file) (raw))
mem: ((11501 integer) (raw)) => 8
mem: ((11502 square) (raw)) => K
run: print-board/main 14: #\K => ((6 square))
mem: ((6 square)): 13889 <= #\K
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => K
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20890 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\K)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20892 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\K)
run: print-character/print-board/main 2: #\K => ((2 character))
mem: ((2 character)): 20893 <= #\K
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\K)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20894 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\K)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20895 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20896 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20897 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20898 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20899 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 152 => ((9 integer))
mem: ((9 integer)): 20900 <= 152
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20901 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 152
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13803 => ((11 byte-address))
mem: ((11 byte-address)): 20902 <= 13803
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => K
run: print-character/print-board/main 13: #\K => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13803 <= #\K
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20921 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20923 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20924 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20925 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20926 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20927 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20928 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20929 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20930 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 153 => ((9 integer))
mem: ((9 integer)): 20931 <= 153
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20932 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 153
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13804 => ((11 byte-address))
mem: ((11 byte-address)): 20933 <= 13804
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13804 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13890 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9323 file-address) (raw)) => 12037
run: print-board/main 13: 12037 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12037
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((12037 file) (raw))
mem: ((12037 integer) (raw)) => 8
mem: ((12038 square) (raw)) => B
run: print-board/main 14: #\B => ((6 square))
mem: ((6 square)): 13889 <= #\B
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => B
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20952 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\B)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20954 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\B)
run: print-character/print-board/main 2: #\B => ((2 character))
mem: ((2 character)): 20955 <= #\B
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\B)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20956 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\B)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20957 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20958 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20959 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20960 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20961 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 154 => ((9 integer))
mem: ((9 integer)): 20962 <= 154
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20963 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 154
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13805 => ((11 byte-address))
mem: ((11 byte-address)): 20964 <= 13805
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => B
run: print-character/print-board/main 13: #\B => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13805 <= #\B
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20983 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 20985 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20986 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20987 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20988 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 20989 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 20990 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20991 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20992 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 155 => ((9 integer))
mem: ((9 integer)): 20993 <= 155
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 20994 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 155
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13806 => ((11 byte-address))
mem: ((11 byte-address)): 20995 <= 13806
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13806 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13890 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9324 file-address) (raw)) => 12573
run: print-board/main 13: 12573 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 12573
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((12573 file) (raw))
mem: ((12573 integer) (raw)) => 8
mem: ((12574 square) (raw)) => N
run: print-board/main 14: #\N => ((6 square))
mem: ((6 square)): 13889 <= #\N
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => N
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21014 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\N)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21016 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\N)
run: print-character/print-board/main 2: #\N => ((2 character))
mem: ((2 character)): 21017 <= #\N
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\N)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21018 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\N)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21019 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21020 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21021 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21022 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21023 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 156 => ((9 integer))
mem: ((9 integer)): 21024 <= 156
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21025 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 156
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13807 => ((11 byte-address))
mem: ((11 byte-address)): 21026 <= 13807
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => N
run: print-character/print-board/main 13: #\N => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13807 <= #\N
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21045 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21047 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21048 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21049 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21050 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21051 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21052 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21053 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21054 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 157 => ((9 integer))
mem: ((9 integer)): 21055 <= 157
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21056 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 157
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13808 => ((11 byte-address))
mem: ((11 byte-address)): 21057 <= 13808
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13808 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13890 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13887 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9317 board) (raw))
mem: ((9317 integer) (raw)) => 8
mem: ((9325 file-address) (raw)) => 13109
run: print-board/main 13: 13109 => ((8 file-address))
mem: ((8 file-address)): 13891 <= 13109
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((13109 file) (raw))
mem: ((13109 integer) (raw)) => 8
mem: ((13110 square) (raw)) => R
run: print-board/main 14: #\R => ((6 square))
mem: ((6 square)): 13889 <= #\R
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 13645
mem: ((6 square)) => R
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21076 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\R)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21078 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\R)
run: print-character/print-board/main 2: #\R => ((2 character))
mem: ((2 character)): 21079 <= #\R
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\R)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21080 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\R)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21081 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21082 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21083 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21084 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21085 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 158 => ((9 integer))
mem: ((9 integer)): 21086 <= 158
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21087 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 158
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13809 => ((11 byte-address))
mem: ((11 byte-address)): 21088 <= 13809
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => R
run: print-character/print-board/main 13: #\R => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13809 <= #\R
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21107 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21109 <= 13645
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21110 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21111 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21112 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21113 <= 13647
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21114 <= 13648
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21115 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21116 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 159 => ((9 integer))
mem: ((9 integer)): 21117 <= 159
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21118 <= 13650
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 159
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-board/main 12: 13810 => ((11 byte-address))
mem: ((11 byte-address)): 21119 <= 13810
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13810 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13890 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13887 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: print-board/main 19: -1 => ((3 integer))
mem: ((3 integer)): 13886 <= -1
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 21138 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21140 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 21141 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 7
run: cursor-to-next-line/print-board/main 4: 8 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 8
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 21142 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => -1
run: print-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 13887 <= t
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => t
run: print-board/main 22: (((6 string-address)) <- ((new))   +----------------)
run: print-board/main 22: 21169 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 21169
run: print-board/main 23: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 21169
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 21189 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 21169)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21191 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 21169)
run: print-string/print-board/main 2: 21169 => ((2 string-address))
mem: ((2 string-address)): 21192 <= 21169
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((21169 integer) (raw)) => 19
run: print-string/print-board/main 3: 19 => ((3 integer))
mem: ((3 integer)): 21193 <= 19
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 21194 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21170 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21196 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21220 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21222 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21223 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21224 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21225 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21226 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21227 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21228 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21229 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 10: 160 => ((9 integer))
mem: ((9 integer)): 21230 <= 160
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21231 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 160
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13811 => ((11 byte-address))
mem: ((11 byte-address)): 21232 <= 13811
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13811 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 21194 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21171 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21196 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21251 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21253 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21254 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21255 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21256 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21257 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21258 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21259 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21260 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 161 => ((9 integer))
mem: ((9 integer)): 21261 <= 161
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21262 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 161
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13812 => ((11 byte-address))
mem: ((11 byte-address)): 21263 <= 13812
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13812 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 21194 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21172 byte) (raw)) => +
run: print-string/print-board/main 7: #\+ => ((6 character))
mem: ((6 character)): 21196 <= #\+
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => +
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21282 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\+)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21284 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\+)
run: print-character/print-string/print-board/main 2: #\+ => ((2 character))
mem: ((2 character)): 21285 <= #\+
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\+)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21286 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\+)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21287 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21288 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21289 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21290 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21291 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 162 => ((9 integer))
mem: ((9 integer)): 21292 <= 162
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21293 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 162
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13813 => ((11 byte-address))
mem: ((11 byte-address)): 21294 <= 13813
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => +
run: print-character/print-string/print-board/main 13: #\+ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13813 <= #\+
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 21194 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21173 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21313 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21315 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21316 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21317 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21318 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21319 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21320 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21321 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21322 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 163 => ((9 integer))
mem: ((9 integer)): 21323 <= 163
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21324 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 163
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13814 => ((11 byte-address))
mem: ((11 byte-address)): 21325 <= 13814
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13814 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: print-string/print-board/main 9: 4 => ((4 integer))
mem: ((4 integer)): 21194 <= 4
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21174 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21344 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21346 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21347 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21348 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21349 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21350 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21351 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21352 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21353 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 10: 164 => ((9 integer))
mem: ((9 integer)): 21354 <= 164
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21355 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 164
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13815 => ((11 byte-address))
mem: ((11 byte-address)): 21356 <= 13815
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13815 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: print-string/print-board/main 9: 5 => ((4 integer))
mem: ((4 integer)): 21194 <= 5
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21175 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21375 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21377 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21378 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21379 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21380 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21381 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21382 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21383 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21384 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 10: 165 => ((9 integer))
mem: ((9 integer)): 21385 <= 165
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21386 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 165
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13816 => ((11 byte-address))
mem: ((11 byte-address)): 21387 <= 13816
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13816 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: print-string/print-board/main 9: 6 => ((4 integer))
mem: ((4 integer)): 21194 <= 6
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21176 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21406 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21408 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21409 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21410 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21411 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21412 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21413 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21414 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21415 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 10: 166 => ((9 integer))
mem: ((9 integer)): 21416 <= 166
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21417 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 166
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13817 => ((11 byte-address))
mem: ((11 byte-address)): 21418 <= 13817
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13817 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: print-string/print-board/main 9: 7 => ((4 integer))
mem: ((4 integer)): 21194 <= 7
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21177 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21437 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21439 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21440 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21441 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21442 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21443 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21444 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21445 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21446 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 10: 167 => ((9 integer))
mem: ((9 integer)): 21447 <= 167
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21448 <= 13650
schedule: scheduling print-character/print-string/print-board/main for further processing
schedule: print-character/print-string/print-board/main
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 167
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13818 => ((11 byte-address))
mem: ((11 byte-address)): 21449 <= 13818
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13818 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: print-string/print-board/main 9: 8 => ((4 integer))
mem: ((4 integer)): 21194 <= 8
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21178 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21468 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21470 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21471 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21472 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21473 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21474 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21475 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21476 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21477 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 10: 168 => ((9 integer))
mem: ((9 integer)): 21478 <= 168
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21479 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 168
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13819 => ((11 byte-address))
mem: ((11 byte-address)): 21480 <= 13819
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13819 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: print-string/print-board/main 9: 9 => ((4 integer))
mem: ((4 integer)): 21194 <= 9
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21179 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21499 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21501 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21502 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21503 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21504 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21505 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21506 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21507 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21508 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 10: 169 => ((9 integer))
mem: ((9 integer)): 21509 <= 169
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21510 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 169
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13820 => ((11 byte-address))
mem: ((11 byte-address)): 21511 <= 13820
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13820 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: print-string/print-board/main 9: 10 => ((4 integer))
mem: ((4 integer)): 21194 <= 10
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21180 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21530 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21532 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21533 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21534 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21535 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21536 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21537 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21538 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21539 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 10: 170 => ((9 integer))
mem: ((9 integer)): 21540 <= 170
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21541 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 170
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13821 => ((11 byte-address))
mem: ((11 byte-address)): 21542 <= 13821
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13821 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: print-string/print-board/main 9: 11 => ((4 integer))
mem: ((4 integer)): 21194 <= 11
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21181 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21561 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21563 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21564 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21565 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21566 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21567 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21568 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21569 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21570 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 10: 171 => ((9 integer))
mem: ((9 integer)): 21571 <= 171
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21572 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 171
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13822 => ((11 byte-address))
mem: ((11 byte-address)): 21573 <= 13822
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13822 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: print-string/print-board/main 9: 12 => ((4 integer))
mem: ((4 integer)): 21194 <= 12
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21182 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21592 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21594 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21595 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21596 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21597 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21598 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21599 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21600 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21601 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 10: 172 => ((9 integer))
mem: ((9 integer)): 21602 <= 172
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21603 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 172
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13823 => ((11 byte-address))
mem: ((11 byte-address)): 21604 <= 13823
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13823 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: print-string/print-board/main 9: 13 => ((4 integer))
mem: ((4 integer)): 21194 <= 13
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21183 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21623 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21625 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21626 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21627 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21628 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21629 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21630 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21631 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21632 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 10: 173 => ((9 integer))
mem: ((9 integer)): 21633 <= 173
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21634 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 173
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13824 => ((11 byte-address))
mem: ((11 byte-address)): 21635 <= 13824
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13824 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: print-string/print-board/main 9: 14 => ((4 integer))
mem: ((4 integer)): 21194 <= 14
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21184 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21654 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21656 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21657 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21658 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21659 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21660 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21661 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21662 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21663 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 10: 174 => ((9 integer))
mem: ((9 integer)): 21664 <= 174
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21665 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 174
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13825 => ((11 byte-address))
mem: ((11 byte-address)): 21666 <= 13825
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13825 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: print-string/print-board/main 9: 15 => ((4 integer))
mem: ((4 integer)): 21194 <= 15
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21185 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21685 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21687 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21688 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21689 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21690 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21691 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21692 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21693 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21694 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 10: 175 => ((9 integer))
mem: ((9 integer)): 21695 <= 175
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21696 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 175
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13826 => ((11 byte-address))
mem: ((11 byte-address)): 21697 <= 13826
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13826 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: print-string/print-board/main 9: 16 => ((4 integer))
mem: ((4 integer)): 21194 <= 16
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21186 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21716 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21718 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21719 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21720 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21721 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21722 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21723 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21724 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21725 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 10: 176 => ((9 integer))
mem: ((9 integer)): 21726 <= 176
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21727 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 176
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13827 => ((11 byte-address))
mem: ((11 byte-address)): 21728 <= 13827
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13827 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: print-string/print-board/main 9: 17 => ((4 integer))
mem: ((4 integer)): 21194 <= 17
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21187 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21747 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21749 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21750 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21751 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21752 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21753 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21754 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21755 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21756 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 10: 177 => ((9 integer))
mem: ((9 integer)): 21757 <= 177
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21758 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 177
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13828 => ((11 byte-address))
mem: ((11 byte-address)): 21759 <= 13828
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13828 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: print-string/print-board/main 9: 18 => ((4 integer))
mem: ((4 integer)): 21194 <= 18
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21195 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((21169 string) (raw))
mem: ((21169 integer) (raw)) => 19
mem: ((21188 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21196 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21778 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21780 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21781 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21782 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21783 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21784 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21785 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21786 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21787 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 10: 178 => ((9 integer))
mem: ((9 integer)): 21788 <= 178
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21789 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 178
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13829 => ((11 byte-address))
mem: ((11 byte-address)): 21790 <= 13829
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13829 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: print-string/print-board/main 9: 19 => ((4 integer))
mem: ((4 integer)): 21194 <= 19
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 21195 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 24: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 21809 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21811 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 21812 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 8
run: cursor-to-next-line/print-board/main 4: 9 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 9
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 21813 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 25: (((6 string-address)) <- ((new))     a b c d e f g h)
run: print-board/main 25: 21840 => ((6 string-address))
mem: ((6 string-address)): 13889 <= 21840
run: print-board/main 26: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 13645
mem: ((6 string-address)) => 21840
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 21860 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 21840)
run: print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21862 <= 13645
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 21840)
run: print-string/print-board/main 2: 21840 => ((2 string-address))
mem: ((2 string-address)): 21863 <= 21840
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((21840 integer) (raw)) => 19
run: print-string/print-board/main 3: 19 => ((3 integer))
mem: ((3 integer)): 21864 <= 19
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 21865 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21841 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21891 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21893 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21894 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21895 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21896 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21897 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21898 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21899 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 21900 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 10: 180 => ((9 integer))
mem: ((9 integer)): 21901 <= 180
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21902 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 180
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13831 => ((11 byte-address))
mem: ((11 byte-address)): 21903 <= 13831
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13831 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 1
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 21865 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21842 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21922 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21924 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21925 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21926 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21927 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21928 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21929 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21930 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 21931 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 181 => ((9 integer))
mem: ((9 integer)): 21932 <= 181
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21933 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 181
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13832 => ((11 byte-address))
mem: ((11 byte-address)): 21934 <= 13832
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13832 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 21865 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21843 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21953 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21955 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21956 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21957 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21958 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21959 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21960 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21961 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 21962 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 182 => ((9 integer))
mem: ((9 integer)): 21963 <= 182
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21964 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 182
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13833 => ((11 byte-address))
mem: ((11 byte-address)): 21965 <= 13833
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13833 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 21865 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21844 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21984 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 21986 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21987 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21988 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21989 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 21990 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 21991 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21992 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 21993 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 183 => ((9 integer))
mem: ((9 integer)): 21994 <= 183
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 21995 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 183
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13834 => ((11 byte-address))
mem: ((11 byte-address)): 21996 <= 13834
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13834 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: print-string/print-board/main 9: 4 => ((4 integer))
mem: ((4 integer)): 21865 <= 4
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21845 byte) (raw)) => a
run: print-string/print-board/main 7: #\a => ((6 character))
mem: ((6 character)): 21867 <= #\a
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => a
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22015 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\a)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22017 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\a)
run: print-character/print-string/print-board/main 2: #\a => ((2 character))
mem: ((2 character)): 22018 <= #\a
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\a)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22019 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\a)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22020 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22021 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22022 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22023 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22024 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 10: 184 => ((9 integer))
mem: ((9 integer)): 22025 <= 184
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22026 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 184
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13835 => ((11 byte-address))
mem: ((11 byte-address)): 22027 <= 13835
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => a
run: print-character/print-string/print-board/main 13: #\a => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13835 <= #\a
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 5
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: print-string/print-board/main 9: 5 => ((4 integer))
mem: ((4 integer)): 21865 <= 5
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21846 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22046 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22048 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22049 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22050 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22051 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22052 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22053 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22054 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22055 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 10: 185 => ((9 integer))
mem: ((9 integer)): 22056 <= 185
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22057 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 185
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13836 => ((11 byte-address))
mem: ((11 byte-address)): 22058 <= 13836
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13836 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 6
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: print-string/print-board/main 9: 6 => ((4 integer))
mem: ((4 integer)): 21865 <= 6
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21847 byte) (raw)) => b
run: print-string/print-board/main 7: #\b => ((6 character))
mem: ((6 character)): 21867 <= #\b
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => b
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22077 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\b)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22079 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\b)
run: print-character/print-string/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 22080 <= #\b
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\b)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22081 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\b)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22082 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22083 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22084 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22085 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22086 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 10: 186 => ((9 integer))
mem: ((9 integer)): 22087 <= 186
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22088 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 186
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13837 => ((11 byte-address))
mem: ((11 byte-address)): 22089 <= 13837
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-string/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13837 <= #\b
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 7
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: print-string/print-board/main 9: 7 => ((4 integer))
mem: ((4 integer)): 21865 <= 7
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21848 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22108 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22110 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22111 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22112 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22113 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22114 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22115 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22116 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22117 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 10: 187 => ((9 integer))
mem: ((9 integer)): 22118 <= 187
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22119 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 187
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13838 => ((11 byte-address))
mem: ((11 byte-address)): 22120 <= 13838
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13838 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 8
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: print-string/print-board/main 9: 8 => ((4 integer))
mem: ((4 integer)): 21865 <= 8
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21849 byte) (raw)) => c
run: print-string/print-board/main 7: #\c => ((6 character))
mem: ((6 character)): 21867 <= #\c
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => c
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22139 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\c)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22141 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\c)
run: print-character/print-string/print-board/main 2: #\c => ((2 character))
mem: ((2 character)): 22142 <= #\c
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\c)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22143 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\c)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22144 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22145 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22146 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22147 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22148 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 10: 188 => ((9 integer))
mem: ((9 integer)): 22149 <= 188
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22150 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 188
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13839 => ((11 byte-address))
mem: ((11 byte-address)): 22151 <= 13839
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => c
run: print-character/print-string/print-board/main 13: #\c => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13839 <= #\c
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 9
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: print-string/print-board/main 9: 9 => ((4 integer))
mem: ((4 integer)): 21865 <= 9
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21850 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22170 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22172 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22173 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22174 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22175 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22176 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22177 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22178 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22179 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 10: 189 => ((9 integer))
mem: ((9 integer)): 22180 <= 189
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22181 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 189
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13840 => ((11 byte-address))
mem: ((11 byte-address)): 22182 <= 13840
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13840 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 10
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: print-string/print-board/main 9: 10 => ((4 integer))
mem: ((4 integer)): 21865 <= 10
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21851 byte) (raw)) => d
run: print-string/print-board/main 7: #\d => ((6 character))
mem: ((6 character)): 21867 <= #\d
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => d
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22201 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\d)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22203 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\d)
run: print-character/print-string/print-board/main 2: #\d => ((2 character))
mem: ((2 character)): 22204 <= #\d
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\d)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22205 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\d)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22206 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22207 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22208 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22209 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22210 <= 180
schedule: scheduling print-character/print-string/print-board/main for further processing
schedule: print-character/print-string/print-board/main
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 10: 190 => ((9 integer))
mem: ((9 integer)): 22211 <= 190
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22212 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 190
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13841 => ((11 byte-address))
mem: ((11 byte-address)): 22213 <= 13841
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => d
run: print-character/print-string/print-board/main 13: #\d => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13841 <= #\d
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 11
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: print-string/print-board/main 9: 11 => ((4 integer))
mem: ((4 integer)): 21865 <= 11
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21852 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22232 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22234 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22235 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22236 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22237 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22238 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22239 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22240 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22241 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 10: 191 => ((9 integer))
mem: ((9 integer)): 22242 <= 191
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22243 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 191
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13842 => ((11 byte-address))
mem: ((11 byte-address)): 22244 <= 13842
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13842 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 12
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: print-string/print-board/main 9: 12 => ((4 integer))
mem: ((4 integer)): 21865 <= 12
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21853 byte) (raw)) => e
run: print-string/print-board/main 7: #\e => ((6 character))
mem: ((6 character)): 21867 <= #\e
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => e
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22263 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\e)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22265 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\e)
run: print-character/print-string/print-board/main 2: #\e => ((2 character))
mem: ((2 character)): 22266 <= #\e
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\e)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22267 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\e)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22268 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22269 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22270 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22271 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22272 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 10: 192 => ((9 integer))
mem: ((9 integer)): 22273 <= 192
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22274 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 192
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13843 => ((11 byte-address))
mem: ((11 byte-address)): 22275 <= 13843
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => e
run: print-character/print-string/print-board/main 13: #\e => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13843 <= #\e
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 13
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: print-string/print-board/main 9: 13 => ((4 integer))
mem: ((4 integer)): 21865 <= 13
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21854 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22294 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22296 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22297 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22298 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22299 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22300 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22301 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22302 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22303 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 10: 193 => ((9 integer))
mem: ((9 integer)): 22304 <= 193
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22305 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 193
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13844 => ((11 byte-address))
mem: ((11 byte-address)): 22306 <= 13844
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13844 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 14
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: print-string/print-board/main 9: 14 => ((4 integer))
mem: ((4 integer)): 21865 <= 14
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21855 byte) (raw)) => f
run: print-string/print-board/main 7: #\f => ((6 character))
mem: ((6 character)): 21867 <= #\f
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => f
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22325 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\f)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22327 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\f)
run: print-character/print-string/print-board/main 2: #\f => ((2 character))
mem: ((2 character)): 22328 <= #\f
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\f)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22329 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\f)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22330 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22331 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22332 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22333 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22334 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 10: 194 => ((9 integer))
mem: ((9 integer)): 22335 <= 194
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22336 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 194
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13845 => ((11 byte-address))
mem: ((11 byte-address)): 22337 <= 13845
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => f
run: print-character/print-string/print-board/main 13: #\f => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13845 <= #\f
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 15
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: print-string/print-board/main 9: 15 => ((4 integer))
mem: ((4 integer)): 21865 <= 15
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21856 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22356 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22358 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22359 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22360 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22361 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22362 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22363 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22364 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22365 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 10: 195 => ((9 integer))
mem: ((9 integer)): 22366 <= 195
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22367 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 195
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13846 => ((11 byte-address))
mem: ((11 byte-address)): 22368 <= 13846
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13846 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 16
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: print-string/print-board/main 9: 16 => ((4 integer))
mem: ((4 integer)): 21865 <= 16
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21857 byte) (raw)) => g
run: print-string/print-board/main 7: #\g => ((6 character))
mem: ((6 character)): 21867 <= #\g
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => g
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22387 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\g)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22389 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\g)
run: print-character/print-string/print-board/main 2: #\g => ((2 character))
mem: ((2 character)): 22390 <= #\g
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\g)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22391 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\g)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22392 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22393 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22394 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22395 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22396 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 10: 196 => ((9 integer))
mem: ((9 integer)): 22397 <= 196
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22398 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 196
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13847 => ((11 byte-address))
mem: ((11 byte-address)): 22399 <= 13847
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => g
run: print-character/print-string/print-board/main 13: #\g => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13847 <= #\g
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 17
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: print-string/print-board/main 9: 17 => ((4 integer))
mem: ((4 integer)): 21865 <= 17
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21858 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21867 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22418 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22420 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22421 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22422 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22423 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22424 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22425 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22426 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22427 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 10: 197 => ((9 integer))
mem: ((9 integer)): 22428 <= 197
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22429 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 197
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13848 => ((11 byte-address))
mem: ((11 byte-address)): 22430 <= 13848
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13848 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 18
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: print-string/print-board/main 9: 18 => ((4 integer))
mem: ((4 integer)): 21865 <= 18
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21866 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((21840 string) (raw))
mem: ((21840 integer) (raw)) => 19
mem: ((21859 byte) (raw)) => h
run: print-string/print-board/main 7: #\h => ((6 character))
mem: ((6 character)): 21867 <= #\h
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 13645
mem: ((6 character)) => h
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22449 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\h)
run: print-character/print-string/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22451 <= 13645
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\h)
run: print-character/print-string/print-board/main 2: #\h => ((2 character))
mem: ((2 character)): 22452 <= #\h
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (13645 #\h)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22453 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (13645 #\h)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22454 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 13645
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 13647 => ((5 integer-address))
mem: ((5 integer-address)): 22455 <= 13647
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 13648 => ((6 integer-address))
mem: ((6 integer-address)): 22456 <= 13648
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((13646 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22457 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22458 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 10: 198 => ((9 integer))
mem: ((9 integer)): 22459 <= 198
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: print-character/print-string/print-board/main 11: 13650 => ((10 string-address))
mem: ((10 string-address)): 22460 <= 13650
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 198
array-len: ((13650 string) (raw))
mem: ((13650 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 13849 => ((11 byte-address))
mem: ((11 byte-address)): 22461 <= 13849
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => h
run: print-character/print-string/print-board/main 13: #\h => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 13849 <= #\h
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 13648 <= 19
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: print-string/print-board/main 9: 19 => ((4 integer))
mem: ((4 integer)): 21865 <= 19
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 21866 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 27: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 22480 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: cursor-to-next-line/print-board/main 1: 13645 => ((1 terminal-address))
mem: ((1 terminal-address)): 22482 <= 13645
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 13645
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 13647 => ((2 integer-address))
mem: ((2 integer-address)): 22483 <= 13647
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 9
run: cursor-to-next-line/print-board/main 4: 10 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 13647 <= 10
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 13648 => ((3 integer-address))
mem: ((3 integer-address)): 22484 <= 13648
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 13648 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: main 5: (((1 string-address) (raw)) <- ((get)) ((3 terminal-address) (deref)) ((4 offset)))
mem: ((13649 string-address) (raw)) => 13650
run: main 5: 13650 => ((1 string-address) (raw))
mem: ((1 string-address) (raw)): 1 <= 13650
schedule: done with routine nil
