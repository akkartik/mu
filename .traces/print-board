===: main
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((initial-position integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal))) -- nil
c{0: 2 (((b board-address)) <- ((init-board)) ((initial-position integer-array-address))) -- nil
c{0: 3 (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) -- nil
c{0: 4 (((print-board)) ((screen terminal-address)) ((b board-address))) -- nil
c{0: 5 (((1 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((initial-position integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
c{1: 2 ✓ (((b board-address)) <- ((init-board)) ((initial-position integer-array-address)))
c{1: 3 ✓ (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
c{1: 4 ✓ (((print-board)) ((screen terminal-address)) ((b board-address)))
c{1: 5 ✓ (((1 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset)))
cn0: convert-names in main
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((initial-position integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal))) nil nil
cn0: checking arg ((R literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((r literal))
cn0: checking arg ((N literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((n literal))
cn0: checking arg ((B literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((b literal))
cn0: checking arg ((Q literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((q literal))
cn0: checking arg ((K literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((k literal))
cn0: checking arg ((B literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((b literal))
cn0: checking arg ((N literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((n literal))
cn0: checking arg ((R literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((r literal))
cn0: checking oarg ((initial-position integer-array-address))
maybe-add: ((initial-position integer-array-address))
cn0: location for oarg ((initial-position integer-array-address)): 1
cn0: (((b board-address)) <- ((init-board)) ((initial-position integer-array-address))) ((initial-position 1)) nil
cn0: checking arg ((initial-position integer-array-address))
maybe-add: ((initial-position integer-array-address))
cn0: checking oarg ((b board-address))
maybe-add: ((b board-address))
cn0: location for oarg ((b board-address)): 2
cn0: (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) ((b 2) (initial-position 1)) nil
cn0: checking arg ((20 literal))
cn0: checking arg ((10 literal))
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 3
cn0: (((print-board)) ((screen terminal-address)) ((b board-address))) ((b 2) (initial-position 1) (screen 3)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((b board-address))
maybe-add: ((b board-address))
cn0: (((1 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) ((b 2) (initial-position 1) (screen 3)) nil
cn0: field-access data in screenterminal-addressderef of type terminal
cn0: new field; computing location
cn0: field location 4
cn0: checking arg ((screen terminal-address) (deref))
maybe-add: ((screen terminal-address) (deref))
cn0: checking arg ((data offset))
cn0: checking oarg ((1 string-address) (raw))
maybe-add: ((1 string-address) (raw))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((1 integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
cn1: (((2 board-address)) <- ((init-board)) ((1 integer-array-address)))
cn1: (((3 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
cn1: (((print-board)) ((3 terminal-address)) ((2 board-address)))
cn1: (((1 string-address) (raw)) <- ((get)) ((3 terminal-address) (deref)) ((4 offset)))
schedule: main
run: main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: main 0: 1000 => ((default-space space-address))
run: main 1: (((1 integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
run: init-array/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-array/main 0: 1031 => ((default-space space-address))
run: init-array/main 1: (((1 integer)) <- ((copy)) ((0 literal)))
run: init-array/main 1: 0 => ((1 integer))
mem: ((1 integer)): 1033 <= 0
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 0 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\R => ((2 integer))
mem: ((2 integer)): 1034 <= #\R
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 0
run: init-array/main 4: 1 => ((1 integer))
mem: ((1 integer)): 1033 <= 1
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 1 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 1
run: init-array/main 4: 2 => ((1 integer))
mem: ((1 integer)): 1033 <= 2
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 2 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 2
run: init-array/main 4: 3 => ((1 integer))
mem: ((1 integer)): 1033 <= 3
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 3 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 3
run: init-array/main 4: 4 => ((1 integer))
mem: ((1 integer)): 1033 <= 4
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 4 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 4
run: init-array/main 4: 5 => ((1 integer))
mem: ((1 integer)): 1033 <= 5
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 5 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 5
run: init-array/main 4: 6 => ((1 integer))
mem: ((1 integer)): 1033 <= 6
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 6 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 6
run: init-array/main 4: 7 => ((1 integer))
mem: ((1 integer)): 1033 <= 7
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 7 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\r => ((2 integer))
mem: ((2 integer)): 1034 <= #\r
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 7
run: init-array/main 4: 8 => ((1 integer))
mem: ((1 integer)): 1033 <= 8
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 8 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\N => ((2 integer))
mem: ((2 integer)): 1034 <= #\N
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 8
run: init-array/main 4: 9 => ((1 integer))
mem: ((1 integer)): 1033 <= 9
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 9 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 9
run: init-array/main 4: 10 => ((1 integer))
mem: ((1 integer)): 1033 <= 10
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 10 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 10
run: init-array/main 4: 11 => ((1 integer))
mem: ((1 integer)): 1033 <= 11
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 11 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 11
run: init-array/main 4: 12 => ((1 integer))
mem: ((1 integer)): 1033 <= 12
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 12 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 12
run: init-array/main 4: 13 => ((1 integer))
mem: ((1 integer)): 1033 <= 13
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 13 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 13
run: init-array/main 4: 14 => ((1 integer))
mem: ((1 integer)): 1033 <= 14
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 14 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 14
run: init-array/main 4: 15 => ((1 integer))
mem: ((1 integer)): 1033 <= 15
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 15 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\n => ((2 integer))
mem: ((2 integer)): 1034 <= #\n
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 15
run: init-array/main 4: 16 => ((1 integer))
mem: ((1 integer)): 1033 <= 16
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 16 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\B => ((2 integer))
mem: ((2 integer)): 1034 <= #\B
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 16
run: init-array/main 4: 17 => ((1 integer))
mem: ((1 integer)): 1033 <= 17
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 17 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 17
run: init-array/main 4: 18 => ((1 integer))
mem: ((1 integer)): 1033 <= 18
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 18 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 18
run: init-array/main 4: 19 => ((1 integer))
mem: ((1 integer)): 1033 <= 19
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 19 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 19
run: init-array/main 4: 20 => ((1 integer))
mem: ((1 integer)): 1033 <= 20
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 20 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 20
run: init-array/main 4: 21 => ((1 integer))
mem: ((1 integer)): 1033 <= 21
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 21 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 21
run: init-array/main 4: 22 => ((1 integer))
mem: ((1 integer)): 1033 <= 22
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 22 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 22
run: init-array/main 4: 23 => ((1 integer))
mem: ((1 integer)): 1033 <= 23
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 23 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\b => ((2 integer))
mem: ((2 integer)): 1034 <= #\b
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 23
run: init-array/main 4: 24 => ((1 integer))
mem: ((1 integer)): 1033 <= 24
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 24 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\Q => ((2 integer))
mem: ((2 integer)): 1034 <= #\Q
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 24
run: init-array/main 4: 25 => ((1 integer))
mem: ((1 integer)): 1033 <= 25
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 25 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 25
run: init-array/main 4: 26 => ((1 integer))
mem: ((1 integer)): 1033 <= 26
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 26 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 26
run: init-array/main 4: 27 => ((1 integer))
mem: ((1 integer)): 1033 <= 27
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 27 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 27
run: init-array/main 4: 28 => ((1 integer))
mem: ((1 integer)): 1033 <= 28
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 28 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 28
run: init-array/main 4: 29 => ((1 integer))
mem: ((1 integer)): 1033 <= 29
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 29 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 29
run: init-array/main 4: 30 => ((1 integer))
mem: ((1 integer)): 1033 <= 30
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 30 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 30
run: init-array/main 4: 31 => ((1 integer))
mem: ((1 integer)): 1033 <= 31
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 31 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\q => ((2 integer))
mem: ((2 integer)): 1034 <= #\q
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 31
run: init-array/main 4: 32 => ((1 integer))
mem: ((1 integer)): 1033 <= 32
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 32 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\K => ((2 integer))
mem: ((2 integer)): 1034 <= #\K
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 32
run: init-array/main 4: 33 => ((1 integer))
mem: ((1 integer)): 1033 <= 33
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 33 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 33
run: init-array/main 4: 34 => ((1 integer))
mem: ((1 integer)): 1033 <= 34
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 34 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 34
run: init-array/main 4: 35 => ((1 integer))
mem: ((1 integer)): 1033 <= 35
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 35 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 35
run: init-array/main 4: 36 => ((1 integer))
mem: ((1 integer)): 1033 <= 36
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 36 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 36
run: init-array/main 4: 37 => ((1 integer))
mem: ((1 integer)): 1033 <= 37
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 37 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 37
run: init-array/main 4: 38 => ((1 integer))
mem: ((1 integer)): 1033 <= 38
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 38 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 38
run: init-array/main 4: 39 => ((1 integer))
mem: ((1 integer)): 1033 <= 39
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 39 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\k => ((2 integer))
mem: ((2 integer)): 1034 <= #\k
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 39
run: init-array/main 4: 40 => ((1 integer))
mem: ((1 integer)): 1033 <= 40
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 40 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\B => ((2 integer))
mem: ((2 integer)): 1034 <= #\B
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 40
run: init-array/main 4: 41 => ((1 integer))
mem: ((1 integer)): 1033 <= 41
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 41 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 41
run: init-array/main 4: 42 => ((1 integer))
mem: ((1 integer)): 1033 <= 42
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 42 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 42
run: init-array/main 4: 43 => ((1 integer))
mem: ((1 integer)): 1033 <= 43
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 43 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 43
run: init-array/main 4: 44 => ((1 integer))
mem: ((1 integer)): 1033 <= 44
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 44 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 44
run: init-array/main 4: 45 => ((1 integer))
mem: ((1 integer)): 1033 <= 45
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 45 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 45
run: init-array/main 4: 46 => ((1 integer))
mem: ((1 integer)): 1033 <= 46
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 46 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 46
run: init-array/main 4: 47 => ((1 integer))
mem: ((1 integer)): 1033 <= 47
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 47 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\b => ((2 integer))
mem: ((2 integer)): 1034 <= #\b
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 47
run: init-array/main 4: 48 => ((1 integer))
mem: ((1 integer)): 1033 <= 48
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 48 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\N => ((2 integer))
mem: ((2 integer)): 1034 <= #\N
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 48
run: init-array/main 4: 49 => ((1 integer))
mem: ((1 integer)): 1033 <= 49
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 49 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 49
run: init-array/main 4: 50 => ((1 integer))
mem: ((1 integer)): 1033 <= 50
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 50 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 50
run: init-array/main 4: 51 => ((1 integer))
mem: ((1 integer)): 1033 <= 51
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 51 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 51
run: init-array/main 4: 52 => ((1 integer))
mem: ((1 integer)): 1033 <= 52
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 52 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 52
run: init-array/main 4: 53 => ((1 integer))
mem: ((1 integer)): 1033 <= 53
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 53 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 53
run: init-array/main 4: 54 => ((1 integer))
mem: ((1 integer)): 1033 <= 54
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 54 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 54
run: init-array/main 4: 55 => ((1 integer))
mem: ((1 integer)): 1033 <= 55
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 55 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\n => ((2 integer))
mem: ((2 integer)): 1034 <= #\n
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 55
run: init-array/main 4: 56 => ((1 integer))
mem: ((1 integer)): 1033 <= 56
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 56 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\R => ((2 integer))
mem: ((2 integer)): 1034 <= #\R
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 56
run: init-array/main 4: 57 => ((1 integer))
mem: ((1 integer)): 1033 <= 57
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 57 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 57
run: init-array/main 4: 58 => ((1 integer))
mem: ((1 integer)): 1033 <= 58
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 58 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 58
run: init-array/main 4: 59 => ((1 integer))
mem: ((1 integer)): 1033 <= 59
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 59 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 59
run: init-array/main 4: 60 => ((1 integer))
mem: ((1 integer)): 1033 <= 60
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 60 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 60
run: init-array/main 4: 61 => ((1 integer))
mem: ((1 integer)): 1033 <= 61
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 61 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 61
run: init-array/main 4: 62 => ((1 integer))
mem: ((1 integer)): 1033 <= 62
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 62 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 62
run: init-array/main 4: 63 => ((1 integer))
mem: ((1 integer)): 1033 <= 63
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 63 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\r => ((2 integer))
mem: ((2 integer)): 1034 <= #\r
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 63
run: init-array/main 4: 64 => ((1 integer))
mem: ((1 integer)): 1033 <= 64
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 64 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: nil => ((2 integer))
mem: ((2 integer)): 1034 <= nil
run: init-array/main 2: nil => ((3 boolean))
mem: ((3 boolean)): 1035 <= nil
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => nil
run: init-array/main 6: (((4 integer-array-address)) <- ((new)) ((integer-array literal)) ((1 integer)))
mem: ((1 integer)) => 64
run: init-array/main 6: 1062 => ((4 integer-array-address))
mem: ((4 integer-array-address)): 1036 <= 1062
run: init-array/main 7: (((rewind-inputs)))
run: init-array/main 8: (((5 integer)) <- ((copy)) ((0 literal)))
run: init-array/main 8: 0 => ((5 integer))
mem: ((5 integer)): 1037 <= 0
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 0
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 0 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\R => ((2 integer))
mem: ((2 integer)): 1034 <= #\R
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1063 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1063
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => R
run: init-array/main 14: #\R => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1063 <= #\R
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: init-array/main 15: 1 => ((5 integer))
mem: ((5 integer)): 1037 <= 1
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 1
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 1 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1064 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1064
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1064 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 1
run: init-array/main 15: 2 => ((5 integer))
mem: ((5 integer)): 1037 <= 2
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 2
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 2 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 2
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1065 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1065
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1065 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 2
run: init-array/main 15: 3 => ((5 integer))
mem: ((5 integer)): 1037 <= 3
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 3
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 3 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 3
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1066 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1066
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1066 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 3
run: init-array/main 15: 4 => ((5 integer))
mem: ((5 integer)): 1037 <= 4
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 4
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 4 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 4
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1067 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1067
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1067 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 4
run: init-array/main 15: 5 => ((5 integer))
mem: ((5 integer)): 1037 <= 5
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 5
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 5 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 5
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1068 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1068
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1068 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 5
run: init-array/main 15: 6 => ((5 integer))
mem: ((5 integer)): 1037 <= 6
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 6
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 6 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 6
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1069 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1069
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1069 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 6
run: init-array/main 15: 7 => ((5 integer))
mem: ((5 integer)): 1037 <= 7
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 7
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 7 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\r => ((2 integer))
mem: ((2 integer)): 1034 <= #\r
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 7
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1070 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1070
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => r
run: init-array/main 14: #\r => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1070 <= #\r
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 7
run: init-array/main 15: 8 => ((5 integer))
mem: ((5 integer)): 1037 <= 8
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 8
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 8 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\N => ((2 integer))
mem: ((2 integer)): 1034 <= #\N
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 8
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1071 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1071
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => N
run: init-array/main 14: #\N => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1071 <= #\N
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 8
run: init-array/main 15: 9 => ((5 integer))
mem: ((5 integer)): 1037 <= 9
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 9
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 9 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 9
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1072 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1072
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1072 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 9
run: init-array/main 15: 10 => ((5 integer))
mem: ((5 integer)): 1037 <= 10
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 10
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 10 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 10
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1073 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1073
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1073 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 10
run: init-array/main 15: 11 => ((5 integer))
mem: ((5 integer)): 1037 <= 11
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 11
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 11 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 11
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1074 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1074
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1074 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 11
run: init-array/main 15: 12 => ((5 integer))
mem: ((5 integer)): 1037 <= 12
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 12
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 12 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 12
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1075 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1075
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1075 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 12
run: init-array/main 15: 13 => ((5 integer))
mem: ((5 integer)): 1037 <= 13
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 13
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 13 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 13
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1076 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1076
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1076 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 13
run: init-array/main 15: 14 => ((5 integer))
mem: ((5 integer)): 1037 <= 14
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 14
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 14 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 14
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1077 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1077
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1077 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 14
run: init-array/main 15: 15 => ((5 integer))
mem: ((5 integer)): 1037 <= 15
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 15
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 15 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\n => ((2 integer))
mem: ((2 integer)): 1034 <= #\n
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 15
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1078 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1078
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => n
run: init-array/main 14: #\n => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1078 <= #\n
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 15
run: init-array/main 15: 16 => ((5 integer))
mem: ((5 integer)): 1037 <= 16
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 16
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 16 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\B => ((2 integer))
mem: ((2 integer)): 1034 <= #\B
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 16
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1079 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1079
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => B
run: init-array/main 14: #\B => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1079 <= #\B
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 16
run: init-array/main 15: 17 => ((5 integer))
mem: ((5 integer)): 1037 <= 17
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 17
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 17 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 17
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1080 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1080
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1080 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 17
run: init-array/main 15: 18 => ((5 integer))
mem: ((5 integer)): 1037 <= 18
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 18
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 18 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 18
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1081 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1081
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1081 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 18
run: init-array/main 15: 19 => ((5 integer))
mem: ((5 integer)): 1037 <= 19
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 19
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 19 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 19
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1082 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1082
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1082 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 19
run: init-array/main 15: 20 => ((5 integer))
mem: ((5 integer)): 1037 <= 20
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 20
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 20 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 20
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1083 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1083
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1083 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 20
run: init-array/main 15: 21 => ((5 integer))
mem: ((5 integer)): 1037 <= 21
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 21
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 21 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 21
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1084 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1084
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1084 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 21
run: init-array/main 15: 22 => ((5 integer))
mem: ((5 integer)): 1037 <= 22
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 22
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 22 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 22
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1085 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1085
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1085 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 22
run: init-array/main 15: 23 => ((5 integer))
mem: ((5 integer)): 1037 <= 23
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 23
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 23 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\b => ((2 integer))
mem: ((2 integer)): 1034 <= #\b
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 23
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1086 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1086
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => b
run: init-array/main 14: #\b => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1086 <= #\b
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 23
run: init-array/main 15: 24 => ((5 integer))
mem: ((5 integer)): 1037 <= 24
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 24
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 24 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\Q => ((2 integer))
mem: ((2 integer)): 1034 <= #\Q
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 24
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1087 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1087
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => Q
run: init-array/main 14: #\Q => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1087 <= #\Q
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 24
run: init-array/main 15: 25 => ((5 integer))
mem: ((5 integer)): 1037 <= 25
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 25
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 25 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 25
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1088 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1088
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1088 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 25
run: init-array/main 15: 26 => ((5 integer))
mem: ((5 integer)): 1037 <= 26
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 26
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 26 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 26
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1089 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1089
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1089 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 26
run: init-array/main 15: 27 => ((5 integer))
mem: ((5 integer)): 1037 <= 27
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 27
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 27 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 27
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1090 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1090
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1090 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 27
run: init-array/main 15: 28 => ((5 integer))
mem: ((5 integer)): 1037 <= 28
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 28
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 28 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 28
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1091 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1091
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1091 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 28
run: init-array/main 15: 29 => ((5 integer))
mem: ((5 integer)): 1037 <= 29
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 29
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 29 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
schedule: scheduling init-array/main for further processing
schedule: init-array/main
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 29
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1092 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1092
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1092 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 29
run: init-array/main 15: 30 => ((5 integer))
mem: ((5 integer)): 1037 <= 30
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 30
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 30 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 30
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1093 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1093
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1093 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 30
run: init-array/main 15: 31 => ((5 integer))
mem: ((5 integer)): 1037 <= 31
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 31
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 31 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\q => ((2 integer))
mem: ((2 integer)): 1034 <= #\q
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 31
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1094 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1094
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => q
run: init-array/main 14: #\q => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1094 <= #\q
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 31
run: init-array/main 15: 32 => ((5 integer))
mem: ((5 integer)): 1037 <= 32
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 32
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 32 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\K => ((2 integer))
mem: ((2 integer)): 1034 <= #\K
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 32
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1095 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1095
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => K
run: init-array/main 14: #\K => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1095 <= #\K
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 32
run: init-array/main 15: 33 => ((5 integer))
mem: ((5 integer)): 1037 <= 33
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 33
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 33 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 33
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1096 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1096
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1096 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 33
run: init-array/main 15: 34 => ((5 integer))
mem: ((5 integer)): 1037 <= 34
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 34
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 34 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 34
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1097 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1097
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1097 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 34
run: init-array/main 15: 35 => ((5 integer))
mem: ((5 integer)): 1037 <= 35
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 35
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 35 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 35
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1098 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1098
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1098 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 35
run: init-array/main 15: 36 => ((5 integer))
mem: ((5 integer)): 1037 <= 36
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 36
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 36 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 36
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1099 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1099
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1099 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 36
run: init-array/main 15: 37 => ((5 integer))
mem: ((5 integer)): 1037 <= 37
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 37
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 37 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 37
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1100 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1100
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1100 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 37
run: init-array/main 15: 38 => ((5 integer))
mem: ((5 integer)): 1037 <= 38
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 38
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 38 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 38
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1101 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1101
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1101 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 38
run: init-array/main 15: 39 => ((5 integer))
mem: ((5 integer)): 1037 <= 39
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 39
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 39 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\k => ((2 integer))
mem: ((2 integer)): 1034 <= #\k
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 39
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1102 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1102
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => k
run: init-array/main 14: #\k => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1102 <= #\k
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 39
run: init-array/main 15: 40 => ((5 integer))
mem: ((5 integer)): 1037 <= 40
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 40
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 40 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\B => ((2 integer))
mem: ((2 integer)): 1034 <= #\B
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 40
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1103 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1103
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => B
run: init-array/main 14: #\B => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1103 <= #\B
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 40
run: init-array/main 15: 41 => ((5 integer))
mem: ((5 integer)): 1037 <= 41
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 41
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 41 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 41
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1104 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1104
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1104 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 41
run: init-array/main 15: 42 => ((5 integer))
mem: ((5 integer)): 1037 <= 42
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 42
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 42 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 42
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1105 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1105
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1105 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 42
run: init-array/main 15: 43 => ((5 integer))
mem: ((5 integer)): 1037 <= 43
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 43
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 43 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 43
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1106 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1106
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1106 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 43
run: init-array/main 15: 44 => ((5 integer))
mem: ((5 integer)): 1037 <= 44
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 44
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 44 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 44
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1107 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1107
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1107 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 44
run: init-array/main 15: 45 => ((5 integer))
mem: ((5 integer)): 1037 <= 45
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 45
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 45 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 45
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1108 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1108
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1108 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 45
run: init-array/main 15: 46 => ((5 integer))
mem: ((5 integer)): 1037 <= 46
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 46
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 46 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 46
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1109 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1109
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1109 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 46
run: init-array/main 15: 47 => ((5 integer))
mem: ((5 integer)): 1037 <= 47
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 47
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 47 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\b => ((2 integer))
mem: ((2 integer)): 1034 <= #\b
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 47
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1110 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1110
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => b
run: init-array/main 14: #\b => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1110 <= #\b
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 47
run: init-array/main 15: 48 => ((5 integer))
mem: ((5 integer)): 1037 <= 48
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 48
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 48 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\N => ((2 integer))
mem: ((2 integer)): 1034 <= #\N
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 48
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1111 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1111
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => N
run: init-array/main 14: #\N => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1111 <= #\N
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 48
run: init-array/main 15: 49 => ((5 integer))
mem: ((5 integer)): 1037 <= 49
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 49
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 49 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 49
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1112 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1112
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1112 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 49
run: init-array/main 15: 50 => ((5 integer))
mem: ((5 integer)): 1037 <= 50
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 50
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 50 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 50
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1113 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1113
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1113 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 50
run: init-array/main 15: 51 => ((5 integer))
mem: ((5 integer)): 1037 <= 51
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 51
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 51 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 51
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1114 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1114
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1114 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 51
run: init-array/main 15: 52 => ((5 integer))
mem: ((5 integer)): 1037 <= 52
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 52
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 52 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 52
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1115 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1115
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1115 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 52
run: init-array/main 15: 53 => ((5 integer))
mem: ((5 integer)): 1037 <= 53
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 53
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 53 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 53
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1116 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1116
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1116 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 53
run: init-array/main 15: 54 => ((5 integer))
mem: ((5 integer)): 1037 <= 54
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 54
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 54 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 54
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1117 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1117
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1117 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 54
run: init-array/main 15: 55 => ((5 integer))
mem: ((5 integer)): 1037 <= 55
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 55
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 55 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\n => ((2 integer))
mem: ((2 integer)): 1034 <= #\n
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 55
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1118 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1118
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => n
run: init-array/main 14: #\n => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1118 <= #\n
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 55
run: init-array/main 15: 56 => ((5 integer))
mem: ((5 integer)): 1037 <= 56
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 56
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 56 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\R => ((2 integer))
mem: ((2 integer)): 1034 <= #\R
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 56
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1119 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1119
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => R
run: init-array/main 14: #\R => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1119 <= #\R
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 56
run: init-array/main 15: 57 => ((5 integer))
mem: ((5 integer)): 1037 <= 57
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 57
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 57 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1034 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 57
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1120 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1120
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1120 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 57
run: init-array/main 15: 58 => ((5 integer))
mem: ((5 integer)): 1037 <= 58
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 58
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 58 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 58
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1121 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1121
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1121 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 58
run: init-array/main 15: 59 => ((5 integer))
mem: ((5 integer)): 1037 <= 59
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 59
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 59 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 59
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1122 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1122
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1122 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 59
run: init-array/main 15: 60 => ((5 integer))
mem: ((5 integer)): 1037 <= 60
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 60
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 60 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 60
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1123 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1123
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1123 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 60
run: init-array/main 15: 61 => ((5 integer))
mem: ((5 integer)): 1037 <= 61
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 61
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 61 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1034 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 61
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1124 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1124
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1124 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 61
run: init-array/main 15: 62 => ((5 integer))
mem: ((5 integer)): 1037 <= 62
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 62
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 62 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1034 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 62
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1125 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1125
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1125 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 62
run: init-array/main 15: 63 => ((5 integer))
mem: ((5 integer)): 1037 <= 63
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 63
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1038 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 63 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\r => ((2 integer))
mem: ((2 integer)): 1034 <= #\r
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1035 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 63
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
run: init-array/main 13: 1126 => ((7 integer-address))
mem: ((7 integer-address)): 1039 <= 1126
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => r
run: init-array/main 14: #\r => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1126 <= #\r
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 63
run: init-array/main 15: 64 => ((5 integer))
mem: ((5 integer)): 1037 <= 64
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 64
mem: ((1 integer)) => 64
run: init-array/main 9: t => ((6 boolean))
mem: ((6 boolean)): 1038 <= t
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => t
run: init-array/main 17: (((reply)) ((4 integer-array-address)))
mem: ((4 integer-array-address)) => 1062
run: main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1002 <= 1062
run: main 2: (((2 board-address)) <- ((init-board)) ((1 integer-array-address)))
mem: ((1 integer-array-address)) => 1062
run: init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-board/main 0: 1127 => ((default-space space-address))
run: init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1062)
run: init-board/main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1129 <= 1062
run: init-board/main 2: (((2 integer)) <- ((length)) ((1 integer-array-address) (deref)))
array-len: ((1 integer-array-address) (deref))
mem: ((1062 integer) (raw)) => 64
run: init-board/main 2: 64 => ((2 integer))
mem: ((2 integer)): 1130 <= 64
run: init-board/main 3: (((3 boolean)) <- ((equal)) ((2 integer)) ((64 literal)))
mem: ((2 integer)) => 64
run: init-board/main 3: t => ((3 boolean))
mem: ((3 boolean)): 1131 <= t
run: init-board/main 4: (((assert)) ((3 boolean)) ((chessboard had incorrect size literal)))
mem: ((3 boolean)) => t
run: init-board/main 5: (((4 board-address)) <- ((new)) ((board literal)) ((8 literal)))
run: init-board/main 5: 1158 => ((4 board-address))
mem: ((4 board-address)): 1132 <= 1158
run: init-board/main 6: (((5 integer)) <- ((copy)) ((0 literal)))
run: init-board/main 6: 0 => ((5 integer))
mem: ((5 integer)): 1133 <= 0
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 0
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1134 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
run: init-board/main 9: 1159 => ((7 file-address-address))
mem: ((7 file-address-address)): 1135 <= 1159
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1062
mem: ((5 integer)) => 0
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1167 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1062 0)
run: init-file/init-board/main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1169 <= 1062
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1062 0)
run: init-file/init-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1170 <= 0
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 0
run: init-file/init-board/main 3: 0 => ((2 integer))
mem: ((2 integer)): 1170 <= 0
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1198 => ((3 file-address))
mem: ((3 file-address)): 1171 <= 1198
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1172 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1173 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
run: init-file/init-board/main 8: 1199 => ((6 square-address))
mem: ((6 square-address)): 1174 <= 1199
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 0
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1063 integer) (raw)) => R
run: init-file/init-board/main 9: #\R => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1199 <= #\R
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1172 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 0
run: init-file/init-board/main 11: 1 => ((2 integer))
mem: ((2 integer)): 1170 <= 1
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1173 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
run: init-file/init-board/main 8: 1200 => ((6 square-address))
mem: ((6 square-address)): 1174 <= 1200
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 1
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1064 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1200 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1172 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 1
run: init-file/init-board/main 11: 2 => ((2 integer))
mem: ((2 integer)): 1170 <= 2
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1173 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
run: init-file/init-board/main 8: 1201 => ((6 square-address))
mem: ((6 square-address)): 1174 <= 1201
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 2
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1065 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1201 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1172 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 2
run: init-file/init-board/main 11: 3 => ((2 integer))
mem: ((2 integer)): 1170 <= 3
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1173 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
run: init-file/init-board/main 8: 1202 => ((6 square-address))
mem: ((6 square-address)): 1174 <= 1202
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 3
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1066 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1202 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1172 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 3
run: init-file/init-board/main 11: 4 => ((2 integer))
mem: ((2 integer)): 1170 <= 4
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1173 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
run: init-file/init-board/main 8: 1203 => ((6 square-address))
mem: ((6 square-address)): 1174 <= 1203
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 4
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1067 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1203 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1172 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 4
run: init-file/init-board/main 11: 5 => ((2 integer))
mem: ((2 integer)): 1170 <= 5
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1173 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
run: init-file/init-board/main 8: 1204 => ((6 square-address))
mem: ((6 square-address)): 1174 <= 1204
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 5
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1068 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1204 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1172 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 5
run: init-file/init-board/main 11: 6 => ((2 integer))
mem: ((2 integer)): 1170 <= 6
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1173 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
run: init-file/init-board/main 8: 1205 => ((6 square-address))
mem: ((6 square-address)): 1174 <= 1205
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 6
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1069 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1205 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1172 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 6
run: init-file/init-board/main 11: 7 => ((2 integer))
mem: ((2 integer)): 1170 <= 7
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1173 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
run: init-file/init-board/main 8: 1206 => ((6 square-address))
mem: ((6 square-address)): 1174 <= 1206
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 7
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1070 integer) (raw)) => r
run: init-file/init-board/main 9: #\r => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1206 <= #\r
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1172 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 7
run: init-file/init-board/main 11: 8 => ((2 integer))
mem: ((2 integer)): 1170 <= 8
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1173 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1198
run: init-board/main 10: 1198 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1159 <= 1198
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: init-board/main 11: 1 => ((5 integer))
mem: ((5 integer)): 1133 <= 1
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 1
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1134 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
run: init-board/main 9: 1160 => ((7 file-address-address))
mem: ((7 file-address-address)): 1135 <= 1160
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1062
mem: ((5 integer)) => 1
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1207 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1062 1)
run: init-file/init-board/main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1209 <= 1062
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1062 1)
run: init-file/init-board/main 2: 1 => ((2 integer))
mem: ((2 integer)): 1210 <= 1
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 1
run: init-file/init-board/main 3: 8 => ((2 integer))
mem: ((2 integer)): 1210 <= 8
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1238 => ((3 file-address))
mem: ((3 file-address)): 1211 <= 1238
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1212 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1213 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
run: init-file/init-board/main 8: 1239 => ((6 square-address))
mem: ((6 square-address)): 1214 <= 1239
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 8
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1071 integer) (raw)) => N
run: init-file/init-board/main 9: #\N => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1239 <= #\N
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1212 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 8
run: init-file/init-board/main 11: 9 => ((2 integer))
mem: ((2 integer)): 1210 <= 9
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1213 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
run: init-file/init-board/main 8: 1240 => ((6 square-address))
mem: ((6 square-address)): 1214 <= 1240
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 9
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1072 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1240 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1212 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 9
run: init-file/init-board/main 11: 10 => ((2 integer))
mem: ((2 integer)): 1210 <= 10
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1213 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
run: init-file/init-board/main 8: 1241 => ((6 square-address))
mem: ((6 square-address)): 1214 <= 1241
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 10
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1073 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1241 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1212 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 10
run: init-file/init-board/main 11: 11 => ((2 integer))
mem: ((2 integer)): 1210 <= 11
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1213 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
run: init-file/init-board/main 8: 1242 => ((6 square-address))
mem: ((6 square-address)): 1214 <= 1242
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 11
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1074 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1242 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1212 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 11
run: init-file/init-board/main 11: 12 => ((2 integer))
mem: ((2 integer)): 1210 <= 12
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1213 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
run: init-file/init-board/main 8: 1243 => ((6 square-address))
mem: ((6 square-address)): 1214 <= 1243
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 12
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1075 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1243 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1212 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 12
run: init-file/init-board/main 11: 13 => ((2 integer))
mem: ((2 integer)): 1210 <= 13
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1213 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
run: init-file/init-board/main 8: 1244 => ((6 square-address))
mem: ((6 square-address)): 1214 <= 1244
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 13
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1076 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1244 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1212 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 13
run: init-file/init-board/main 11: 14 => ((2 integer))
mem: ((2 integer)): 1210 <= 14
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1213 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
run: init-file/init-board/main 8: 1245 => ((6 square-address))
mem: ((6 square-address)): 1214 <= 1245
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 14
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1077 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1245 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1212 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 14
run: init-file/init-board/main 11: 15 => ((2 integer))
mem: ((2 integer)): 1210 <= 15
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1213 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
run: init-file/init-board/main 8: 1246 => ((6 square-address))
mem: ((6 square-address)): 1214 <= 1246
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 15
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1078 integer) (raw)) => n
run: init-file/init-board/main 9: #\n => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1246 <= #\n
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1212 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 15
run: init-file/init-board/main 11: 16 => ((2 integer))
mem: ((2 integer)): 1210 <= 16
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1213 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1238
run: init-board/main 10: 1238 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1160 <= 1238
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 1
run: init-board/main 11: 2 => ((5 integer))
mem: ((5 integer)): 1133 <= 2
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 2
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1134 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 2
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
run: init-board/main 9: 1161 => ((7 file-address-address))
mem: ((7 file-address-address)): 1135 <= 1161
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1062
mem: ((5 integer)) => 2
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1247 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1062 2)
run: init-file/init-board/main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1249 <= 1062
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1062 2)
run: init-file/init-board/main 2: 2 => ((2 integer))
mem: ((2 integer)): 1250 <= 2
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 2
run: init-file/init-board/main 3: 16 => ((2 integer))
mem: ((2 integer)): 1250 <= 16
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1278 => ((3 file-address))
mem: ((3 file-address)): 1251 <= 1278
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1252 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1253 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
run: init-file/init-board/main 8: 1279 => ((6 square-address))
mem: ((6 square-address)): 1254 <= 1279
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 16
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1079 integer) (raw)) => B
run: init-file/init-board/main 9: #\B => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1279 <= #\B
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1252 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 16
run: init-file/init-board/main 11: 17 => ((2 integer))
mem: ((2 integer)): 1250 <= 17
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1253 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
run: init-file/init-board/main 8: 1280 => ((6 square-address))
mem: ((6 square-address)): 1254 <= 1280
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 17
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1080 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1280 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1252 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 17
run: init-file/init-board/main 11: 18 => ((2 integer))
mem: ((2 integer)): 1250 <= 18
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1253 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
run: init-file/init-board/main 8: 1281 => ((6 square-address))
mem: ((6 square-address)): 1254 <= 1281
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 18
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1081 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1281 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1252 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 18
run: init-file/init-board/main 11: 19 => ((2 integer))
mem: ((2 integer)): 1250 <= 19
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1253 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
run: init-file/init-board/main 8: 1282 => ((6 square-address))
mem: ((6 square-address)): 1254 <= 1282
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 19
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1082 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1282 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1252 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 19
run: init-file/init-board/main 11: 20 => ((2 integer))
mem: ((2 integer)): 1250 <= 20
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1253 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
run: init-file/init-board/main 8: 1283 => ((6 square-address))
mem: ((6 square-address)): 1254 <= 1283
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 20
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1083 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1283 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1252 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 20
run: init-file/init-board/main 11: 21 => ((2 integer))
mem: ((2 integer)): 1250 <= 21
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1253 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
run: init-file/init-board/main 8: 1284 => ((6 square-address))
mem: ((6 square-address)): 1254 <= 1284
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 21
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1084 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1284 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1252 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 21
run: init-file/init-board/main 11: 22 => ((2 integer))
mem: ((2 integer)): 1250 <= 22
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1253 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
run: init-file/init-board/main 8: 1285 => ((6 square-address))
mem: ((6 square-address)): 1254 <= 1285
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 22
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1085 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1285 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1252 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 22
run: init-file/init-board/main 11: 23 => ((2 integer))
mem: ((2 integer)): 1250 <= 23
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1253 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
run: init-file/init-board/main 8: 1286 => ((6 square-address))
mem: ((6 square-address)): 1254 <= 1286
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 23
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1086 integer) (raw)) => b
run: init-file/init-board/main 9: #\b => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1286 <= #\b
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1252 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 23
run: init-file/init-board/main 11: 24 => ((2 integer))
mem: ((2 integer)): 1250 <= 24
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1253 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1278
run: init-board/main 10: 1278 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1161 <= 1278
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 2
run: init-board/main 11: 3 => ((5 integer))
mem: ((5 integer)): 1133 <= 3
schedule: scheduling init-board/main for further processing
schedule: init-board/main
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 3
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1134 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 3
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
run: init-board/main 9: 1162 => ((7 file-address-address))
mem: ((7 file-address-address)): 1135 <= 1162
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1062
mem: ((5 integer)) => 3
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1287 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1062 3)
run: init-file/init-board/main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1289 <= 1062
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1062 3)
run: init-file/init-board/main 2: 3 => ((2 integer))
mem: ((2 integer)): 1290 <= 3
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 3
run: init-file/init-board/main 3: 24 => ((2 integer))
mem: ((2 integer)): 1290 <= 24
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1318 => ((3 file-address))
mem: ((3 file-address)): 1291 <= 1318
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1292 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1293 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
run: init-file/init-board/main 8: 1319 => ((6 square-address))
mem: ((6 square-address)): 1294 <= 1319
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 24
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1087 integer) (raw)) => Q
run: init-file/init-board/main 9: #\Q => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1319 <= #\Q
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1292 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 24
run: init-file/init-board/main 11: 25 => ((2 integer))
mem: ((2 integer)): 1290 <= 25
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1293 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
run: init-file/init-board/main 8: 1320 => ((6 square-address))
mem: ((6 square-address)): 1294 <= 1320
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 25
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1088 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1320 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1292 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 25
run: init-file/init-board/main 11: 26 => ((2 integer))
mem: ((2 integer)): 1290 <= 26
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1293 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
run: init-file/init-board/main 8: 1321 => ((6 square-address))
mem: ((6 square-address)): 1294 <= 1321
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 26
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1089 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1321 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1292 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 26
run: init-file/init-board/main 11: 27 => ((2 integer))
mem: ((2 integer)): 1290 <= 27
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1293 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
run: init-file/init-board/main 8: 1322 => ((6 square-address))
mem: ((6 square-address)): 1294 <= 1322
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 27
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1090 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1322 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1292 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 27
run: init-file/init-board/main 11: 28 => ((2 integer))
mem: ((2 integer)): 1290 <= 28
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1293 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
run: init-file/init-board/main 8: 1323 => ((6 square-address))
mem: ((6 square-address)): 1294 <= 1323
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 28
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1091 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1323 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1292 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 28
run: init-file/init-board/main 11: 29 => ((2 integer))
mem: ((2 integer)): 1290 <= 29
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1293 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
run: init-file/init-board/main 8: 1324 => ((6 square-address))
mem: ((6 square-address)): 1294 <= 1324
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 29
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1092 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1324 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1292 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 29
run: init-file/init-board/main 11: 30 => ((2 integer))
mem: ((2 integer)): 1290 <= 30
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1293 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
run: init-file/init-board/main 8: 1325 => ((6 square-address))
mem: ((6 square-address)): 1294 <= 1325
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 30
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1093 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1325 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1292 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 30
run: init-file/init-board/main 11: 31 => ((2 integer))
mem: ((2 integer)): 1290 <= 31
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1293 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
run: init-file/init-board/main 8: 1326 => ((6 square-address))
mem: ((6 square-address)): 1294 <= 1326
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 31
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1094 integer) (raw)) => q
run: init-file/init-board/main 9: #\q => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1326 <= #\q
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1292 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 31
run: init-file/init-board/main 11: 32 => ((2 integer))
mem: ((2 integer)): 1290 <= 32
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1293 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1318
run: init-board/main 10: 1318 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1162 <= 1318
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 3
run: init-board/main 11: 4 => ((5 integer))
mem: ((5 integer)): 1133 <= 4
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 4
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1134 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 4
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
run: init-board/main 9: 1163 => ((7 file-address-address))
mem: ((7 file-address-address)): 1135 <= 1163
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1062
mem: ((5 integer)) => 4
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1327 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1062 4)
run: init-file/init-board/main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1329 <= 1062
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1062 4)
run: init-file/init-board/main 2: 4 => ((2 integer))
mem: ((2 integer)): 1330 <= 4
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 4
run: init-file/init-board/main 3: 32 => ((2 integer))
mem: ((2 integer)): 1330 <= 32
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1358 => ((3 file-address))
mem: ((3 file-address)): 1331 <= 1358
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1332 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1333 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
run: init-file/init-board/main 8: 1359 => ((6 square-address))
mem: ((6 square-address)): 1334 <= 1359
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 32
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1095 integer) (raw)) => K
run: init-file/init-board/main 9: #\K => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1359 <= #\K
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1332 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 32
run: init-file/init-board/main 11: 33 => ((2 integer))
mem: ((2 integer)): 1330 <= 33
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1333 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
run: init-file/init-board/main 8: 1360 => ((6 square-address))
mem: ((6 square-address)): 1334 <= 1360
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 33
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1096 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1360 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1332 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 33
run: init-file/init-board/main 11: 34 => ((2 integer))
mem: ((2 integer)): 1330 <= 34
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1333 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
run: init-file/init-board/main 8: 1361 => ((6 square-address))
mem: ((6 square-address)): 1334 <= 1361
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 34
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1097 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1361 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1332 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 34
run: init-file/init-board/main 11: 35 => ((2 integer))
mem: ((2 integer)): 1330 <= 35
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1333 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
run: init-file/init-board/main 8: 1362 => ((6 square-address))
mem: ((6 square-address)): 1334 <= 1362
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 35
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1098 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1362 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1332 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 35
run: init-file/init-board/main 11: 36 => ((2 integer))
mem: ((2 integer)): 1330 <= 36
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1333 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
run: init-file/init-board/main 8: 1363 => ((6 square-address))
mem: ((6 square-address)): 1334 <= 1363
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 36
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1099 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1363 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1332 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 36
run: init-file/init-board/main 11: 37 => ((2 integer))
mem: ((2 integer)): 1330 <= 37
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1333 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
run: init-file/init-board/main 8: 1364 => ((6 square-address))
mem: ((6 square-address)): 1334 <= 1364
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 37
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1100 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1364 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1332 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 37
run: init-file/init-board/main 11: 38 => ((2 integer))
mem: ((2 integer)): 1330 <= 38
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1333 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
run: init-file/init-board/main 8: 1365 => ((6 square-address))
mem: ((6 square-address)): 1334 <= 1365
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 38
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1101 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1365 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1332 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 38
run: init-file/init-board/main 11: 39 => ((2 integer))
mem: ((2 integer)): 1330 <= 39
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1333 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
run: init-file/init-board/main 8: 1366 => ((6 square-address))
mem: ((6 square-address)): 1334 <= 1366
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 39
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1102 integer) (raw)) => k
run: init-file/init-board/main 9: #\k => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1366 <= #\k
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1332 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 39
run: init-file/init-board/main 11: 40 => ((2 integer))
mem: ((2 integer)): 1330 <= 40
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1333 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1358
run: init-board/main 10: 1358 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1163 <= 1358
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 4
run: init-board/main 11: 5 => ((5 integer))
mem: ((5 integer)): 1133 <= 5
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 5
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1134 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 5
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
run: init-board/main 9: 1164 => ((7 file-address-address))
mem: ((7 file-address-address)): 1135 <= 1164
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1062
mem: ((5 integer)) => 5
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1367 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1062 5)
run: init-file/init-board/main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1369 <= 1062
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1062 5)
run: init-file/init-board/main 2: 5 => ((2 integer))
mem: ((2 integer)): 1370 <= 5
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 5
run: init-file/init-board/main 3: 40 => ((2 integer))
mem: ((2 integer)): 1370 <= 40
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1398 => ((3 file-address))
mem: ((3 file-address)): 1371 <= 1398
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1372 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1373 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
run: init-file/init-board/main 8: 1399 => ((6 square-address))
mem: ((6 square-address)): 1374 <= 1399
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 40
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1103 integer) (raw)) => B
run: init-file/init-board/main 9: #\B => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1399 <= #\B
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1372 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 40
run: init-file/init-board/main 11: 41 => ((2 integer))
mem: ((2 integer)): 1370 <= 41
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1373 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
run: init-file/init-board/main 8: 1400 => ((6 square-address))
mem: ((6 square-address)): 1374 <= 1400
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 41
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1104 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1400 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1372 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 41
run: init-file/init-board/main 11: 42 => ((2 integer))
mem: ((2 integer)): 1370 <= 42
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1373 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
run: init-file/init-board/main 8: 1401 => ((6 square-address))
mem: ((6 square-address)): 1374 <= 1401
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 42
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1105 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1401 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1372 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 42
run: init-file/init-board/main 11: 43 => ((2 integer))
mem: ((2 integer)): 1370 <= 43
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1373 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
run: init-file/init-board/main 8: 1402 => ((6 square-address))
mem: ((6 square-address)): 1374 <= 1402
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 43
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1106 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1402 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1372 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 43
run: init-file/init-board/main 11: 44 => ((2 integer))
mem: ((2 integer)): 1370 <= 44
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1373 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
run: init-file/init-board/main 8: 1403 => ((6 square-address))
mem: ((6 square-address)): 1374 <= 1403
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 44
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1107 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1403 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1372 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 44
run: init-file/init-board/main 11: 45 => ((2 integer))
mem: ((2 integer)): 1370 <= 45
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1373 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
run: init-file/init-board/main 8: 1404 => ((6 square-address))
mem: ((6 square-address)): 1374 <= 1404
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 45
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1108 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1404 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1372 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 45
run: init-file/init-board/main 11: 46 => ((2 integer))
mem: ((2 integer)): 1370 <= 46
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1373 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
run: init-file/init-board/main 8: 1405 => ((6 square-address))
mem: ((6 square-address)): 1374 <= 1405
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 46
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1109 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1405 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1372 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 46
run: init-file/init-board/main 11: 47 => ((2 integer))
mem: ((2 integer)): 1370 <= 47
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1373 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
run: init-file/init-board/main 8: 1406 => ((6 square-address))
mem: ((6 square-address)): 1374 <= 1406
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 47
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1110 integer) (raw)) => b
run: init-file/init-board/main 9: #\b => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1406 <= #\b
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1372 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 47
run: init-file/init-board/main 11: 48 => ((2 integer))
mem: ((2 integer)): 1370 <= 48
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1373 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1398
run: init-board/main 10: 1398 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1164 <= 1398
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 5
run: init-board/main 11: 6 => ((5 integer))
mem: ((5 integer)): 1133 <= 6
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 6
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1134 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 6
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
run: init-board/main 9: 1165 => ((7 file-address-address))
mem: ((7 file-address-address)): 1135 <= 1165
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1062
mem: ((5 integer)) => 6
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1407 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1062 6)
run: init-file/init-board/main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1409 <= 1062
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1062 6)
run: init-file/init-board/main 2: 6 => ((2 integer))
mem: ((2 integer)): 1410 <= 6
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 6
run: init-file/init-board/main 3: 48 => ((2 integer))
mem: ((2 integer)): 1410 <= 48
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1438 => ((3 file-address))
mem: ((3 file-address)): 1411 <= 1438
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1412 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1413 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
run: init-file/init-board/main 8: 1439 => ((6 square-address))
mem: ((6 square-address)): 1414 <= 1439
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 48
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1111 integer) (raw)) => N
run: init-file/init-board/main 9: #\N => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1439 <= #\N
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1412 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 48
run: init-file/init-board/main 11: 49 => ((2 integer))
mem: ((2 integer)): 1410 <= 49
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1413 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
run: init-file/init-board/main 8: 1440 => ((6 square-address))
mem: ((6 square-address)): 1414 <= 1440
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 49
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1112 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1440 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1412 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 49
run: init-file/init-board/main 11: 50 => ((2 integer))
mem: ((2 integer)): 1410 <= 50
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1413 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
run: init-file/init-board/main 8: 1441 => ((6 square-address))
mem: ((6 square-address)): 1414 <= 1441
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 50
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1113 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1441 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1412 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 50
run: init-file/init-board/main 11: 51 => ((2 integer))
mem: ((2 integer)): 1410 <= 51
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1413 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
run: init-file/init-board/main 8: 1442 => ((6 square-address))
mem: ((6 square-address)): 1414 <= 1442
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 51
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1114 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1442 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1412 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 51
run: init-file/init-board/main 11: 52 => ((2 integer))
mem: ((2 integer)): 1410 <= 52
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1413 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
run: init-file/init-board/main 8: 1443 => ((6 square-address))
mem: ((6 square-address)): 1414 <= 1443
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 52
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1115 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1443 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1412 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 52
run: init-file/init-board/main 11: 53 => ((2 integer))
mem: ((2 integer)): 1410 <= 53
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1413 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
run: init-file/init-board/main 8: 1444 => ((6 square-address))
mem: ((6 square-address)): 1414 <= 1444
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 53
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1116 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1444 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1412 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 53
run: init-file/init-board/main 11: 54 => ((2 integer))
mem: ((2 integer)): 1410 <= 54
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1413 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
run: init-file/init-board/main 8: 1445 => ((6 square-address))
mem: ((6 square-address)): 1414 <= 1445
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 54
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1117 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1445 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1412 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 54
run: init-file/init-board/main 11: 55 => ((2 integer))
mem: ((2 integer)): 1410 <= 55
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1413 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
run: init-file/init-board/main 8: 1446 => ((6 square-address))
mem: ((6 square-address)): 1414 <= 1446
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 55
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1118 integer) (raw)) => n
run: init-file/init-board/main 9: #\n => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1446 <= #\n
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1412 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 55
run: init-file/init-board/main 11: 56 => ((2 integer))
mem: ((2 integer)): 1410 <= 56
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1413 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1438
run: init-board/main 10: 1438 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1165 <= 1438
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 6
run: init-board/main 11: 7 => ((5 integer))
mem: ((5 integer)): 1133 <= 7
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 7
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1134 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 7
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
run: init-board/main 9: 1166 => ((7 file-address-address))
mem: ((7 file-address-address)): 1135 <= 1166
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1062
mem: ((5 integer)) => 7
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1447 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1062 7)
run: init-file/init-board/main 1: 1062 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1449 <= 1062
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1062 7)
run: init-file/init-board/main 2: 7 => ((2 integer))
mem: ((2 integer)): 1450 <= 7
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 7
run: init-file/init-board/main 3: 56 => ((2 integer))
mem: ((2 integer)): 1450 <= 56
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1478 => ((3 file-address))
mem: ((3 file-address)): 1451 <= 1478
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1452 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1453 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
run: init-file/init-board/main 8: 1479 => ((6 square-address))
mem: ((6 square-address)): 1454 <= 1479
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 56
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1119 integer) (raw)) => R
run: init-file/init-board/main 9: #\R => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1479 <= #\R
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1452 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 56
run: init-file/init-board/main 11: 57 => ((2 integer))
mem: ((2 integer)): 1450 <= 57
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1453 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
run: init-file/init-board/main 8: 1480 => ((6 square-address))
mem: ((6 square-address)): 1454 <= 1480
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 57
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1120 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1480 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1452 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 57
run: init-file/init-board/main 11: 58 => ((2 integer))
mem: ((2 integer)): 1450 <= 58
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1453 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
run: init-file/init-board/main 8: 1481 => ((6 square-address))
mem: ((6 square-address)): 1454 <= 1481
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 58
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1121 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1481 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1452 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 58
run: init-file/init-board/main 11: 59 => ((2 integer))
mem: ((2 integer)): 1450 <= 59
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1453 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
run: init-file/init-board/main 8: 1482 => ((6 square-address))
mem: ((6 square-address)): 1454 <= 1482
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 59
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1122 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1482 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1452 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 59
run: init-file/init-board/main 11: 60 => ((2 integer))
mem: ((2 integer)): 1450 <= 60
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1453 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
run: init-file/init-board/main 8: 1483 => ((6 square-address))
mem: ((6 square-address)): 1454 <= 1483
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 60
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1123 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1483 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1452 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 60
run: init-file/init-board/main 11: 61 => ((2 integer))
mem: ((2 integer)): 1450 <= 61
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1453 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
run: init-file/init-board/main 8: 1484 => ((6 square-address))
mem: ((6 square-address)): 1454 <= 1484
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 61
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1124 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1484 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1452 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 61
run: init-file/init-board/main 11: 62 => ((2 integer))
mem: ((2 integer)): 1450 <= 62
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1453 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
run: init-file/init-board/main 8: 1485 => ((6 square-address))
mem: ((6 square-address)): 1454 <= 1485
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 62
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1125 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1485 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1452 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 62
run: init-file/init-board/main 11: 63 => ((2 integer))
mem: ((2 integer)): 1450 <= 63
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1453 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
run: init-file/init-board/main 8: 1486 => ((6 square-address))
mem: ((6 square-address)): 1454 <= 1486
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 63
array-len: ((1062 integer-array) (raw))
mem: ((1062 integer) (raw)) => 64
mem: ((1126 integer) (raw)) => r
run: init-file/init-board/main 9: #\r => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1486 <= #\r
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1452 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 63
run: init-file/init-board/main 11: 64 => ((2 integer))
mem: ((2 integer)): 1450 <= 64
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1453 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1478
run: init-board/main 10: 1478 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1166 <= 1478
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 7
run: init-board/main 11: 8 => ((5 integer))
mem: ((5 integer)): 1133 <= 8
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 8
run: init-board/main 7: t => ((6 boolean))
mem: ((6 boolean)): 1134 <= t
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => t
run: init-board/main 13: (((reply)) ((4 board-address)))
mem: ((4 board-address)) => 1158
run: main 2: 1158 => ((2 board-address))
mem: ((2 board-address)): 1003 <= 1158
run: main 3: (((3 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
run: init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: init-fake-terminal/main 0: 1487 => ((default-space space-address))
run: init-fake-terminal/main 1: (((1 terminal-address)) <- ((new)) ((terminal literal)))
run: init-fake-terminal/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 1489 <= 1518
run: init-fake-terminal/main 2: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((1 offset)))
run: init-fake-terminal/main 2: 1519 => ((2 integer-address))
mem: ((2 integer-address)): 1490 <= 1519
run: init-fake-terminal/main 3: (((2 integer-address) (deref)) <- ((next-input)))
arg: nil 0 (20 10)
run: init-fake-terminal/main 3: 20 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1519 <= 20
run: init-fake-terminal/main 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((0 offset)))
run: init-fake-terminal/main 4: 1518 => ((3 integer-address))
mem: ((3 integer-address)): 1491 <= 1518
run: init-fake-terminal/main 5: (((3 integer-address) (deref)) <- ((next-input)))
arg: nil 1 (20 10)
run: init-fake-terminal/main 5: 10 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1518 <= 10
run: init-fake-terminal/main 6: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: init-fake-terminal/main 6: 1520 => ((4 integer-address))
mem: ((4 integer-address)): 1492 <= 1520
run: init-fake-terminal/main 7: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 7: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1520 <= 0
run: init-fake-terminal/main 8: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: init-fake-terminal/main 8: 1521 => ((5 integer-address))
mem: ((5 integer-address)): 1493 <= 1521
run: init-fake-terminal/main 9: (((5 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 9: 0 => ((5 integer-address) (deref))
mem: ((5 integer-address) (deref)): 1521 <= 0
run: init-fake-terminal/main 10: (((6 integer)) <- ((multiply)) ((2 integer-address) (deref)) ((3 integer-address) (deref)))
mem: ((2 integer-address) (deref)) => 20
mem: ((3 integer-address) (deref)) => 10
run: init-fake-terminal/main 10: 200 => ((6 integer))
mem: ((6 integer)): 1494 <= 200
run: init-fake-terminal/main 11: (((7 string-address-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((4 offset)))
run: init-fake-terminal/main 11: 1522 => ((7 string-address-address))
mem: ((7 string-address-address)): 1495 <= 1522
run: init-fake-terminal/main 12: (((7 string-address-address) (deref)) <- ((new)) ((string literal)) ((6 integer)))
mem: ((6 integer)) => 200
run: init-fake-terminal/main 12: 1523 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 1522 <= 1523
run: init-fake-terminal/main 13: (((clear-screen)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: clear-screen/init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: clear-screen/init-fake-terminal/main 0: 1724 => ((default-space space-address))
run: clear-screen/init-fake-terminal/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: clear-screen/init-fake-terminal/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 1726 <= 1518
run: clear-screen/init-fake-terminal/main 2: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: clear-screen/init-fake-terminal/main 3: (((2 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: clear-screen/init-fake-terminal/main 3: 1523 => ((2 string-address))
mem: ((2 string-address)): 1727 <= 1523
run: clear-screen/init-fake-terminal/main 4: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 4: 200 => ((3 integer))
mem: ((3 integer)): 1728 <= 200
run: clear-screen/init-fake-terminal/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: clear-screen/init-fake-terminal/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1729 <= 0
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1524 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1524
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1524 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: clear-screen/init-fake-terminal/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1729 <= 1
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1525 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1525
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1525 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: clear-screen/init-fake-terminal/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1729 <= 2
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1526 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1526
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1526 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: clear-screen/init-fake-terminal/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1729 <= 3
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1527 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1527
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1527 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: clear-screen/init-fake-terminal/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1729 <= 4
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1528 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1528
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1528 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: clear-screen/init-fake-terminal/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1729 <= 5
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1529 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1529
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1529 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: clear-screen/init-fake-terminal/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1729 <= 6
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1530 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1530
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1530 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: clear-screen/init-fake-terminal/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1729 <= 7
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1531 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1531
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1531 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: clear-screen/init-fake-terminal/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1729 <= 8
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1532 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1532
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1532 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: clear-screen/init-fake-terminal/main 10: 9 => ((4 integer))
mem: ((4 integer)): 1729 <= 9
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1533 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1533
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1533 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: clear-screen/init-fake-terminal/main 10: 10 => ((4 integer))
mem: ((4 integer)): 1729 <= 10
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1534 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1534
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1534 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: clear-screen/init-fake-terminal/main 10: 11 => ((4 integer))
mem: ((4 integer)): 1729 <= 11
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1535 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1535
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1535 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: clear-screen/init-fake-terminal/main 10: 12 => ((4 integer))
mem: ((4 integer)): 1729 <= 12
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1536 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1536
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1536 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: clear-screen/init-fake-terminal/main 10: 13 => ((4 integer))
mem: ((4 integer)): 1729 <= 13
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1537 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1537
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1537 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: clear-screen/init-fake-terminal/main 10: 14 => ((4 integer))
mem: ((4 integer)): 1729 <= 14
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1538 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1538
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1538 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: clear-screen/init-fake-terminal/main 10: 15 => ((4 integer))
mem: ((4 integer)): 1729 <= 15
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1539 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1539
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1539 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: clear-screen/init-fake-terminal/main 10: 16 => ((4 integer))
mem: ((4 integer)): 1729 <= 16
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1540 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1540
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1540 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: clear-screen/init-fake-terminal/main 10: 17 => ((4 integer))
mem: ((4 integer)): 1729 <= 17
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1541 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1541
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1541 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: clear-screen/init-fake-terminal/main 10: 18 => ((4 integer))
mem: ((4 integer)): 1729 <= 18
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1542 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1542
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1542 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: clear-screen/init-fake-terminal/main 10: 19 => ((4 integer))
mem: ((4 integer)): 1729 <= 19
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 19
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1543 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1543
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1543 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 19
run: clear-screen/init-fake-terminal/main 10: 20 => ((4 integer))
mem: ((4 integer)): 1729 <= 20
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 20
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 20
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1544 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1544
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1544 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 20
run: clear-screen/init-fake-terminal/main 10: 21 => ((4 integer))
mem: ((4 integer)): 1729 <= 21
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 21
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1545 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1545
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1545 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 21
run: clear-screen/init-fake-terminal/main 10: 22 => ((4 integer))
mem: ((4 integer)): 1729 <= 22
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 22
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 22
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1546 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1546
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1546 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 22
run: clear-screen/init-fake-terminal/main 10: 23 => ((4 integer))
mem: ((4 integer)): 1729 <= 23
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 23
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 23
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1547 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1547
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1547 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 23
run: clear-screen/init-fake-terminal/main 10: 24 => ((4 integer))
mem: ((4 integer)): 1729 <= 24
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 24
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 24
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1548 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1548
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1548 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 24
run: clear-screen/init-fake-terminal/main 10: 25 => ((4 integer))
mem: ((4 integer)): 1729 <= 25
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 25
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 25
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1549 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1549
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1549 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 25
run: clear-screen/init-fake-terminal/main 10: 26 => ((4 integer))
mem: ((4 integer)): 1729 <= 26
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 26
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1550 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1550
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1550 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 26
run: clear-screen/init-fake-terminal/main 10: 27 => ((4 integer))
mem: ((4 integer)): 1729 <= 27
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 27
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 27
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1551 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1551
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1551 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 27
run: clear-screen/init-fake-terminal/main 10: 28 => ((4 integer))
mem: ((4 integer)): 1729 <= 28
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 28
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 28
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1552 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1552
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1552 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 28
run: clear-screen/init-fake-terminal/main 10: 29 => ((4 integer))
mem: ((4 integer)): 1729 <= 29
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 29
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 29
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1553 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1553
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1553 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 29
run: clear-screen/init-fake-terminal/main 10: 30 => ((4 integer))
mem: ((4 integer)): 1729 <= 30
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 30
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 30
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1554 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1554
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1554 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 30
run: clear-screen/init-fake-terminal/main 10: 31 => ((4 integer))
mem: ((4 integer)): 1729 <= 31
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 31
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1555 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1555
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1555 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 31
run: clear-screen/init-fake-terminal/main 10: 32 => ((4 integer))
mem: ((4 integer)): 1729 <= 32
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 32
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 32
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1556 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1556
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1556 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 32
run: clear-screen/init-fake-terminal/main 10: 33 => ((4 integer))
mem: ((4 integer)): 1729 <= 33
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 33
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 33
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1557 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1557
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1557 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 33
run: clear-screen/init-fake-terminal/main 10: 34 => ((4 integer))
mem: ((4 integer)): 1729 <= 34
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 34
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 34
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1558 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1558
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1558 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 34
run: clear-screen/init-fake-terminal/main 10: 35 => ((4 integer))
mem: ((4 integer)): 1729 <= 35
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 35
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 35
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1559 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1559
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1559 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 35
run: clear-screen/init-fake-terminal/main 10: 36 => ((4 integer))
mem: ((4 integer)): 1729 <= 36
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 36
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 36
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1560 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1560
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1560 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 36
run: clear-screen/init-fake-terminal/main 10: 37 => ((4 integer))
mem: ((4 integer)): 1729 <= 37
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 37
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 37
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1561 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1561
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1561 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 37
run: clear-screen/init-fake-terminal/main 10: 38 => ((4 integer))
mem: ((4 integer)): 1729 <= 38
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 38
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 38
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1562 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1562
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1562 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 38
run: clear-screen/init-fake-terminal/main 10: 39 => ((4 integer))
mem: ((4 integer)): 1729 <= 39
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 39
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 39
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1563 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1563
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1563 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 39
run: clear-screen/init-fake-terminal/main 10: 40 => ((4 integer))
mem: ((4 integer)): 1729 <= 40
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 40
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 40
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1564 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1564
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1564 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 40
run: clear-screen/init-fake-terminal/main 10: 41 => ((4 integer))
mem: ((4 integer)): 1729 <= 41
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 41
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 41
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1565 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1565
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1565 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 41
run: clear-screen/init-fake-terminal/main 10: 42 => ((4 integer))
mem: ((4 integer)): 1729 <= 42
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 42
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 42
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1566 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1566
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1566 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 42
run: clear-screen/init-fake-terminal/main 10: 43 => ((4 integer))
mem: ((4 integer)): 1729 <= 43
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 43
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 43
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1567 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1567
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1567 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 43
run: clear-screen/init-fake-terminal/main 10: 44 => ((4 integer))
mem: ((4 integer)): 1729 <= 44
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 44
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1568 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1568
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1568 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 44
run: clear-screen/init-fake-terminal/main 10: 45 => ((4 integer))
mem: ((4 integer)): 1729 <= 45
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 45
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 45
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1569 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1569
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1569 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 45
run: clear-screen/init-fake-terminal/main 10: 46 => ((4 integer))
mem: ((4 integer)): 1729 <= 46
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 46
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 46
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1570 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1570
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1570 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 46
run: clear-screen/init-fake-terminal/main 10: 47 => ((4 integer))
mem: ((4 integer)): 1729 <= 47
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 47
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 47
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1571 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1571
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1571 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 47
run: clear-screen/init-fake-terminal/main 10: 48 => ((4 integer))
mem: ((4 integer)): 1729 <= 48
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 48
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 48
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1572 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1572
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1572 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 48
run: clear-screen/init-fake-terminal/main 10: 49 => ((4 integer))
mem: ((4 integer)): 1729 <= 49
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 49
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1573 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1573
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1573 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 49
run: clear-screen/init-fake-terminal/main 10: 50 => ((4 integer))
mem: ((4 integer)): 1729 <= 50
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 50
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 50
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1574 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1574
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1574 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 50
run: clear-screen/init-fake-terminal/main 10: 51 => ((4 integer))
mem: ((4 integer)): 1729 <= 51
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 51
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 51
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1575 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1575
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1575 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 51
run: clear-screen/init-fake-terminal/main 10: 52 => ((4 integer))
mem: ((4 integer)): 1729 <= 52
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 52
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 52
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1576 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1576
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1576 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 52
run: clear-screen/init-fake-terminal/main 10: 53 => ((4 integer))
mem: ((4 integer)): 1729 <= 53
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 53
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 53
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1577 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1577
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1577 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 53
run: clear-screen/init-fake-terminal/main 10: 54 => ((4 integer))
mem: ((4 integer)): 1729 <= 54
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 54
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1578 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1578
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1578 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 54
run: clear-screen/init-fake-terminal/main 10: 55 => ((4 integer))
mem: ((4 integer)): 1729 <= 55
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 55
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 55
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1579 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1579
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1579 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 55
run: clear-screen/init-fake-terminal/main 10: 56 => ((4 integer))
mem: ((4 integer)): 1729 <= 56
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 56
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 56
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1580 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1580
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1580 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 56
run: clear-screen/init-fake-terminal/main 10: 57 => ((4 integer))
mem: ((4 integer)): 1729 <= 57
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 57
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 57
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1581 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1581
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1581 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 57
run: clear-screen/init-fake-terminal/main 10: 58 => ((4 integer))
mem: ((4 integer)): 1729 <= 58
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 58
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 58
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1582 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1582
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1582 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 58
run: clear-screen/init-fake-terminal/main 10: 59 => ((4 integer))
mem: ((4 integer)): 1729 <= 59
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 59
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 59
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1583 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1583
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1583 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 59
run: clear-screen/init-fake-terminal/main 10: 60 => ((4 integer))
mem: ((4 integer)): 1729 <= 60
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 60
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 60
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1584 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1584
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1584 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 60
run: clear-screen/init-fake-terminal/main 10: 61 => ((4 integer))
mem: ((4 integer)): 1729 <= 61
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 61
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 61
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1585 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1585
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1585 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 61
run: clear-screen/init-fake-terminal/main 10: 62 => ((4 integer))
mem: ((4 integer)): 1729 <= 62
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 62
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 62
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1586 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1586
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1586 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 62
run: clear-screen/init-fake-terminal/main 10: 63 => ((4 integer))
mem: ((4 integer)): 1729 <= 63
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 63
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 63
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1587 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1587
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1587 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 63
run: clear-screen/init-fake-terminal/main 10: 64 => ((4 integer))
mem: ((4 integer)): 1729 <= 64
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 64
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 64
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1588 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1588
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1588 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 64
run: clear-screen/init-fake-terminal/main 10: 65 => ((4 integer))
mem: ((4 integer)): 1729 <= 65
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 65
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 65
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1589 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1589
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1589 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 65
run: clear-screen/init-fake-terminal/main 10: 66 => ((4 integer))
mem: ((4 integer)): 1729 <= 66
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 66
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 66
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1590 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1590
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1590 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 66
run: clear-screen/init-fake-terminal/main 10: 67 => ((4 integer))
mem: ((4 integer)): 1729 <= 67
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 67
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 67
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1591 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1591
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1591 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 67
run: clear-screen/init-fake-terminal/main 10: 68 => ((4 integer))
mem: ((4 integer)): 1729 <= 68
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 68
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 68
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1592 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1592
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1592 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 68
run: clear-screen/init-fake-terminal/main 10: 69 => ((4 integer))
mem: ((4 integer)): 1729 <= 69
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 69
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 69
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1593 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1593
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1593 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 69
run: clear-screen/init-fake-terminal/main 10: 70 => ((4 integer))
mem: ((4 integer)): 1729 <= 70
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 70
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 70
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1594 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1594
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1594 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 70
run: clear-screen/init-fake-terminal/main 10: 71 => ((4 integer))
mem: ((4 integer)): 1729 <= 71
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 71
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 71
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1595 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1595
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1595 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 71
run: clear-screen/init-fake-terminal/main 10: 72 => ((4 integer))
mem: ((4 integer)): 1729 <= 72
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 72
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 72
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1596 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1596
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1596 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 72
run: clear-screen/init-fake-terminal/main 10: 73 => ((4 integer))
mem: ((4 integer)): 1729 <= 73
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 73
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 73
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1597 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1597
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1597 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 73
run: clear-screen/init-fake-terminal/main 10: 74 => ((4 integer))
mem: ((4 integer)): 1729 <= 74
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 74
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 74
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1598 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1598
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1598 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 74
run: clear-screen/init-fake-terminal/main 10: 75 => ((4 integer))
mem: ((4 integer)): 1729 <= 75
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 75
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 75
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1599 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1599
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1599 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 75
run: clear-screen/init-fake-terminal/main 10: 76 => ((4 integer))
mem: ((4 integer)): 1729 <= 76
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 76
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 76
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1600 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1600
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1600 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 76
run: clear-screen/init-fake-terminal/main 10: 77 => ((4 integer))
mem: ((4 integer)): 1729 <= 77
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 77
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 77
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1601 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1601
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1601 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 77
run: clear-screen/init-fake-terminal/main 10: 78 => ((4 integer))
mem: ((4 integer)): 1729 <= 78
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 78
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 78
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1602 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1602
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1602 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 78
run: clear-screen/init-fake-terminal/main 10: 79 => ((4 integer))
mem: ((4 integer)): 1729 <= 79
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 79
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 79
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1603 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1603
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1603 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 79
run: clear-screen/init-fake-terminal/main 10: 80 => ((4 integer))
mem: ((4 integer)): 1729 <= 80
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 80
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 80
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1604 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1604
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1604 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 80
run: clear-screen/init-fake-terminal/main 10: 81 => ((4 integer))
mem: ((4 integer)): 1729 <= 81
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 81
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 81
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1605 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1605
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1605 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 81
run: clear-screen/init-fake-terminal/main 10: 82 => ((4 integer))
mem: ((4 integer)): 1729 <= 82
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 82
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 82
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1606 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1606
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1606 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 82
run: clear-screen/init-fake-terminal/main 10: 83 => ((4 integer))
mem: ((4 integer)): 1729 <= 83
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 83
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 83
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1607 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1607
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1607 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 83
run: clear-screen/init-fake-terminal/main 10: 84 => ((4 integer))
mem: ((4 integer)): 1729 <= 84
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 84
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 84
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1608 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1608
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1608 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 84
run: clear-screen/init-fake-terminal/main 10: 85 => ((4 integer))
mem: ((4 integer)): 1729 <= 85
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 85
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 85
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1609 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1609
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1609 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 85
run: clear-screen/init-fake-terminal/main 10: 86 => ((4 integer))
mem: ((4 integer)): 1729 <= 86
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 86
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 86
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1610 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1610
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1610 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 86
run: clear-screen/init-fake-terminal/main 10: 87 => ((4 integer))
mem: ((4 integer)): 1729 <= 87
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 87
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 87
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1611 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1611
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1611 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 87
run: clear-screen/init-fake-terminal/main 10: 88 => ((4 integer))
mem: ((4 integer)): 1729 <= 88
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 88
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 88
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1612 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1612
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1612 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 88
run: clear-screen/init-fake-terminal/main 10: 89 => ((4 integer))
mem: ((4 integer)): 1729 <= 89
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 89
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 89
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1613 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1613
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1613 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 89
run: clear-screen/init-fake-terminal/main 10: 90 => ((4 integer))
mem: ((4 integer)): 1729 <= 90
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 90
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 90
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1614 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1614
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1614 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 90
run: clear-screen/init-fake-terminal/main 10: 91 => ((4 integer))
mem: ((4 integer)): 1729 <= 91
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 91
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 91
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1615 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1615
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1615 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 91
run: clear-screen/init-fake-terminal/main 10: 92 => ((4 integer))
mem: ((4 integer)): 1729 <= 92
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 92
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 92
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1616 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1616
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1616 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 92
run: clear-screen/init-fake-terminal/main 10: 93 => ((4 integer))
mem: ((4 integer)): 1729 <= 93
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 93
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 93
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1617 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1617
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1617 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 93
run: clear-screen/init-fake-terminal/main 10: 94 => ((4 integer))
mem: ((4 integer)): 1729 <= 94
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 94
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 94
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1618 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1618
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1618 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 94
run: clear-screen/init-fake-terminal/main 10: 95 => ((4 integer))
mem: ((4 integer)): 1729 <= 95
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 95
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 95
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1619 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1619
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1619 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 95
run: clear-screen/init-fake-terminal/main 10: 96 => ((4 integer))
mem: ((4 integer)): 1729 <= 96
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 96
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 96
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1620 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1620
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1620 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 96
run: clear-screen/init-fake-terminal/main 10: 97 => ((4 integer))
mem: ((4 integer)): 1729 <= 97
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 97
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 97
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1621 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1621
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1621 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 97
run: clear-screen/init-fake-terminal/main 10: 98 => ((4 integer))
mem: ((4 integer)): 1729 <= 98
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 98
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 98
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1622 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1622
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1622 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 98
run: clear-screen/init-fake-terminal/main 10: 99 => ((4 integer))
mem: ((4 integer)): 1729 <= 99
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 99
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 99
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1623 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1623
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1623 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 99
run: clear-screen/init-fake-terminal/main 10: 100 => ((4 integer))
mem: ((4 integer)): 1729 <= 100
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 100
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 100
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1624 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1624
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1624 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 100
run: clear-screen/init-fake-terminal/main 10: 101 => ((4 integer))
mem: ((4 integer)): 1729 <= 101
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 101
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 101
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1625 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1625
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1625 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 101
run: clear-screen/init-fake-terminal/main 10: 102 => ((4 integer))
mem: ((4 integer)): 1729 <= 102
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 102
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 102
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1626 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1626
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1626 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 102
run: clear-screen/init-fake-terminal/main 10: 103 => ((4 integer))
mem: ((4 integer)): 1729 <= 103
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 103
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 103
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1627 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1627
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1627 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 103
run: clear-screen/init-fake-terminal/main 10: 104 => ((4 integer))
mem: ((4 integer)): 1729 <= 104
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 104
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 104
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1628 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1628
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1628 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 104
run: clear-screen/init-fake-terminal/main 10: 105 => ((4 integer))
mem: ((4 integer)): 1729 <= 105
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 105
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 105
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1629 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1629
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1629 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 105
run: clear-screen/init-fake-terminal/main 10: 106 => ((4 integer))
mem: ((4 integer)): 1729 <= 106
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 106
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 106
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1630 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1630
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1630 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 106
run: clear-screen/init-fake-terminal/main 10: 107 => ((4 integer))
mem: ((4 integer)): 1729 <= 107
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 107
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 107
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1631 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1631
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1631 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 107
run: clear-screen/init-fake-terminal/main 10: 108 => ((4 integer))
mem: ((4 integer)): 1729 <= 108
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 108
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 108
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1632 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1632
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1632 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 108
run: clear-screen/init-fake-terminal/main 10: 109 => ((4 integer))
mem: ((4 integer)): 1729 <= 109
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 109
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 109
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1633 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1633
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1633 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 109
run: clear-screen/init-fake-terminal/main 10: 110 => ((4 integer))
mem: ((4 integer)): 1729 <= 110
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 110
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 110
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1634 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1634
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1634 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 110
run: clear-screen/init-fake-terminal/main 10: 111 => ((4 integer))
mem: ((4 integer)): 1729 <= 111
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 111
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 111
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1635 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1635
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1635 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 111
run: clear-screen/init-fake-terminal/main 10: 112 => ((4 integer))
mem: ((4 integer)): 1729 <= 112
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 112
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 112
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1636 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1636
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1636 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 112
run: clear-screen/init-fake-terminal/main 10: 113 => ((4 integer))
mem: ((4 integer)): 1729 <= 113
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 113
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 113
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1637 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1637
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1637 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 113
run: clear-screen/init-fake-terminal/main 10: 114 => ((4 integer))
mem: ((4 integer)): 1729 <= 114
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 114
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 114
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1638 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1638
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1638 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 114
run: clear-screen/init-fake-terminal/main 10: 115 => ((4 integer))
mem: ((4 integer)): 1729 <= 115
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 115
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 115
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1639 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1639
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1639 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 115
run: clear-screen/init-fake-terminal/main 10: 116 => ((4 integer))
mem: ((4 integer)): 1729 <= 116
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 116
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 116
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1640 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1640
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1640 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 116
run: clear-screen/init-fake-terminal/main 10: 117 => ((4 integer))
mem: ((4 integer)): 1729 <= 117
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 117
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 117
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1641 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1641
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1641 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 117
run: clear-screen/init-fake-terminal/main 10: 118 => ((4 integer))
mem: ((4 integer)): 1729 <= 118
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 118
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 118
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1642 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1642
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1642 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 118
run: clear-screen/init-fake-terminal/main 10: 119 => ((4 integer))
mem: ((4 integer)): 1729 <= 119
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 119
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 119
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1643 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1643
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1643 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 119
run: clear-screen/init-fake-terminal/main 10: 120 => ((4 integer))
mem: ((4 integer)): 1729 <= 120
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 120
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 120
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1644 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1644
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1644 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 120
run: clear-screen/init-fake-terminal/main 10: 121 => ((4 integer))
mem: ((4 integer)): 1729 <= 121
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 121
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 121
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1645 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1645
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1645 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 121
run: clear-screen/init-fake-terminal/main 10: 122 => ((4 integer))
mem: ((4 integer)): 1729 <= 122
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 122
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 122
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1646 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1646
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1646 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 122
run: clear-screen/init-fake-terminal/main 10: 123 => ((4 integer))
mem: ((4 integer)): 1729 <= 123
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 123
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 123
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1647 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1647
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1647 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 123
run: clear-screen/init-fake-terminal/main 10: 124 => ((4 integer))
mem: ((4 integer)): 1729 <= 124
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 124
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 124
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1648 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1648
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1648 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 124
run: clear-screen/init-fake-terminal/main 10: 125 => ((4 integer))
mem: ((4 integer)): 1729 <= 125
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 125
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 125
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1649 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1649
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1649 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 125
run: clear-screen/init-fake-terminal/main 10: 126 => ((4 integer))
mem: ((4 integer)): 1729 <= 126
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 126
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 126
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1650 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1650
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1650 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 126
run: clear-screen/init-fake-terminal/main 10: 127 => ((4 integer))
mem: ((4 integer)): 1729 <= 127
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 127
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 127
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1651 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1651
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1651 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 127
run: clear-screen/init-fake-terminal/main 10: 128 => ((4 integer))
mem: ((4 integer)): 1729 <= 128
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 128
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1652 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1652
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1652 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 128
run: clear-screen/init-fake-terminal/main 10: 129 => ((4 integer))
mem: ((4 integer)): 1729 <= 129
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 129
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 129
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1653 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1653
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1653 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 129
run: clear-screen/init-fake-terminal/main 10: 130 => ((4 integer))
mem: ((4 integer)): 1729 <= 130
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 130
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 130
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1654 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1654
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1654 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 130
run: clear-screen/init-fake-terminal/main 10: 131 => ((4 integer))
mem: ((4 integer)): 1729 <= 131
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 131
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 131
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1655 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1655
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1655 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 131
run: clear-screen/init-fake-terminal/main 10: 132 => ((4 integer))
mem: ((4 integer)): 1729 <= 132
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 132
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 132
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1656 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1656
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1656 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 132
run: clear-screen/init-fake-terminal/main 10: 133 => ((4 integer))
mem: ((4 integer)): 1729 <= 133
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 133
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 133
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1657 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1657
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1657 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 133
run: clear-screen/init-fake-terminal/main 10: 134 => ((4 integer))
mem: ((4 integer)): 1729 <= 134
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 134
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 134
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1658 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1658
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1658 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 134
run: clear-screen/init-fake-terminal/main 10: 135 => ((4 integer))
mem: ((4 integer)): 1729 <= 135
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 135
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 135
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1659 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1659
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1659 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 135
run: clear-screen/init-fake-terminal/main 10: 136 => ((4 integer))
mem: ((4 integer)): 1729 <= 136
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 136
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 136
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1660 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1660
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1660 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 136
run: clear-screen/init-fake-terminal/main 10: 137 => ((4 integer))
mem: ((4 integer)): 1729 <= 137
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 137
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 137
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1661 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1661
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1661 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 137
run: clear-screen/init-fake-terminal/main 10: 138 => ((4 integer))
mem: ((4 integer)): 1729 <= 138
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 138
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 138
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1662 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1662
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1662 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 138
run: clear-screen/init-fake-terminal/main 10: 139 => ((4 integer))
mem: ((4 integer)): 1729 <= 139
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 139
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 139
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1663 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1663
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1663 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 139
run: clear-screen/init-fake-terminal/main 10: 140 => ((4 integer))
mem: ((4 integer)): 1729 <= 140
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 140
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 140
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1664 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1664
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1664 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 140
run: clear-screen/init-fake-terminal/main 10: 141 => ((4 integer))
mem: ((4 integer)): 1729 <= 141
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 141
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 141
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1665 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1665
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1665 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 141
run: clear-screen/init-fake-terminal/main 10: 142 => ((4 integer))
mem: ((4 integer)): 1729 <= 142
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 142
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 142
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1666 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1666
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1666 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 142
run: clear-screen/init-fake-terminal/main 10: 143 => ((4 integer))
mem: ((4 integer)): 1729 <= 143
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 143
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 143
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1667 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1667
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1667 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 143
run: clear-screen/init-fake-terminal/main 10: 144 => ((4 integer))
mem: ((4 integer)): 1729 <= 144
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 144
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 144
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1668 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1668
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1668 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 144
run: clear-screen/init-fake-terminal/main 10: 145 => ((4 integer))
mem: ((4 integer)): 1729 <= 145
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 145
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 145
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1669 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1669
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1669 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 145
run: clear-screen/init-fake-terminal/main 10: 146 => ((4 integer))
mem: ((4 integer)): 1729 <= 146
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 146
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 146
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1670 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1670
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1670 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 146
run: clear-screen/init-fake-terminal/main 10: 147 => ((4 integer))
mem: ((4 integer)): 1729 <= 147
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 147
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 147
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1671 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1671
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1671 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 147
run: clear-screen/init-fake-terminal/main 10: 148 => ((4 integer))
mem: ((4 integer)): 1729 <= 148
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 148
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 148
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1672 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1672
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1672 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 148
run: clear-screen/init-fake-terminal/main 10: 149 => ((4 integer))
mem: ((4 integer)): 1729 <= 149
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 149
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 149
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1673 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1673
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1673 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 149
run: clear-screen/init-fake-terminal/main 10: 150 => ((4 integer))
mem: ((4 integer)): 1729 <= 150
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 150
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 150
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1674 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1674
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1674 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 150
run: clear-screen/init-fake-terminal/main 10: 151 => ((4 integer))
mem: ((4 integer)): 1729 <= 151
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 151
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 151
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1675 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1675
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1675 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 151
run: clear-screen/init-fake-terminal/main 10: 152 => ((4 integer))
mem: ((4 integer)): 1729 <= 152
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 152
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 152
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1676 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1676
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1676 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 152
run: clear-screen/init-fake-terminal/main 10: 153 => ((4 integer))
mem: ((4 integer)): 1729 <= 153
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 153
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 153
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1677 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1677
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1677 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 153
run: clear-screen/init-fake-terminal/main 10: 154 => ((4 integer))
mem: ((4 integer)): 1729 <= 154
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 154
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 154
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1678 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1678
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1678 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 154
run: clear-screen/init-fake-terminal/main 10: 155 => ((4 integer))
mem: ((4 integer)): 1729 <= 155
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 155
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 155
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1679 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1679
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1679 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 155
run: clear-screen/init-fake-terminal/main 10: 156 => ((4 integer))
mem: ((4 integer)): 1729 <= 156
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 156
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 156
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1680 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1680
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1680 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 156
run: clear-screen/init-fake-terminal/main 10: 157 => ((4 integer))
mem: ((4 integer)): 1729 <= 157
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 157
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 157
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1681 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1681
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1681 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 157
run: clear-screen/init-fake-terminal/main 10: 158 => ((4 integer))
mem: ((4 integer)): 1729 <= 158
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 158
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 158
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1682 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1682
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1682 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 158
run: clear-screen/init-fake-terminal/main 10: 159 => ((4 integer))
mem: ((4 integer)): 1729 <= 159
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 159
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 159
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1683 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1683
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1683 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 159
run: clear-screen/init-fake-terminal/main 10: 160 => ((4 integer))
mem: ((4 integer)): 1729 <= 160
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 160
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 160
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1684 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1684
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1684 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 160
run: clear-screen/init-fake-terminal/main 10: 161 => ((4 integer))
mem: ((4 integer)): 1729 <= 161
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 161
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 161
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1685 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1685
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1685 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 161
run: clear-screen/init-fake-terminal/main 10: 162 => ((4 integer))
mem: ((4 integer)): 1729 <= 162
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 162
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 162
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1686 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1686
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1686 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 162
run: clear-screen/init-fake-terminal/main 10: 163 => ((4 integer))
mem: ((4 integer)): 1729 <= 163
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 163
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 163
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1687 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1687
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1687 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 163
run: clear-screen/init-fake-terminal/main 10: 164 => ((4 integer))
mem: ((4 integer)): 1729 <= 164
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 164
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 164
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1688 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1688
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1688 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 164
run: clear-screen/init-fake-terminal/main 10: 165 => ((4 integer))
mem: ((4 integer)): 1729 <= 165
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 165
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 165
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1689 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1689
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1689 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 165
run: clear-screen/init-fake-terminal/main 10: 166 => ((4 integer))
mem: ((4 integer)): 1729 <= 166
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 166
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 166
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1690 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1690
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1690 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 166
run: clear-screen/init-fake-terminal/main 10: 167 => ((4 integer))
mem: ((4 integer)): 1729 <= 167
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 167
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 167
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1691 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1691
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1691 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 167
run: clear-screen/init-fake-terminal/main 10: 168 => ((4 integer))
mem: ((4 integer)): 1729 <= 168
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 168
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 168
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1692 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1692
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1692 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 168
run: clear-screen/init-fake-terminal/main 10: 169 => ((4 integer))
mem: ((4 integer)): 1729 <= 169
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 169
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 169
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1693 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1693
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1693 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 169
run: clear-screen/init-fake-terminal/main 10: 170 => ((4 integer))
mem: ((4 integer)): 1729 <= 170
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 170
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 170
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1694 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1694
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1694 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 170
run: clear-screen/init-fake-terminal/main 10: 171 => ((4 integer))
mem: ((4 integer)): 1729 <= 171
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 171
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 171
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1695 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1695
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1695 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 171
run: clear-screen/init-fake-terminal/main 10: 172 => ((4 integer))
mem: ((4 integer)): 1729 <= 172
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 172
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 172
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1696 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1696
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1696 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 172
run: clear-screen/init-fake-terminal/main 10: 173 => ((4 integer))
mem: ((4 integer)): 1729 <= 173
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 173
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 173
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1697 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1697
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1697 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 173
run: clear-screen/init-fake-terminal/main 10: 174 => ((4 integer))
mem: ((4 integer)): 1729 <= 174
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 174
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 174
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1698 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1698
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1698 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 174
run: clear-screen/init-fake-terminal/main 10: 175 => ((4 integer))
mem: ((4 integer)): 1729 <= 175
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 175
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 175
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1699 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1699
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1699 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 175
run: clear-screen/init-fake-terminal/main 10: 176 => ((4 integer))
mem: ((4 integer)): 1729 <= 176
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 176
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 176
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1700 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1700
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1700 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 176
run: clear-screen/init-fake-terminal/main 10: 177 => ((4 integer))
mem: ((4 integer)): 1729 <= 177
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 177
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 177
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1701 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1701
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1701 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 177
run: clear-screen/init-fake-terminal/main 10: 178 => ((4 integer))
mem: ((4 integer)): 1729 <= 178
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 178
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 178
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1702 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1702
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1702 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 178
run: clear-screen/init-fake-terminal/main 10: 179 => ((4 integer))
mem: ((4 integer)): 1729 <= 179
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 179
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 179
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1703 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1703
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1703 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 179
run: clear-screen/init-fake-terminal/main 10: 180 => ((4 integer))
mem: ((4 integer)): 1729 <= 180
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 180
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 180
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1704 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1704
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1704 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 180
run: clear-screen/init-fake-terminal/main 10: 181 => ((4 integer))
mem: ((4 integer)): 1729 <= 181
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 181
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 181
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1705 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1705
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1705 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 181
run: clear-screen/init-fake-terminal/main 10: 182 => ((4 integer))
mem: ((4 integer)): 1729 <= 182
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 182
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 182
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1706 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1706
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1706 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 182
run: clear-screen/init-fake-terminal/main 10: 183 => ((4 integer))
mem: ((4 integer)): 1729 <= 183
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 183
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 183
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1707 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1707
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1707 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 183
run: clear-screen/init-fake-terminal/main 10: 184 => ((4 integer))
mem: ((4 integer)): 1729 <= 184
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 184
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 184
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1708 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1708
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1708 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 184
run: clear-screen/init-fake-terminal/main 10: 185 => ((4 integer))
mem: ((4 integer)): 1729 <= 185
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 185
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 185
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1709 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1709
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1709 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 185
run: clear-screen/init-fake-terminal/main 10: 186 => ((4 integer))
mem: ((4 integer)): 1729 <= 186
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 186
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 186
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1710 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1710
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1710 <= #\space
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 186
run: clear-screen/init-fake-terminal/main 10: 187 => ((4 integer))
mem: ((4 integer)): 1729 <= 187
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 187
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 187
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1711 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1711
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1711 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 187
run: clear-screen/init-fake-terminal/main 10: 188 => ((4 integer))
mem: ((4 integer)): 1729 <= 188
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 188
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 188
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1712 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1712
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1712 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 188
run: clear-screen/init-fake-terminal/main 10: 189 => ((4 integer))
mem: ((4 integer)): 1729 <= 189
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 189
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 189
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1713 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1713
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1713 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 189
run: clear-screen/init-fake-terminal/main 10: 190 => ((4 integer))
mem: ((4 integer)): 1729 <= 190
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 190
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 190
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1714 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1714
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1714 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 190
run: clear-screen/init-fake-terminal/main 10: 191 => ((4 integer))
mem: ((4 integer)): 1729 <= 191
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 191
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 191
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1715 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1715
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1715 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 191
run: clear-screen/init-fake-terminal/main 10: 192 => ((4 integer))
mem: ((4 integer)): 1729 <= 192
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 192
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 192
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1716 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1716
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1716 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 192
run: clear-screen/init-fake-terminal/main 10: 193 => ((4 integer))
mem: ((4 integer)): 1729 <= 193
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 193
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 193
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1717 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1717
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1717 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 193
run: clear-screen/init-fake-terminal/main 10: 194 => ((4 integer))
mem: ((4 integer)): 1729 <= 194
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 194
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 194
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1718 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1718
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1718 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 194
run: clear-screen/init-fake-terminal/main 10: 195 => ((4 integer))
mem: ((4 integer)): 1729 <= 195
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 195
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 195
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1719 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1719
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1719 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 195
run: clear-screen/init-fake-terminal/main 10: 196 => ((4 integer))
mem: ((4 integer)): 1729 <= 196
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 196
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 196
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1720 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1720
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1720 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 196
run: clear-screen/init-fake-terminal/main 10: 197 => ((4 integer))
mem: ((4 integer)): 1729 <= 197
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 197
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 197
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1721 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1721
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1721 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 197
run: clear-screen/init-fake-terminal/main 10: 198 => ((4 integer))
mem: ((4 integer)): 1729 <= 198
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 198
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 198
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1722 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1722
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1722 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 198
run: clear-screen/init-fake-terminal/main 10: 199 => ((4 integer))
mem: ((4 integer)): 1729 <= 199
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 199
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1730 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 199
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1723 => ((1 byte-address))
mem: ((1 byte-address)): 1726 <= 1723
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1723 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 199
run: clear-screen/init-fake-terminal/main 10: 200 => ((4 integer))
mem: ((4 integer)): 1729 <= 200
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 200
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1730 <= t
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: clear-screen/init-fake-terminal/main 12: (((reply)))
run: init-fake-terminal/main 14: (((reply)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: main 3: 1518 => ((3 terminal-address))
mem: ((3 terminal-address)): 1004 <= 1518
run: main 4: (((print-board)) ((3 terminal-address)) ((2 board-address)))
mem: ((3 terminal-address)) => 1518
mem: ((2 board-address)) => 1158
run: print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-board/main 0: 1755 => ((default-space space-address))
run: print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 1158)
run: print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 1757 <= 1518
run: print-board/main 2: (((2 board-address)) <- ((next-input)))
arg: nil 1 (1518 1158)
run: print-board/main 2: 1158 => ((2 board-address))
mem: ((2 board-address)): 1758 <= 1158
run: print-board/main 3: (((3 integer)) <- ((copy)) ((7 literal)))
run: print-board/main 3: 7 => ((3 integer))
mem: ((3 integer)): 1759 <= 7
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 7
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: print-board/main 6: 8 => ((5 integer))
mem: ((5 integer)): 1761 <= 8
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1518
mem: ((5 integer)) => 8
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 1786 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 8)
run: print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 1788 <= 1518
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1518 8)
run: print-integer/print-board/main 2: 8 => ((2 integer))
mem: ((2 integer)): 1789 <= 8
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 1817 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (8)
run: integer-to-decimal-string/print-integer/print-board/main 1: 8 => ((1 integer))
mem: ((1 integer)): 1819 <= 8
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 1820 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 1822 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 1823 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 1848 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 1879 => ((1 buffer-address))
mem: ((1 buffer-address)): 1850 <= 1879
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 1879 => ((2 integer-address))
mem: ((2 integer-address)): 1851 <= 1879
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1879 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 1880 => ((3 string-address-address))
mem: ((3 string-address-address)): 1852 <= 1880
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 1853 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 1881 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 1880 <= 1881
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1879
run: integer-to-decimal-string/print-integer/print-board/main 11: 1879 => ((6 buffer-address))
mem: ((6 buffer-address)): 1824 <= 1879
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 1825 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 1826 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 1827 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 8
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 1819 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 8 => ((10 integer))
mem: ((10 integer)): 1828 <= 8
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 17: 56 => ((11 integer))
mem: ((11 integer)): 1829 <= 56
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 56
run: integer-to-decimal-string/print-integer/print-board/main 18: #\8 => ((12 character))
mem: ((12 character)): 1830 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 1879
mem: ((12 character)) => 8
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 1912 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1879 #\8)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 1879 => ((1 buffer-address))
mem: ((1 buffer-address)): 1914 <= 1879
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1879 #\8)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\8 => ((2 character))
mem: ((2 character)): 1915 <= #\8
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1879
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 1943 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1879)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 1879 => ((1 buffer-address))
mem: ((1 buffer-address)): 1945 <= 1879
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1879 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1946 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1880 string-address) (raw)) => 1881
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 1881 => ((3 string-address))
mem: ((3 string-address)): 1947 <= 1881
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1881 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 1948 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1949 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1916 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 1879 => ((4 integer-address))
mem: ((4 integer-address)): 1917 <= 1879
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1880 string-address) (raw)) => 1881
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 1881 => ((5 string-address))
mem: ((5 string-address)): 1918 <= 1881
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1881 string) (raw))
mem: ((1881 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 1882 => ((6 byte-address))
mem: ((6 byte-address)): 1919 <= 1882
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 8
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\8 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1882 <= #\8
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1879 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1879
run: integer-to-decimal-string/print-integer/print-board/main 19: 1879 => ((6 buffer-address))
mem: ((6 buffer-address)): 1824 <= 1879
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 1827 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((1879 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 1831 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((1880 string-address) (raw)) => 1881
run: integer-to-decimal-string/print-integer/print-board/main 24: 1881 => ((14 string-address))
mem: ((14 string-address)): 1832 <= 1881
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 1974 => ((15 string-address))
mem: ((15 string-address)): 1833 <= 1974
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 1834 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 1835 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 1827 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((1881 string) (raw))
mem: ((1881 integer) (raw)) => 30
mem: ((1882 byte) (raw)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 30: #\8 => ((18 byte))
mem: ((18 byte)): 1836 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((1974 string) (raw))
mem: ((1974 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 1975 => ((19 byte-address))
mem: ((19 byte-address)): 1837 <= 1975
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 32: #\8 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 1975 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 1834 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 1835 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 1827 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 1974
run: print-integer/print-board/main 3: 1974 => ((3 string-address))
mem: ((3 string-address)): 1790 <= 1974
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((3 string-address)) => 1974
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 1976 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 1974)
run: print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 1978 <= 1518
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 1974)
run: print-string/print-integer/print-board/main 2: 1974 => ((2 string-address))
mem: ((2 string-address)): 1979 <= 1974
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1974 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 1980 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 1981 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1982 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1974 string) (raw))
mem: ((1974 integer) (raw)) => 1
mem: ((1975 byte) (raw)) => 8
run: print-string/print-integer/print-board/main 7: #\8 => ((6 character))
mem: ((6 character)): 1983 <= #\8
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => 8
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 2007 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\8)
run: print-character/print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2009 <= 1518
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\8)
run: print-character/print-string/print-integer/print-board/main 2: #\8 => ((2 character))
mem: ((2 character)): 2010 <= #\8
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\8)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2011 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\8)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2012 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2013 <= 1520
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2014 <= 1521
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2015 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2016 <= 0
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 0 => ((9 integer))
mem: ((9 integer)): 2017 <= 0
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-integer/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2018 <= 1523
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1524 => ((11 byte-address))
mem: ((11 byte-address)): 2019 <= 1524
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 8
run: print-character/print-string/print-integer/print-board/main 13: #\8 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1524 <= #\8
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 1981 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 1982 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 2038 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 2038
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 2038
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 2042 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 2038)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2044 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 2038)
run: print-string/print-board/main 2: 2038 => ((2 string-address))
mem: ((2 string-address)): 2045 <= 2038
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2038 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 2046 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 2047 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2048 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((2038 string) (raw))
mem: ((2038 integer) (raw)) => 3
mem: ((2039 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 2049 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 2073 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2075 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2076 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2077 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2078 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2079 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2080 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2081 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2082 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 1 => ((9 integer))
mem: ((9 integer)): 2083 <= 1
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2084 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 1
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1525 => ((11 byte-address))
mem: ((11 byte-address)): 2085 <= 1525
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1525 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 2047 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2048 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((2038 string) (raw))
mem: ((2038 integer) (raw)) => 3
mem: ((2040 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 2049 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 2104 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\|)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2106 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 2107 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2108 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2109 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2110 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2111 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2112 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2113 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 2 => ((9 integer))
mem: ((9 integer)): 2114 <= 2
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2115 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 2
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1526 => ((11 byte-address))
mem: ((11 byte-address)): 2116 <= 1526
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1526 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 2047 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2048 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((2038 string) (raw))
mem: ((2038 integer) (raw)) => 3
mem: ((2041 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 2049 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 2135 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2137 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2138 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2139 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2140 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2141 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2142 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2143 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2144 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 3 => ((9 integer))
mem: ((9 integer)): 2145 <= 3
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2146 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 3
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1527 => ((11 byte-address))
mem: ((11 byte-address)): 2147 <= 1527
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1527 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 2047 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2048 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1763 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1159 file-address) (raw)) => 1198
run: print-board/main 13: 1198 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1198
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
mem: ((1206 square) (raw)) => r
run: print-board/main 14: #\r => ((6 square))
mem: ((6 square)): 1762 <= #\r
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => r
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2166 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\r)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2168 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\r)
run: print-character/print-board/main 2: #\r => ((2 character))
mem: ((2 character)): 2169 <= #\r
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\r)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2170 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\r)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2171 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2172 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2173 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2174 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2175 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 4 => ((9 integer))
mem: ((9 integer)): 2176 <= 4
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2177 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 4
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1528 => ((11 byte-address))
mem: ((11 byte-address)): 2178 <= 1528
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => r
run: print-character/print-board/main 13: #\r => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1528 <= #\r
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2197 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2199 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2200 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2201 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2202 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2203 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2204 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2205 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2206 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 5 => ((9 integer))
mem: ((9 integer)): 2207 <= 5
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2208 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 5
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1529 => ((11 byte-address))
mem: ((11 byte-address)): 2209 <= 1529
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1529 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1763 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1160 file-address) (raw)) => 1238
run: print-board/main 13: 1238 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1238
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
mem: ((1246 square) (raw)) => n
run: print-board/main 14: #\n => ((6 square))
mem: ((6 square)): 1762 <= #\n
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => n
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2228 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\n)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2230 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\n)
run: print-character/print-board/main 2: #\n => ((2 character))
mem: ((2 character)): 2231 <= #\n
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\n)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2232 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\n)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2233 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2234 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2235 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2236 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2237 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 6 => ((9 integer))
mem: ((9 integer)): 2238 <= 6
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2239 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 6
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1530 => ((11 byte-address))
mem: ((11 byte-address)): 2240 <= 1530
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => n
run: print-character/print-board/main 13: #\n => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1530 <= #\n
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2259 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2261 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2262 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2263 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2264 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2265 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2266 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2267 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2268 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 7 => ((9 integer))
mem: ((9 integer)): 2269 <= 7
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2270 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 7
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1531 => ((11 byte-address))
mem: ((11 byte-address)): 2271 <= 1531
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1531 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1763 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1161 file-address) (raw)) => 1278
run: print-board/main 13: 1278 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1278
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
mem: ((1286 square) (raw)) => b
run: print-board/main 14: #\b => ((6 square))
mem: ((6 square)): 1762 <= #\b
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => b
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2290 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\b)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2292 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\b)
run: print-character/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 2293 <= #\b
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\b)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2294 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\b)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2295 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2296 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2297 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2298 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2299 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 8 => ((9 integer))
mem: ((9 integer)): 2300 <= 8
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2301 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 8
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1532 => ((11 byte-address))
mem: ((11 byte-address)): 2302 <= 1532
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1532 <= #\b
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2321 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2323 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2324 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2325 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2326 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2327 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2328 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2329 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2330 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 9 => ((9 integer))
mem: ((9 integer)): 2331 <= 9
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2332 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 9
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1533 => ((11 byte-address))
mem: ((11 byte-address)): 2333 <= 1533
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1533 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1763 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1162 file-address) (raw)) => 1318
run: print-board/main 13: 1318 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1318
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
mem: ((1326 square) (raw)) => q
run: print-board/main 14: #\q => ((6 square))
mem: ((6 square)): 1762 <= #\q
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => q
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2352 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\q)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2354 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\q)
run: print-character/print-board/main 2: #\q => ((2 character))
mem: ((2 character)): 2355 <= #\q
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\q)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2356 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\q)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2357 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2358 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2359 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2360 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2361 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 10 => ((9 integer))
mem: ((9 integer)): 2362 <= 10
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2363 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 10
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1534 => ((11 byte-address))
mem: ((11 byte-address)): 2364 <= 1534
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => q
run: print-character/print-board/main 13: #\q => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1534 <= #\q
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2383 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2385 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2386 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2387 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2388 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2389 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2390 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2391 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2392 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 11 => ((9 integer))
mem: ((9 integer)): 2393 <= 11
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2394 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 11
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1535 => ((11 byte-address))
mem: ((11 byte-address)): 2395 <= 1535
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1535 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1763 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1163 file-address) (raw)) => 1358
run: print-board/main 13: 1358 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1358
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
mem: ((1366 square) (raw)) => k
run: print-board/main 14: #\k => ((6 square))
mem: ((6 square)): 1762 <= #\k
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => k
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2414 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\k)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2416 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\k)
run: print-character/print-board/main 2: #\k => ((2 character))
mem: ((2 character)): 2417 <= #\k
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\k)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2418 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\k)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2419 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2420 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2421 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2422 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2423 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 12 => ((9 integer))
mem: ((9 integer)): 2424 <= 12
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2425 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 12
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1536 => ((11 byte-address))
mem: ((11 byte-address)): 2426 <= 1536
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => k
run: print-character/print-board/main 13: #\k => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1536 <= #\k
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2445 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2447 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2448 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2449 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2450 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2451 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2452 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2453 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2454 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 13 => ((9 integer))
mem: ((9 integer)): 2455 <= 13
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2456 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 13
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1537 => ((11 byte-address))
mem: ((11 byte-address)): 2457 <= 1537
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1537 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1763 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1164 file-address) (raw)) => 1398
run: print-board/main 13: 1398 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1398
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
mem: ((1406 square) (raw)) => b
run: print-board/main 14: #\b => ((6 square))
mem: ((6 square)): 1762 <= #\b
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => b
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2476 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\b)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2478 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\b)
run: print-character/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 2479 <= #\b
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\b)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2480 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\b)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2481 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2482 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2483 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2484 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2485 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 14 => ((9 integer))
mem: ((9 integer)): 2486 <= 14
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2487 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 14
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1538 => ((11 byte-address))
mem: ((11 byte-address)): 2488 <= 1538
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1538 <= #\b
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2507 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2509 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2510 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2511 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2512 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2513 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2514 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2515 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2516 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 15 => ((9 integer))
mem: ((9 integer)): 2517 <= 15
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2518 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 15
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1539 => ((11 byte-address))
mem: ((11 byte-address)): 2519 <= 1539
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1539 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1763 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1165 file-address) (raw)) => 1438
run: print-board/main 13: 1438 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1438
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
mem: ((1446 square) (raw)) => n
run: print-board/main 14: #\n => ((6 square))
mem: ((6 square)): 1762 <= #\n
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => n
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2538 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\n)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2540 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\n)
run: print-character/print-board/main 2: #\n => ((2 character))
mem: ((2 character)): 2541 <= #\n
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\n)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2542 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\n)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2543 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2544 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2545 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2546 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2547 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 16 => ((9 integer))
mem: ((9 integer)): 2548 <= 16
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2549 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 16
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1540 => ((11 byte-address))
mem: ((11 byte-address)): 2550 <= 1540
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => n
run: print-character/print-board/main 13: #\n => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1540 <= #\n
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2569 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2571 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2572 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2573 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2574 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2575 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2576 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2577 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2578 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 17 => ((9 integer))
mem: ((9 integer)): 2579 <= 17
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2580 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 17
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1541 => ((11 byte-address))
mem: ((11 byte-address)): 2581 <= 1541
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1541 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1763 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1166 file-address) (raw)) => 1478
run: print-board/main 13: 1478 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1478
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
mem: ((1486 square) (raw)) => r
run: print-board/main 14: #\r => ((6 square))
mem: ((6 square)): 1762 <= #\r
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => r
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2600 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\r)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2602 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\r)
run: print-character/print-board/main 2: #\r => ((2 character))
mem: ((2 character)): 2603 <= #\r
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\r)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2604 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\r)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2605 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2606 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2607 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2608 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2609 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 18 => ((9 integer))
mem: ((9 integer)): 2610 <= 18
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2611 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 18
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1542 => ((11 byte-address))
mem: ((11 byte-address)): 2612 <= 1542
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => r
run: print-character/print-board/main 13: #\r => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1542 <= #\r
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2631 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2633 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2634 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2635 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2636 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2637 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2638 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2639 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2640 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 19 => ((9 integer))
mem: ((9 integer)): 2641 <= 19
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2642 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 19
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1543 => ((11 byte-address))
mem: ((11 byte-address)): 2643 <= 1543
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1543 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1763 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1760 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: print-board/main 19: 6 => ((3 integer))
mem: ((3 integer)): 1759 <= 6
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 2662 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2664 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 2665 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 0
run: cursor-to-next-line/print-board/main 4: 1 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 1
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 2666 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 6
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: print-board/main 6: 7 => ((5 integer))
mem: ((5 integer)): 1761 <= 7
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1518
mem: ((5 integer)) => 7
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 2693 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 7)
run: print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2695 <= 1518
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1518 7)
run: print-integer/print-board/main 2: 7 => ((2 integer))
mem: ((2 integer)): 2696 <= 7
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 2724 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (7)
run: integer-to-decimal-string/print-integer/print-board/main 1: 7 => ((1 integer))
mem: ((1 integer)): 2726 <= 7
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 2727 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 2729 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 2730 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 2755 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 2786 => ((1 buffer-address))
mem: ((1 buffer-address)): 2757 <= 2786
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 2786 => ((2 integer-address))
mem: ((2 integer-address)): 2758 <= 2786
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 2786 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 2787 => ((3 string-address-address))
mem: ((3 string-address-address)): 2759 <= 2787
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 2760 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 2788 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 2787 <= 2788
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 2786
run: integer-to-decimal-string/print-integer/print-board/main 11: 2786 => ((6 buffer-address))
mem: ((6 buffer-address)): 2731 <= 2786
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 2732 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 2733 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 2734 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 7
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 2726 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 7 => ((10 integer))
mem: ((10 integer)): 2735 <= 7
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 17: 55 => ((11 integer))
mem: ((11 integer)): 2736 <= 55
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 55
run: integer-to-decimal-string/print-integer/print-board/main 18: #\7 => ((12 character))
mem: ((12 character)): 2737 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 2786
mem: ((12 character)) => 7
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 2819 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (2786 #\7)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 2786 => ((1 buffer-address))
mem: ((1 buffer-address)): 2821 <= 2786
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2786 #\7)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\7 => ((2 character))
mem: ((2 character)): 2822 <= #\7
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 2786
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 2850 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (2786)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 2786 => ((1 buffer-address))
mem: ((1 buffer-address)): 2852 <= 2786
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((2786 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 2853 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((2787 string-address) (raw)) => 2788
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 2788 => ((3 string-address))
mem: ((3 string-address)): 2854 <= 2788
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((2788 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 2855 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2856 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2823 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 2786 => ((4 integer-address))
mem: ((4 integer-address)): 2824 <= 2786
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((2787 string-address) (raw)) => 2788
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 2788 => ((5 string-address))
mem: ((5 string-address)): 2825 <= 2788
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((2788 string) (raw))
mem: ((2788 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 2789 => ((6 byte-address))
mem: ((6 byte-address)): 2826 <= 2789
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\7 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 2789 <= #\7
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 2786 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 2786
run: integer-to-decimal-string/print-integer/print-board/main 19: 2786 => ((6 buffer-address))
mem: ((6 buffer-address)): 2731 <= 2786
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 2734 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((2786 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 2738 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((2787 string-address) (raw)) => 2788
run: integer-to-decimal-string/print-integer/print-board/main 24: 2788 => ((14 string-address))
mem: ((14 string-address)): 2739 <= 2788
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 2881 => ((15 string-address))
mem: ((15 string-address)): 2740 <= 2881
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 2741 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 2742 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 2734 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((2788 string) (raw))
mem: ((2788 integer) (raw)) => 30
mem: ((2789 byte) (raw)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 30: #\7 => ((18 byte))
mem: ((18 byte)): 2743 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((2881 string) (raw))
mem: ((2881 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 2882 => ((19 byte-address))
mem: ((19 byte-address)): 2744 <= 2882
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 32: #\7 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 2882 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 2741 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 2742 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 2734 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 2881
run: print-integer/print-board/main 3: 2881 => ((3 string-address))
mem: ((3 string-address)): 2697 <= 2881
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((3 string-address)) => 2881
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 2883 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 2881)
run: print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2885 <= 1518
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 2881)
run: print-string/print-integer/print-board/main 2: 2881 => ((2 string-address))
mem: ((2 string-address)): 2886 <= 2881
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2881 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 2887 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 2888 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2889 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((2881 string) (raw))
mem: ((2881 integer) (raw)) => 1
mem: ((2882 byte) (raw)) => 7
run: print-string/print-integer/print-board/main 7: #\7 => ((6 character))
mem: ((6 character)): 2890 <= #\7
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => 7
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 2914 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\7)
run: print-character/print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2916 <= 1518
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\7)
run: print-character/print-string/print-integer/print-board/main 2: #\7 => ((2 character))
mem: ((2 character)): 2917 <= #\7
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\7)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2918 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\7)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2919 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2920 <= 1520
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2921 <= 1521
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2922 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 2923 <= 20
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 20 => ((9 integer))
mem: ((9 integer)): 2924 <= 20
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-integer/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2925 <= 1523
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 20
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1544 => ((11 byte-address))
mem: ((11 byte-address)): 2926 <= 1544
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7
run: print-character/print-string/print-integer/print-board/main 13: #\7 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1544 <= #\7
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 2888 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2889 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 2945 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 2945
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 2945
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 2949 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 2945)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2951 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 2945)
run: print-string/print-board/main 2: 2945 => ((2 string-address))
mem: ((2 string-address)): 2952 <= 2945
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2945 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 2953 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 2954 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2955 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((2945 string) (raw))
mem: ((2945 integer) (raw)) => 3
mem: ((2946 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 2956 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 2980 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 2982 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2983 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2984 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2985 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 2986 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 2987 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2988 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 2989 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 21 => ((9 integer))
mem: ((9 integer)): 2990 <= 21
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 2991 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 21
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1545 => ((11 byte-address))
mem: ((11 byte-address)): 2992 <= 1545
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1545 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 2954 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2955 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((2945 string) (raw))
mem: ((2945 integer) (raw)) => 3
mem: ((2947 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 2956 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3011 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\|)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3013 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 3014 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3015 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3016 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3017 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3018 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3019 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3020 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 22 => ((9 integer))
mem: ((9 integer)): 3021 <= 22
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3022 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 22
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1546 => ((11 byte-address))
mem: ((11 byte-address)): 3023 <= 1546
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1546 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 2954 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2955 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((2945 string) (raw))
mem: ((2945 integer) (raw)) => 3
mem: ((2948 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 2956 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3042 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3044 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3045 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3046 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3047 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3048 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3049 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3050 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3051 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 23 => ((9 integer))
mem: ((9 integer)): 3052 <= 23
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3053 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 23
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1547 => ((11 byte-address))
mem: ((11 byte-address)): 3054 <= 1547
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1547 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 2954 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2955 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1763 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1159 file-address) (raw)) => 1198
run: print-board/main 13: 1198 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1198
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
mem: ((1205 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1762 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3073 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\p)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3075 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3076 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3077 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3078 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3079 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3080 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3081 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3082 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 24 => ((9 integer))
mem: ((9 integer)): 3083 <= 24
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3084 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 24
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1548 => ((11 byte-address))
mem: ((11 byte-address)): 3085 <= 1548
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1548 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3104 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3106 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3107 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3108 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3109 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3110 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3111 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3112 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3113 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 25 => ((9 integer))
mem: ((9 integer)): 3114 <= 25
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3115 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 25
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1549 => ((11 byte-address))
mem: ((11 byte-address)): 3116 <= 1549
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1549 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1763 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1160 file-address) (raw)) => 1238
run: print-board/main 13: 1238 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1238
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
mem: ((1245 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1762 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3135 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\p)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3137 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3138 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3139 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3140 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3141 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3142 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3143 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3144 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 26 => ((9 integer))
mem: ((9 integer)): 3145 <= 26
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3146 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 26
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1550 => ((11 byte-address))
mem: ((11 byte-address)): 3147 <= 1550
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1550 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3166 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3168 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3169 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3170 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3171 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3172 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3173 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3174 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3175 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 27 => ((9 integer))
mem: ((9 integer)): 3176 <= 27
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3177 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 27
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1551 => ((11 byte-address))
mem: ((11 byte-address)): 3178 <= 1551
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1551 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1763 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1161 file-address) (raw)) => 1278
run: print-board/main 13: 1278 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1278
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
mem: ((1285 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1762 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3197 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\p)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3199 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3200 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3201 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3202 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3203 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3204 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3205 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3206 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 28 => ((9 integer))
mem: ((9 integer)): 3207 <= 28
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3208 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 28
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1552 => ((11 byte-address))
mem: ((11 byte-address)): 3209 <= 1552
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1552 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3228 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3230 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3231 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3232 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3233 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3234 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3235 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3236 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3237 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 29 => ((9 integer))
mem: ((9 integer)): 3238 <= 29
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3239 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 29
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1553 => ((11 byte-address))
mem: ((11 byte-address)): 3240 <= 1553
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1553 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1763 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1162 file-address) (raw)) => 1318
run: print-board/main 13: 1318 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1318
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
mem: ((1325 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1762 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3259 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\p)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3261 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3262 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3263 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3264 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3265 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3266 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3267 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3268 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 30 => ((9 integer))
mem: ((9 integer)): 3269 <= 30
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3270 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 30
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1554 => ((11 byte-address))
mem: ((11 byte-address)): 3271 <= 1554
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1554 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3290 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3292 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3293 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3294 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3295 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3296 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3297 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3298 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3299 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 31 => ((9 integer))
mem: ((9 integer)): 3300 <= 31
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3301 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 31
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1555 => ((11 byte-address))
mem: ((11 byte-address)): 3302 <= 1555
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1555 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1763 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1163 file-address) (raw)) => 1358
run: print-board/main 13: 1358 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1358
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
mem: ((1365 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1762 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3321 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\p)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3323 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3324 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3325 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3326 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3327 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3328 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3329 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3330 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 32 => ((9 integer))
mem: ((9 integer)): 3331 <= 32
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3332 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 32
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1556 => ((11 byte-address))
mem: ((11 byte-address)): 3333 <= 1556
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1556 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3352 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3354 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3355 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3356 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3357 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3358 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3359 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3360 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3361 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 33 => ((9 integer))
mem: ((9 integer)): 3362 <= 33
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3363 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 33
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1557 => ((11 byte-address))
mem: ((11 byte-address)): 3364 <= 1557
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1557 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1763 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1164 file-address) (raw)) => 1398
run: print-board/main 13: 1398 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1398
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
mem: ((1405 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1762 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3383 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\p)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3385 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3386 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3387 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3388 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3389 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3390 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3391 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3392 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 34 => ((9 integer))
mem: ((9 integer)): 3393 <= 34
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3394 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 34
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1558 => ((11 byte-address))
mem: ((11 byte-address)): 3395 <= 1558
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1558 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3414 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3416 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3417 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3418 <= nil
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3419 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3420 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3421 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3422 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3423 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 35 => ((9 integer))
mem: ((9 integer)): 3424 <= 35
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3425 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 35
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1559 => ((11 byte-address))
mem: ((11 byte-address)): 3426 <= 1559
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1559 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1763 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1165 file-address) (raw)) => 1438
run: print-board/main 13: 1438 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1438
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
mem: ((1445 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1762 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3445 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\p)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3447 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3448 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3449 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3450 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3451 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3452 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3453 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3454 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 36 => ((9 integer))
mem: ((9 integer)): 3455 <= 36
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3456 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 36
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1560 => ((11 byte-address))
mem: ((11 byte-address)): 3457 <= 1560
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1560 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3476 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3478 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3479 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3480 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3481 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3482 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3483 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3484 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3485 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 37 => ((9 integer))
mem: ((9 integer)): 3486 <= 37
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3487 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 37
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1561 => ((11 byte-address))
mem: ((11 byte-address)): 3488 <= 1561
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1561 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1763 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1166 file-address) (raw)) => 1478
run: print-board/main 13: 1478 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1478
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
mem: ((1485 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1762 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3507 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\p)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3509 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3510 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3511 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3512 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3513 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3514 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3515 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3516 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 38 => ((9 integer))
mem: ((9 integer)): 3517 <= 38
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3518 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 38
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1562 => ((11 byte-address))
mem: ((11 byte-address)): 3519 <= 1562
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1562 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3538 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3540 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3541 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3542 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3543 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3544 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3545 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3546 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3547 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 39 => ((9 integer))
mem: ((9 integer)): 3548 <= 39
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3549 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 39
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1563 => ((11 byte-address))
mem: ((11 byte-address)): 3550 <= 1563
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1563 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1763 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1760 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: print-board/main 19: 5 => ((3 integer))
mem: ((3 integer)): 1759 <= 5
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 3569 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3571 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 3572 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 1
run: cursor-to-next-line/print-board/main 4: 2 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 2
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 3573 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 5
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: print-board/main 6: 6 => ((5 integer))
mem: ((5 integer)): 1761 <= 6
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1518
mem: ((5 integer)) => 6
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 3600 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 6)
run: print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3602 <= 1518
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1518 6)
run: print-integer/print-board/main 2: 6 => ((2 integer))
mem: ((2 integer)): 3603 <= 6
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 3631 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (6)
run: integer-to-decimal-string/print-integer/print-board/main 1: 6 => ((1 integer))
mem: ((1 integer)): 3633 <= 6
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 3634 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 3636 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 3637 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 3662 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 3693 => ((1 buffer-address))
mem: ((1 buffer-address)): 3664 <= 3693
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 3693 => ((2 integer-address))
mem: ((2 integer-address)): 3665 <= 3693
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 3693 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 3694 => ((3 string-address-address))
mem: ((3 string-address-address)): 3666 <= 3694
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 3667 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 3695 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 3694 <= 3695
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 3693
run: integer-to-decimal-string/print-integer/print-board/main 11: 3693 => ((6 buffer-address))
mem: ((6 buffer-address)): 3638 <= 3693
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 3639 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 3640 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 3641 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 6
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 3633 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 6 => ((10 integer))
mem: ((10 integer)): 3642 <= 6
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 17: 54 => ((11 integer))
mem: ((11 integer)): 3643 <= 54
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 54
run: integer-to-decimal-string/print-integer/print-board/main 18: #\6 => ((12 character))
mem: ((12 character)): 3644 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 3693
mem: ((12 character)) => 6
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 3726 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (3693 #\6)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 3693 => ((1 buffer-address))
mem: ((1 buffer-address)): 3728 <= 3693
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (3693 #\6)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\6 => ((2 character))
mem: ((2 character)): 3729 <= #\6
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 3693
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 3757 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (3693)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 3693 => ((1 buffer-address))
mem: ((1 buffer-address)): 3759 <= 3693
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((3693 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3760 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((3694 string-address) (raw)) => 3695
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 3695 => ((3 string-address))
mem: ((3 string-address)): 3761 <= 3695
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((3695 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 3762 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3763 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3730 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 3693 => ((4 integer-address))
mem: ((4 integer-address)): 3731 <= 3693
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((3694 string-address) (raw)) => 3695
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 3695 => ((5 string-address))
mem: ((5 string-address)): 3732 <= 3695
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((3695 string) (raw))
mem: ((3695 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 3696 => ((6 byte-address))
mem: ((6 byte-address)): 3733 <= 3696
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 6
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\6 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 3696 <= #\6
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 3693 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 3693
run: integer-to-decimal-string/print-integer/print-board/main 19: 3693 => ((6 buffer-address))
mem: ((6 buffer-address)): 3638 <= 3693
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 3641 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((3693 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 3645 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((3694 string-address) (raw)) => 3695
run: integer-to-decimal-string/print-integer/print-board/main 24: 3695 => ((14 string-address))
mem: ((14 string-address)): 3646 <= 3695
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 3788 => ((15 string-address))
mem: ((15 string-address)): 3647 <= 3788
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 3648 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 3649 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 3641 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((3695 string) (raw))
mem: ((3695 integer) (raw)) => 30
mem: ((3696 byte) (raw)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 30: #\6 => ((18 byte))
mem: ((18 byte)): 3650 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((3788 string) (raw))
mem: ((3788 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 3789 => ((19 byte-address))
mem: ((19 byte-address)): 3651 <= 3789
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 32: #\6 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 3789 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 3648 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 3649 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 3641 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 3788
run: print-integer/print-board/main 3: 3788 => ((3 string-address))
mem: ((3 string-address)): 3604 <= 3788
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((3 string-address)) => 3788
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 3790 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 3788)
run: print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3792 <= 1518
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 3788)
run: print-string/print-integer/print-board/main 2: 3788 => ((2 string-address))
mem: ((2 string-address)): 3793 <= 3788
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3788 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3794 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 3795 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3796 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((3788 string) (raw))
mem: ((3788 integer) (raw)) => 1
mem: ((3789 byte) (raw)) => 6
run: print-string/print-integer/print-board/main 7: #\6 => ((6 character))
mem: ((6 character)): 3797 <= #\6
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => 6
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 3821 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\6)
run: print-character/print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3823 <= 1518
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\6)
run: print-character/print-string/print-integer/print-board/main 2: #\6 => ((2 character))
mem: ((2 character)): 3824 <= #\6
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\6)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3825 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\6)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3826 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3827 <= 1520
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3828 <= 1521
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3829 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 3830 <= 40
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 40 => ((9 integer))
mem: ((9 integer)): 3831 <= 40
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-integer/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3832 <= 1523
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 40
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1564 => ((11 byte-address))
mem: ((11 byte-address)): 3833 <= 1564
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 6
run: print-character/print-string/print-integer/print-board/main 13: #\6 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1564 <= #\6
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 3795 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 3796 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 3852 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 3852
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 3852
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 3856 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 3852)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3858 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 3852)
run: print-string/print-board/main 2: 3852 => ((2 string-address))
mem: ((2 string-address)): 3859 <= 3852
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3852 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 3860 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 3861 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3862 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((3852 string) (raw))
mem: ((3852 integer) (raw)) => 3
mem: ((3853 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 3863 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3887 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3889 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3890 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3891 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3892 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3893 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3894 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3895 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 3896 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 41 => ((9 integer))
mem: ((9 integer)): 3897 <= 41
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3898 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 41
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1565 => ((11 byte-address))
mem: ((11 byte-address)): 3899 <= 1565
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1565 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 3861 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3862 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((3852 string) (raw))
mem: ((3852 integer) (raw)) => 3
mem: ((3854 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 3863 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3918 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\|)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3920 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 3921 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3922 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3923 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3924 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3925 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3926 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 3927 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 42 => ((9 integer))
mem: ((9 integer)): 3928 <= 42
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3929 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 42
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1566 => ((11 byte-address))
mem: ((11 byte-address)): 3930 <= 1566
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1566 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 3861 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3862 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((3852 string) (raw))
mem: ((3852 integer) (raw)) => 3
mem: ((3855 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 3863 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3949 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3951 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3952 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3953 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3954 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3955 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3956 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3957 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 3958 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 43 => ((9 integer))
mem: ((9 integer)): 3959 <= 43
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3960 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 43
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1567 => ((11 byte-address))
mem: ((11 byte-address)): 3961 <= 1567
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1567 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 3861 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 3862 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1763 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1159 file-address) (raw)) => 1198
run: print-board/main 13: 1198 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1198
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
mem: ((1204 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3980 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 3982 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 3983 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3984 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3985 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 3986 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 3987 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3988 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 3989 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 44 => ((9 integer))
mem: ((9 integer)): 3990 <= 44
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 3991 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 44
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1568 => ((11 byte-address))
mem: ((11 byte-address)): 3992 <= 1568
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1568 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4011 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4013 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4014 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4015 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4016 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4017 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4018 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4019 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4020 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 45 => ((9 integer))
mem: ((9 integer)): 4021 <= 45
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4022 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 45
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1569 => ((11 byte-address))
mem: ((11 byte-address)): 4023 <= 1569
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1569 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1763 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1160 file-address) (raw)) => 1238
run: print-board/main 13: 1238 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1238
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
mem: ((1244 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4042 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4044 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4045 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4046 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4047 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4048 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4049 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4050 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4051 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 46 => ((9 integer))
mem: ((9 integer)): 4052 <= 46
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4053 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 46
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1570 => ((11 byte-address))
mem: ((11 byte-address)): 4054 <= 1570
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1570 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4073 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4075 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4076 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4077 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4078 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4079 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4080 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4081 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4082 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 47 => ((9 integer))
mem: ((9 integer)): 4083 <= 47
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4084 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 47
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1571 => ((11 byte-address))
mem: ((11 byte-address)): 4085 <= 1571
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1571 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1763 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1161 file-address) (raw)) => 1278
run: print-board/main 13: 1278 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1278
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
mem: ((1284 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4104 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4106 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4107 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4108 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4109 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4110 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4111 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4112 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4113 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 48 => ((9 integer))
mem: ((9 integer)): 4114 <= 48
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4115 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 48
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1572 => ((11 byte-address))
mem: ((11 byte-address)): 4116 <= 1572
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1572 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4135 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4137 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4138 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4139 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4140 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4141 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4142 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4143 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4144 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 49 => ((9 integer))
mem: ((9 integer)): 4145 <= 49
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4146 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 49
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1573 => ((11 byte-address))
mem: ((11 byte-address)): 4147 <= 1573
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1573 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1763 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1162 file-address) (raw)) => 1318
run: print-board/main 13: 1318 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1318
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
mem: ((1324 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4166 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4168 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4169 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4170 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4171 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4172 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4173 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4174 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4175 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 50 => ((9 integer))
mem: ((9 integer)): 4176 <= 50
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4177 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 50
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1574 => ((11 byte-address))
mem: ((11 byte-address)): 4178 <= 1574
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1574 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4197 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4199 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4200 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4201 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4202 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4203 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4204 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4205 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4206 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 51 => ((9 integer))
mem: ((9 integer)): 4207 <= 51
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4208 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 51
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1575 => ((11 byte-address))
mem: ((11 byte-address)): 4209 <= 1575
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1575 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1763 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1163 file-address) (raw)) => 1358
run: print-board/main 13: 1358 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1358
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
mem: ((1364 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4228 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4230 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4231 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4232 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4233 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4234 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4235 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4236 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4237 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 52 => ((9 integer))
mem: ((9 integer)): 4238 <= 52
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4239 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 52
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1576 => ((11 byte-address))
mem: ((11 byte-address)): 4240 <= 1576
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1576 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4259 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4261 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4262 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4263 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4264 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4265 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4266 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4267 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4268 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 53 => ((9 integer))
mem: ((9 integer)): 4269 <= 53
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4270 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 53
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1577 => ((11 byte-address))
mem: ((11 byte-address)): 4271 <= 1577
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1577 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1763 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1164 file-address) (raw)) => 1398
run: print-board/main 13: 1398 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1398
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
mem: ((1404 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4290 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4292 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4293 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4294 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4295 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4296 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4297 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4298 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4299 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 54 => ((9 integer))
mem: ((9 integer)): 4300 <= 54
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4301 <= 1523
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 54
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1578 => ((11 byte-address))
mem: ((11 byte-address)): 4302 <= 1578
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1578 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4321 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4323 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4324 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4325 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4326 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4327 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4328 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4329 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4330 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 55 => ((9 integer))
mem: ((9 integer)): 4331 <= 55
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4332 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 55
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1579 => ((11 byte-address))
mem: ((11 byte-address)): 4333 <= 1579
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1579 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1763 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1165 file-address) (raw)) => 1438
run: print-board/main 13: 1438 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1438
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
mem: ((1444 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4352 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4354 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4355 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4356 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4357 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4358 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4359 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4360 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4361 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 56 => ((9 integer))
mem: ((9 integer)): 4362 <= 56
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4363 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 56
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1580 => ((11 byte-address))
mem: ((11 byte-address)): 4364 <= 1580
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1580 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4383 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4385 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4386 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4387 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4388 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4389 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4390 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4391 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4392 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 57 => ((9 integer))
mem: ((9 integer)): 4393 <= 57
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4394 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 57
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1581 => ((11 byte-address))
mem: ((11 byte-address)): 4395 <= 1581
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1581 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1763 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1166 file-address) (raw)) => 1478
run: print-board/main 13: 1478 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1478
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
mem: ((1484 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4414 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4416 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4417 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4418 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4419 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4420 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4421 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4422 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4423 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 58 => ((9 integer))
mem: ((9 integer)): 4424 <= 58
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4425 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 58
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1582 => ((11 byte-address))
mem: ((11 byte-address)): 4426 <= 1582
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1582 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4445 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4447 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4448 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4449 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4450 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4451 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4452 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4453 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4454 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 59 => ((9 integer))
mem: ((9 integer)): 4455 <= 59
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4456 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 59
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1583 => ((11 byte-address))
mem: ((11 byte-address)): 4457 <= 1583
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1583 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1763 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1760 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: print-board/main 19: 4 => ((3 integer))
mem: ((3 integer)): 1759 <= 4
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 4476 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4478 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 4479 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 2
run: cursor-to-next-line/print-board/main 4: 3 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 3
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 4480 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: print-board/main 6: 5 => ((5 integer))
mem: ((5 integer)): 1761 <= 5
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1518
mem: ((5 integer)) => 5
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 4507 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 5)
run: print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4509 <= 1518
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1518 5)
run: print-integer/print-board/main 2: 5 => ((2 integer))
mem: ((2 integer)): 4510 <= 5
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 4538 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (5)
run: integer-to-decimal-string/print-integer/print-board/main 1: 5 => ((1 integer))
mem: ((1 integer)): 4540 <= 5
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 4541 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 4543 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 4544 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 4569 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 4600 => ((1 buffer-address))
mem: ((1 buffer-address)): 4571 <= 4600
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 4600 => ((2 integer-address))
mem: ((2 integer-address)): 4572 <= 4600
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 4600 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 4601 => ((3 string-address-address))
mem: ((3 string-address-address)): 4573 <= 4601
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 4574 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 4602 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 4601 <= 4602
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 4600
run: integer-to-decimal-string/print-integer/print-board/main 11: 4600 => ((6 buffer-address))
mem: ((6 buffer-address)): 4545 <= 4600
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 4546 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 4547 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 4548 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 5
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 4540 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 5 => ((10 integer))
mem: ((10 integer)): 4549 <= 5
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 17: 53 => ((11 integer))
mem: ((11 integer)): 4550 <= 53
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 53
run: integer-to-decimal-string/print-integer/print-board/main 18: #\5 => ((12 character))
mem: ((12 character)): 4551 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 4600
mem: ((12 character)) => 5
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 4633 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (4600 #\5)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 4600 => ((1 buffer-address))
mem: ((1 buffer-address)): 4635 <= 4600
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4600 #\5)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\5 => ((2 character))
mem: ((2 character)): 4636 <= #\5
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 4600
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 4664 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (4600)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 4600 => ((1 buffer-address))
mem: ((1 buffer-address)): 4666 <= 4600
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((4600 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 4667 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((4601 string-address) (raw)) => 4602
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 4602 => ((3 string-address))
mem: ((3 string-address)): 4668 <= 4602
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((4602 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 4669 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4670 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4637 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 4600 => ((4 integer-address))
mem: ((4 integer-address)): 4638 <= 4600
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((4601 string-address) (raw)) => 4602
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 4602 => ((5 string-address))
mem: ((5 string-address)): 4639 <= 4602
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((4602 string) (raw))
mem: ((4602 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 4603 => ((6 byte-address))
mem: ((6 byte-address)): 4640 <= 4603
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 5
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\5 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 4603 <= #\5
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 4600 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 4600
run: integer-to-decimal-string/print-integer/print-board/main 19: 4600 => ((6 buffer-address))
mem: ((6 buffer-address)): 4545 <= 4600
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 4548 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((4600 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 4552 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((4601 string-address) (raw)) => 4602
run: integer-to-decimal-string/print-integer/print-board/main 24: 4602 => ((14 string-address))
mem: ((14 string-address)): 4553 <= 4602
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 4695 => ((15 string-address))
mem: ((15 string-address)): 4554 <= 4695
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 4555 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 4556 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 4548 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((4602 string) (raw))
mem: ((4602 integer) (raw)) => 30
mem: ((4603 byte) (raw)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 30: #\5 => ((18 byte))
mem: ((18 byte)): 4557 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((4695 string) (raw))
mem: ((4695 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 4696 => ((19 byte-address))
mem: ((19 byte-address)): 4558 <= 4696
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 32: #\5 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 4696 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 4555 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 4556 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 4548 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 4695
run: print-integer/print-board/main 3: 4695 => ((3 string-address))
mem: ((3 string-address)): 4511 <= 4695
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((3 string-address)) => 4695
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 4697 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 4695)
run: print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4699 <= 1518
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 4695)
run: print-string/print-integer/print-board/main 2: 4695 => ((2 string-address))
mem: ((2 string-address)): 4700 <= 4695
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4695 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 4701 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 4702 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4703 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((4695 string) (raw))
mem: ((4695 integer) (raw)) => 1
mem: ((4696 byte) (raw)) => 5
run: print-string/print-integer/print-board/main 7: #\5 => ((6 character))
mem: ((6 character)): 4704 <= #\5
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => 5
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 4728 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\5)
run: print-character/print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4730 <= 1518
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\5)
run: print-character/print-string/print-integer/print-board/main 2: #\5 => ((2 character))
mem: ((2 character)): 4731 <= #\5
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\5)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4732 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\5)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4733 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4734 <= 1520
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4735 <= 1521
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4736 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4737 <= 60
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 60 => ((9 integer))
mem: ((9 integer)): 4738 <= 60
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-integer/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4739 <= 1523
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 60
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1584 => ((11 byte-address))
mem: ((11 byte-address)): 4740 <= 1584
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 5
run: print-character/print-string/print-integer/print-board/main 13: #\5 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1584 <= #\5
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 4702 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 4703 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 4759 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 4759
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 4759
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 4763 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 4759)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4765 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 4759)
run: print-string/print-board/main 2: 4759 => ((2 string-address))
mem: ((2 string-address)): 4766 <= 4759
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4759 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 4767 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 4768 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4769 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((4759 string) (raw))
mem: ((4759 integer) (raw)) => 3
mem: ((4760 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 4770 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 4794 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4796 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4797 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4798 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4799 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4800 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4801 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4802 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4803 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 61 => ((9 integer))
mem: ((9 integer)): 4804 <= 61
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4805 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 61
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1585 => ((11 byte-address))
mem: ((11 byte-address)): 4806 <= 1585
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1585 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 4768 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4769 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((4759 string) (raw))
mem: ((4759 integer) (raw)) => 3
mem: ((4761 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 4770 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 4825 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\|)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4827 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 4828 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4829 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4830 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4831 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4832 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4833 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4834 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 62 => ((9 integer))
mem: ((9 integer)): 4835 <= 62
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4836 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 62
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1586 => ((11 byte-address))
mem: ((11 byte-address)): 4837 <= 1586
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1586 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 4768 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4769 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((4759 string) (raw))
mem: ((4759 integer) (raw)) => 3
mem: ((4762 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 4770 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 4856 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4858 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4859 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4860 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4861 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4862 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4863 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4864 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4865 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 63 => ((9 integer))
mem: ((9 integer)): 4866 <= 63
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4867 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 63
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1587 => ((11 byte-address))
mem: ((11 byte-address)): 4868 <= 1587
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1587 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 4768 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 4769 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1763 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1159 file-address) (raw)) => 1198
run: print-board/main 13: 1198 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1198
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
mem: ((1203 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4887 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4889 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4890 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4891 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4892 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4893 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4894 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4895 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4896 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 64 => ((9 integer))
mem: ((9 integer)): 4897 <= 64
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4898 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 64
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1588 => ((11 byte-address))
mem: ((11 byte-address)): 4899 <= 1588
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1588 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4918 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4920 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4921 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4922 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4923 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4924 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4925 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4926 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4927 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 65 => ((9 integer))
mem: ((9 integer)): 4928 <= 65
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4929 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 65
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1589 => ((11 byte-address))
mem: ((11 byte-address)): 4930 <= 1589
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1589 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1763 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1160 file-address) (raw)) => 1238
run: print-board/main 13: 1238 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1238
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
mem: ((1243 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4949 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4951 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4952 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4953 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4954 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4955 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4956 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4957 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4958 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 66 => ((9 integer))
mem: ((9 integer)): 4959 <= 66
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4960 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 66
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1590 => ((11 byte-address))
mem: ((11 byte-address)): 4961 <= 1590
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1590 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4980 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 4982 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4983 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4984 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4985 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 4986 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 4987 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4988 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4989 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 67 => ((9 integer))
mem: ((9 integer)): 4990 <= 67
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 4991 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 67
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1591 => ((11 byte-address))
mem: ((11 byte-address)): 4992 <= 1591
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1591 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1763 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1161 file-address) (raw)) => 1278
run: print-board/main 13: 1278 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1278
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
mem: ((1283 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5011 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5013 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5014 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5015 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5016 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5017 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5018 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5019 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5020 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 68 => ((9 integer))
mem: ((9 integer)): 5021 <= 68
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5022 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 68
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1592 => ((11 byte-address))
mem: ((11 byte-address)): 5023 <= 1592
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1592 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5042 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5044 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5045 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5046 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5047 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5048 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5049 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5050 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5051 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 69 => ((9 integer))
mem: ((9 integer)): 5052 <= 69
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5053 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 69
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1593 => ((11 byte-address))
mem: ((11 byte-address)): 5054 <= 1593
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1593 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1763 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1162 file-address) (raw)) => 1318
run: print-board/main 13: 1318 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1318
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
mem: ((1323 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5073 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5075 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5076 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5077 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5078 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5079 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5080 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5081 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5082 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 70 => ((9 integer))
mem: ((9 integer)): 5083 <= 70
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5084 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 70
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1594 => ((11 byte-address))
mem: ((11 byte-address)): 5085 <= 1594
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1594 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5104 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5106 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5107 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5108 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5109 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5110 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5111 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5112 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5113 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 71 => ((9 integer))
mem: ((9 integer)): 5114 <= 71
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5115 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 71
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1595 => ((11 byte-address))
mem: ((11 byte-address)): 5116 <= 1595
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1595 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1763 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1163 file-address) (raw)) => 1358
run: print-board/main 13: 1358 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1358
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
mem: ((1363 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5135 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5137 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5138 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5139 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5140 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5141 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5142 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5143 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5144 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 72 => ((9 integer))
mem: ((9 integer)): 5145 <= 72
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5146 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 72
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1596 => ((11 byte-address))
mem: ((11 byte-address)): 5147 <= 1596
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1596 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5166 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5168 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5169 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5170 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5171 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5172 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5173 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5174 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5175 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 73 => ((9 integer))
mem: ((9 integer)): 5176 <= 73
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5177 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 73
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1597 => ((11 byte-address))
mem: ((11 byte-address)): 5178 <= 1597
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1597 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1763 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1164 file-address) (raw)) => 1398
run: print-board/main 13: 1398 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1398
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
mem: ((1403 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5197 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5199 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5200 <= #\_
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5201 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5202 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5203 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5204 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5205 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5206 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 74 => ((9 integer))
mem: ((9 integer)): 5207 <= 74
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5208 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 74
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1598 => ((11 byte-address))
mem: ((11 byte-address)): 5209 <= 1598
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1598 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5228 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5230 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5231 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5232 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5233 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5234 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5235 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5236 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5237 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 75 => ((9 integer))
mem: ((9 integer)): 5238 <= 75
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5239 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 75
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1599 => ((11 byte-address))
mem: ((11 byte-address)): 5240 <= 1599
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1599 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1763 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1165 file-address) (raw)) => 1438
run: print-board/main 13: 1438 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1438
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
mem: ((1443 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5259 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5261 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5262 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5263 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5264 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5265 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5266 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5267 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5268 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 76 => ((9 integer))
mem: ((9 integer)): 5269 <= 76
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5270 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 76
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1600 => ((11 byte-address))
mem: ((11 byte-address)): 5271 <= 1600
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1600 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5290 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5292 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5293 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5294 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5295 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5296 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5297 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5298 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5299 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 77 => ((9 integer))
mem: ((9 integer)): 5300 <= 77
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5301 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 77
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1601 => ((11 byte-address))
mem: ((11 byte-address)): 5302 <= 1601
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1601 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1763 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1166 file-address) (raw)) => 1478
run: print-board/main 13: 1478 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1478
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
mem: ((1483 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5321 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5323 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5324 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5325 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5326 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5327 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5328 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5329 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5330 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 78 => ((9 integer))
mem: ((9 integer)): 5331 <= 78
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5332 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 78
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1602 => ((11 byte-address))
mem: ((11 byte-address)): 5333 <= 1602
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1602 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5352 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5354 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5355 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5356 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5357 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5358 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5359 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5360 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5361 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 79 => ((9 integer))
mem: ((9 integer)): 5362 <= 79
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5363 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 79
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1603 => ((11 byte-address))
mem: ((11 byte-address)): 5364 <= 1603
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1603 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1763 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1760 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: print-board/main 19: 3 => ((3 integer))
mem: ((3 integer)): 1759 <= 3
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 5383 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5385 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 5386 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 3
run: cursor-to-next-line/print-board/main 4: 4 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 4
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 5387 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 3
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: print-board/main 6: 4 => ((5 integer))
mem: ((5 integer)): 1761 <= 4
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1518
mem: ((5 integer)) => 4
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 5414 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 4)
run: print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5416 <= 1518
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1518 4)
run: print-integer/print-board/main 2: 4 => ((2 integer))
mem: ((2 integer)): 5417 <= 4
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 5445 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4)
run: integer-to-decimal-string/print-integer/print-board/main 1: 4 => ((1 integer))
mem: ((1 integer)): 5447 <= 4
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 5448 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 5450 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 5451 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 5476 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 5507 => ((1 buffer-address))
mem: ((1 buffer-address)): 5478 <= 5507
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 5507 => ((2 integer-address))
mem: ((2 integer-address)): 5479 <= 5507
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 5507 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 5508 => ((3 string-address-address))
mem: ((3 string-address-address)): 5480 <= 5508
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 5481 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 5509 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 5508 <= 5509
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 5507
run: integer-to-decimal-string/print-integer/print-board/main 11: 5507 => ((6 buffer-address))
mem: ((6 buffer-address)): 5452 <= 5507
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 5453 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 5454 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 5455 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 4
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 5447 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 4 => ((10 integer))
mem: ((10 integer)): 5456 <= 4
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 17: 52 => ((11 integer))
mem: ((11 integer)): 5457 <= 52
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 52
run: integer-to-decimal-string/print-integer/print-board/main 18: #\4 => ((12 character))
mem: ((12 character)): 5458 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 5507
mem: ((12 character)) => 4
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 5540 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (5507 #\4)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 5507 => ((1 buffer-address))
mem: ((1 buffer-address)): 5542 <= 5507
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (5507 #\4)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\4 => ((2 character))
mem: ((2 character)): 5543 <= #\4
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 5507
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 5571 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (5507)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 5507 => ((1 buffer-address))
mem: ((1 buffer-address)): 5573 <= 5507
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((5507 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 5574 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((5508 string-address) (raw)) => 5509
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 5509 => ((3 string-address))
mem: ((3 string-address)): 5575 <= 5509
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((5509 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 5576 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5577 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5544 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 5507 => ((4 integer-address))
mem: ((4 integer-address)): 5545 <= 5507
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((5508 string-address) (raw)) => 5509
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 5509 => ((5 string-address))
mem: ((5 string-address)): 5546 <= 5509
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((5509 string) (raw))
mem: ((5509 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 5510 => ((6 byte-address))
mem: ((6 byte-address)): 5547 <= 5510
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\4 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 5510 <= #\4
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 5507 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 5507
run: integer-to-decimal-string/print-integer/print-board/main 19: 5507 => ((6 buffer-address))
mem: ((6 buffer-address)): 5452 <= 5507
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 5455 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((5507 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 5459 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((5508 string-address) (raw)) => 5509
run: integer-to-decimal-string/print-integer/print-board/main 24: 5509 => ((14 string-address))
mem: ((14 string-address)): 5460 <= 5509
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 5602 => ((15 string-address))
mem: ((15 string-address)): 5461 <= 5602
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 5462 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 5463 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 5455 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((5509 string) (raw))
mem: ((5509 integer) (raw)) => 30
mem: ((5510 byte) (raw)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 30: #\4 => ((18 byte))
mem: ((18 byte)): 5464 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((5602 string) (raw))
mem: ((5602 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 5603 => ((19 byte-address))
mem: ((19 byte-address)): 5465 <= 5603
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 32: #\4 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 5603 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 5462 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 5463 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 5455 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 5602
run: print-integer/print-board/main 3: 5602 => ((3 string-address))
mem: ((3 string-address)): 5418 <= 5602
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((3 string-address)) => 5602
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 5604 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 5602)
run: print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5606 <= 1518
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 5602)
run: print-string/print-integer/print-board/main 2: 5602 => ((2 string-address))
mem: ((2 string-address)): 5607 <= 5602
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5602 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 5608 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 5609 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5610 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((5602 string) (raw))
mem: ((5602 integer) (raw)) => 1
mem: ((5603 byte) (raw)) => 4
run: print-string/print-integer/print-board/main 7: #\4 => ((6 character))
mem: ((6 character)): 5611 <= #\4
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => 4
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 5635 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\4)
run: print-character/print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5637 <= 1518
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\4)
run: print-character/print-string/print-integer/print-board/main 2: #\4 => ((2 character))
mem: ((2 character)): 5638 <= #\4
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\4)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5639 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\4)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5640 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5641 <= 1520
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5642 <= 1521
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5643 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5644 <= 80
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 80 => ((9 integer))
mem: ((9 integer)): 5645 <= 80
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-integer/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5646 <= 1523
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 80
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1604 => ((11 byte-address))
mem: ((11 byte-address)): 5647 <= 1604
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4
run: print-character/print-string/print-integer/print-board/main 13: #\4 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1604 <= #\4
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 5609 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 5610 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 5666 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 5666
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 5666
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 5670 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 5666)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5672 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 5666)
run: print-string/print-board/main 2: 5666 => ((2 string-address))
mem: ((2 string-address)): 5673 <= 5666
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5666 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 5674 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 5675 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5676 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((5666 string) (raw))
mem: ((5666 integer) (raw)) => 3
mem: ((5667 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 5677 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 5701 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5703 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5704 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5705 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5706 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5707 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5708 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5709 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5710 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 81 => ((9 integer))
mem: ((9 integer)): 5711 <= 81
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5712 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 81
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1605 => ((11 byte-address))
mem: ((11 byte-address)): 5713 <= 1605
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1605 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 5675 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5676 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((5666 string) (raw))
mem: ((5666 integer) (raw)) => 3
mem: ((5668 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 5677 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 5732 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\|)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5734 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 5735 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5736 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5737 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5738 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5739 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5740 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5741 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 82 => ((9 integer))
mem: ((9 integer)): 5742 <= 82
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5743 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 82
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1606 => ((11 byte-address))
mem: ((11 byte-address)): 5744 <= 1606
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1606 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 5675 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5676 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((5666 string) (raw))
mem: ((5666 integer) (raw)) => 3
mem: ((5669 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 5677 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 5763 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5765 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5766 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5767 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5768 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5769 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5770 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5771 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5772 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 83 => ((9 integer))
mem: ((9 integer)): 5773 <= 83
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5774 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 83
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1607 => ((11 byte-address))
mem: ((11 byte-address)): 5775 <= 1607
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1607 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 5675 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 5676 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1763 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1159 file-address) (raw)) => 1198
run: print-board/main 13: 1198 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1198
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
mem: ((1202 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5794 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5796 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5797 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5798 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5799 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5800 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5801 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5802 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5803 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 84 => ((9 integer))
mem: ((9 integer)): 5804 <= 84
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5805 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 84
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1608 => ((11 byte-address))
mem: ((11 byte-address)): 5806 <= 1608
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1608 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5825 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5827 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5828 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5829 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5830 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5831 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5832 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5833 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5834 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 85 => ((9 integer))
mem: ((9 integer)): 5835 <= 85
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5836 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 85
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1609 => ((11 byte-address))
mem: ((11 byte-address)): 5837 <= 1609
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1609 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1763 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1160 file-address) (raw)) => 1238
run: print-board/main 13: 1238 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1238
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
mem: ((1242 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5856 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5858 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5859 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5860 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5861 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5862 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5863 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5864 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5865 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 86 => ((9 integer))
mem: ((9 integer)): 5866 <= 86
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5867 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 86
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1610 => ((11 byte-address))
mem: ((11 byte-address)): 5868 <= 1610
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1610 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5887 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5889 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5890 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5891 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5892 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5893 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5894 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5895 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5896 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 87 => ((9 integer))
mem: ((9 integer)): 5897 <= 87
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5898 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 87
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1611 => ((11 byte-address))
mem: ((11 byte-address)): 5899 <= 1611
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1611 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1763 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1161 file-address) (raw)) => 1278
run: print-board/main 13: 1278 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1278
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
mem: ((1282 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5918 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5920 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5921 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5922 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5923 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5924 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5925 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5926 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5927 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 88 => ((9 integer))
mem: ((9 integer)): 5928 <= 88
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5929 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 88
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1612 => ((11 byte-address))
mem: ((11 byte-address)): 5930 <= 1612
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1612 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5949 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5951 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5952 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5953 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5954 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5955 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5956 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5957 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5958 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 89 => ((9 integer))
mem: ((9 integer)): 5959 <= 89
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5960 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 89
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1613 => ((11 byte-address))
mem: ((11 byte-address)): 5961 <= 1613
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1613 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1763 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1162 file-address) (raw)) => 1318
run: print-board/main 13: 1318 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1318
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
mem: ((1322 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5980 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 5982 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5983 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5984 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5985 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 5986 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 5987 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5988 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5989 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 90 => ((9 integer))
mem: ((9 integer)): 5990 <= 90
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 5991 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 90
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1614 => ((11 byte-address))
mem: ((11 byte-address)): 5992 <= 1614
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1614 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6011 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6013 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6014 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6015 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6016 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6017 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6018 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6019 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6020 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 91 => ((9 integer))
mem: ((9 integer)): 6021 <= 91
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6022 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 91
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1615 => ((11 byte-address))
mem: ((11 byte-address)): 6023 <= 1615
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1615 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1763 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1163 file-address) (raw)) => 1358
run: print-board/main 13: 1358 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1358
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
mem: ((1362 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6042 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6044 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6045 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6046 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6047 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6048 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6049 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6050 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6051 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 92 => ((9 integer))
mem: ((9 integer)): 6052 <= 92
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6053 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 92
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1616 => ((11 byte-address))
mem: ((11 byte-address)): 6054 <= 1616
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1616 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6073 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6075 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6076 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6077 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6078 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6079 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6080 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6081 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6082 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 93 => ((9 integer))
mem: ((9 integer)): 6083 <= 93
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6084 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 93
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1617 => ((11 byte-address))
mem: ((11 byte-address)): 6085 <= 1617
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1617 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1763 <= 5
schedule: scheduling print-board/main for further processing
schedule: print-board/main
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1164 file-address) (raw)) => 1398
run: print-board/main 13: 1398 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1398
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
mem: ((1402 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6104 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6106 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6107 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6108 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6109 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6110 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6111 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6112 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6113 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 94 => ((9 integer))
mem: ((9 integer)): 6114 <= 94
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6115 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 94
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1618 => ((11 byte-address))
mem: ((11 byte-address)): 6116 <= 1618
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1618 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6135 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6137 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6138 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6139 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6140 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6141 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6142 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6143 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6144 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 95 => ((9 integer))
mem: ((9 integer)): 6145 <= 95
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6146 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 95
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1619 => ((11 byte-address))
mem: ((11 byte-address)): 6147 <= 1619
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1619 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1763 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1165 file-address) (raw)) => 1438
run: print-board/main 13: 1438 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1438
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
mem: ((1442 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6166 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6168 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6169 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6170 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6171 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6172 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6173 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6174 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6175 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 96 => ((9 integer))
mem: ((9 integer)): 6176 <= 96
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6177 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 96
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1620 => ((11 byte-address))
mem: ((11 byte-address)): 6178 <= 1620
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1620 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6197 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6199 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6200 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6201 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6202 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6203 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6204 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6205 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6206 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 97 => ((9 integer))
mem: ((9 integer)): 6207 <= 97
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6208 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 97
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1621 => ((11 byte-address))
mem: ((11 byte-address)): 6209 <= 1621
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1621 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1763 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1166 file-address) (raw)) => 1478
run: print-board/main 13: 1478 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1478
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
mem: ((1482 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6228 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6230 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6231 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6232 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6233 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6234 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6235 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6236 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6237 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 98 => ((9 integer))
mem: ((9 integer)): 6238 <= 98
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6239 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 98
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1622 => ((11 byte-address))
mem: ((11 byte-address)): 6240 <= 1622
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1622 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6259 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6261 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6262 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6263 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6264 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6265 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6266 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6267 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6268 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 99 => ((9 integer))
mem: ((9 integer)): 6269 <= 99
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6270 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 99
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1623 => ((11 byte-address))
mem: ((11 byte-address)): 6271 <= 1623
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1623 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1763 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1760 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: print-board/main 19: 2 => ((3 integer))
mem: ((3 integer)): 1759 <= 2
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 6290 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6292 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 6293 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 4
run: cursor-to-next-line/print-board/main 4: 5 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 5
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 6294 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 2
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: print-board/main 6: 3 => ((5 integer))
mem: ((5 integer)): 1761 <= 3
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1518
mem: ((5 integer)) => 3
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 6321 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 3)
run: print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6323 <= 1518
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1518 3)
run: print-integer/print-board/main 2: 3 => ((2 integer))
mem: ((2 integer)): 6324 <= 3
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 6352 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (3)
run: integer-to-decimal-string/print-integer/print-board/main 1: 3 => ((1 integer))
mem: ((1 integer)): 6354 <= 3
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 6355 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 6357 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 6358 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 6383 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 6414 => ((1 buffer-address))
mem: ((1 buffer-address)): 6385 <= 6414
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 6414 => ((2 integer-address))
mem: ((2 integer-address)): 6386 <= 6414
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 6414 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 6415 => ((3 string-address-address))
mem: ((3 string-address-address)): 6387 <= 6415
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 6388 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 6416 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 6415 <= 6416
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 6414
run: integer-to-decimal-string/print-integer/print-board/main 11: 6414 => ((6 buffer-address))
mem: ((6 buffer-address)): 6359 <= 6414
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 6360 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 6361 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 6362 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 3
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 6354 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 3 => ((10 integer))
mem: ((10 integer)): 6363 <= 3
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 17: 51 => ((11 integer))
mem: ((11 integer)): 6364 <= 51
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 51
run: integer-to-decimal-string/print-integer/print-board/main 18: #\3 => ((12 character))
mem: ((12 character)): 6365 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 6414
mem: ((12 character)) => 3
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 6447 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (6414 #\3)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 6414 => ((1 buffer-address))
mem: ((1 buffer-address)): 6449 <= 6414
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (6414 #\3)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\3 => ((2 character))
mem: ((2 character)): 6450 <= #\3
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 6414
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 6478 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (6414)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 6414 => ((1 buffer-address))
mem: ((1 buffer-address)): 6480 <= 6414
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((6414 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 6481 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((6415 string-address) (raw)) => 6416
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 6416 => ((3 string-address))
mem: ((3 string-address)): 6482 <= 6416
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((6416 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 6483 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6484 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 6451 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 6414 => ((4 integer-address))
mem: ((4 integer-address)): 6452 <= 6414
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((6415 string-address) (raw)) => 6416
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 6416 => ((5 string-address))
mem: ((5 string-address)): 6453 <= 6416
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((6416 string) (raw))
mem: ((6416 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 6417 => ((6 byte-address))
mem: ((6 byte-address)): 6454 <= 6417
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\3 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 6417 <= #\3
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 6414 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 6414
run: integer-to-decimal-string/print-integer/print-board/main 19: 6414 => ((6 buffer-address))
mem: ((6 buffer-address)): 6359 <= 6414
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 6362 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((6414 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 6366 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((6415 string-address) (raw)) => 6416
run: integer-to-decimal-string/print-integer/print-board/main 24: 6416 => ((14 string-address))
mem: ((14 string-address)): 6367 <= 6416
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 6509 => ((15 string-address))
mem: ((15 string-address)): 6368 <= 6509
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 6369 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 6370 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 6362 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((6416 string) (raw))
mem: ((6416 integer) (raw)) => 30
mem: ((6417 byte) (raw)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 30: #\3 => ((18 byte))
mem: ((18 byte)): 6371 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((6509 string) (raw))
mem: ((6509 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 6510 => ((19 byte-address))
mem: ((19 byte-address)): 6372 <= 6510
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 32: #\3 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 6510 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 6369 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 6370 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 6362 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 6509
run: print-integer/print-board/main 3: 6509 => ((3 string-address))
mem: ((3 string-address)): 6325 <= 6509
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((3 string-address)) => 6509
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 6511 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 6509)
run: print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6513 <= 1518
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 6509)
run: print-string/print-integer/print-board/main 2: 6509 => ((2 string-address))
mem: ((2 string-address)): 6514 <= 6509
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((6509 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 6515 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 6516 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6517 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((6509 string) (raw))
mem: ((6509 integer) (raw)) => 1
mem: ((6510 byte) (raw)) => 3
run: print-string/print-integer/print-board/main 7: #\3 => ((6 character))
mem: ((6 character)): 6518 <= #\3
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => 3
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 6542 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\3)
run: print-character/print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6544 <= 1518
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\3)
run: print-character/print-string/print-integer/print-board/main 2: #\3 => ((2 character))
mem: ((2 character)): 6545 <= #\3
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\3)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6546 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\3)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6547 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6548 <= 1520
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6549 <= 1521
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6550 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6551 <= 100
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 100 => ((9 integer))
mem: ((9 integer)): 6552 <= 100
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-integer/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6553 <= 1523
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 100
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1624 => ((11 byte-address))
mem: ((11 byte-address)): 6554 <= 1624
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3
run: print-character/print-string/print-integer/print-board/main 13: #\3 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1624 <= #\3
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 6516 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 6517 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 6573 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 6573
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 6573
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 6577 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 6573)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6579 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 6573)
run: print-string/print-board/main 2: 6573 => ((2 string-address))
mem: ((2 string-address)): 6580 <= 6573
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((6573 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 6581 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 6582 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6583 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((6573 string) (raw))
mem: ((6573 integer) (raw)) => 3
mem: ((6574 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 6584 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 6608 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6610 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6611 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6612 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6613 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6614 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6615 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6616 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6617 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 101 => ((9 integer))
mem: ((9 integer)): 6618 <= 101
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6619 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 101
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1625 => ((11 byte-address))
mem: ((11 byte-address)): 6620 <= 1625
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1625 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 6582 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6583 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((6573 string) (raw))
mem: ((6573 integer) (raw)) => 3
mem: ((6575 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 6584 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 6639 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\|)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6641 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 6642 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6643 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6644 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6645 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6646 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6647 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6648 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 102 => ((9 integer))
mem: ((9 integer)): 6649 <= 102
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6650 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 102
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1626 => ((11 byte-address))
mem: ((11 byte-address)): 6651 <= 1626
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1626 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 6582 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6583 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((6573 string) (raw))
mem: ((6573 integer) (raw)) => 3
mem: ((6576 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 6584 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 6670 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6672 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6673 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6674 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6675 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6676 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6677 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6678 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6679 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 103 => ((9 integer))
mem: ((9 integer)): 6680 <= 103
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6681 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 103
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1627 => ((11 byte-address))
mem: ((11 byte-address)): 6682 <= 1627
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1627 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 6582 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 6583 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1763 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1159 file-address) (raw)) => 1198
run: print-board/main 13: 1198 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1198
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
mem: ((1201 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6701 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6703 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6704 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6705 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6706 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6707 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6708 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6709 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6710 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 104 => ((9 integer))
mem: ((9 integer)): 6711 <= 104
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6712 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 104
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1628 => ((11 byte-address))
mem: ((11 byte-address)): 6713 <= 1628
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1628 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6732 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6734 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6735 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6736 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6737 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6738 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6739 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6740 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6741 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 105 => ((9 integer))
mem: ((9 integer)): 6742 <= 105
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6743 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 105
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1629 => ((11 byte-address))
mem: ((11 byte-address)): 6744 <= 1629
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1629 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1763 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1160 file-address) (raw)) => 1238
run: print-board/main 13: 1238 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1238
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
mem: ((1241 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6763 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6765 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6766 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6767 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6768 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6769 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6770 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6771 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6772 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 106 => ((9 integer))
mem: ((9 integer)): 6773 <= 106
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6774 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 106
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1630 => ((11 byte-address))
mem: ((11 byte-address)): 6775 <= 1630
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1630 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6794 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6796 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6797 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6798 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6799 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6800 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6801 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6802 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6803 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 107 => ((9 integer))
mem: ((9 integer)): 6804 <= 107
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6805 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 107
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1631 => ((11 byte-address))
mem: ((11 byte-address)): 6806 <= 1631
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1631 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1763 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1161 file-address) (raw)) => 1278
run: print-board/main 13: 1278 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1278
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
mem: ((1281 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6825 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6827 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6828 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6829 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6830 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6831 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6832 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6833 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6834 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 108 => ((9 integer))
mem: ((9 integer)): 6835 <= 108
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6836 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 108
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1632 => ((11 byte-address))
mem: ((11 byte-address)): 6837 <= 1632
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1632 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6856 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6858 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6859 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6860 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6861 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6862 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6863 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6864 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6865 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 109 => ((9 integer))
mem: ((9 integer)): 6866 <= 109
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6867 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 109
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1633 => ((11 byte-address))
mem: ((11 byte-address)): 6868 <= 1633
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1633 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1763 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1162 file-address) (raw)) => 1318
run: print-board/main 13: 1318 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1318
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
mem: ((1321 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6887 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6889 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6890 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6891 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6892 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6893 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6894 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6895 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6896 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 110 => ((9 integer))
mem: ((9 integer)): 6897 <= 110
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6898 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 110
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1634 => ((11 byte-address))
mem: ((11 byte-address)): 6899 <= 1634
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1634 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6918 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6920 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6921 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6922 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6923 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6924 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6925 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6926 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6927 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 111 => ((9 integer))
mem: ((9 integer)): 6928 <= 111
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6929 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 111
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1635 => ((11 byte-address))
mem: ((11 byte-address)): 6930 <= 1635
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1635 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1763 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1163 file-address) (raw)) => 1358
run: print-board/main 13: 1358 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1358
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
mem: ((1361 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6949 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6951 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6952 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6953 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6954 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6955 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6956 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6957 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6958 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 112 => ((9 integer))
mem: ((9 integer)): 6959 <= 112
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6960 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 112
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1636 => ((11 byte-address))
mem: ((11 byte-address)): 6961 <= 1636
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1636 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6980 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 6982 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6983 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6984 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6985 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 6986 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 6987 <= 1521
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6988 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6989 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 113 => ((9 integer))
mem: ((9 integer)): 6990 <= 113
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 6991 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 113
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1637 => ((11 byte-address))
mem: ((11 byte-address)): 6992 <= 1637
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1637 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1763 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1164 file-address) (raw)) => 1398
run: print-board/main 13: 1398 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1398
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
mem: ((1401 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7011 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7013 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 7014 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7015 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7016 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7017 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7018 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7019 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7020 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 114 => ((9 integer))
mem: ((9 integer)): 7021 <= 114
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7022 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 114
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1638 => ((11 byte-address))
mem: ((11 byte-address)): 7023 <= 1638
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1638 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7042 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7044 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7045 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7046 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7047 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7048 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7049 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7050 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7051 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 115 => ((9 integer))
mem: ((9 integer)): 7052 <= 115
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7053 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 115
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1639 => ((11 byte-address))
mem: ((11 byte-address)): 7054 <= 1639
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1639 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1763 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1165 file-address) (raw)) => 1438
run: print-board/main 13: 1438 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1438
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
mem: ((1441 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7073 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7075 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 7076 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7077 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7078 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7079 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7080 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7081 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7082 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 116 => ((9 integer))
mem: ((9 integer)): 7083 <= 116
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7084 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 116
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1640 => ((11 byte-address))
mem: ((11 byte-address)): 7085 <= 1640
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1640 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7104 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7106 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7107 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7108 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7109 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7110 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7111 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7112 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7113 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 117 => ((9 integer))
mem: ((9 integer)): 7114 <= 117
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7115 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 117
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1641 => ((11 byte-address))
mem: ((11 byte-address)): 7116 <= 1641
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1641 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1763 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1166 file-address) (raw)) => 1478
run: print-board/main 13: 1478 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1478
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
mem: ((1481 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1762 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7135 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\_)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7137 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 7138 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7139 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7140 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7141 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7142 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7143 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7144 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 118 => ((9 integer))
mem: ((9 integer)): 7145 <= 118
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7146 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 118
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1642 => ((11 byte-address))
mem: ((11 byte-address)): 7147 <= 1642
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1642 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7166 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7168 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7169 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7170 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7171 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7172 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7173 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7174 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7175 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 119 => ((9 integer))
mem: ((9 integer)): 7176 <= 119
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7177 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 119
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1643 => ((11 byte-address))
mem: ((11 byte-address)): 7178 <= 1643
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1643 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1763 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1760 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: print-board/main 19: 1 => ((3 integer))
mem: ((3 integer)): 1759 <= 1
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 7197 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7199 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 7200 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 5
run: cursor-to-next-line/print-board/main 4: 6 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 6
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 7201 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 1
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: print-board/main 6: 2 => ((5 integer))
mem: ((5 integer)): 1761 <= 2
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1518
mem: ((5 integer)) => 2
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 7228 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 2)
run: print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7230 <= 1518
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1518 2)
run: print-integer/print-board/main 2: 2 => ((2 integer))
mem: ((2 integer)): 7231 <= 2
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 7259 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (2)
run: integer-to-decimal-string/print-integer/print-board/main 1: 2 => ((1 integer))
mem: ((1 integer)): 7261 <= 2
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 7262 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 7264 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 7265 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 7290 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 7321 => ((1 buffer-address))
mem: ((1 buffer-address)): 7292 <= 7321
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 7321 => ((2 integer-address))
mem: ((2 integer-address)): 7293 <= 7321
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 7321 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 7322 => ((3 string-address-address))
mem: ((3 string-address-address)): 7294 <= 7322
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 7295 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 7323 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 7322 <= 7323
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 7321
run: integer-to-decimal-string/print-integer/print-board/main 11: 7321 => ((6 buffer-address))
mem: ((6 buffer-address)): 7266 <= 7321
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 7267 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 7268 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 7269 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 2
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 7261 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 2 => ((10 integer))
mem: ((10 integer)): 7270 <= 2
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 17: 50 => ((11 integer))
mem: ((11 integer)): 7271 <= 50
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 50
run: integer-to-decimal-string/print-integer/print-board/main 18: #\2 => ((12 character))
mem: ((12 character)): 7272 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 7321
mem: ((12 character)) => 2
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 7354 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (7321 #\2)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 7321 => ((1 buffer-address))
mem: ((1 buffer-address)): 7356 <= 7321
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7321 #\2)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\2 => ((2 character))
mem: ((2 character)): 7357 <= #\2
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 7321
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 7385 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (7321)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 7321 => ((1 buffer-address))
mem: ((1 buffer-address)): 7387 <= 7321
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((7321 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 7388 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((7322 string-address) (raw)) => 7323
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 7323 => ((3 string-address))
mem: ((3 string-address)): 7389 <= 7323
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((7323 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 7390 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7391 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 7358 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 7321 => ((4 integer-address))
mem: ((4 integer-address)): 7359 <= 7321
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((7322 string-address) (raw)) => 7323
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 7323 => ((5 string-address))
mem: ((5 string-address)): 7360 <= 7323
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((7323 string) (raw))
mem: ((7323 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 7324 => ((6 byte-address))
mem: ((6 byte-address)): 7361 <= 7324
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\2 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 7324 <= #\2
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 7321 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 7321
run: integer-to-decimal-string/print-integer/print-board/main 19: 7321 => ((6 buffer-address))
mem: ((6 buffer-address)): 7266 <= 7321
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 7269 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((7321 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 7273 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((7322 string-address) (raw)) => 7323
run: integer-to-decimal-string/print-integer/print-board/main 24: 7323 => ((14 string-address))
mem: ((14 string-address)): 7274 <= 7323
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 7416 => ((15 string-address))
mem: ((15 string-address)): 7275 <= 7416
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 7276 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 7277 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 7269 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((7323 string) (raw))
mem: ((7323 integer) (raw)) => 30
mem: ((7324 byte) (raw)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 30: #\2 => ((18 byte))
mem: ((18 byte)): 7278 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((7416 string) (raw))
mem: ((7416 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 7417 => ((19 byte-address))
mem: ((19 byte-address)): 7279 <= 7417
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 32: #\2 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 7417 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 7276 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 7277 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 7269 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 7416
run: print-integer/print-board/main 3: 7416 => ((3 string-address))
mem: ((3 string-address)): 7232 <= 7416
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((3 string-address)) => 7416
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 7418 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 7416)
run: print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7420 <= 1518
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 7416)
run: print-string/print-integer/print-board/main 2: 7416 => ((2 string-address))
mem: ((2 string-address)): 7421 <= 7416
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7416 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 7422 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 7423 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7424 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((7416 string) (raw))
mem: ((7416 integer) (raw)) => 1
mem: ((7417 byte) (raw)) => 2
run: print-string/print-integer/print-board/main 7: #\2 => ((6 character))
mem: ((6 character)): 7425 <= #\2
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => 2
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 7449 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\2)
run: print-character/print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7451 <= 1518
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\2)
run: print-character/print-string/print-integer/print-board/main 2: #\2 => ((2 character))
mem: ((2 character)): 7452 <= #\2
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\2)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7453 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\2)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7454 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7455 <= 1520
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7456 <= 1521
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7457 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7458 <= 120
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 120 => ((9 integer))
mem: ((9 integer)): 7459 <= 120
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-integer/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7460 <= 1523
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 120
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1644 => ((11 byte-address))
mem: ((11 byte-address)): 7461 <= 1644
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: print-character/print-string/print-integer/print-board/main 13: #\2 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1644 <= #\2
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 7423 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 7424 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 7480 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 7480
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 7480
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 7484 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 7480)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7486 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 7480)
run: print-string/print-board/main 2: 7480 => ((2 string-address))
mem: ((2 string-address)): 7487 <= 7480
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7480 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 7488 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 7489 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7490 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((7480 string) (raw))
mem: ((7480 integer) (raw)) => 3
mem: ((7481 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 7491 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 7515 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7517 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7518 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7519 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7520 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7521 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7522 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7523 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7524 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 121 => ((9 integer))
mem: ((9 integer)): 7525 <= 121
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7526 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 121
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1645 => ((11 byte-address))
mem: ((11 byte-address)): 7527 <= 1645
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1645 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 7489 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7490 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((7480 string) (raw))
mem: ((7480 integer) (raw)) => 3
mem: ((7482 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 7491 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 7546 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\|)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7548 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 7549 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7550 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7551 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7552 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7553 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7554 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7555 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 122 => ((9 integer))
mem: ((9 integer)): 7556 <= 122
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7557 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 122
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1646 => ((11 byte-address))
mem: ((11 byte-address)): 7558 <= 1646
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1646 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 7489 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7490 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((7480 string) (raw))
mem: ((7480 integer) (raw)) => 3
mem: ((7483 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 7491 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 7577 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7579 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7580 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7581 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7582 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7583 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7584 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7585 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7586 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 123 => ((9 integer))
mem: ((9 integer)): 7587 <= 123
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7588 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 123
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1647 => ((11 byte-address))
mem: ((11 byte-address)): 7589 <= 1647
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1647 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 7489 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 7490 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1763 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1159 file-address) (raw)) => 1198
run: print-board/main 13: 1198 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1198
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
mem: ((1200 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1762 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7608 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\P)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7610 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7611 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7612 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7613 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7614 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7615 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7616 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7617 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 124 => ((9 integer))
mem: ((9 integer)): 7618 <= 124
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7619 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 124
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1648 => ((11 byte-address))
mem: ((11 byte-address)): 7620 <= 1648
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1648 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7639 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7641 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7642 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7643 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7644 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7645 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7646 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7647 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7648 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 125 => ((9 integer))
mem: ((9 integer)): 7649 <= 125
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7650 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 125
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1649 => ((11 byte-address))
mem: ((11 byte-address)): 7651 <= 1649
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1649 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1763 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1160 file-address) (raw)) => 1238
run: print-board/main 13: 1238 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1238
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
mem: ((1240 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1762 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7670 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\P)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7672 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7673 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7674 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7675 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7676 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7677 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7678 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7679 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 126 => ((9 integer))
mem: ((9 integer)): 7680 <= 126
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7681 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 126
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1650 => ((11 byte-address))
mem: ((11 byte-address)): 7682 <= 1650
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1650 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7701 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7703 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7704 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7705 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7706 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7707 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7708 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7709 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7710 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 127 => ((9 integer))
mem: ((9 integer)): 7711 <= 127
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7712 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 127
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1651 => ((11 byte-address))
mem: ((11 byte-address)): 7713 <= 1651
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1651 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1763 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1161 file-address) (raw)) => 1278
run: print-board/main 13: 1278 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1278
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
mem: ((1280 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1762 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7732 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\P)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7734 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7735 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7736 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7737 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7738 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7739 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7740 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7741 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 128 => ((9 integer))
mem: ((9 integer)): 7742 <= 128
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7743 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 128
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1652 => ((11 byte-address))
mem: ((11 byte-address)): 7744 <= 1652
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1652 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7763 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7765 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7766 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7767 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7768 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7769 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7770 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7771 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7772 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 129 => ((9 integer))
mem: ((9 integer)): 7773 <= 129
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7774 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 129
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1653 => ((11 byte-address))
mem: ((11 byte-address)): 7775 <= 1653
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1653 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1763 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1162 file-address) (raw)) => 1318
run: print-board/main 13: 1318 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1318
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
mem: ((1320 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1762 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7794 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\P)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7796 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7797 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7798 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7799 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7800 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7801 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7802 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7803 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 130 => ((9 integer))
mem: ((9 integer)): 7804 <= 130
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7805 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 130
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1654 => ((11 byte-address))
mem: ((11 byte-address)): 7806 <= 1654
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1654 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7825 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7827 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7828 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7829 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7830 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7831 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7832 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7833 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7834 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 131 => ((9 integer))
mem: ((9 integer)): 7835 <= 131
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7836 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 131
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1655 => ((11 byte-address))
mem: ((11 byte-address)): 7837 <= 1655
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1655 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1763 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1163 file-address) (raw)) => 1358
run: print-board/main 13: 1358 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1358
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
mem: ((1360 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1762 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7856 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\P)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7858 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7859 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7860 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7861 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7862 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7863 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7864 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7865 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 132 => ((9 integer))
mem: ((9 integer)): 7866 <= 132
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7867 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 132
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1656 => ((11 byte-address))
mem: ((11 byte-address)): 7868 <= 1656
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1656 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-board/main 15: (((reply)))
schedule: scheduling print-board/main for further processing
schedule: print-board/main
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7887 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7889 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7890 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7891 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7892 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7893 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7894 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7895 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7896 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 133 => ((9 integer))
mem: ((9 integer)): 7897 <= 133
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7898 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 133
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1657 => ((11 byte-address))
mem: ((11 byte-address)): 7899 <= 1657
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1657 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1763 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1164 file-address) (raw)) => 1398
run: print-board/main 13: 1398 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1398
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
mem: ((1400 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1762 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7918 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\P)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7920 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7921 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7922 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7923 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7924 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7925 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7926 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7927 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 134 => ((9 integer))
mem: ((9 integer)): 7928 <= 134
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7929 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 134
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1658 => ((11 byte-address))
mem: ((11 byte-address)): 7930 <= 1658
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1658 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7949 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7951 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7952 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7953 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7954 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7955 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7956 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7957 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7958 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 135 => ((9 integer))
mem: ((9 integer)): 7959 <= 135
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7960 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 135
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1659 => ((11 byte-address))
mem: ((11 byte-address)): 7961 <= 1659
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1659 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1763 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1165 file-address) (raw)) => 1438
run: print-board/main 13: 1438 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1438
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
mem: ((1440 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1762 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7980 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\P)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 7982 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7983 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7984 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7985 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 7986 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 7987 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7988 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7989 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 136 => ((9 integer))
mem: ((9 integer)): 7990 <= 136
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 7991 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 136
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1660 => ((11 byte-address))
mem: ((11 byte-address)): 7992 <= 1660
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1660 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8011 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8013 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8014 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8015 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8016 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8017 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8018 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8019 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 8020 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 137 => ((9 integer))
mem: ((9 integer)): 8021 <= 137
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8022 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 137
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1661 => ((11 byte-address))
mem: ((11 byte-address)): 8023 <= 1661
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1661 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1763 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1166 file-address) (raw)) => 1478
run: print-board/main 13: 1478 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1478
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
mem: ((1480 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1762 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8042 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\P)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8044 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 8045 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8046 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8047 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8048 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8049 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8050 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 8051 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 138 => ((9 integer))
mem: ((9 integer)): 8052 <= 138
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8053 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 138
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1662 => ((11 byte-address))
mem: ((11 byte-address)): 8054 <= 1662
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1662 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8073 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8075 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8076 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8077 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8078 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8079 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8080 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8081 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 8082 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 139 => ((9 integer))
mem: ((9 integer)): 8083 <= 139
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8084 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 139
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1663 => ((11 byte-address))
mem: ((11 byte-address)): 8085 <= 1663
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1663 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1763 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1760 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: print-board/main 19: 0 => ((3 integer))
mem: ((3 integer)): 1759 <= 0
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 8104 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8106 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 8107 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 6
run: cursor-to-next-line/print-board/main 4: 7 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 7
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 8108 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 0
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: print-board/main 6: 1 => ((5 integer))
mem: ((5 integer)): 1761 <= 1
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1518
mem: ((5 integer)) => 1
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 8135 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 1)
run: print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8137 <= 1518
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1518 1)
run: print-integer/print-board/main 2: 1 => ((2 integer))
mem: ((2 integer)): 8138 <= 1
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 8166 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (1)
run: integer-to-decimal-string/print-integer/print-board/main 1: 1 => ((1 integer))
mem: ((1 integer)): 8168 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 8169 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 8171 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 8172 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 8197 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 8228 => ((1 buffer-address))
mem: ((1 buffer-address)): 8199 <= 8228
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 8228 => ((2 integer-address))
mem: ((2 integer-address)): 8200 <= 8228
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 8228 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 8229 => ((3 string-address-address))
mem: ((3 string-address-address)): 8201 <= 8229
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 8202 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 8230 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 8229 <= 8230
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 8228
run: integer-to-decimal-string/print-integer/print-board/main 11: 8228 => ((6 buffer-address))
mem: ((6 buffer-address)): 8173 <= 8228
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 8174 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 8175 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 8176 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 1
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 8168 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 1 => ((10 integer))
mem: ((10 integer)): 8177 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 17: 49 => ((11 integer))
mem: ((11 integer)): 8178 <= 49
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 49
run: integer-to-decimal-string/print-integer/print-board/main 18: #\1 => ((12 character))
mem: ((12 character)): 8179 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 8228
mem: ((12 character)) => 1
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 8261 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (8228 #\1)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 8228 => ((1 buffer-address))
mem: ((1 buffer-address)): 8263 <= 8228
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (8228 #\1)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\1 => ((2 character))
mem: ((2 character)): 8264 <= #\1
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 8228
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 8292 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (8228)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 8228 => ((1 buffer-address))
mem: ((1 buffer-address)): 8294 <= 8228
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((8228 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 8295 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((8229 string-address) (raw)) => 8230
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 8230 => ((3 string-address))
mem: ((3 string-address)): 8296 <= 8230
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((8230 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 8297 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8298 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 8265 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 8228 => ((4 integer-address))
mem: ((4 integer-address)): 8266 <= 8228
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((8229 string-address) (raw)) => 8230
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 8230 => ((5 string-address))
mem: ((5 string-address)): 8267 <= 8230
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((8230 string) (raw))
mem: ((8230 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 8231 => ((6 byte-address))
mem: ((6 byte-address)): 8268 <= 8231
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 1
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\1 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 8231 <= #\1
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 8228 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 8228
run: integer-to-decimal-string/print-integer/print-board/main 19: 8228 => ((6 buffer-address))
mem: ((6 buffer-address)): 8173 <= 8228
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 8176 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((8228 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 8180 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((8229 string-address) (raw)) => 8230
run: integer-to-decimal-string/print-integer/print-board/main 24: 8230 => ((14 string-address))
mem: ((14 string-address)): 8181 <= 8230
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 8323 => ((15 string-address))
mem: ((15 string-address)): 8182 <= 8323
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 8183 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 8184 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 8176 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((8230 string) (raw))
mem: ((8230 integer) (raw)) => 30
mem: ((8231 byte) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 30: #\1 => ((18 byte))
mem: ((18 byte)): 8185 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((8323 string) (raw))
mem: ((8323 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 8324 => ((19 byte-address))
mem: ((19 byte-address)): 8186 <= 8324
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 32: #\1 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 8324 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 8183 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 8184 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 8176 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 8323
run: print-integer/print-board/main 3: 8323 => ((3 string-address))
mem: ((3 string-address)): 8139 <= 8323
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((3 string-address)) => 8323
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 8325 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 8323)
run: print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8327 <= 1518
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 8323)
run: print-string/print-integer/print-board/main 2: 8323 => ((2 string-address))
mem: ((2 string-address)): 8328 <= 8323
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((8323 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 8329 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 8330 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8331 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((8323 string) (raw))
mem: ((8323 integer) (raw)) => 1
mem: ((8324 byte) (raw)) => 1
run: print-string/print-integer/print-board/main 7: #\1 => ((6 character))
mem: ((6 character)): 8332 <= #\1
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => 1
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 8356 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\1)
run: print-character/print-string/print-integer/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8358 <= 1518
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\1)
run: print-character/print-string/print-integer/print-board/main 2: #\1 => ((2 character))
mem: ((2 character)): 8359 <= #\1
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\1)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8360 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\1)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8361 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8362 <= 1520
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8363 <= 1521
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8364 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8365 <= 140
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 140 => ((9 integer))
mem: ((9 integer)): 8366 <= 140
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-integer/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8367 <= 1523
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 140
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1664 => ((11 byte-address))
mem: ((11 byte-address)): 8368 <= 1664
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 1
run: print-character/print-string/print-integer/print-board/main 13: #\1 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1664 <= #\1
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 8330 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 8331 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 8387 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 8387
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 8387
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 8391 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 8387)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8393 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 8387)
run: print-string/print-board/main 2: 8387 => ((2 string-address))
mem: ((2 string-address)): 8394 <= 8387
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((8387 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 8395 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 8396 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8397 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((8387 string) (raw))
mem: ((8387 integer) (raw)) => 3
mem: ((8388 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 8398 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 8422 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8424 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8425 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8426 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8427 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8428 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8429 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8430 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8431 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 141 => ((9 integer))
mem: ((9 integer)): 8432 <= 141
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8433 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 141
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1665 => ((11 byte-address))
mem: ((11 byte-address)): 8434 <= 1665
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1665 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 8396 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8397 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((8387 string) (raw))
mem: ((8387 integer) (raw)) => 3
mem: ((8389 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 8398 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 8453 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\|)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8455 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 8456 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8457 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8458 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8459 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8460 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8461 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8462 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 142 => ((9 integer))
mem: ((9 integer)): 8463 <= 142
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8464 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 142
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1666 => ((11 byte-address))
mem: ((11 byte-address)): 8465 <= 1666
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1666 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 8396 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8397 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((8387 string) (raw))
mem: ((8387 integer) (raw)) => 3
mem: ((8390 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 8398 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 8484 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8486 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8487 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8488 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8489 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8490 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8491 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8492 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8493 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 143 => ((9 integer))
mem: ((9 integer)): 8494 <= 143
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8495 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 143
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1667 => ((11 byte-address))
mem: ((11 byte-address)): 8496 <= 1667
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1667 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 8396 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 8397 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1763 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1159 file-address) (raw)) => 1198
run: print-board/main 13: 1198 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1198
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1198 file) (raw))
mem: ((1198 integer) (raw)) => 8
mem: ((1199 square) (raw)) => R
run: print-board/main 14: #\R => ((6 square))
mem: ((6 square)): 1762 <= #\R
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => R
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8515 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\R)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8517 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\R)
run: print-character/print-board/main 2: #\R => ((2 character))
mem: ((2 character)): 8518 <= #\R
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\R)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8519 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\R)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8520 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8521 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8522 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8523 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8524 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 144 => ((9 integer))
mem: ((9 integer)): 8525 <= 144
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8526 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 144
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1668 => ((11 byte-address))
mem: ((11 byte-address)): 8527 <= 1668
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => R
run: print-character/print-board/main 13: #\R => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1668 <= #\R
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8546 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8548 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8549 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8550 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8551 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8552 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8553 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8554 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8555 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 145 => ((9 integer))
mem: ((9 integer)): 8556 <= 145
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8557 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 145
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1669 => ((11 byte-address))
mem: ((11 byte-address)): 8558 <= 1669
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1669 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1763 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1160 file-address) (raw)) => 1238
run: print-board/main 13: 1238 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1238
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1238 file) (raw))
mem: ((1238 integer) (raw)) => 8
mem: ((1239 square) (raw)) => N
run: print-board/main 14: #\N => ((6 square))
mem: ((6 square)): 1762 <= #\N
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => N
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8577 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\N)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8579 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\N)
run: print-character/print-board/main 2: #\N => ((2 character))
mem: ((2 character)): 8580 <= #\N
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\N)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8581 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\N)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8582 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8583 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8584 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8585 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8586 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 146 => ((9 integer))
mem: ((9 integer)): 8587 <= 146
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8588 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 146
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1670 => ((11 byte-address))
mem: ((11 byte-address)): 8589 <= 1670
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => N
run: print-character/print-board/main 13: #\N => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1670 <= #\N
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8608 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8610 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8611 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8612 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8613 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8614 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8615 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8616 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8617 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 147 => ((9 integer))
mem: ((9 integer)): 8618 <= 147
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8619 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 147
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1671 => ((11 byte-address))
mem: ((11 byte-address)): 8620 <= 1671
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1671 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1763 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1161 file-address) (raw)) => 1278
run: print-board/main 13: 1278 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1278
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1278 file) (raw))
mem: ((1278 integer) (raw)) => 8
mem: ((1279 square) (raw)) => B
run: print-board/main 14: #\B => ((6 square))
mem: ((6 square)): 1762 <= #\B
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => B
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8639 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\B)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8641 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\B)
run: print-character/print-board/main 2: #\B => ((2 character))
mem: ((2 character)): 8642 <= #\B
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\B)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8643 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\B)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8644 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8645 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8646 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8647 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8648 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 148 => ((9 integer))
mem: ((9 integer)): 8649 <= 148
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8650 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 148
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1672 => ((11 byte-address))
mem: ((11 byte-address)): 8651 <= 1672
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => B
run: print-character/print-board/main 13: #\B => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1672 <= #\B
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8670 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8672 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8673 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8674 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8675 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8676 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8677 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8678 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8679 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 149 => ((9 integer))
mem: ((9 integer)): 8680 <= 149
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8681 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 149
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1673 => ((11 byte-address))
mem: ((11 byte-address)): 8682 <= 1673
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1673 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1763 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1162 file-address) (raw)) => 1318
run: print-board/main 13: 1318 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1318
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1318 file) (raw))
mem: ((1318 integer) (raw)) => 8
mem: ((1319 square) (raw)) => Q
run: print-board/main 14: #\Q => ((6 square))
mem: ((6 square)): 1762 <= #\Q
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => Q
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8701 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\Q)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8703 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\Q)
run: print-character/print-board/main 2: #\Q => ((2 character))
mem: ((2 character)): 8704 <= #\Q
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\Q)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8705 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\Q)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8706 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8707 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8708 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8709 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8710 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 150 => ((9 integer))
mem: ((9 integer)): 8711 <= 150
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8712 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 150
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1674 => ((11 byte-address))
mem: ((11 byte-address)): 8713 <= 1674
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => Q
run: print-character/print-board/main 13: #\Q => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1674 <= #\Q
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8732 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8734 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8735 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8736 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8737 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8738 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8739 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8740 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8741 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 151 => ((9 integer))
mem: ((9 integer)): 8742 <= 151
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8743 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 151
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1675 => ((11 byte-address))
mem: ((11 byte-address)): 8744 <= 1675
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1675 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1763 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1163 file-address) (raw)) => 1358
run: print-board/main 13: 1358 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1358
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1358 file) (raw))
mem: ((1358 integer) (raw)) => 8
mem: ((1359 square) (raw)) => K
run: print-board/main 14: #\K => ((6 square))
mem: ((6 square)): 1762 <= #\K
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => K
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8763 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\K)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8765 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\K)
run: print-character/print-board/main 2: #\K => ((2 character))
mem: ((2 character)): 8766 <= #\K
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\K)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8767 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\K)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8768 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8769 <= 1520
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8770 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8771 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8772 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 152 => ((9 integer))
mem: ((9 integer)): 8773 <= 152
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8774 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 152
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1676 => ((11 byte-address))
mem: ((11 byte-address)): 8775 <= 1676
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => K
run: print-character/print-board/main 13: #\K => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1676 <= #\K
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8794 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8796 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8797 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8798 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8799 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8800 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8801 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8802 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8803 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 153 => ((9 integer))
mem: ((9 integer)): 8804 <= 153
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8805 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 153
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1677 => ((11 byte-address))
mem: ((11 byte-address)): 8806 <= 1677
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1677 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1763 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1164 file-address) (raw)) => 1398
run: print-board/main 13: 1398 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1398
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1398 file) (raw))
mem: ((1398 integer) (raw)) => 8
mem: ((1399 square) (raw)) => B
run: print-board/main 14: #\B => ((6 square))
mem: ((6 square)): 1762 <= #\B
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => B
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8825 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\B)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8827 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\B)
run: print-character/print-board/main 2: #\B => ((2 character))
mem: ((2 character)): 8828 <= #\B
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\B)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8829 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\B)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8830 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8831 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8832 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8833 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8834 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 154 => ((9 integer))
mem: ((9 integer)): 8835 <= 154
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8836 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 154
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1678 => ((11 byte-address))
mem: ((11 byte-address)): 8837 <= 1678
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => B
run: print-character/print-board/main 13: #\B => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1678 <= #\B
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8856 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8858 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8859 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8860 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8861 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8862 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8863 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8864 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8865 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 155 => ((9 integer))
mem: ((9 integer)): 8866 <= 155
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8867 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 155
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1679 => ((11 byte-address))
mem: ((11 byte-address)): 8868 <= 1679
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1679 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1763 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1165 file-address) (raw)) => 1438
run: print-board/main 13: 1438 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1438
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1438 file) (raw))
mem: ((1438 integer) (raw)) => 8
mem: ((1439 square) (raw)) => N
run: print-board/main 14: #\N => ((6 square))
mem: ((6 square)): 1762 <= #\N
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => N
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8887 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\N)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8889 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\N)
run: print-character/print-board/main 2: #\N => ((2 character))
mem: ((2 character)): 8890 <= #\N
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\N)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8891 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\N)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8892 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8893 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8894 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8895 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8896 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 156 => ((9 integer))
mem: ((9 integer)): 8897 <= 156
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8898 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 156
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1680 => ((11 byte-address))
mem: ((11 byte-address)): 8899 <= 1680
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => N
run: print-character/print-board/main 13: #\N => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1680 <= #\N
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8918 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8920 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8921 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8922 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8923 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8924 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8925 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8926 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8927 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 157 => ((9 integer))
mem: ((9 integer)): 8928 <= 157
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8929 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 157
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1681 => ((11 byte-address))
mem: ((11 byte-address)): 8930 <= 1681
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1681 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1763 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1760 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1158 board) (raw))
mem: ((1158 integer) (raw)) => 8
mem: ((1166 file-address) (raw)) => 1478
run: print-board/main 13: 1478 => ((8 file-address))
mem: ((8 file-address)): 1764 <= 1478
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1478 file) (raw))
mem: ((1478 integer) (raw)) => 8
mem: ((1479 square) (raw)) => R
run: print-board/main 14: #\R => ((6 square))
mem: ((6 square)): 1762 <= #\R
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1518
mem: ((6 square)) => R
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8949 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\R)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8951 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\R)
run: print-character/print-board/main 2: #\R => ((2 character))
mem: ((2 character)): 8952 <= #\R
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\R)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8953 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\R)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8954 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8955 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8956 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8957 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8958 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 158 => ((9 integer))
mem: ((9 integer)): 8959 <= 158
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8960 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 158
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1682 => ((11 byte-address))
mem: ((11 byte-address)): 8961 <= 1682
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => R
run: print-character/print-board/main 13: #\R => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1682 <= #\R
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8980 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 8982 <= 1518
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8983 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8984 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8985 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 8986 <= 1520
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 8987 <= 1521
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8988 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8989 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 159 => ((9 integer))
mem: ((9 integer)): 8990 <= 159
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 8991 <= 1523
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 159
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-board/main 12: 1683 => ((11 byte-address))
mem: ((11 byte-address)): 8992 <= 1683
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1683 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1763 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1760 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: print-board/main 19: -1 => ((3 integer))
mem: ((3 integer)): 1759 <= -1
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 9011 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9013 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 9014 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 7
run: cursor-to-next-line/print-board/main 4: 8 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 8
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 9015 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => -1
run: print-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 1760 <= t
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => t
run: print-board/main 22: (((6 string-address)) <- ((new))   +----------------)
run: print-board/main 22: 9042 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 9042
run: print-board/main 23: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 9042
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 9062 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 9042)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9064 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 9042)
run: print-string/print-board/main 2: 9042 => ((2 string-address))
mem: ((2 string-address)): 9065 <= 9042
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((9042 integer) (raw)) => 19
run: print-string/print-board/main 3: 19 => ((3 integer))
mem: ((3 integer)): 9066 <= 19
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 9067 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9043 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9069 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9093 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9095 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9096 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9097 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9098 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9099 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9100 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9101 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9102 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 10: 160 => ((9 integer))
mem: ((9 integer)): 9103 <= 160
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9104 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 160
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1684 => ((11 byte-address))
mem: ((11 byte-address)): 9105 <= 1684
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1684 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 9067 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9044 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9069 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9124 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9126 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9127 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9128 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9129 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9130 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9131 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9132 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9133 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 161 => ((9 integer))
mem: ((9 integer)): 9134 <= 161
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9135 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 161
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1685 => ((11 byte-address))
mem: ((11 byte-address)): 9136 <= 1685
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1685 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 9067 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9045 byte) (raw)) => +
run: print-string/print-board/main 7: #\+ => ((6 character))
mem: ((6 character)): 9069 <= #\+
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => +
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9155 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\+)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9157 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\+)
run: print-character/print-string/print-board/main 2: #\+ => ((2 character))
mem: ((2 character)): 9158 <= #\+
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\+)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9159 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\+)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9160 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9161 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9162 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9163 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9164 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 162 => ((9 integer))
mem: ((9 integer)): 9165 <= 162
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9166 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 162
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1686 => ((11 byte-address))
mem: ((11 byte-address)): 9167 <= 1686
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => +
run: print-character/print-string/print-board/main 13: #\+ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1686 <= #\+
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 9067 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9046 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9186 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9188 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9189 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9190 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9191 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9192 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9193 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9194 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9195 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 163 => ((9 integer))
mem: ((9 integer)): 9196 <= 163
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9197 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 163
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1687 => ((11 byte-address))
mem: ((11 byte-address)): 9198 <= 1687
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1687 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: print-string/print-board/main 9: 4 => ((4 integer))
mem: ((4 integer)): 9067 <= 4
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9047 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9217 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9219 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9220 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9221 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9222 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9223 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9224 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9225 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9226 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 10: 164 => ((9 integer))
mem: ((9 integer)): 9227 <= 164
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9228 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 164
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1688 => ((11 byte-address))
mem: ((11 byte-address)): 9229 <= 1688
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1688 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: print-string/print-board/main 9: 5 => ((4 integer))
mem: ((4 integer)): 9067 <= 5
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9048 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9248 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9250 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9251 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9252 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9253 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9254 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9255 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9256 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9257 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 10: 165 => ((9 integer))
mem: ((9 integer)): 9258 <= 165
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9259 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 165
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1689 => ((11 byte-address))
mem: ((11 byte-address)): 9260 <= 1689
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1689 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: print-string/print-board/main 9: 6 => ((4 integer))
mem: ((4 integer)): 9067 <= 6
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9049 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9279 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9281 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9282 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9283 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9284 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9285 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9286 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9287 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9288 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 10: 166 => ((9 integer))
mem: ((9 integer)): 9289 <= 166
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9290 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 166
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1690 => ((11 byte-address))
mem: ((11 byte-address)): 9291 <= 1690
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1690 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: print-string/print-board/main 9: 7 => ((4 integer))
mem: ((4 integer)): 9067 <= 7
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9050 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9310 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9312 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9313 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9314 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9315 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9316 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9317 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9318 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9319 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 10: 167 => ((9 integer))
mem: ((9 integer)): 9320 <= 167
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9321 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 167
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1691 => ((11 byte-address))
mem: ((11 byte-address)): 9322 <= 1691
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1691 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: print-string/print-board/main 9: 8 => ((4 integer))
mem: ((4 integer)): 9067 <= 8
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9051 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9341 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9343 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9344 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9345 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9346 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9347 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9348 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9349 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9350 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 10: 168 => ((9 integer))
mem: ((9 integer)): 9351 <= 168
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9352 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 168
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1692 => ((11 byte-address))
mem: ((11 byte-address)): 9353 <= 1692
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1692 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: print-string/print-board/main 9: 9 => ((4 integer))
mem: ((4 integer)): 9067 <= 9
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9052 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9372 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9374 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9375 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9376 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9377 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9378 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9379 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9380 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9381 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 10: 169 => ((9 integer))
mem: ((9 integer)): 9382 <= 169
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9383 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 169
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1693 => ((11 byte-address))
mem: ((11 byte-address)): 9384 <= 1693
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1693 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: print-string/print-board/main 9: 10 => ((4 integer))
mem: ((4 integer)): 9067 <= 10
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9053 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9403 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9405 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9406 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9407 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9408 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9409 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9410 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9411 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9412 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 10: 170 => ((9 integer))
mem: ((9 integer)): 9413 <= 170
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9414 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 170
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1694 => ((11 byte-address))
mem: ((11 byte-address)): 9415 <= 1694
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1694 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: print-string/print-board/main 9: 11 => ((4 integer))
mem: ((4 integer)): 9067 <= 11
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9054 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9434 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9436 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9437 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9438 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9439 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9440 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9441 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9442 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9443 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 10: 171 => ((9 integer))
mem: ((9 integer)): 9444 <= 171
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9445 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 171
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1695 => ((11 byte-address))
mem: ((11 byte-address)): 9446 <= 1695
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1695 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: print-string/print-board/main 9: 12 => ((4 integer))
mem: ((4 integer)): 9067 <= 12
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9055 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9465 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9467 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9468 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9469 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9470 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9471 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9472 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9473 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9474 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 10: 172 => ((9 integer))
mem: ((9 integer)): 9475 <= 172
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9476 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 172
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1696 => ((11 byte-address))
mem: ((11 byte-address)): 9477 <= 1696
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1696 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: print-string/print-board/main 9: 13 => ((4 integer))
mem: ((4 integer)): 9067 <= 13
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9056 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9496 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9498 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9499 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9500 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9501 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9502 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9503 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9504 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9505 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 10: 173 => ((9 integer))
mem: ((9 integer)): 9506 <= 173
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9507 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 173
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1697 => ((11 byte-address))
mem: ((11 byte-address)): 9508 <= 1697
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1697 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: print-string/print-board/main 9: 14 => ((4 integer))
mem: ((4 integer)): 9067 <= 14
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9057 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9527 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9529 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9530 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9531 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9532 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9533 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9534 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9535 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9536 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 10: 174 => ((9 integer))
mem: ((9 integer)): 9537 <= 174
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9538 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 174
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1698 => ((11 byte-address))
mem: ((11 byte-address)): 9539 <= 1698
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1698 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: print-string/print-board/main 9: 15 => ((4 integer))
mem: ((4 integer)): 9067 <= 15
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
schedule: scheduling print-string/print-board/main for further processing
schedule: print-string/print-board/main
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9058 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9558 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9560 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9561 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9562 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9563 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9564 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9565 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9566 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9567 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 10: 175 => ((9 integer))
mem: ((9 integer)): 9568 <= 175
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9569 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 175
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1699 => ((11 byte-address))
mem: ((11 byte-address)): 9570 <= 1699
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1699 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: print-string/print-board/main 9: 16 => ((4 integer))
mem: ((4 integer)): 9067 <= 16
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9059 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9589 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9591 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9592 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9593 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9594 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9595 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9596 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9597 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9598 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 10: 176 => ((9 integer))
mem: ((9 integer)): 9599 <= 176
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9600 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 176
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1700 => ((11 byte-address))
mem: ((11 byte-address)): 9601 <= 1700
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1700 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: print-string/print-board/main 9: 17 => ((4 integer))
mem: ((4 integer)): 9067 <= 17
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9060 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9620 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9622 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9623 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9624 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9625 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9626 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9627 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9628 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9629 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 10: 177 => ((9 integer))
mem: ((9 integer)): 9630 <= 177
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9631 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 177
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1701 => ((11 byte-address))
mem: ((11 byte-address)): 9632 <= 1701
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1701 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: print-string/print-board/main 9: 18 => ((4 integer))
mem: ((4 integer)): 9067 <= 18
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9068 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((9042 string) (raw))
mem: ((9042 integer) (raw)) => 19
mem: ((9061 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9069 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9651 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\-)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9653 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9654 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9655 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9656 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9657 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9658 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9659 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9660 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 10: 178 => ((9 integer))
mem: ((9 integer)): 9661 <= 178
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9662 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 178
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1702 => ((11 byte-address))
mem: ((11 byte-address)): 9663 <= 1702
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1702 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: print-string/print-board/main 9: 19 => ((4 integer))
mem: ((4 integer)): 9067 <= 19
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 9068 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 24: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 9682 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9684 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 9685 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 8
run: cursor-to-next-line/print-board/main 4: 9 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 9
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 9686 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 25: (((6 string-address)) <- ((new))     a b c d e f g h)
run: print-board/main 25: 9713 => ((6 string-address))
mem: ((6 string-address)): 1762 <= 9713
run: print-board/main 26: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1518
mem: ((6 string-address)) => 9713
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 9733 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 9713)
run: print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9735 <= 1518
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1518 9713)
run: print-string/print-board/main 2: 9713 => ((2 string-address))
mem: ((2 string-address)): 9736 <= 9713
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((9713 integer) (raw)) => 19
run: print-string/print-board/main 3: 19 => ((3 integer))
mem: ((3 integer)): 9737 <= 19
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 9738 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9714 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9764 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9766 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9767 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9768 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9769 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9770 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9771 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9772 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9773 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 10: 180 => ((9 integer))
mem: ((9 integer)): 9774 <= 180
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9775 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 180
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1704 => ((11 byte-address))
mem: ((11 byte-address)): 9776 <= 1704
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1704 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 1
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 9738 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9715 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9795 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9797 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9798 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9799 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9800 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9801 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9802 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9803 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9804 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 181 => ((9 integer))
mem: ((9 integer)): 9805 <= 181
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9806 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 181
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1705 => ((11 byte-address))
mem: ((11 byte-address)): 9807 <= 1705
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1705 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 9738 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9716 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9826 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9828 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9829 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9830 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9831 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9832 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9833 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9834 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9835 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 182 => ((9 integer))
mem: ((9 integer)): 9836 <= 182
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9837 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 182
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1706 => ((11 byte-address))
mem: ((11 byte-address)): 9838 <= 1706
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1706 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 9738 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9717 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9857 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9859 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9860 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9861 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9862 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9863 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9864 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9865 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9866 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 183 => ((9 integer))
mem: ((9 integer)): 9867 <= 183
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9868 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 183
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1707 => ((11 byte-address))
mem: ((11 byte-address)): 9869 <= 1707
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1707 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: print-string/print-board/main 9: 4 => ((4 integer))
mem: ((4 integer)): 9738 <= 4
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9718 byte) (raw)) => a
run: print-string/print-board/main 7: #\a => ((6 character))
mem: ((6 character)): 9740 <= #\a
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => a
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9888 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\a)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9890 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\a)
run: print-character/print-string/print-board/main 2: #\a => ((2 character))
mem: ((2 character)): 9891 <= #\a
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\a)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9892 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\a)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9893 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9894 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9895 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9896 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9897 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 10: 184 => ((9 integer))
mem: ((9 integer)): 9898 <= 184
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9899 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 184
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1708 => ((11 byte-address))
mem: ((11 byte-address)): 9900 <= 1708
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => a
run: print-character/print-string/print-board/main 13: #\a => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1708 <= #\a
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 5
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: print-string/print-board/main 9: 5 => ((4 integer))
mem: ((4 integer)): 9738 <= 5
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9719 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9919 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9921 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9922 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9923 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9924 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9925 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9926 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9927 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9928 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 10: 185 => ((9 integer))
mem: ((9 integer)): 9929 <= 185
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9930 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 185
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1709 => ((11 byte-address))
mem: ((11 byte-address)): 9931 <= 1709
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1709 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 6
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: print-string/print-board/main 9: 6 => ((4 integer))
mem: ((4 integer)): 9738 <= 6
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9720 byte) (raw)) => b
run: print-string/print-board/main 7: #\b => ((6 character))
mem: ((6 character)): 9740 <= #\b
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => b
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9950 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\b)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9952 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\b)
run: print-character/print-string/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 9953 <= #\b
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\b)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9954 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\b)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9955 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9956 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9957 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9958 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9959 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 10: 186 => ((9 integer))
mem: ((9 integer)): 9960 <= 186
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9961 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 186
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1710 => ((11 byte-address))
mem: ((11 byte-address)): 9962 <= 1710
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-string/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1710 <= #\b
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 7
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: print-string/print-board/main 9: 7 => ((4 integer))
mem: ((4 integer)): 9738 <= 7
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9721 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9981 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 9983 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9984 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9985 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9986 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 9987 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 9988 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9989 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9990 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 10: 187 => ((9 integer))
mem: ((9 integer)): 9991 <= 187
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 9992 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 187
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1711 => ((11 byte-address))
mem: ((11 byte-address)): 9993 <= 1711
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1711 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 8
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: print-string/print-board/main 9: 8 => ((4 integer))
mem: ((4 integer)): 9738 <= 8
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9722 byte) (raw)) => c
run: print-string/print-board/main 7: #\c => ((6 character))
mem: ((6 character)): 9740 <= #\c
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => c
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10012 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\c)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10014 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\c)
run: print-character/print-string/print-board/main 2: #\c => ((2 character))
mem: ((2 character)): 10015 <= #\c
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\c)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10016 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\c)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10017 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10018 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10019 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10020 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10021 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 10: 188 => ((9 integer))
mem: ((9 integer)): 10022 <= 188
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10023 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 188
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1712 => ((11 byte-address))
mem: ((11 byte-address)): 10024 <= 1712
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => c
run: print-character/print-string/print-board/main 13: #\c => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1712 <= #\c
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 9
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: print-string/print-board/main 9: 9 => ((4 integer))
mem: ((4 integer)): 9738 <= 9
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9723 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10043 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10045 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10046 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10047 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10048 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10049 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10050 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10051 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10052 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 10: 189 => ((9 integer))
mem: ((9 integer)): 10053 <= 189
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10054 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 189
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1713 => ((11 byte-address))
mem: ((11 byte-address)): 10055 <= 1713
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1713 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 10
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: print-string/print-board/main 9: 10 => ((4 integer))
mem: ((4 integer)): 9738 <= 10
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9724 byte) (raw)) => d
run: print-string/print-board/main 7: #\d => ((6 character))
mem: ((6 character)): 9740 <= #\d
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => d
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10074 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\d)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10076 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\d)
run: print-character/print-string/print-board/main 2: #\d => ((2 character))
mem: ((2 character)): 10077 <= #\d
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\d)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10078 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\d)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10079 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10080 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10081 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10082 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10083 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 10: 190 => ((9 integer))
mem: ((9 integer)): 10084 <= 190
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10085 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 190
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1714 => ((11 byte-address))
mem: ((11 byte-address)): 10086 <= 1714
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => d
run: print-character/print-string/print-board/main 13: #\d => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1714 <= #\d
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 11
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: print-string/print-board/main 9: 11 => ((4 integer))
mem: ((4 integer)): 9738 <= 11
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9725 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10105 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10107 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10108 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10109 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10110 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10111 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10112 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10113 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10114 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 10: 191 => ((9 integer))
mem: ((9 integer)): 10115 <= 191
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10116 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 191
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1715 => ((11 byte-address))
mem: ((11 byte-address)): 10117 <= 1715
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1715 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 12
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: print-string/print-board/main 9: 12 => ((4 integer))
mem: ((4 integer)): 9738 <= 12
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9726 byte) (raw)) => e
run: print-string/print-board/main 7: #\e => ((6 character))
mem: ((6 character)): 9740 <= #\e
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => e
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10136 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\e)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10138 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\e)
run: print-character/print-string/print-board/main 2: #\e => ((2 character))
mem: ((2 character)): 10139 <= #\e
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\e)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10140 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\e)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10141 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10142 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10143 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10144 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10145 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 10: 192 => ((9 integer))
mem: ((9 integer)): 10146 <= 192
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10147 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 192
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1716 => ((11 byte-address))
mem: ((11 byte-address)): 10148 <= 1716
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => e
run: print-character/print-string/print-board/main 13: #\e => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1716 <= #\e
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 13
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: print-string/print-board/main 9: 13 => ((4 integer))
mem: ((4 integer)): 9738 <= 13
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9727 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10167 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10169 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10170 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10171 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10172 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10173 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10174 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10175 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10176 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 10: 193 => ((9 integer))
mem: ((9 integer)): 10177 <= 193
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10178 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 193
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1717 => ((11 byte-address))
mem: ((11 byte-address)): 10179 <= 1717
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1717 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 14
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: print-string/print-board/main 9: 14 => ((4 integer))
mem: ((4 integer)): 9738 <= 14
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9728 byte) (raw)) => f
run: print-string/print-board/main 7: #\f => ((6 character))
mem: ((6 character)): 9740 <= #\f
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => f
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10198 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\f)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10200 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\f)
run: print-character/print-string/print-board/main 2: #\f => ((2 character))
mem: ((2 character)): 10201 <= #\f
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\f)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10202 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\f)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10203 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10204 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10205 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10206 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10207 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 10: 194 => ((9 integer))
mem: ((9 integer)): 10208 <= 194
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10209 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 194
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1718 => ((11 byte-address))
mem: ((11 byte-address)): 10210 <= 1718
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => f
run: print-character/print-string/print-board/main 13: #\f => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1718 <= #\f
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 15
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: print-string/print-board/main 9: 15 => ((4 integer))
mem: ((4 integer)): 9738 <= 15
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9729 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10229 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10231 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10232 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10233 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10234 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10235 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10236 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10237 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10238 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 10: 195 => ((9 integer))
mem: ((9 integer)): 10239 <= 195
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10240 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 195
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1719 => ((11 byte-address))
mem: ((11 byte-address)): 10241 <= 1719
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1719 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 16
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: print-string/print-board/main 9: 16 => ((4 integer))
mem: ((4 integer)): 9738 <= 16
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9730 byte) (raw)) => g
run: print-string/print-board/main 7: #\g => ((6 character))
mem: ((6 character)): 9740 <= #\g
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => g
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10260 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\g)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10262 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\g)
run: print-character/print-string/print-board/main 2: #\g => ((2 character))
mem: ((2 character)): 10263 <= #\g
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\g)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10264 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\g)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10265 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10266 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10267 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10268 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10269 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 10: 196 => ((9 integer))
mem: ((9 integer)): 10270 <= 196
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10271 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 196
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1720 => ((11 byte-address))
mem: ((11 byte-address)): 10272 <= 1720
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => g
run: print-character/print-string/print-board/main 13: #\g => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1720 <= #\g
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 17
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: print-string/print-board/main 9: 17 => ((4 integer))
mem: ((4 integer)): 9738 <= 17
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9731 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9740 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10291 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\space)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10293 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10294 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10295 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10296 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10297 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10298 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10299 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10300 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 10: 197 => ((9 integer))
mem: ((9 integer)): 10301 <= 197
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10302 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 197
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1721 => ((11 byte-address))
mem: ((11 byte-address)): 10303 <= 1721
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1721 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 18
run: print-character/print-string/print-board/main 15: (((reply)))
schedule: scheduling print-string/print-board/main for further processing
schedule: print-string/print-board/main
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: print-string/print-board/main 9: 18 => ((4 integer))
mem: ((4 integer)): 9738 <= 18
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9739 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((9713 string) (raw))
mem: ((9713 integer) (raw)) => 19
mem: ((9732 byte) (raw)) => h
run: print-string/print-board/main 7: #\h => ((6 character))
mem: ((6 character)): 9740 <= #\h
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1518
mem: ((6 character)) => h
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10322 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518 #\h)
run: print-character/print-string/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10324 <= 1518
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1518 #\h)
run: print-character/print-string/print-board/main 2: #\h => ((2 character))
mem: ((2 character)): 10325 <= #\h
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1518 #\h)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10326 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1518 #\h)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10327 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1518
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1520 => ((5 integer-address))
mem: ((5 integer-address)): 10328 <= 1520
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1521 => ((6 integer-address))
mem: ((6 integer-address)): 10329 <= 1521
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1519 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10330 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10331 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 10: 198 => ((9 integer))
mem: ((9 integer)): 10332 <= 198
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: print-character/print-string/print-board/main 11: 1523 => ((10 string-address))
mem: ((10 string-address)): 10333 <= 1523
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 198
array-len: ((1523 string) (raw))
mem: ((1523 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1722 => ((11 byte-address))
mem: ((11 byte-address)): 10334 <= 1722
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => h
run: print-character/print-string/print-board/main 13: #\h => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1722 <= #\h
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1521 <= 19
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: print-string/print-board/main 9: 19 => ((4 integer))
mem: ((4 integer)): 9738 <= 19
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 9739 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 27: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 10353 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1518)
run: cursor-to-next-line/print-board/main 1: 1518 => ((1 terminal-address))
mem: ((1 terminal-address)): 10355 <= 1518
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1518
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1520 => ((2 integer-address))
mem: ((2 integer-address)): 10356 <= 1520
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 9
run: cursor-to-next-line/print-board/main 4: 10 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1520 <= 10
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1521 => ((3 integer-address))
mem: ((3 integer-address)): 10357 <= 1521
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1521 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: main 5: (((1 string-address) (raw)) <- ((get)) ((3 terminal-address) (deref)) ((4 offset)))
mem: ((1522 string-address) (raw)) => 1523
run: main 5: 1523 => ((1 string-address) (raw))
mem: ((1 string-address) (raw)): 1 <= 1523
schedule: done with routine nil
