schedule: main
run: 1 main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2 main 1: (((1 list-address)) <- ((init-list)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
run: 3 init-list 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4 init-list 1: (((1 list-address)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1062 => ((1 list-address))
setm: ((1 list-address)) <= 1062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1033 to 1062
run: 5 init-list 2: (((2 list-address)) <- ((copy)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1062 => ((2 list-address))
setm: ((2 list-address)) <= 1062
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1062
run: 6 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 0 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\R => ((3 integer))
setm: ((3 integer)) <= #\R
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\R
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 7 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 8 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1064 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1064
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1064
run: 9 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1065 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1065
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1064 to 1065
run: 10 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 11 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1068 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 12 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 list-address))
setm: ((1 list-address)) <= 1062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1070 to 1062
run: 13 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1064 list-address) (raw))
sizeof: ((1064 list-address) (raw))
run: 1065 => ((2 list-address))
setm: ((2 list-address)) <= 1065
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1071 to 1065
run: 14 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1065 => ((2 list-address))
setm: ((2 list-address)) <= 1065
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1065
run: 15 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 16 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1099 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 17 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1101 to 1065
run: 18 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1065 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1065
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1102 to 1065
run: 19 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1065 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1065
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1065
run: 20 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\R)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\R))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1065 to integer
setm: ((6 tagged-value-address) (deref)): setting 1066 to #\R
run: 21 init-list 10: (((jump)) ((-8 offset)))
run: 22 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 1 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 23 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 24 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1067 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1067
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1067
run: 25 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1130 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1130
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1067 to 1130
run: 26 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 27 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1133 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 28 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1135 to 1065
run: 29 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1067 list-address) (raw))
sizeof: ((1067 list-address) (raw))
run: 1130 => ((2 list-address))
setm: ((2 list-address)) <= 1130
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1136 to 1130
run: 30 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1130 => ((2 list-address))
setm: ((2 list-address)) <= 1130
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1130
run: 31 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 32 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1164 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 33 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: 1130 => ((1 list-address))
setm: ((1 list-address)) <= 1130
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1166 to 1130
run: 34 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1130 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1130
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1167 to 1130
run: 35 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1130 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1130
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1130
run: 36 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1130 to integer
setm: ((6 tagged-value-address) (deref)): setting 1131 to #\P
run: 37 init-list 10: (((jump)) ((-8 offset)))
run: 38 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 2 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 39 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 40 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1132 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1132
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1132
run: 41 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1195 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1195
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1132 to 1195
run: 42 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 43 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1198 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 44 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: 1130 => ((1 list-address))
setm: ((1 list-address)) <= 1130
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1200 to 1130
run: 45 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1132 list-address) (raw))
sizeof: ((1132 list-address) (raw))
run: 1195 => ((2 list-address))
setm: ((2 list-address)) <= 1195
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1201 to 1195
run: 46 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1195 => ((2 list-address))
setm: ((2 list-address)) <= 1195
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1195
run: 47 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 48 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1229 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 49 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: 1195 => ((1 list-address))
setm: ((1 list-address)) <= 1195
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1231 to 1195
run: 50 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1195 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1195
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1232 to 1195
run: 51 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1195 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1195
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1195
run: 52 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1195 to integer
setm: ((6 tagged-value-address) (deref)): setting 1196 to #\_
run: 53 init-list 10: (((jump)) ((-8 offset)))
run: 54 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 3 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 55 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 56 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1197 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1197
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1197
run: 57 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1260 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1260
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1197 to 1260
run: 58 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 59 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1263 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 60 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: 1195 => ((1 list-address))
setm: ((1 list-address)) <= 1195
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1265 to 1195
run: 61 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1197 list-address) (raw))
sizeof: ((1197 list-address) (raw))
run: 1260 => ((2 list-address))
setm: ((2 list-address)) <= 1260
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1266 to 1260
run: 62 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1260 => ((2 list-address))
setm: ((2 list-address)) <= 1260
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1260
run: 63 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 64 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1294 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 65 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: 1260 => ((1 list-address))
setm: ((1 list-address)) <= 1260
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1296 to 1260
run: 66 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1260 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1260
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1297 to 1260
run: 67 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1260 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1260
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1260
run: 68 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1260 to integer
setm: ((6 tagged-value-address) (deref)): setting 1261 to #\_
run: 69 init-list 10: (((jump)) ((-8 offset)))
run: 70 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 4 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 71 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 72 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1262 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1262
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1262
run: 73 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1325 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1325
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1262 to 1325
run: 74 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 75 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1328 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 76 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: 1260 => ((1 list-address))
setm: ((1 list-address)) <= 1260
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1330 to 1260
run: 77 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1262 list-address) (raw))
sizeof: ((1262 list-address) (raw))
run: 1325 => ((2 list-address))
setm: ((2 list-address)) <= 1325
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1331 to 1325
run: 78 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1325 => ((2 list-address))
setm: ((2 list-address)) <= 1325
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1325
run: 79 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 80 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1359 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 81 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: 1325 => ((1 list-address))
setm: ((1 list-address)) <= 1325
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1361 to 1325
run: 82 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1325 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1325
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1362 to 1325
run: 83 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1325 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1325
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1325
run: 84 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1325 to integer
setm: ((6 tagged-value-address) (deref)): setting 1326 to #\_
run: 85 init-list 10: (((jump)) ((-8 offset)))
run: 86 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 5 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 87 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 88 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1327 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1327
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1327
run: 89 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1390 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1390
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1327 to 1390
run: 90 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 91 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1393 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 92 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: 1325 => ((1 list-address))
setm: ((1 list-address)) <= 1325
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1395 to 1325
run: 93 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1327 list-address) (raw))
sizeof: ((1327 list-address) (raw))
run: 1390 => ((2 list-address))
setm: ((2 list-address)) <= 1390
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1396 to 1390
run: 94 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1390 => ((2 list-address))
setm: ((2 list-address)) <= 1390
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1390
run: 95 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 96 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1424 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 97 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: 1390 => ((1 list-address))
setm: ((1 list-address)) <= 1390
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1426 to 1390
run: 98 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1390 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1390
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1427 to 1390
run: 99 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1390 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1390
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1390
run: 100 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1390 to integer
setm: ((6 tagged-value-address) (deref)): setting 1391 to #\_
run: 101 init-list 10: (((jump)) ((-8 offset)))
run: 102 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 6 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 103 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 104 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1392 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1392
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1392
run: 105 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1455 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1455
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1392 to 1455
run: 106 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 107 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1458 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 108 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: 1390 => ((1 list-address))
setm: ((1 list-address)) <= 1390
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1460 to 1390
run: 109 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1392 list-address) (raw))
sizeof: ((1392 list-address) (raw))
run: 1455 => ((2 list-address))
setm: ((2 list-address)) <= 1455
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1461 to 1455
run: 110 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1455 => ((2 list-address))
setm: ((2 list-address)) <= 1455
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1455
run: 111 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 112 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1489 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 113 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: 1455 => ((1 list-address))
setm: ((1 list-address)) <= 1455
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1491 to 1455
run: 114 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1455 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1455
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1492 to 1455
run: 115 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1455 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1455
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1455
run: 116 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1455 to integer
setm: ((6 tagged-value-address) (deref)): setting 1456 to #\p
run: 117 init-list 10: (((jump)) ((-8 offset)))
run: 118 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 7 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\r => ((3 integer))
setm: ((3 integer)) <= #\r
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\r
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 119 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 120 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1457 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1457
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1457
run: 121 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1520 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1520
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1457 to 1520
run: 122 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 123 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1523 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 124 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: 1455 => ((1 list-address))
setm: ((1 list-address)) <= 1455
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1525 to 1455
run: 125 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1457 list-address) (raw))
sizeof: ((1457 list-address) (raw))
run: 1520 => ((2 list-address))
setm: ((2 list-address)) <= 1520
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1526 to 1520
run: 126 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1520 => ((2 list-address))
setm: ((2 list-address)) <= 1520
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1520
run: 127 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 128 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1554 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 129 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: 1520 => ((1 list-address))
setm: ((1 list-address)) <= 1520
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1556 to 1520
run: 130 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1520 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1520
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1557 to 1520
run: 131 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1520 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1520
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1520
run: 132 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\r)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\r))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1520 to integer
setm: ((6 tagged-value-address) (deref)): setting 1521 to #\r
run: 133 init-list 10: (((jump)) ((-8 offset)))
run: 134 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 8 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\N => ((3 integer))
setm: ((3 integer)) <= #\N
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\N
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 135 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 136 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1522 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1522
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1522
run: 137 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1585 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1585
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1522 to 1585
run: 138 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 139 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1588 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 140 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: 1520 => ((1 list-address))
setm: ((1 list-address)) <= 1520
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1590 to 1520
run: 141 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1522 list-address) (raw))
sizeof: ((1522 list-address) (raw))
run: 1585 => ((2 list-address))
setm: ((2 list-address)) <= 1585
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1591 to 1585
run: 142 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1585 => ((2 list-address))
setm: ((2 list-address)) <= 1585
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1585
run: 143 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 144 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1619 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 145 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: 1585 => ((1 list-address))
setm: ((1 list-address)) <= 1585
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1621 to 1585
run: 146 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1585 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1585
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1622 to 1585
run: 147 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1585 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1585
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1585
run: 148 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\N)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\N))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1585 to integer
setm: ((6 tagged-value-address) (deref)): setting 1586 to #\N
run: 149 init-list 10: (((jump)) ((-8 offset)))
run: 150 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 9 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 151 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 152 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1587 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1587
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1587
run: 153 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1650 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1650
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1587 to 1650
run: 154 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 155 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1653 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 156 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: 1585 => ((1 list-address))
setm: ((1 list-address)) <= 1585
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1655 to 1585
run: 157 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1587 list-address) (raw))
sizeof: ((1587 list-address) (raw))
run: 1650 => ((2 list-address))
setm: ((2 list-address)) <= 1650
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1656 to 1650
run: 158 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1650 => ((2 list-address))
setm: ((2 list-address)) <= 1650
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1650
run: 159 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 160 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1684 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 161 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: 1650 => ((1 list-address))
setm: ((1 list-address)) <= 1650
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1686 to 1650
run: 162 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1650 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1650
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1687 to 1650
run: 163 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1650 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1650
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1650
run: 164 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1650 to integer
setm: ((6 tagged-value-address) (deref)): setting 1651 to #\P
run: 165 init-list 10: (((jump)) ((-8 offset)))
run: 166 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 10 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 167 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 168 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1652 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1652
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1652
run: 169 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1715 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1715
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1652 to 1715
run: 170 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 171 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1718 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 172 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: 1650 => ((1 list-address))
setm: ((1 list-address)) <= 1650
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1720 to 1650
run: 173 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1652 list-address) (raw))
sizeof: ((1652 list-address) (raw))
run: 1715 => ((2 list-address))
setm: ((2 list-address)) <= 1715
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1721 to 1715
run: 174 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1715 => ((2 list-address))
setm: ((2 list-address)) <= 1715
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1715
run: 175 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 176 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1749 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 177 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: 1715 => ((1 list-address))
setm: ((1 list-address)) <= 1715
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1751 to 1715
run: 178 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1715 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1715
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1752 to 1715
run: 179 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1715 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1715
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1715
run: 180 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1715 to integer
setm: ((6 tagged-value-address) (deref)): setting 1716 to #\_
run: 181 init-list 10: (((jump)) ((-8 offset)))
run: 182 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 11 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 183 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 184 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1717 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1717
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1717
run: 185 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1780 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1780
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1717 to 1780
run: 186 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 187 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1783 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 188 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: 1715 => ((1 list-address))
setm: ((1 list-address)) <= 1715
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1785 to 1715
run: 189 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1717 list-address) (raw))
sizeof: ((1717 list-address) (raw))
run: 1780 => ((2 list-address))
setm: ((2 list-address)) <= 1780
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1786 to 1780
run: 190 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1780 => ((2 list-address))
setm: ((2 list-address)) <= 1780
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1780
run: 191 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 192 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1814 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 193 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: 1780 => ((1 list-address))
setm: ((1 list-address)) <= 1780
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1816 to 1780
run: 194 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1780 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1780
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1817 to 1780
run: 195 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1780 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1780
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1780
run: 196 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1780 to integer
setm: ((6 tagged-value-address) (deref)): setting 1781 to #\_
run: 197 init-list 10: (((jump)) ((-8 offset)))
run: 198 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 12 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 199 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 200 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1782 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1782
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1782
run: 201 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1845 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1845
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1782 to 1845
run: 202 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 203 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1848 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 204 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: 1780 => ((1 list-address))
setm: ((1 list-address)) <= 1780
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1850 to 1780
run: 205 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1782 list-address) (raw))
sizeof: ((1782 list-address) (raw))
run: 1845 => ((2 list-address))
setm: ((2 list-address)) <= 1845
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1851 to 1845
run: 206 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1845 => ((2 list-address))
setm: ((2 list-address)) <= 1845
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1845
run: 207 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 208 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1879 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 209 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: 1845 => ((1 list-address))
setm: ((1 list-address)) <= 1845
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1881 to 1845
run: 210 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1845 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1845
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1882 to 1845
run: 211 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1845 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1845
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1845
run: 212 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1845 to integer
setm: ((6 tagged-value-address) (deref)): setting 1846 to #\_
run: 213 init-list 10: (((jump)) ((-8 offset)))
run: 214 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 13 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 215 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 216 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1847 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1847
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1847
run: 217 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1910 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1910
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1847 to 1910
run: 218 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 219 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1913 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 220 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: 1845 => ((1 list-address))
setm: ((1 list-address)) <= 1845
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1915 to 1845
run: 221 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1847 list-address) (raw))
sizeof: ((1847 list-address) (raw))
run: 1910 => ((2 list-address))
setm: ((2 list-address)) <= 1910
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1916 to 1910
run: 222 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1910 => ((2 list-address))
setm: ((2 list-address)) <= 1910
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1910
run: 223 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 224 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1944 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 225 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: 1910 => ((1 list-address))
setm: ((1 list-address)) <= 1910
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1946 to 1910
run: 226 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1910 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1910
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1947 to 1910
run: 227 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1910 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1910
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1910
run: 228 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1910 to integer
setm: ((6 tagged-value-address) (deref)): setting 1911 to #\_
run: 229 init-list 10: (((jump)) ((-8 offset)))
run: 230 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 14 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 231 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 232 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1912 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1912
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1912
run: 233 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1975 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1975
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1912 to 1975
run: 234 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 235 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1978 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 236 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: 1910 => ((1 list-address))
setm: ((1 list-address)) <= 1910
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1980 to 1910
run: 237 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1912 list-address) (raw))
sizeof: ((1912 list-address) (raw))
run: 1975 => ((2 list-address))
setm: ((2 list-address)) <= 1975
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1981 to 1975
run: 238 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1975 => ((2 list-address))
setm: ((2 list-address)) <= 1975
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 1975
run: 239 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 240 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2009 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 241 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: 1975 => ((1 list-address))
setm: ((1 list-address)) <= 1975
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2011 to 1975
run: 242 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1975 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1975
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2012 to 1975
run: 243 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1975 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1975
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 1975
run: 244 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1975 to integer
setm: ((6 tagged-value-address) (deref)): setting 1976 to #\p
run: 245 init-list 10: (((jump)) ((-8 offset)))
run: 246 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 15 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\n => ((3 integer))
setm: ((3 integer)) <= #\n
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\n
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 247 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 248 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1977 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1977
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 1977
run: 249 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2040 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2040
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1977 to 2040
run: 250 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 251 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2043 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 252 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: 1975 => ((1 list-address))
setm: ((1 list-address)) <= 1975
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2045 to 1975
run: 253 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1977 list-address) (raw))
sizeof: ((1977 list-address) (raw))
run: 2040 => ((2 list-address))
setm: ((2 list-address)) <= 2040
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2046 to 2040
run: 254 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2040 => ((2 list-address))
setm: ((2 list-address)) <= 2040
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2040
run: 255 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 256 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2074 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 257 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: 2040 => ((1 list-address))
setm: ((1 list-address)) <= 2040
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2076 to 2040
run: 258 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2040 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2040
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2077 to 2040
run: 259 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2040 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2040
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2040
run: 260 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\n)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\n))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2040 to integer
setm: ((6 tagged-value-address) (deref)): setting 2041 to #\n
run: 261 init-list 10: (((jump)) ((-8 offset)))
run: 262 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 16 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\B => ((3 integer))
setm: ((3 integer)) <= #\B
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\B
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 263 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 264 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2042 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2042
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2042
run: 265 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2105 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2105
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2042 to 2105
run: 266 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 267 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2108 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 268 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: 2040 => ((1 list-address))
setm: ((1 list-address)) <= 2040
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2110 to 2040
run: 269 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2042 list-address) (raw))
sizeof: ((2042 list-address) (raw))
run: 2105 => ((2 list-address))
setm: ((2 list-address)) <= 2105
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2111 to 2105
run: 270 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2105 => ((2 list-address))
setm: ((2 list-address)) <= 2105
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2105
run: 271 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 272 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2139 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 273 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: 2105 => ((1 list-address))
setm: ((1 list-address)) <= 2105
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2141 to 2105
run: 274 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2105 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2105
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2142 to 2105
run: 275 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2105 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2105
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2105
run: 276 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\B)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\B))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2105 to integer
setm: ((6 tagged-value-address) (deref)): setting 2106 to #\B
run: 277 init-list 10: (((jump)) ((-8 offset)))
run: 278 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 17 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 279 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 280 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2107 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2107
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2107
run: 281 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2170 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2170
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2107 to 2170
run: 282 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 283 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2173 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 284 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: 2105 => ((1 list-address))
setm: ((1 list-address)) <= 2105
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2175 to 2105
run: 285 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2107 list-address) (raw))
sizeof: ((2107 list-address) (raw))
run: 2170 => ((2 list-address))
setm: ((2 list-address)) <= 2170
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2176 to 2170
run: 286 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2170 => ((2 list-address))
setm: ((2 list-address)) <= 2170
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2170
run: 287 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 288 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2204 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 289 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: 2170 => ((1 list-address))
setm: ((1 list-address)) <= 2170
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2206 to 2170
run: 290 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2170 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2170
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2207 to 2170
run: 291 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2170 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2170
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2170
run: 292 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2170 to integer
setm: ((6 tagged-value-address) (deref)): setting 2171 to #\P
run: 293 init-list 10: (((jump)) ((-8 offset)))
run: 294 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 18 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 295 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 296 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2172 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2172
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2172
run: 297 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2235 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2235
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2172 to 2235
run: 298 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 299 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2238 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 300 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: 2170 => ((1 list-address))
setm: ((1 list-address)) <= 2170
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2240 to 2170
run: 301 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2172 list-address) (raw))
sizeof: ((2172 list-address) (raw))
run: 2235 => ((2 list-address))
setm: ((2 list-address)) <= 2235
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2241 to 2235
run: 302 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2235 => ((2 list-address))
setm: ((2 list-address)) <= 2235
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2235
run: 303 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 304 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2269 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 305 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: 2235 => ((1 list-address))
setm: ((1 list-address)) <= 2235
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2271 to 2235
run: 306 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2235 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2235
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2272 to 2235
run: 307 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2235 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2235
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2235
run: 308 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2235 to integer
setm: ((6 tagged-value-address) (deref)): setting 2236 to #\_
run: 309 init-list 10: (((jump)) ((-8 offset)))
run: 310 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 19 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 311 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 312 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2237 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2237
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2237
run: 313 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2300 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2300
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2237 to 2300
run: 314 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 315 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2303 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 316 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: 2235 => ((1 list-address))
setm: ((1 list-address)) <= 2235
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2305 to 2235
run: 317 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2237 list-address) (raw))
sizeof: ((2237 list-address) (raw))
run: 2300 => ((2 list-address))
setm: ((2 list-address)) <= 2300
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2306 to 2300
run: 318 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2300 => ((2 list-address))
setm: ((2 list-address)) <= 2300
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2300
run: 319 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 320 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2334 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 321 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: 2300 => ((1 list-address))
setm: ((1 list-address)) <= 2300
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2336 to 2300
run: 322 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2300 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2300
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2337 to 2300
run: 323 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2300 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2300
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2300
run: 324 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2300 to integer
setm: ((6 tagged-value-address) (deref)): setting 2301 to #\_
run: 325 init-list 10: (((jump)) ((-8 offset)))
run: 326 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 20 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 327 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 328 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2302 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2302
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2302
run: 329 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2365 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2365
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2302 to 2365
run: 330 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 331 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2368 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 332 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: 2300 => ((1 list-address))
setm: ((1 list-address)) <= 2300
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2370 to 2300
run: 333 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2302 list-address) (raw))
sizeof: ((2302 list-address) (raw))
run: 2365 => ((2 list-address))
setm: ((2 list-address)) <= 2365
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2371 to 2365
run: 334 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2365 => ((2 list-address))
setm: ((2 list-address)) <= 2365
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2365
run: 335 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 336 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2399 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 337 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: 2365 => ((1 list-address))
setm: ((1 list-address)) <= 2365
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2401 to 2365
run: 338 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2365 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2365
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2402 to 2365
run: 339 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2365 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2365
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2365
run: 340 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2365 to integer
setm: ((6 tagged-value-address) (deref)): setting 2366 to #\_
run: 341 init-list 10: (((jump)) ((-8 offset)))
run: 342 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 21 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 343 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 344 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2367 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2367
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2367
run: 345 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2430 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2430
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2367 to 2430
run: 346 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 347 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2433 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 348 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: 2365 => ((1 list-address))
setm: ((1 list-address)) <= 2365
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2435 to 2365
run: 349 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2367 list-address) (raw))
sizeof: ((2367 list-address) (raw))
run: 2430 => ((2 list-address))
setm: ((2 list-address)) <= 2430
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2436 to 2430
run: 350 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2430 => ((2 list-address))
setm: ((2 list-address)) <= 2430
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2430
run: 351 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 352 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2464 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 353 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: 2430 => ((1 list-address))
setm: ((1 list-address)) <= 2430
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2466 to 2430
run: 354 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2430 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2430
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2467 to 2430
run: 355 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2430 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2430
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2430
run: 356 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2430 to integer
setm: ((6 tagged-value-address) (deref)): setting 2431 to #\_
run: 357 init-list 10: (((jump)) ((-8 offset)))
run: 358 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 22 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 359 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 360 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2432 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2432
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2432
run: 361 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2495 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2495
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2432 to 2495
run: 362 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 363 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2498 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 364 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: 2430 => ((1 list-address))
setm: ((1 list-address)) <= 2430
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2500 to 2430
run: 365 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2432 list-address) (raw))
sizeof: ((2432 list-address) (raw))
run: 2495 => ((2 list-address))
setm: ((2 list-address)) <= 2495
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2501 to 2495
run: 366 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2495 => ((2 list-address))
setm: ((2 list-address)) <= 2495
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2495
run: 367 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 368 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2529 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 369 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: 2495 => ((1 list-address))
setm: ((1 list-address)) <= 2495
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2531 to 2495
run: 370 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2495 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2495
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2532 to 2495
run: 371 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2495 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2495
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2495
run: 372 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2495 to integer
setm: ((6 tagged-value-address) (deref)): setting 2496 to #\p
run: 373 init-list 10: (((jump)) ((-8 offset)))
run: 374 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 23 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\b => ((3 integer))
setm: ((3 integer)) <= #\b
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\b
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 375 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 376 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2497 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2497
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2497
run: 377 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2560 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2560
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2497 to 2560
run: 378 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 379 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2563 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 380 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: 2495 => ((1 list-address))
setm: ((1 list-address)) <= 2495
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2565 to 2495
run: 381 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2497 list-address) (raw))
sizeof: ((2497 list-address) (raw))
run: 2560 => ((2 list-address))
setm: ((2 list-address)) <= 2560
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2566 to 2560
run: 382 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2560 => ((2 list-address))
setm: ((2 list-address)) <= 2560
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2560
run: 383 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 384 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2594 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 385 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: 2560 => ((1 list-address))
setm: ((1 list-address)) <= 2560
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2596 to 2560
run: 386 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2560 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2560
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2597 to 2560
run: 387 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2560 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2560
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2560
run: 388 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\b)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\b))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2560 to integer
setm: ((6 tagged-value-address) (deref)): setting 2561 to #\b
run: 389 init-list 10: (((jump)) ((-8 offset)))
run: 390 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 24 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\Q => ((3 integer))
setm: ((3 integer)) <= #\Q
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\Q
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 391 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 392 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2562 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2562
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2562
run: 393 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2625 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2625
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2562 to 2625
run: 394 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 395 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2628 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 396 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: 2560 => ((1 list-address))
setm: ((1 list-address)) <= 2560
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2630 to 2560
run: 397 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2562 list-address) (raw))
sizeof: ((2562 list-address) (raw))
run: 2625 => ((2 list-address))
setm: ((2 list-address)) <= 2625
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2631 to 2625
run: 398 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2625 => ((2 list-address))
setm: ((2 list-address)) <= 2625
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2625
run: 399 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 400 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2659 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 401 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: 2625 => ((1 list-address))
setm: ((1 list-address)) <= 2625
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2661 to 2625
run: 402 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2625 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2625
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2662 to 2625
run: 403 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2625 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2625
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2625
run: 404 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\Q)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\Q))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2625 to integer
setm: ((6 tagged-value-address) (deref)): setting 2626 to #\Q
run: 405 init-list 10: (((jump)) ((-8 offset)))
run: 406 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 25 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 407 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 408 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2627 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2627
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2627
run: 409 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2690 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2690
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2627 to 2690
run: 410 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 411 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2693 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 412 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: 2625 => ((1 list-address))
setm: ((1 list-address)) <= 2625
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2695 to 2625
run: 413 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2627 list-address) (raw))
sizeof: ((2627 list-address) (raw))
run: 2690 => ((2 list-address))
setm: ((2 list-address)) <= 2690
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2696 to 2690
run: 414 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2690 => ((2 list-address))
setm: ((2 list-address)) <= 2690
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2690
run: 415 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 416 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2724 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 417 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: 2690 => ((1 list-address))
setm: ((1 list-address)) <= 2690
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2726 to 2690
run: 418 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2690 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2690
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2727 to 2690
run: 419 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2690 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2690
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2690
run: 420 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2690 to integer
setm: ((6 tagged-value-address) (deref)): setting 2691 to #\P
run: 421 init-list 10: (((jump)) ((-8 offset)))
run: 422 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 26 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 423 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 424 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2692 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2692
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2692
run: 425 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2755 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2755
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2692 to 2755
run: 426 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 427 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2758 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 428 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: 2690 => ((1 list-address))
setm: ((1 list-address)) <= 2690
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2760 to 2690
run: 429 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2692 list-address) (raw))
sizeof: ((2692 list-address) (raw))
run: 2755 => ((2 list-address))
setm: ((2 list-address)) <= 2755
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2761 to 2755
run: 430 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2755 => ((2 list-address))
setm: ((2 list-address)) <= 2755
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2755
run: 431 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 432 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2789 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 433 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: 2755 => ((1 list-address))
setm: ((1 list-address)) <= 2755
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2791 to 2755
run: 434 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2755 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2755
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2792 to 2755
run: 435 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2755 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2755
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2755
run: 436 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2755 to integer
setm: ((6 tagged-value-address) (deref)): setting 2756 to #\_
run: 437 init-list 10: (((jump)) ((-8 offset)))
run: 438 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 27 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 439 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 440 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2757 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2757
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2757
run: 441 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2820 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2820
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2757 to 2820
run: 442 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 443 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2823 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 444 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: 2755 => ((1 list-address))
setm: ((1 list-address)) <= 2755
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2825 to 2755
run: 445 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2757 list-address) (raw))
sizeof: ((2757 list-address) (raw))
run: 2820 => ((2 list-address))
setm: ((2 list-address)) <= 2820
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2826 to 2820
run: 446 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2820 => ((2 list-address))
setm: ((2 list-address)) <= 2820
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2820
run: 447 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 448 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2854 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 449 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: 2820 => ((1 list-address))
setm: ((1 list-address)) <= 2820
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2856 to 2820
run: 450 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2820 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2820
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2857 to 2820
run: 451 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2820 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2820
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2820
run: 452 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2820 to integer
setm: ((6 tagged-value-address) (deref)): setting 2821 to #\_
run: 453 init-list 10: (((jump)) ((-8 offset)))
run: 454 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 28 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 455 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 456 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2822 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2822
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2822
run: 457 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2885 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2885
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2822 to 2885
run: 458 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 459 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2888 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 460 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: 2820 => ((1 list-address))
setm: ((1 list-address)) <= 2820
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2890 to 2820
run: 461 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2822 list-address) (raw))
sizeof: ((2822 list-address) (raw))
run: 2885 => ((2 list-address))
setm: ((2 list-address)) <= 2885
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2891 to 2885
run: 462 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2885 => ((2 list-address))
setm: ((2 list-address)) <= 2885
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2885
run: 463 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 464 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2919 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 465 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: 2885 => ((1 list-address))
setm: ((1 list-address)) <= 2885
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2921 to 2885
run: 466 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2885 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2885
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2922 to 2885
run: 467 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2885 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2885
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2885
run: 468 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2885 to integer
setm: ((6 tagged-value-address) (deref)): setting 2886 to #\_
run: 469 init-list 10: (((jump)) ((-8 offset)))
run: 470 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 29 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 471 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 472 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2887 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2887
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2887
run: 473 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 2950 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 2950
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2887 to 2950
run: 474 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 475 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2953 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 476 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: 2885 => ((1 list-address))
setm: ((1 list-address)) <= 2885
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2955 to 2885
run: 477 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2887 list-address) (raw))
sizeof: ((2887 list-address) (raw))
run: 2950 => ((2 list-address))
setm: ((2 list-address)) <= 2950
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 2956 to 2950
run: 478 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 2950 => ((2 list-address))
setm: ((2 list-address)) <= 2950
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 2950
run: 479 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 480 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 2984 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 481 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: 2950 => ((1 list-address))
setm: ((1 list-address)) <= 2950
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 2986 to 2950
run: 482 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2950 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2950
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 2987 to 2950
run: 483 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 2950 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 2950
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 2950
run: 484 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 2950 to integer
setm: ((6 tagged-value-address) (deref)): setting 2951 to #\_
run: 485 init-list 10: (((jump)) ((-8 offset)))
run: 486 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 30 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 487 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 488 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2952 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 2952
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 2952
run: 489 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3015 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3015
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 2952 to 3015
run: 490 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 491 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3018 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 492 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: 2950 => ((1 list-address))
setm: ((1 list-address)) <= 2950
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3020 to 2950
run: 493 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2952 list-address) (raw))
sizeof: ((2952 list-address) (raw))
run: 3015 => ((2 list-address))
setm: ((2 list-address)) <= 3015
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3021 to 3015
run: 494 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3015 => ((2 list-address))
setm: ((2 list-address)) <= 3015
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3015
run: 495 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 496 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3049 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 497 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: 3015 => ((1 list-address))
setm: ((1 list-address)) <= 3015
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3051 to 3015
run: 498 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3015 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3015
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3052 to 3015
run: 499 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3015 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3015
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3015
run: 500 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3015 to integer
setm: ((6 tagged-value-address) (deref)): setting 3016 to #\p
schedule: scheduling init-list/main for further processing
schedule: init-list/main
run: 501 init-list 10: (((jump)) ((-8 offset)))
run: 502 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 31 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\q => ((3 integer))
setm: ((3 integer)) <= #\q
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\q
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 503 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 504 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3017 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3017
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3017
run: 505 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3080 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3080
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3017 to 3080
run: 506 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 507 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3083 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 508 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: 3015 => ((1 list-address))
setm: ((1 list-address)) <= 3015
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3085 to 3015
run: 509 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3017 list-address) (raw))
sizeof: ((3017 list-address) (raw))
run: 3080 => ((2 list-address))
setm: ((2 list-address)) <= 3080
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3086 to 3080
run: 510 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3080 => ((2 list-address))
setm: ((2 list-address)) <= 3080
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3080
run: 511 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 512 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3114 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 513 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: 3080 => ((1 list-address))
setm: ((1 list-address)) <= 3080
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3116 to 3080
run: 514 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3080 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3080
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3117 to 3080
run: 515 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3080 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3080
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3080
run: 516 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\q)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\q))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3080 to integer
setm: ((6 tagged-value-address) (deref)): setting 3081 to #\q
run: 517 init-list 10: (((jump)) ((-8 offset)))
run: 518 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 32 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\K => ((3 integer))
setm: ((3 integer)) <= #\K
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\K
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 519 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 520 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3082 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3082
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3082
run: 521 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3145 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3145
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3082 to 3145
run: 522 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 523 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3148 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 524 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: 3080 => ((1 list-address))
setm: ((1 list-address)) <= 3080
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3150 to 3080
run: 525 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3082 list-address) (raw))
sizeof: ((3082 list-address) (raw))
run: 3145 => ((2 list-address))
setm: ((2 list-address)) <= 3145
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3151 to 3145
run: 526 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3145 => ((2 list-address))
setm: ((2 list-address)) <= 3145
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3145
run: 527 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 528 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3179 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 529 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: 3145 => ((1 list-address))
setm: ((1 list-address)) <= 3145
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3181 to 3145
run: 530 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3145 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3145
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3182 to 3145
run: 531 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3145 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3145
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3145
run: 532 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\K)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\K))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3145 to integer
setm: ((6 tagged-value-address) (deref)): setting 3146 to #\K
run: 533 init-list 10: (((jump)) ((-8 offset)))
run: 534 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 33 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 535 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 536 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3147 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3147
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3147
run: 537 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3210 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3210
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3147 to 3210
run: 538 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 539 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3213 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 540 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: 3145 => ((1 list-address))
setm: ((1 list-address)) <= 3145
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3215 to 3145
run: 541 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3147 list-address) (raw))
sizeof: ((3147 list-address) (raw))
run: 3210 => ((2 list-address))
setm: ((2 list-address)) <= 3210
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3216 to 3210
run: 542 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3210 => ((2 list-address))
setm: ((2 list-address)) <= 3210
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3210
run: 543 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 544 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3244 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 545 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: 3210 => ((1 list-address))
setm: ((1 list-address)) <= 3210
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3246 to 3210
run: 546 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3210 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3210
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3247 to 3210
run: 547 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3210 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3210
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3210
run: 548 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3210 to integer
setm: ((6 tagged-value-address) (deref)): setting 3211 to #\P
run: 549 init-list 10: (((jump)) ((-8 offset)))
run: 550 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 34 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 551 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 552 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3212 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3212
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3212
run: 553 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3275 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3275
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3212 to 3275
run: 554 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 555 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3278 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 556 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: 3210 => ((1 list-address))
setm: ((1 list-address)) <= 3210
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3280 to 3210
run: 557 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3212 list-address) (raw))
sizeof: ((3212 list-address) (raw))
run: 3275 => ((2 list-address))
setm: ((2 list-address)) <= 3275
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3281 to 3275
run: 558 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3275 => ((2 list-address))
setm: ((2 list-address)) <= 3275
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3275
run: 559 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 560 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3309 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 561 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: 3275 => ((1 list-address))
setm: ((1 list-address)) <= 3275
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3311 to 3275
run: 562 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3275 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3275
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3312 to 3275
run: 563 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3275 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3275
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3275
run: 564 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3275 to integer
setm: ((6 tagged-value-address) (deref)): setting 3276 to #\_
run: 565 init-list 10: (((jump)) ((-8 offset)))
run: 566 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 35 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 567 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 568 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3277 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3277
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3277
run: 569 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3340 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3340
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3277 to 3340
run: 570 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 571 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3343 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 572 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: 3275 => ((1 list-address))
setm: ((1 list-address)) <= 3275
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3345 to 3275
run: 573 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3277 list-address) (raw))
sizeof: ((3277 list-address) (raw))
run: 3340 => ((2 list-address))
setm: ((2 list-address)) <= 3340
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3346 to 3340
run: 574 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3340 => ((2 list-address))
setm: ((2 list-address)) <= 3340
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3340
run: 575 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 576 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3374 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 577 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: 3340 => ((1 list-address))
setm: ((1 list-address)) <= 3340
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3376 to 3340
run: 578 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3340 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3340
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3377 to 3340
run: 579 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3340 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3340
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3340
run: 580 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3340 to integer
setm: ((6 tagged-value-address) (deref)): setting 3341 to #\_
run: 581 init-list 10: (((jump)) ((-8 offset)))
run: 582 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 36 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 583 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 584 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3342 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3342
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3342
run: 585 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3405 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3405
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3342 to 3405
run: 586 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 587 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3408 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 588 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: 3340 => ((1 list-address))
setm: ((1 list-address)) <= 3340
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3410 to 3340
run: 589 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3342 list-address) (raw))
sizeof: ((3342 list-address) (raw))
run: 3405 => ((2 list-address))
setm: ((2 list-address)) <= 3405
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3411 to 3405
run: 590 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3405 => ((2 list-address))
setm: ((2 list-address)) <= 3405
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3405
run: 591 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 592 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3439 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 593 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: 3405 => ((1 list-address))
setm: ((1 list-address)) <= 3405
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3441 to 3405
run: 594 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3405 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3405
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3442 to 3405
run: 595 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3405 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3405
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3405
run: 596 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3405 to integer
setm: ((6 tagged-value-address) (deref)): setting 3406 to #\_
run: 597 init-list 10: (((jump)) ((-8 offset)))
run: 598 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 37 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 599 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 600 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3407 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3407
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3407
run: 601 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3470 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3470
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3407 to 3470
run: 602 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 603 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3473 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 604 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: 3405 => ((1 list-address))
setm: ((1 list-address)) <= 3405
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3475 to 3405
run: 605 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3407 list-address) (raw))
sizeof: ((3407 list-address) (raw))
run: 3470 => ((2 list-address))
setm: ((2 list-address)) <= 3470
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3476 to 3470
run: 606 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3470 => ((2 list-address))
setm: ((2 list-address)) <= 3470
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3470
run: 607 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 608 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3504 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 609 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: 3470 => ((1 list-address))
setm: ((1 list-address)) <= 3470
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3506 to 3470
run: 610 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3470 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3470
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3507 to 3470
run: 611 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3470 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3470
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3470
run: 612 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3470 to integer
setm: ((6 tagged-value-address) (deref)): setting 3471 to #\_
run: 613 init-list 10: (((jump)) ((-8 offset)))
run: 614 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 38 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 615 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 616 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3472 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3472
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3472
run: 617 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3535 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3535
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3472 to 3535
run: 618 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 619 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3538 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 620 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: 3470 => ((1 list-address))
setm: ((1 list-address)) <= 3470
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3540 to 3470
run: 621 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3472 list-address) (raw))
sizeof: ((3472 list-address) (raw))
run: 3535 => ((2 list-address))
setm: ((2 list-address)) <= 3535
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3541 to 3535
run: 622 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3535 => ((2 list-address))
setm: ((2 list-address)) <= 3535
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3535
run: 623 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 624 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3569 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 625 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: 3535 => ((1 list-address))
setm: ((1 list-address)) <= 3535
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3571 to 3535
run: 626 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3535 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3535
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3572 to 3535
run: 627 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3535 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3535
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3535
run: 628 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3535 to integer
setm: ((6 tagged-value-address) (deref)): setting 3536 to #\p
run: 629 init-list 10: (((jump)) ((-8 offset)))
run: 630 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 39 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\k => ((3 integer))
setm: ((3 integer)) <= #\k
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\k
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 631 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 632 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3537 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3537
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3537
run: 633 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3600 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3600
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3537 to 3600
run: 634 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 635 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3603 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 636 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: 3535 => ((1 list-address))
setm: ((1 list-address)) <= 3535
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3605 to 3535
run: 637 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3537 list-address) (raw))
sizeof: ((3537 list-address) (raw))
run: 3600 => ((2 list-address))
setm: ((2 list-address)) <= 3600
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3606 to 3600
run: 638 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3600 => ((2 list-address))
setm: ((2 list-address)) <= 3600
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3600
run: 639 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 640 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3634 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 641 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: 3600 => ((1 list-address))
setm: ((1 list-address)) <= 3600
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3636 to 3600
run: 642 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3600 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3600
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3637 to 3600
run: 643 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3600 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3600
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3600
run: 644 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\k)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\k))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3600 to integer
setm: ((6 tagged-value-address) (deref)): setting 3601 to #\k
run: 645 init-list 10: (((jump)) ((-8 offset)))
run: 646 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 40 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\B => ((3 integer))
setm: ((3 integer)) <= #\B
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\B
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 647 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 648 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3602 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3602
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3602
run: 649 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3665 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3665
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3602 to 3665
run: 650 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 651 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3668 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 652 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: 3600 => ((1 list-address))
setm: ((1 list-address)) <= 3600
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3670 to 3600
run: 653 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3602 list-address) (raw))
sizeof: ((3602 list-address) (raw))
run: 3665 => ((2 list-address))
setm: ((2 list-address)) <= 3665
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3671 to 3665
run: 654 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3665 => ((2 list-address))
setm: ((2 list-address)) <= 3665
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3665
run: 655 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 656 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3699 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 657 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: 3665 => ((1 list-address))
setm: ((1 list-address)) <= 3665
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3701 to 3665
run: 658 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3665 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3665
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3702 to 3665
run: 659 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3665 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3665
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3665
run: 660 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\B)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\B))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3665 to integer
setm: ((6 tagged-value-address) (deref)): setting 3666 to #\B
run: 661 init-list 10: (((jump)) ((-8 offset)))
run: 662 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 41 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 663 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 664 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3667 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3667
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3667
run: 665 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3730 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3730
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3667 to 3730
run: 666 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 667 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3733 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 668 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: 3665 => ((1 list-address))
setm: ((1 list-address)) <= 3665
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3735 to 3665
run: 669 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3667 list-address) (raw))
sizeof: ((3667 list-address) (raw))
run: 3730 => ((2 list-address))
setm: ((2 list-address)) <= 3730
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3736 to 3730
run: 670 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3730 => ((2 list-address))
setm: ((2 list-address)) <= 3730
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3730
run: 671 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 672 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3764 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 673 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: 3730 => ((1 list-address))
setm: ((1 list-address)) <= 3730
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3766 to 3730
run: 674 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3730 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3730
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3767 to 3730
run: 675 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3730 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3730
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3730
run: 676 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3730 to integer
setm: ((6 tagged-value-address) (deref)): setting 3731 to #\P
run: 677 init-list 10: (((jump)) ((-8 offset)))
run: 678 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 42 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 679 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 680 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3732 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3732
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3732
run: 681 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3795 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3795
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3732 to 3795
run: 682 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 683 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3798 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 684 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: 3730 => ((1 list-address))
setm: ((1 list-address)) <= 3730
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3800 to 3730
run: 685 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3732 list-address) (raw))
sizeof: ((3732 list-address) (raw))
run: 3795 => ((2 list-address))
setm: ((2 list-address)) <= 3795
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3801 to 3795
run: 686 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3795 => ((2 list-address))
setm: ((2 list-address)) <= 3795
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3795
run: 687 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 688 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3829 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 689 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: 3795 => ((1 list-address))
setm: ((1 list-address)) <= 3795
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3831 to 3795
run: 690 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3795 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3795
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3832 to 3795
run: 691 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3795 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3795
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3795
run: 692 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3795 to integer
setm: ((6 tagged-value-address) (deref)): setting 3796 to #\_
run: 693 init-list 10: (((jump)) ((-8 offset)))
run: 694 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 43 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 695 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 696 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3797 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3797
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3797
run: 697 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3860 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3860
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3797 to 3860
run: 698 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 699 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3863 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 700 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: 3795 => ((1 list-address))
setm: ((1 list-address)) <= 3795
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3865 to 3795
run: 701 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3797 list-address) (raw))
sizeof: ((3797 list-address) (raw))
run: 3860 => ((2 list-address))
setm: ((2 list-address)) <= 3860
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3866 to 3860
run: 702 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3860 => ((2 list-address))
setm: ((2 list-address)) <= 3860
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3860
run: 703 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 704 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3894 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 705 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: 3860 => ((1 list-address))
setm: ((1 list-address)) <= 3860
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3896 to 3860
run: 706 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3860 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3860
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3897 to 3860
run: 707 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3860 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3860
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3860
run: 708 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3860 to integer
setm: ((6 tagged-value-address) (deref)): setting 3861 to #\_
run: 709 init-list 10: (((jump)) ((-8 offset)))
run: 710 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 44 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 711 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 712 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3862 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3862
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3862
run: 713 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3925 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3925
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3862 to 3925
run: 714 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 715 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3928 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 716 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: 3860 => ((1 list-address))
setm: ((1 list-address)) <= 3860
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3930 to 3860
run: 717 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3862 list-address) (raw))
sizeof: ((3862 list-address) (raw))
run: 3925 => ((2 list-address))
setm: ((2 list-address)) <= 3925
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3931 to 3925
run: 718 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3925 => ((2 list-address))
setm: ((2 list-address)) <= 3925
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3925
run: 719 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 720 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3959 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 721 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: 3925 => ((1 list-address))
setm: ((1 list-address)) <= 3925
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3961 to 3925
run: 722 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3925 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3925
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 3962 to 3925
run: 723 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3925 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3925
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3925
run: 724 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3925 to integer
setm: ((6 tagged-value-address) (deref)): setting 3926 to #\_
run: 725 init-list 10: (((jump)) ((-8 offset)))
run: 726 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 45 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 727 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 728 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3927 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3927
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3927
run: 729 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 3990 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 3990
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3927 to 3990
run: 730 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 731 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 3993 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 732 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: 3925 => ((1 list-address))
setm: ((1 list-address)) <= 3925
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 3995 to 3925
run: 733 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3927 list-address) (raw))
sizeof: ((3927 list-address) (raw))
run: 3990 => ((2 list-address))
setm: ((2 list-address)) <= 3990
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 3996 to 3990
run: 734 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 3990 => ((2 list-address))
setm: ((2 list-address)) <= 3990
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 3990
run: 735 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 736 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4024 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 737 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: 3990 => ((1 list-address))
setm: ((1 list-address)) <= 3990
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4026 to 3990
run: 738 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3990 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3990
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4027 to 3990
run: 739 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 3990 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 3990
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 3990
run: 740 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 3990 to integer
setm: ((6 tagged-value-address) (deref)): setting 3991 to #\_
run: 741 init-list 10: (((jump)) ((-8 offset)))
run: 742 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 46 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 743 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 744 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 3992 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 3992
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 3992
run: 745 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4055 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4055
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 3992 to 4055
run: 746 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 747 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4058 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 748 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: 3990 => ((1 list-address))
setm: ((1 list-address)) <= 3990
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4060 to 3990
run: 749 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3992 list-address) (raw))
sizeof: ((3992 list-address) (raw))
run: 4055 => ((2 list-address))
setm: ((2 list-address)) <= 4055
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4061 to 4055
run: 750 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4055 => ((2 list-address))
setm: ((2 list-address)) <= 4055
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4055
run: 751 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 752 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4089 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 753 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: 4055 => ((1 list-address))
setm: ((1 list-address)) <= 4055
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4091 to 4055
run: 754 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4055 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4055
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4092 to 4055
run: 755 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4055 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4055
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4055
run: 756 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4055 to integer
setm: ((6 tagged-value-address) (deref)): setting 4056 to #\p
run: 757 init-list 10: (((jump)) ((-8 offset)))
run: 758 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 47 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\b => ((3 integer))
setm: ((3 integer)) <= #\b
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\b
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 759 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 760 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4057 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4057
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4057
run: 761 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4120 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4120
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4057 to 4120
run: 762 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 763 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4123 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 764 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: 4055 => ((1 list-address))
setm: ((1 list-address)) <= 4055
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4125 to 4055
run: 765 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4057 list-address) (raw))
sizeof: ((4057 list-address) (raw))
run: 4120 => ((2 list-address))
setm: ((2 list-address)) <= 4120
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4126 to 4120
run: 766 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4120 => ((2 list-address))
setm: ((2 list-address)) <= 4120
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4120
run: 767 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 768 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4154 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 769 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: 4120 => ((1 list-address))
setm: ((1 list-address)) <= 4120
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4156 to 4120
run: 770 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4120 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4120
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4157 to 4120
run: 771 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4120 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4120
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4120
run: 772 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\b)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\b))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4120 to integer
setm: ((6 tagged-value-address) (deref)): setting 4121 to #\b
run: 773 init-list 10: (((jump)) ((-8 offset)))
run: 774 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 48 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\N => ((3 integer))
setm: ((3 integer)) <= #\N
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\N
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 775 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 776 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4122 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4122
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4122
run: 777 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4185 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4185
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4122 to 4185
run: 778 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 779 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4188 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 780 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: 4120 => ((1 list-address))
setm: ((1 list-address)) <= 4120
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4190 to 4120
run: 781 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4122 list-address) (raw))
sizeof: ((4122 list-address) (raw))
run: 4185 => ((2 list-address))
setm: ((2 list-address)) <= 4185
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4191 to 4185
run: 782 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4185 => ((2 list-address))
setm: ((2 list-address)) <= 4185
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4185
run: 783 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 784 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4219 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 785 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: 4185 => ((1 list-address))
setm: ((1 list-address)) <= 4185
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4221 to 4185
run: 786 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4185 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4185
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4222 to 4185
run: 787 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4185 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4185
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4185
run: 788 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\N)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\N))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4185 to integer
setm: ((6 tagged-value-address) (deref)): setting 4186 to #\N
run: 789 init-list 10: (((jump)) ((-8 offset)))
run: 790 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 49 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 791 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 792 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4187 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4187
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4187
run: 793 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4250 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4250
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4187 to 4250
run: 794 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 795 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4253 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 796 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: 4185 => ((1 list-address))
setm: ((1 list-address)) <= 4185
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4255 to 4185
run: 797 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4187 list-address) (raw))
sizeof: ((4187 list-address) (raw))
run: 4250 => ((2 list-address))
setm: ((2 list-address)) <= 4250
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4256 to 4250
run: 798 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4250 => ((2 list-address))
setm: ((2 list-address)) <= 4250
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4250
run: 799 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 800 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4284 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 801 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: 4250 => ((1 list-address))
setm: ((1 list-address)) <= 4250
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4286 to 4250
run: 802 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4250 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4250
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4287 to 4250
run: 803 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4250 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4250
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4250
run: 804 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4250 to integer
setm: ((6 tagged-value-address) (deref)): setting 4251 to #\P
run: 805 init-list 10: (((jump)) ((-8 offset)))
run: 806 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 50 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 807 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 808 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4252 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4252
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4252
run: 809 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4315 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4315
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4252 to 4315
run: 810 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 811 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4318 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 812 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: 4250 => ((1 list-address))
setm: ((1 list-address)) <= 4250
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4320 to 4250
run: 813 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4252 list-address) (raw))
sizeof: ((4252 list-address) (raw))
run: 4315 => ((2 list-address))
setm: ((2 list-address)) <= 4315
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4321 to 4315
run: 814 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4315 => ((2 list-address))
setm: ((2 list-address)) <= 4315
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4315
run: 815 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 816 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4349 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 817 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: 4315 => ((1 list-address))
setm: ((1 list-address)) <= 4315
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4351 to 4315
run: 818 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4315 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4315
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4352 to 4315
run: 819 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4315 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4315
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4315
run: 820 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4315 to integer
setm: ((6 tagged-value-address) (deref)): setting 4316 to #\_
run: 821 init-list 10: (((jump)) ((-8 offset)))
run: 822 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 51 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 823 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 824 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4317 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4317
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4317
run: 825 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4380 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4380
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4317 to 4380
run: 826 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 827 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4383 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 828 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: 4315 => ((1 list-address))
setm: ((1 list-address)) <= 4315
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4385 to 4315
run: 829 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4317 list-address) (raw))
sizeof: ((4317 list-address) (raw))
run: 4380 => ((2 list-address))
setm: ((2 list-address)) <= 4380
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4386 to 4380
run: 830 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4380 => ((2 list-address))
setm: ((2 list-address)) <= 4380
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4380
run: 831 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 832 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4414 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 833 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: 4380 => ((1 list-address))
setm: ((1 list-address)) <= 4380
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4416 to 4380
run: 834 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4380 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4380
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4417 to 4380
run: 835 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4380 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4380
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4380
run: 836 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4380 to integer
setm: ((6 tagged-value-address) (deref)): setting 4381 to #\_
run: 837 init-list 10: (((jump)) ((-8 offset)))
run: 838 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 52 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 839 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 840 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4382 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4382
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4382
run: 841 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4445 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4445
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4382 to 4445
run: 842 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 843 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4448 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 844 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: 4380 => ((1 list-address))
setm: ((1 list-address)) <= 4380
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4450 to 4380
run: 845 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4382 list-address) (raw))
sizeof: ((4382 list-address) (raw))
run: 4445 => ((2 list-address))
setm: ((2 list-address)) <= 4445
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4451 to 4445
run: 846 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4445 => ((2 list-address))
setm: ((2 list-address)) <= 4445
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4445
run: 847 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 848 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4479 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 849 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: 4445 => ((1 list-address))
setm: ((1 list-address)) <= 4445
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4481 to 4445
run: 850 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4445 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4445
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4482 to 4445
run: 851 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4445 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4445
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4445
run: 852 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4445 to integer
setm: ((6 tagged-value-address) (deref)): setting 4446 to #\_
run: 853 init-list 10: (((jump)) ((-8 offset)))
run: 854 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 53 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 855 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 856 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4447 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4447
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4447
run: 857 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4510 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4510
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4447 to 4510
run: 858 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 859 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4513 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 860 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: 4445 => ((1 list-address))
setm: ((1 list-address)) <= 4445
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4515 to 4445
run: 861 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4447 list-address) (raw))
sizeof: ((4447 list-address) (raw))
run: 4510 => ((2 list-address))
setm: ((2 list-address)) <= 4510
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4516 to 4510
run: 862 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4510 => ((2 list-address))
setm: ((2 list-address)) <= 4510
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4510
run: 863 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 864 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4544 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 865 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: 4510 => ((1 list-address))
setm: ((1 list-address)) <= 4510
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4546 to 4510
run: 866 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4510 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4510
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4547 to 4510
run: 867 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4510 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4510
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4510
run: 868 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4510 to integer
setm: ((6 tagged-value-address) (deref)): setting 4511 to #\_
run: 869 init-list 10: (((jump)) ((-8 offset)))
run: 870 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 54 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 871 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 872 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4512 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4512
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4512
run: 873 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4575 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4575
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4512 to 4575
run: 874 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 875 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4578 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 876 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: 4510 => ((1 list-address))
setm: ((1 list-address)) <= 4510
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4580 to 4510
run: 877 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4512 list-address) (raw))
sizeof: ((4512 list-address) (raw))
run: 4575 => ((2 list-address))
setm: ((2 list-address)) <= 4575
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4581 to 4575
run: 878 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4575 => ((2 list-address))
setm: ((2 list-address)) <= 4575
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4575
run: 879 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 880 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4609 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 881 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: 4575 => ((1 list-address))
setm: ((1 list-address)) <= 4575
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4611 to 4575
run: 882 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4575 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4575
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4612 to 4575
run: 883 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4575 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4575
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4575
run: 884 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4575 to integer
setm: ((6 tagged-value-address) (deref)): setting 4576 to #\p
run: 885 init-list 10: (((jump)) ((-8 offset)))
run: 886 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 55 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\n => ((3 integer))
setm: ((3 integer)) <= #\n
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\n
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 887 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 888 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4577 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4577
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4577
run: 889 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4640 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4640
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4577 to 4640
run: 890 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 891 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4643 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 892 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: 4575 => ((1 list-address))
setm: ((1 list-address)) <= 4575
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4645 to 4575
run: 893 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4577 list-address) (raw))
sizeof: ((4577 list-address) (raw))
run: 4640 => ((2 list-address))
setm: ((2 list-address)) <= 4640
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4646 to 4640
run: 894 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4640 => ((2 list-address))
setm: ((2 list-address)) <= 4640
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4640
run: 895 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 896 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4674 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 897 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: 4640 => ((1 list-address))
setm: ((1 list-address)) <= 4640
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4676 to 4640
run: 898 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4640 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4640
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4677 to 4640
run: 899 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4640 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4640
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4640
run: 900 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\n)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\n))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4640 to integer
setm: ((6 tagged-value-address) (deref)): setting 4641 to #\n
run: 901 init-list 10: (((jump)) ((-8 offset)))
run: 902 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 56 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\R => ((3 integer))
setm: ((3 integer)) <= #\R
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\R
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 903 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 904 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4642 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4642
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4642
run: 905 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4705 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4705
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4642 to 4705
run: 906 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 907 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4708 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 908 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: 4640 => ((1 list-address))
setm: ((1 list-address)) <= 4640
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4710 to 4640
run: 909 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4642 list-address) (raw))
sizeof: ((4642 list-address) (raw))
run: 4705 => ((2 list-address))
setm: ((2 list-address)) <= 4705
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4711 to 4705
run: 910 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4705 => ((2 list-address))
setm: ((2 list-address)) <= 4705
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4705
run: 911 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 912 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4739 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 913 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: 4705 => ((1 list-address))
setm: ((1 list-address)) <= 4705
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4741 to 4705
run: 914 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4705 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4705
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4742 to 4705
run: 915 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4705 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4705
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4705
run: 916 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\R)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\R))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4705 to integer
setm: ((6 tagged-value-address) (deref)): setting 4706 to #\R
run: 917 init-list 10: (((jump)) ((-8 offset)))
run: 918 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 57 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\P => ((3 integer))
setm: ((3 integer)) <= #\P
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\P
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 919 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 920 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4707 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4707
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4707
run: 921 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4770 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4770
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4707 to 4770
run: 922 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 923 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4773 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 924 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: 4705 => ((1 list-address))
setm: ((1 list-address)) <= 4705
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4775 to 4705
run: 925 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4707 list-address) (raw))
sizeof: ((4707 list-address) (raw))
run: 4770 => ((2 list-address))
setm: ((2 list-address)) <= 4770
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4776 to 4770
run: 926 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4770 => ((2 list-address))
setm: ((2 list-address)) <= 4770
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4770
run: 927 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 928 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4804 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 929 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: 4770 => ((1 list-address))
setm: ((1 list-address)) <= 4770
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4806 to 4770
run: 930 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4770 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4770
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4807 to 4770
run: 931 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4770 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4770
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4770
run: 932 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\P))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4770 to integer
setm: ((6 tagged-value-address) (deref)): setting 4771 to #\P
run: 933 init-list 10: (((jump)) ((-8 offset)))
run: 934 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 58 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 935 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 936 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4772 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4772
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4772
run: 937 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4835 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4835
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4772 to 4835
run: 938 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 939 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4838 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 940 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: 4770 => ((1 list-address))
setm: ((1 list-address)) <= 4770
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4840 to 4770
run: 941 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4772 list-address) (raw))
sizeof: ((4772 list-address) (raw))
run: 4835 => ((2 list-address))
setm: ((2 list-address)) <= 4835
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4841 to 4835
run: 942 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4835 => ((2 list-address))
setm: ((2 list-address)) <= 4835
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4835
run: 943 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 944 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4869 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 945 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: 4835 => ((1 list-address))
setm: ((1 list-address)) <= 4835
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4871 to 4835
run: 946 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4835 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4835
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4872 to 4835
run: 947 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4835 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4835
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4835
run: 948 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4835 to integer
setm: ((6 tagged-value-address) (deref)): setting 4836 to #\_
run: 949 init-list 10: (((jump)) ((-8 offset)))
run: 950 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 59 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 951 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 952 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4837 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4837
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4837
run: 953 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4900 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4900
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4837 to 4900
run: 954 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 955 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4903 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 956 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: 4835 => ((1 list-address))
setm: ((1 list-address)) <= 4835
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4905 to 4835
run: 957 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4837 list-address) (raw))
sizeof: ((4837 list-address) (raw))
run: 4900 => ((2 list-address))
setm: ((2 list-address)) <= 4900
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4906 to 4900
run: 958 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4900 => ((2 list-address))
setm: ((2 list-address)) <= 4900
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4900
run: 959 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 960 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4934 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 961 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: 4900 => ((1 list-address))
setm: ((1 list-address)) <= 4900
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4936 to 4900
run: 962 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4900 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4900
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 4937 to 4900
run: 963 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4900 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4900
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4900
run: 964 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4900 to integer
setm: ((6 tagged-value-address) (deref)): setting 4901 to #\_
run: 965 init-list 10: (((jump)) ((-8 offset)))
run: 966 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 60 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 967 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 968 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4902 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4902
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4902
run: 969 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 4965 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 4965
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4902 to 4965
run: 970 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 971 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4968 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 972 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: 4900 => ((1 list-address))
setm: ((1 list-address)) <= 4900
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 4970 to 4900
run: 973 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4902 list-address) (raw))
sizeof: ((4902 list-address) (raw))
run: 4965 => ((2 list-address))
setm: ((2 list-address)) <= 4965
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 4971 to 4965
run: 974 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 4965 => ((2 list-address))
setm: ((2 list-address)) <= 4965
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 4965
run: 975 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 976 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 4999 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 977 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: 4965 => ((1 list-address))
setm: ((1 list-address)) <= 4965
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5001 to 4965
run: 978 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4965 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4965
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5002 to 4965
run: 979 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 4965 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 4965
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 4965
run: 980 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 4965 to integer
setm: ((6 tagged-value-address) (deref)): setting 4966 to #\_
run: 981 init-list 10: (((jump)) ((-8 offset)))
run: 982 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 61 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\_ => ((3 integer))
setm: ((3 integer)) <= #\_
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\_
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 983 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 984 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 4967 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 4967
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 4967
run: 985 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5030 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5030
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 4967 to 5030
run: 986 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 987 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5033 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 988 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: 4965 => ((1 list-address))
setm: ((1 list-address)) <= 4965
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5035 to 4965
run: 989 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4967 list-address) (raw))
sizeof: ((4967 list-address) (raw))
run: 5030 => ((2 list-address))
setm: ((2 list-address)) <= 5030
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5036 to 5030
run: 990 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5030 => ((2 list-address))
setm: ((2 list-address)) <= 5030
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 5030
run: 991 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 992 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5064 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 993 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: 5030 => ((1 list-address))
setm: ((1 list-address)) <= 5030
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5066 to 5030
run: 994 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5030 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5030
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5067 to 5030
run: 995 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5030 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5030
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 5030
run: 996 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\_))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5030 to integer
setm: ((6 tagged-value-address) (deref)): setting 5031 to #\_
run: 997 init-list 10: (((jump)) ((-8 offset)))
run: 998 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 62 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\p => ((3 integer))
setm: ((3 integer)) <= #\p
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\p
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 999 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1000 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 5032 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 5032
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 5032
schedule: scheduling init-list/main for further processing
schedule: init-list/main
run: 1001 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5095 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5095
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 5032 to 5095
run: 1002 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1003 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5098 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1004 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: 5030 => ((1 list-address))
setm: ((1 list-address)) <= 5030
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5100 to 5030
run: 1005 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5032 list-address) (raw))
sizeof: ((5032 list-address) (raw))
run: 5095 => ((2 list-address))
setm: ((2 list-address)) <= 5095
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5101 to 5095
run: 1006 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5095 => ((2 list-address))
setm: ((2 list-address)) <= 5095
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 5095
run: 1007 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1008 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5129 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1009 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: 5095 => ((1 list-address))
setm: ((1 list-address)) <= 5095
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5131 to 5095
run: 1010 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5095 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5095
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5132 to 5095
run: 1011 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5095 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5095
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 5095
run: 1012 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\p))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5095 to integer
setm: ((6 tagged-value-address) (deref)): setting 5096 to #\p
run: 1013 init-list 10: (((jump)) ((-8 offset)))
run: 1014 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 63 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: #\r => ((3 integer))
setm: ((3 integer)) <= #\r
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to #\r
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to t
run: 1015 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1016 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 5097 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 5097
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1037 to 5097
run: 1017 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 5160 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 5160
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 5097 to 5160
run: 1018 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1019 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5163 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1020 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: 5095 => ((1 list-address))
setm: ((1 list-address)) <= 5095
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5165 to 5095
run: 1021 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5097 list-address) (raw))
sizeof: ((5097 list-address) (raw))
run: 5160 => ((2 list-address))
setm: ((2 list-address)) <= 5160
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5166 to 5160
run: 1022 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 5160 => ((2 list-address))
setm: ((2 list-address)) <= 5160
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1034 to 5160
run: 1023 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 1024 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5194 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1025 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: 5160 => ((1 list-address))
setm: ((1 list-address)) <= 5160
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5196 to 5160
run: 1026 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5160 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5160
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5197 to 5160
run: 1027 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 5160 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 5160
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1038 to 5160
run: 1028 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer #\r)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer #\r))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 5160 to integer
setm: ((6 tagged-value-address) (deref)): setting 5161 to #\r
run: 1029 init-list 10: (((jump)) ((-8 offset)))
run: 1030 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 64 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: nil => ((3 integer))
setm: ((3 integer)) <= nil
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1035 to nil
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1036 to nil
run: 1031 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1032 init-list 11: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1033 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5225 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1034 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1062)
run: 1062 => ((1 list-address))
setm: ((1 list-address)) <= 1062
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5227 to 1062
run: 1035 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1064 list-address) (raw))
sizeof: ((1064 list-address) (raw))
run: 1065 => ((2 list-address))
setm: ((2 list-address)) <= 1065
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5228 to 1065
run: 1036 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1033 to 1065
run: 1037 init-list 12: (((reply)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((1 list-address))) (((1 list-address)))
reply: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1002 to 1065
run: 1038 main 2: (((2 board-address)) <- ((init-board)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1039 init-board 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5256 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1040 init-board 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5258 to 1065
run: 1041 init-board 2: (((2 integer)) <- ((list-length)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1042 list-length 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5287 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1043 list-length 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1065
run: 1044 list-length 2: (((2 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 0
run: 1045 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1046 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5318 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1047 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5320 to 1065
run: 1048 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1065 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1065
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5321 to 1065
run: 1049 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1065 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1065
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1065
run: 1050 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1051 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 1 => ((2 integer))
setm: ((2 integer)) <= 1
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 1
run: 1052 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1053 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5349 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1054 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5351 to 1065
run: 1055 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1067 list-address) (raw))
sizeof: ((1067 list-address) (raw))
run: 1130 => ((2 list-address))
setm: ((2 list-address)) <= 1130
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5352 to 1130
run: 1056 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1130 => ((1 list-address))
setm: ((1 list-address)) <= 1130
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1130
run: 1057 list-length 7: (((jump)) ((-5 offset)))
run: 1058 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1059 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5380 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1060 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: 1130 => ((1 list-address))
setm: ((1 list-address)) <= 1130
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5382 to 1130
run: 1061 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1130 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1130
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5383 to 1130
run: 1062 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1130 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1130
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1130
run: 1063 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1064 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 2 => ((2 integer))
setm: ((2 integer)) <= 2
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 2
run: 1065 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1066 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5411 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1067 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: 1130 => ((1 list-address))
setm: ((1 list-address)) <= 1130
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5413 to 1130
run: 1068 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1132 list-address) (raw))
sizeof: ((1132 list-address) (raw))
run: 1195 => ((2 list-address))
setm: ((2 list-address)) <= 1195
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5414 to 1195
run: 1069 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1195 => ((1 list-address))
setm: ((1 list-address)) <= 1195
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1195
run: 1070 list-length 7: (((jump)) ((-5 offset)))
run: 1071 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1072 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5442 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1073 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: 1195 => ((1 list-address))
setm: ((1 list-address)) <= 1195
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5444 to 1195
run: 1074 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1195 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1195
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5445 to 1195
run: 1075 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1195 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1195
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1195
run: 1076 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1077 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 3 => ((2 integer))
setm: ((2 integer)) <= 3
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 3
run: 1078 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1079 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5473 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1080 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: 1195 => ((1 list-address))
setm: ((1 list-address)) <= 1195
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5475 to 1195
run: 1081 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1197 list-address) (raw))
sizeof: ((1197 list-address) (raw))
run: 1260 => ((2 list-address))
setm: ((2 list-address)) <= 1260
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5476 to 1260
run: 1082 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1260 => ((1 list-address))
setm: ((1 list-address)) <= 1260
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1260
run: 1083 list-length 7: (((jump)) ((-5 offset)))
run: 1084 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1085 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5504 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1086 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: 1260 => ((1 list-address))
setm: ((1 list-address)) <= 1260
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5506 to 1260
run: 1087 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1260 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1260
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5507 to 1260
run: 1088 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1260 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1260
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1260
run: 1089 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1090 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 4 => ((2 integer))
setm: ((2 integer)) <= 4
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 4
run: 1091 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1092 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5535 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1093 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: 1260 => ((1 list-address))
setm: ((1 list-address)) <= 1260
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5537 to 1260
run: 1094 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1262 list-address) (raw))
sizeof: ((1262 list-address) (raw))
run: 1325 => ((2 list-address))
setm: ((2 list-address)) <= 1325
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5538 to 1325
run: 1095 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1325 => ((1 list-address))
setm: ((1 list-address)) <= 1325
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1325
run: 1096 list-length 7: (((jump)) ((-5 offset)))
run: 1097 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1098 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5566 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1099 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: 1325 => ((1 list-address))
setm: ((1 list-address)) <= 1325
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5568 to 1325
run: 1100 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1325 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1325
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5569 to 1325
run: 1101 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1325 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1325
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1325
run: 1102 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1103 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 5 => ((2 integer))
setm: ((2 integer)) <= 5
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 5
run: 1104 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1105 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5597 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1106 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: 1325 => ((1 list-address))
setm: ((1 list-address)) <= 1325
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5599 to 1325
run: 1107 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1327 list-address) (raw))
sizeof: ((1327 list-address) (raw))
run: 1390 => ((2 list-address))
setm: ((2 list-address)) <= 1390
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5600 to 1390
run: 1108 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1390 => ((1 list-address))
setm: ((1 list-address)) <= 1390
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1390
run: 1109 list-length 7: (((jump)) ((-5 offset)))
run: 1110 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1111 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5628 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1112 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: 1390 => ((1 list-address))
setm: ((1 list-address)) <= 1390
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5630 to 1390
run: 1113 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1390 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1390
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5631 to 1390
run: 1114 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1390 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1390
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1390
run: 1115 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1116 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 6 => ((2 integer))
setm: ((2 integer)) <= 6
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 6
run: 1117 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1118 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5659 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1119 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: 1390 => ((1 list-address))
setm: ((1 list-address)) <= 1390
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5661 to 1390
run: 1120 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1392 list-address) (raw))
sizeof: ((1392 list-address) (raw))
run: 1455 => ((2 list-address))
setm: ((2 list-address)) <= 1455
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5662 to 1455
run: 1121 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1455 => ((1 list-address))
setm: ((1 list-address)) <= 1455
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1455
run: 1122 list-length 7: (((jump)) ((-5 offset)))
run: 1123 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1124 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5690 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1125 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: 1455 => ((1 list-address))
setm: ((1 list-address)) <= 1455
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5692 to 1455
run: 1126 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1455 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1455
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5693 to 1455
run: 1127 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1455 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1455
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1455
run: 1128 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1129 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 7 => ((2 integer))
setm: ((2 integer)) <= 7
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 7
run: 1130 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1131 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5721 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1132 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: 1455 => ((1 list-address))
setm: ((1 list-address)) <= 1455
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5723 to 1455
run: 1133 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1457 list-address) (raw))
sizeof: ((1457 list-address) (raw))
run: 1520 => ((2 list-address))
setm: ((2 list-address)) <= 1520
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5724 to 1520
run: 1134 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1520 => ((1 list-address))
setm: ((1 list-address)) <= 1520
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1520
run: 1135 list-length 7: (((jump)) ((-5 offset)))
run: 1136 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1137 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5752 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1138 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: 1520 => ((1 list-address))
setm: ((1 list-address)) <= 1520
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5754 to 1520
run: 1139 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1520 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1520
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5755 to 1520
run: 1140 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1520 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1520
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1520
run: 1141 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1142 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 8 => ((2 integer))
setm: ((2 integer)) <= 8
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 8
run: 1143 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1144 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5783 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1145 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: 1520 => ((1 list-address))
setm: ((1 list-address)) <= 1520
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5785 to 1520
run: 1146 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1522 list-address) (raw))
sizeof: ((1522 list-address) (raw))
run: 1585 => ((2 list-address))
setm: ((2 list-address)) <= 1585
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5786 to 1585
run: 1147 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1585 => ((1 list-address))
setm: ((1 list-address)) <= 1585
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1585
run: 1148 list-length 7: (((jump)) ((-5 offset)))
run: 1149 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1150 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5814 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1151 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: 1585 => ((1 list-address))
setm: ((1 list-address)) <= 1585
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5816 to 1585
run: 1152 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1585 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1585
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5817 to 1585
run: 1153 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1585 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1585
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1585
run: 1154 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1155 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 9 => ((2 integer))
setm: ((2 integer)) <= 9
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 9
run: 1156 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1157 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5845 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1158 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: 1585 => ((1 list-address))
setm: ((1 list-address)) <= 1585
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5847 to 1585
run: 1159 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1587 list-address) (raw))
sizeof: ((1587 list-address) (raw))
run: 1650 => ((2 list-address))
setm: ((2 list-address)) <= 1650
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5848 to 1650
run: 1160 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1650 => ((1 list-address))
setm: ((1 list-address)) <= 1650
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1650
run: 1161 list-length 7: (((jump)) ((-5 offset)))
run: 1162 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1163 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5876 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1164 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: 1650 => ((1 list-address))
setm: ((1 list-address)) <= 1650
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5878 to 1650
run: 1165 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1650 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1650
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5879 to 1650
run: 1166 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1650 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1650
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1650
run: 1167 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1168 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 10 => ((2 integer))
setm: ((2 integer)) <= 10
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 10
run: 1169 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1170 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5907 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1171 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: 1650 => ((1 list-address))
setm: ((1 list-address)) <= 1650
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5909 to 1650
run: 1172 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1652 list-address) (raw))
sizeof: ((1652 list-address) (raw))
run: 1715 => ((2 list-address))
setm: ((2 list-address)) <= 1715
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5910 to 1715
run: 1173 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1715 => ((1 list-address))
setm: ((1 list-address)) <= 1715
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1715
run: 1174 list-length 7: (((jump)) ((-5 offset)))
run: 1175 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1176 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5938 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1177 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: 1715 => ((1 list-address))
setm: ((1 list-address)) <= 1715
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5940 to 1715
run: 1178 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1715 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1715
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 5941 to 1715
run: 1179 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1715 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1715
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1715
run: 1180 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1181 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 11 => ((2 integer))
setm: ((2 integer)) <= 11
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 11
run: 1182 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1183 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 5969 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1184 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: 1715 => ((1 list-address))
setm: ((1 list-address)) <= 1715
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5971 to 1715
run: 1185 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1717 list-address) (raw))
sizeof: ((1717 list-address) (raw))
run: 1780 => ((2 list-address))
setm: ((2 list-address)) <= 1780
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 5972 to 1780
run: 1186 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1780 => ((1 list-address))
setm: ((1 list-address)) <= 1780
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1780
run: 1187 list-length 7: (((jump)) ((-5 offset)))
run: 1188 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1189 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1190 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: 1780 => ((1 list-address))
setm: ((1 list-address)) <= 1780
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6002 to 1780
run: 1191 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1780 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1780
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6003 to 1780
run: 1192 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1780 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1780
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1780
run: 1193 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1194 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 12 => ((2 integer))
setm: ((2 integer)) <= 12
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 12
run: 1195 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1196 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1197 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: 1780 => ((1 list-address))
setm: ((1 list-address)) <= 1780
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6033 to 1780
run: 1198 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1782 list-address) (raw))
sizeof: ((1782 list-address) (raw))
run: 1845 => ((2 list-address))
setm: ((2 list-address)) <= 1845
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6034 to 1845
run: 1199 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1845 => ((1 list-address))
setm: ((1 list-address)) <= 1845
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1845
run: 1200 list-length 7: (((jump)) ((-5 offset)))
run: 1201 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1202 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6062 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1203 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: 1845 => ((1 list-address))
setm: ((1 list-address)) <= 1845
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6064 to 1845
run: 1204 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1845 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1845
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6065 to 1845
run: 1205 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1845 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1845
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1845
run: 1206 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1207 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 13 => ((2 integer))
setm: ((2 integer)) <= 13
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 13
run: 1208 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1209 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6093 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1210 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: 1845 => ((1 list-address))
setm: ((1 list-address)) <= 1845
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6095 to 1845
run: 1211 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1847 list-address) (raw))
sizeof: ((1847 list-address) (raw))
run: 1910 => ((2 list-address))
setm: ((2 list-address)) <= 1910
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6096 to 1910
run: 1212 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1910 => ((1 list-address))
setm: ((1 list-address)) <= 1910
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1910
run: 1213 list-length 7: (((jump)) ((-5 offset)))
run: 1214 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1215 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6124 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1216 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: 1910 => ((1 list-address))
setm: ((1 list-address)) <= 1910
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6126 to 1910
run: 1217 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1910 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1910
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6127 to 1910
run: 1218 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1910 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1910
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1910
run: 1219 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1220 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 14 => ((2 integer))
setm: ((2 integer)) <= 14
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 14
run: 1221 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1222 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6155 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1223 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: 1910 => ((1 list-address))
setm: ((1 list-address)) <= 1910
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6157 to 1910
run: 1224 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1912 list-address) (raw))
sizeof: ((1912 list-address) (raw))
run: 1975 => ((2 list-address))
setm: ((2 list-address)) <= 1975
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6158 to 1975
run: 1225 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1975 => ((1 list-address))
setm: ((1 list-address)) <= 1975
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 1975
run: 1226 list-length 7: (((jump)) ((-5 offset)))
run: 1227 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1228 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6186 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1229 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: 1975 => ((1 list-address))
setm: ((1 list-address)) <= 1975
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6188 to 1975
run: 1230 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1975 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1975
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6189 to 1975
run: 1231 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 1975 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 1975
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 1975
run: 1232 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1233 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 15 => ((2 integer))
setm: ((2 integer)) <= 15
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 15
run: 1234 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1235 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6217 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1236 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: 1975 => ((1 list-address))
setm: ((1 list-address)) <= 1975
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6219 to 1975
run: 1237 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1977 list-address) (raw))
sizeof: ((1977 list-address) (raw))
run: 2040 => ((2 list-address))
setm: ((2 list-address)) <= 2040
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6220 to 2040
run: 1238 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2040 => ((1 list-address))
setm: ((1 list-address)) <= 2040
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2040
run: 1239 list-length 7: (((jump)) ((-5 offset)))
run: 1240 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1241 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6248 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1242 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: 2040 => ((1 list-address))
setm: ((1 list-address)) <= 2040
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6250 to 2040
run: 1243 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2040 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2040
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6251 to 2040
run: 1244 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2040 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2040
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2040
run: 1245 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1246 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 16 => ((2 integer))
setm: ((2 integer)) <= 16
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 16
run: 1247 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1248 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6279 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1249 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: 2040 => ((1 list-address))
setm: ((1 list-address)) <= 2040
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6281 to 2040
run: 1250 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2042 list-address) (raw))
sizeof: ((2042 list-address) (raw))
run: 2105 => ((2 list-address))
setm: ((2 list-address)) <= 2105
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6282 to 2105
run: 1251 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2105 => ((1 list-address))
setm: ((1 list-address)) <= 2105
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2105
run: 1252 list-length 7: (((jump)) ((-5 offset)))
run: 1253 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1254 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6310 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1255 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: 2105 => ((1 list-address))
setm: ((1 list-address)) <= 2105
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6312 to 2105
run: 1256 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2105 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2105
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6313 to 2105
run: 1257 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2105 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2105
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2105
run: 1258 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1259 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 17 => ((2 integer))
setm: ((2 integer)) <= 17
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 17
run: 1260 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1261 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6341 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1262 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: 2105 => ((1 list-address))
setm: ((1 list-address)) <= 2105
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6343 to 2105
run: 1263 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2107 list-address) (raw))
sizeof: ((2107 list-address) (raw))
run: 2170 => ((2 list-address))
setm: ((2 list-address)) <= 2170
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6344 to 2170
run: 1264 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2170 => ((1 list-address))
setm: ((1 list-address)) <= 2170
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2170
run: 1265 list-length 7: (((jump)) ((-5 offset)))
run: 1266 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1267 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6372 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1268 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: 2170 => ((1 list-address))
setm: ((1 list-address)) <= 2170
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6374 to 2170
run: 1269 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2170 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2170
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6375 to 2170
run: 1270 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2170 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2170
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2170
run: 1271 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1272 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 18 => ((2 integer))
setm: ((2 integer)) <= 18
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 18
run: 1273 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1274 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6403 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1275 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: 2170 => ((1 list-address))
setm: ((1 list-address)) <= 2170
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6405 to 2170
run: 1276 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2172 list-address) (raw))
sizeof: ((2172 list-address) (raw))
run: 2235 => ((2 list-address))
setm: ((2 list-address)) <= 2235
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6406 to 2235
run: 1277 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2235 => ((1 list-address))
setm: ((1 list-address)) <= 2235
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2235
run: 1278 list-length 7: (((jump)) ((-5 offset)))
run: 1279 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1280 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6434 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1281 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: 2235 => ((1 list-address))
setm: ((1 list-address)) <= 2235
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6436 to 2235
run: 1282 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2235 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2235
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6437 to 2235
run: 1283 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2235 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2235
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2235
run: 1284 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1285 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 19 => ((2 integer))
setm: ((2 integer)) <= 19
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 19
run: 1286 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1287 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6465 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1288 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: 2235 => ((1 list-address))
setm: ((1 list-address)) <= 2235
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6467 to 2235
run: 1289 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2237 list-address) (raw))
sizeof: ((2237 list-address) (raw))
run: 2300 => ((2 list-address))
setm: ((2 list-address)) <= 2300
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6468 to 2300
run: 1290 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2300 => ((1 list-address))
setm: ((1 list-address)) <= 2300
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2300
run: 1291 list-length 7: (((jump)) ((-5 offset)))
run: 1292 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1293 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6496 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1294 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: 2300 => ((1 list-address))
setm: ((1 list-address)) <= 2300
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6498 to 2300
run: 1295 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2300 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2300
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6499 to 2300
run: 1296 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2300 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2300
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2300
run: 1297 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1298 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 20 => ((2 integer))
setm: ((2 integer)) <= 20
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 20
run: 1299 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1300 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6527 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1301 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: 2300 => ((1 list-address))
setm: ((1 list-address)) <= 2300
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6529 to 2300
run: 1302 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2302 list-address) (raw))
sizeof: ((2302 list-address) (raw))
run: 2365 => ((2 list-address))
setm: ((2 list-address)) <= 2365
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6530 to 2365
run: 1303 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2365 => ((1 list-address))
setm: ((1 list-address)) <= 2365
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2365
run: 1304 list-length 7: (((jump)) ((-5 offset)))
run: 1305 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1306 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6558 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1307 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: 2365 => ((1 list-address))
setm: ((1 list-address)) <= 2365
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6560 to 2365
run: 1308 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2365 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2365
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6561 to 2365
run: 1309 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2365 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2365
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2365
run: 1310 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1311 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 21 => ((2 integer))
setm: ((2 integer)) <= 21
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 21
run: 1312 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1313 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6589 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1314 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: 2365 => ((1 list-address))
setm: ((1 list-address)) <= 2365
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6591 to 2365
run: 1315 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2367 list-address) (raw))
sizeof: ((2367 list-address) (raw))
run: 2430 => ((2 list-address))
setm: ((2 list-address)) <= 2430
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6592 to 2430
run: 1316 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2430 => ((1 list-address))
setm: ((1 list-address)) <= 2430
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2430
run: 1317 list-length 7: (((jump)) ((-5 offset)))
run: 1318 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1319 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6620 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1320 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: 2430 => ((1 list-address))
setm: ((1 list-address)) <= 2430
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6622 to 2430
run: 1321 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2430 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2430
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6623 to 2430
run: 1322 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2430 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2430
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2430
run: 1323 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1324 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 22 => ((2 integer))
setm: ((2 integer)) <= 22
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 22
run: 1325 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1326 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6651 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1327 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: 2430 => ((1 list-address))
setm: ((1 list-address)) <= 2430
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6653 to 2430
run: 1328 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2432 list-address) (raw))
sizeof: ((2432 list-address) (raw))
run: 2495 => ((2 list-address))
setm: ((2 list-address)) <= 2495
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6654 to 2495
run: 1329 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2495 => ((1 list-address))
setm: ((1 list-address)) <= 2495
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2495
run: 1330 list-length 7: (((jump)) ((-5 offset)))
run: 1331 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1332 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6682 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1333 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: 2495 => ((1 list-address))
setm: ((1 list-address)) <= 2495
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6684 to 2495
run: 1334 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2495 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2495
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6685 to 2495
run: 1335 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2495 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2495
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2495
run: 1336 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1337 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 23 => ((2 integer))
setm: ((2 integer)) <= 23
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 23
run: 1338 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1339 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6713 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1340 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: 2495 => ((1 list-address))
setm: ((1 list-address)) <= 2495
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6715 to 2495
run: 1341 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2497 list-address) (raw))
sizeof: ((2497 list-address) (raw))
run: 2560 => ((2 list-address))
setm: ((2 list-address)) <= 2560
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6716 to 2560
run: 1342 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2560 => ((1 list-address))
setm: ((1 list-address)) <= 2560
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2560
run: 1343 list-length 7: (((jump)) ((-5 offset)))
run: 1344 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1345 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6744 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1346 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: 2560 => ((1 list-address))
setm: ((1 list-address)) <= 2560
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6746 to 2560
run: 1347 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2560 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2560
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6747 to 2560
run: 1348 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2560 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2560
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2560
run: 1349 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1350 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 24 => ((2 integer))
setm: ((2 integer)) <= 24
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 24
run: 1351 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1352 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6775 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1353 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: 2560 => ((1 list-address))
setm: ((1 list-address)) <= 2560
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6777 to 2560
run: 1354 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2562 list-address) (raw))
sizeof: ((2562 list-address) (raw))
run: 2625 => ((2 list-address))
setm: ((2 list-address)) <= 2625
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6778 to 2625
run: 1355 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2625 => ((1 list-address))
setm: ((1 list-address)) <= 2625
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2625
run: 1356 list-length 7: (((jump)) ((-5 offset)))
run: 1357 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1358 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6806 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1359 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: 2625 => ((1 list-address))
setm: ((1 list-address)) <= 2625
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6808 to 2625
run: 1360 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2625 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2625
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6809 to 2625
run: 1361 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2625 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2625
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2625
run: 1362 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1363 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 25 => ((2 integer))
setm: ((2 integer)) <= 25
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 25
run: 1364 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1365 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6837 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1366 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: 2625 => ((1 list-address))
setm: ((1 list-address)) <= 2625
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6839 to 2625
run: 1367 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2627 list-address) (raw))
sizeof: ((2627 list-address) (raw))
run: 2690 => ((2 list-address))
setm: ((2 list-address)) <= 2690
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6840 to 2690
run: 1368 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2690 => ((1 list-address))
setm: ((1 list-address)) <= 2690
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2690
run: 1369 list-length 7: (((jump)) ((-5 offset)))
run: 1370 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1371 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6868 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1372 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: 2690 => ((1 list-address))
setm: ((1 list-address)) <= 2690
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6870 to 2690
run: 1373 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2690 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2690
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6871 to 2690
run: 1374 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2690 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2690
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2690
run: 1375 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1376 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 26 => ((2 integer))
setm: ((2 integer)) <= 26
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 26
run: 1377 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1378 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6899 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1379 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: 2690 => ((1 list-address))
setm: ((1 list-address)) <= 2690
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6901 to 2690
run: 1380 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2692 list-address) (raw))
sizeof: ((2692 list-address) (raw))
run: 2755 => ((2 list-address))
setm: ((2 list-address)) <= 2755
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6902 to 2755
run: 1381 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2755 => ((1 list-address))
setm: ((1 list-address)) <= 2755
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2755
run: 1382 list-length 7: (((jump)) ((-5 offset)))
run: 1383 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1384 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6930 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1385 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: 2755 => ((1 list-address))
setm: ((1 list-address)) <= 2755
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6932 to 2755
run: 1386 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2755 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2755
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6933 to 2755
run: 1387 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2755 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2755
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2755
run: 1388 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1389 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 27 => ((2 integer))
setm: ((2 integer)) <= 27
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 27
run: 1390 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1391 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6961 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1392 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: 2755 => ((1 list-address))
setm: ((1 list-address)) <= 2755
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6963 to 2755
run: 1393 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2757 list-address) (raw))
sizeof: ((2757 list-address) (raw))
run: 2820 => ((2 list-address))
setm: ((2 list-address)) <= 2820
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 6964 to 2820
run: 1394 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2820 => ((1 list-address))
setm: ((1 list-address)) <= 2820
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2820
run: 1395 list-length 7: (((jump)) ((-5 offset)))
run: 1396 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1397 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 6992 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1398 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: 2820 => ((1 list-address))
setm: ((1 list-address)) <= 2820
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 6994 to 2820
run: 1399 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2820 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2820
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 6995 to 2820
run: 1400 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2820 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2820
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2820
run: 1401 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1402 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 28 => ((2 integer))
setm: ((2 integer)) <= 28
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 28
run: 1403 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1404 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7023 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1405 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: 2820 => ((1 list-address))
setm: ((1 list-address)) <= 2820
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7025 to 2820
run: 1406 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2822 list-address) (raw))
sizeof: ((2822 list-address) (raw))
run: 2885 => ((2 list-address))
setm: ((2 list-address)) <= 2885
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7026 to 2885
run: 1407 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2885 => ((1 list-address))
setm: ((1 list-address)) <= 2885
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2885
run: 1408 list-length 7: (((jump)) ((-5 offset)))
run: 1409 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1410 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7054 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1411 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: 2885 => ((1 list-address))
setm: ((1 list-address)) <= 2885
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7056 to 2885
run: 1412 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2885 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2885
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7057 to 2885
run: 1413 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2885 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2885
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2885
run: 1414 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1415 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 29 => ((2 integer))
setm: ((2 integer)) <= 29
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 29
run: 1416 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1417 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7085 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1418 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: 2885 => ((1 list-address))
setm: ((1 list-address)) <= 2885
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7087 to 2885
run: 1419 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2887 list-address) (raw))
sizeof: ((2887 list-address) (raw))
run: 2950 => ((2 list-address))
setm: ((2 list-address)) <= 2950
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7088 to 2950
run: 1420 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2950 => ((1 list-address))
setm: ((1 list-address)) <= 2950
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 2950
run: 1421 list-length 7: (((jump)) ((-5 offset)))
run: 1422 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1423 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7116 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1424 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: 2950 => ((1 list-address))
setm: ((1 list-address)) <= 2950
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7118 to 2950
run: 1425 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2950 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2950
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7119 to 2950
run: 1426 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 2950 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 2950
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 2950
run: 1427 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1428 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 30 => ((2 integer))
setm: ((2 integer)) <= 30
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 30
run: 1429 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1430 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7147 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1431 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: 2950 => ((1 list-address))
setm: ((1 list-address)) <= 2950
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7149 to 2950
run: 1432 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2952 list-address) (raw))
sizeof: ((2952 list-address) (raw))
run: 3015 => ((2 list-address))
setm: ((2 list-address)) <= 3015
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7150 to 3015
run: 1433 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3015 => ((1 list-address))
setm: ((1 list-address)) <= 3015
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3015
run: 1434 list-length 7: (((jump)) ((-5 offset)))
run: 1435 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1436 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7178 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1437 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: 3015 => ((1 list-address))
setm: ((1 list-address)) <= 3015
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7180 to 3015
run: 1438 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3015 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3015
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7181 to 3015
run: 1439 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3015 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3015
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3015
run: 1440 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1441 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 31 => ((2 integer))
setm: ((2 integer)) <= 31
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 31
run: 1442 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1443 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7209 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1444 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: 3015 => ((1 list-address))
setm: ((1 list-address)) <= 3015
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7211 to 3015
run: 1445 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3017 list-address) (raw))
sizeof: ((3017 list-address) (raw))
run: 3080 => ((2 list-address))
setm: ((2 list-address)) <= 3080
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7212 to 3080
run: 1446 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3080 => ((1 list-address))
setm: ((1 list-address)) <= 3080
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3080
run: 1447 list-length 7: (((jump)) ((-5 offset)))
run: 1448 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1449 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7240 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1450 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: 3080 => ((1 list-address))
setm: ((1 list-address)) <= 3080
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7242 to 3080
run: 1451 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3080 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3080
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7243 to 3080
run: 1452 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3080 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3080
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3080
run: 1453 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1454 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 32 => ((2 integer))
setm: ((2 integer)) <= 32
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 32
run: 1455 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1456 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7271 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1457 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: 3080 => ((1 list-address))
setm: ((1 list-address)) <= 3080
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7273 to 3080
run: 1458 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3082 list-address) (raw))
sizeof: ((3082 list-address) (raw))
run: 3145 => ((2 list-address))
setm: ((2 list-address)) <= 3145
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7274 to 3145
run: 1459 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3145 => ((1 list-address))
setm: ((1 list-address)) <= 3145
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3145
run: 1460 list-length 7: (((jump)) ((-5 offset)))
run: 1461 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1462 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7302 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1463 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: 3145 => ((1 list-address))
setm: ((1 list-address)) <= 3145
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7304 to 3145
run: 1464 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3145 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3145
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7305 to 3145
run: 1465 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3145 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3145
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3145
run: 1466 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1467 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 33 => ((2 integer))
setm: ((2 integer)) <= 33
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 33
run: 1468 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1469 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7333 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1470 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: 3145 => ((1 list-address))
setm: ((1 list-address)) <= 3145
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7335 to 3145
run: 1471 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3147 list-address) (raw))
sizeof: ((3147 list-address) (raw))
run: 3210 => ((2 list-address))
setm: ((2 list-address)) <= 3210
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7336 to 3210
run: 1472 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3210 => ((1 list-address))
setm: ((1 list-address)) <= 3210
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3210
run: 1473 list-length 7: (((jump)) ((-5 offset)))
run: 1474 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1475 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7364 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1476 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: 3210 => ((1 list-address))
setm: ((1 list-address)) <= 3210
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7366 to 3210
run: 1477 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3210 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3210
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7367 to 3210
run: 1478 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3210 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3210
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3210
run: 1479 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1480 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 34 => ((2 integer))
setm: ((2 integer)) <= 34
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 34
run: 1481 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1482 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7395 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1483 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: 3210 => ((1 list-address))
setm: ((1 list-address)) <= 3210
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7397 to 3210
run: 1484 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3212 list-address) (raw))
sizeof: ((3212 list-address) (raw))
run: 3275 => ((2 list-address))
setm: ((2 list-address)) <= 3275
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7398 to 3275
run: 1485 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3275 => ((1 list-address))
setm: ((1 list-address)) <= 3275
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3275
run: 1486 list-length 7: (((jump)) ((-5 offset)))
run: 1487 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1488 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7426 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1489 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: 3275 => ((1 list-address))
setm: ((1 list-address)) <= 3275
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7428 to 3275
run: 1490 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3275 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3275
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7429 to 3275
run: 1491 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3275 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3275
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3275
run: 1492 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1493 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 35 => ((2 integer))
setm: ((2 integer)) <= 35
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 35
run: 1494 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1495 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7457 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1496 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: 3275 => ((1 list-address))
setm: ((1 list-address)) <= 3275
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7459 to 3275
run: 1497 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3277 list-address) (raw))
sizeof: ((3277 list-address) (raw))
run: 3340 => ((2 list-address))
setm: ((2 list-address)) <= 3340
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7460 to 3340
run: 1498 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3340 => ((1 list-address))
setm: ((1 list-address)) <= 3340
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3340
run: 1499 list-length 7: (((jump)) ((-5 offset)))
run: 1500 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
schedule: scheduling list-value-address/list-length/init-board/main for further processing
schedule: list-value-address/list-length/init-board/main
run: 1501 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7488 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1502 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: 3340 => ((1 list-address))
setm: ((1 list-address)) <= 3340
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7490 to 3340
run: 1503 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3340 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3340
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7491 to 3340
run: 1504 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3340 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3340
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3340
run: 1505 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1506 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 36 => ((2 integer))
setm: ((2 integer)) <= 36
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 36
run: 1507 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1508 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7519 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1509 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: 3340 => ((1 list-address))
setm: ((1 list-address)) <= 3340
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7521 to 3340
run: 1510 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3342 list-address) (raw))
sizeof: ((3342 list-address) (raw))
run: 3405 => ((2 list-address))
setm: ((2 list-address)) <= 3405
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7522 to 3405
run: 1511 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3405 => ((1 list-address))
setm: ((1 list-address)) <= 3405
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3405
run: 1512 list-length 7: (((jump)) ((-5 offset)))
run: 1513 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1514 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7550 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1515 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: 3405 => ((1 list-address))
setm: ((1 list-address)) <= 3405
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7552 to 3405
run: 1516 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3405 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3405
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7553 to 3405
run: 1517 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3405 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3405
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3405
run: 1518 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1519 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 37 => ((2 integer))
setm: ((2 integer)) <= 37
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 37
run: 1520 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1521 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7581 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1522 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: 3405 => ((1 list-address))
setm: ((1 list-address)) <= 3405
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7583 to 3405
run: 1523 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3407 list-address) (raw))
sizeof: ((3407 list-address) (raw))
run: 3470 => ((2 list-address))
setm: ((2 list-address)) <= 3470
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7584 to 3470
run: 1524 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3470 => ((1 list-address))
setm: ((1 list-address)) <= 3470
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3470
run: 1525 list-length 7: (((jump)) ((-5 offset)))
run: 1526 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1527 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7612 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1528 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: 3470 => ((1 list-address))
setm: ((1 list-address)) <= 3470
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7614 to 3470
run: 1529 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3470 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3470
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7615 to 3470
run: 1530 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3470 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3470
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3470
run: 1531 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1532 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 38 => ((2 integer))
setm: ((2 integer)) <= 38
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 38
run: 1533 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1534 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7643 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1535 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: 3470 => ((1 list-address))
setm: ((1 list-address)) <= 3470
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7645 to 3470
run: 1536 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3472 list-address) (raw))
sizeof: ((3472 list-address) (raw))
run: 3535 => ((2 list-address))
setm: ((2 list-address)) <= 3535
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7646 to 3535
run: 1537 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3535 => ((1 list-address))
setm: ((1 list-address)) <= 3535
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3535
run: 1538 list-length 7: (((jump)) ((-5 offset)))
run: 1539 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1540 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7674 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1541 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: 3535 => ((1 list-address))
setm: ((1 list-address)) <= 3535
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7676 to 3535
run: 1542 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3535 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3535
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7677 to 3535
run: 1543 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3535 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3535
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3535
run: 1544 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1545 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 39 => ((2 integer))
setm: ((2 integer)) <= 39
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 39
run: 1546 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1547 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7705 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1548 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: 3535 => ((1 list-address))
setm: ((1 list-address)) <= 3535
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7707 to 3535
run: 1549 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3537 list-address) (raw))
sizeof: ((3537 list-address) (raw))
run: 3600 => ((2 list-address))
setm: ((2 list-address)) <= 3600
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7708 to 3600
run: 1550 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3600 => ((1 list-address))
setm: ((1 list-address)) <= 3600
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3600
run: 1551 list-length 7: (((jump)) ((-5 offset)))
run: 1552 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1553 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7736 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1554 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: 3600 => ((1 list-address))
setm: ((1 list-address)) <= 3600
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7738 to 3600
run: 1555 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3600 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3600
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7739 to 3600
run: 1556 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3600 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3600
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3600
run: 1557 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1558 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 40 => ((2 integer))
setm: ((2 integer)) <= 40
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 40
run: 1559 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1560 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7767 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1561 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: 3600 => ((1 list-address))
setm: ((1 list-address)) <= 3600
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7769 to 3600
run: 1562 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3602 list-address) (raw))
sizeof: ((3602 list-address) (raw))
run: 3665 => ((2 list-address))
setm: ((2 list-address)) <= 3665
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7770 to 3665
run: 1563 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3665 => ((1 list-address))
setm: ((1 list-address)) <= 3665
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3665
run: 1564 list-length 7: (((jump)) ((-5 offset)))
run: 1565 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1566 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7798 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1567 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: 3665 => ((1 list-address))
setm: ((1 list-address)) <= 3665
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7800 to 3665
run: 1568 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3665 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3665
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7801 to 3665
run: 1569 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3665 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3665
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3665
run: 1570 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1571 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 41 => ((2 integer))
setm: ((2 integer)) <= 41
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 41
run: 1572 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1573 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7829 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1574 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: 3665 => ((1 list-address))
setm: ((1 list-address)) <= 3665
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7831 to 3665
run: 1575 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3667 list-address) (raw))
sizeof: ((3667 list-address) (raw))
run: 3730 => ((2 list-address))
setm: ((2 list-address)) <= 3730
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7832 to 3730
run: 1576 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3730 => ((1 list-address))
setm: ((1 list-address)) <= 3730
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3730
run: 1577 list-length 7: (((jump)) ((-5 offset)))
run: 1578 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1579 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7860 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1580 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: 3730 => ((1 list-address))
setm: ((1 list-address)) <= 3730
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7862 to 3730
run: 1581 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3730 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3730
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7863 to 3730
run: 1582 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3730 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3730
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3730
run: 1583 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1584 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 42 => ((2 integer))
setm: ((2 integer)) <= 42
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 42
run: 1585 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1586 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7891 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1587 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: 3730 => ((1 list-address))
setm: ((1 list-address)) <= 3730
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7893 to 3730
run: 1588 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3732 list-address) (raw))
sizeof: ((3732 list-address) (raw))
run: 3795 => ((2 list-address))
setm: ((2 list-address)) <= 3795
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7894 to 3795
run: 1589 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3795 => ((1 list-address))
setm: ((1 list-address)) <= 3795
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3795
run: 1590 list-length 7: (((jump)) ((-5 offset)))
run: 1591 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1592 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7922 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1593 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: 3795 => ((1 list-address))
setm: ((1 list-address)) <= 3795
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7924 to 3795
run: 1594 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3795 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3795
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7925 to 3795
run: 1595 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3795 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3795
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3795
run: 1596 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1597 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 43 => ((2 integer))
setm: ((2 integer)) <= 43
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 43
run: 1598 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1599 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7953 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1600 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: 3795 => ((1 list-address))
setm: ((1 list-address)) <= 3795
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7955 to 3795
run: 1601 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3797 list-address) (raw))
sizeof: ((3797 list-address) (raw))
run: 3860 => ((2 list-address))
setm: ((2 list-address)) <= 3860
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 7956 to 3860
run: 1602 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3860 => ((1 list-address))
setm: ((1 list-address)) <= 3860
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3860
run: 1603 list-length 7: (((jump)) ((-5 offset)))
run: 1604 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1605 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 7984 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1606 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: 3860 => ((1 list-address))
setm: ((1 list-address)) <= 3860
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 7986 to 3860
run: 1607 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3860 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3860
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 7987 to 3860
run: 1608 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3860 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3860
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3860
run: 1609 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1610 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 44 => ((2 integer))
setm: ((2 integer)) <= 44
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 44
run: 1611 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1612 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8015 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1613 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: 3860 => ((1 list-address))
setm: ((1 list-address)) <= 3860
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8017 to 3860
run: 1614 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3862 list-address) (raw))
sizeof: ((3862 list-address) (raw))
run: 3925 => ((2 list-address))
setm: ((2 list-address)) <= 3925
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8018 to 3925
run: 1615 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3925 => ((1 list-address))
setm: ((1 list-address)) <= 3925
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3925
run: 1616 list-length 7: (((jump)) ((-5 offset)))
run: 1617 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1618 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8046 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1619 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: 3925 => ((1 list-address))
setm: ((1 list-address)) <= 3925
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8048 to 3925
run: 1620 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3925 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3925
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8049 to 3925
run: 1621 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3925 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3925
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3925
run: 1622 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1623 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 45 => ((2 integer))
setm: ((2 integer)) <= 45
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 45
run: 1624 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1625 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8077 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1626 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: 3925 => ((1 list-address))
setm: ((1 list-address)) <= 3925
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8079 to 3925
run: 1627 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3927 list-address) (raw))
sizeof: ((3927 list-address) (raw))
run: 3990 => ((2 list-address))
setm: ((2 list-address)) <= 3990
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8080 to 3990
run: 1628 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3990 => ((1 list-address))
setm: ((1 list-address)) <= 3990
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 3990
run: 1629 list-length 7: (((jump)) ((-5 offset)))
run: 1630 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1631 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8108 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1632 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: 3990 => ((1 list-address))
setm: ((1 list-address)) <= 3990
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8110 to 3990
run: 1633 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3990 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3990
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8111 to 3990
run: 1634 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 3990 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 3990
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 3990
run: 1635 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1636 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 46 => ((2 integer))
setm: ((2 integer)) <= 46
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 46
run: 1637 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1638 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8139 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1639 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: 3990 => ((1 list-address))
setm: ((1 list-address)) <= 3990
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8141 to 3990
run: 1640 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3992 list-address) (raw))
sizeof: ((3992 list-address) (raw))
run: 4055 => ((2 list-address))
setm: ((2 list-address)) <= 4055
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8142 to 4055
run: 1641 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4055 => ((1 list-address))
setm: ((1 list-address)) <= 4055
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4055
run: 1642 list-length 7: (((jump)) ((-5 offset)))
run: 1643 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1644 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8170 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1645 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: 4055 => ((1 list-address))
setm: ((1 list-address)) <= 4055
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8172 to 4055
run: 1646 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4055 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4055
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8173 to 4055
run: 1647 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4055 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4055
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4055
run: 1648 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1649 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 47 => ((2 integer))
setm: ((2 integer)) <= 47
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 47
run: 1650 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1651 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8201 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1652 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: 4055 => ((1 list-address))
setm: ((1 list-address)) <= 4055
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8203 to 4055
run: 1653 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4057 list-address) (raw))
sizeof: ((4057 list-address) (raw))
run: 4120 => ((2 list-address))
setm: ((2 list-address)) <= 4120
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8204 to 4120
run: 1654 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4120 => ((1 list-address))
setm: ((1 list-address)) <= 4120
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4120
run: 1655 list-length 7: (((jump)) ((-5 offset)))
run: 1656 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1657 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8232 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1658 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: 4120 => ((1 list-address))
setm: ((1 list-address)) <= 4120
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8234 to 4120
run: 1659 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4120 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4120
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8235 to 4120
run: 1660 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4120 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4120
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4120
run: 1661 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1662 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 48 => ((2 integer))
setm: ((2 integer)) <= 48
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 48
run: 1663 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1664 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8263 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1665 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: 4120 => ((1 list-address))
setm: ((1 list-address)) <= 4120
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8265 to 4120
run: 1666 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4122 list-address) (raw))
sizeof: ((4122 list-address) (raw))
run: 4185 => ((2 list-address))
setm: ((2 list-address)) <= 4185
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8266 to 4185
run: 1667 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4185 => ((1 list-address))
setm: ((1 list-address)) <= 4185
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4185
run: 1668 list-length 7: (((jump)) ((-5 offset)))
run: 1669 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1670 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8294 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1671 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: 4185 => ((1 list-address))
setm: ((1 list-address)) <= 4185
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8296 to 4185
run: 1672 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4185 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4185
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8297 to 4185
run: 1673 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4185 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4185
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4185
run: 1674 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1675 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 49 => ((2 integer))
setm: ((2 integer)) <= 49
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 49
run: 1676 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1677 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8325 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1678 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: 4185 => ((1 list-address))
setm: ((1 list-address)) <= 4185
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8327 to 4185
run: 1679 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4187 list-address) (raw))
sizeof: ((4187 list-address) (raw))
run: 4250 => ((2 list-address))
setm: ((2 list-address)) <= 4250
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8328 to 4250
run: 1680 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4250 => ((1 list-address))
setm: ((1 list-address)) <= 4250
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4250
run: 1681 list-length 7: (((jump)) ((-5 offset)))
run: 1682 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1683 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8356 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1684 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: 4250 => ((1 list-address))
setm: ((1 list-address)) <= 4250
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8358 to 4250
run: 1685 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4250 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4250
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8359 to 4250
run: 1686 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4250 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4250
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4250
run: 1687 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1688 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 50 => ((2 integer))
setm: ((2 integer)) <= 50
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 50
run: 1689 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1690 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8387 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1691 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: 4250 => ((1 list-address))
setm: ((1 list-address)) <= 4250
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8389 to 4250
run: 1692 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4252 list-address) (raw))
sizeof: ((4252 list-address) (raw))
run: 4315 => ((2 list-address))
setm: ((2 list-address)) <= 4315
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8390 to 4315
run: 1693 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4315 => ((1 list-address))
setm: ((1 list-address)) <= 4315
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4315
run: 1694 list-length 7: (((jump)) ((-5 offset)))
run: 1695 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1696 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8418 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1697 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: 4315 => ((1 list-address))
setm: ((1 list-address)) <= 4315
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8420 to 4315
run: 1698 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4315 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4315
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8421 to 4315
run: 1699 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4315 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4315
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4315
run: 1700 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1701 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 51 => ((2 integer))
setm: ((2 integer)) <= 51
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 51
run: 1702 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1703 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8449 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1704 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: 4315 => ((1 list-address))
setm: ((1 list-address)) <= 4315
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8451 to 4315
run: 1705 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4317 list-address) (raw))
sizeof: ((4317 list-address) (raw))
run: 4380 => ((2 list-address))
setm: ((2 list-address)) <= 4380
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8452 to 4380
run: 1706 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4380 => ((1 list-address))
setm: ((1 list-address)) <= 4380
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4380
run: 1707 list-length 7: (((jump)) ((-5 offset)))
run: 1708 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1709 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8480 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1710 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: 4380 => ((1 list-address))
setm: ((1 list-address)) <= 4380
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8482 to 4380
run: 1711 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4380 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4380
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8483 to 4380
run: 1712 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4380 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4380
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4380
run: 1713 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1714 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 52 => ((2 integer))
setm: ((2 integer)) <= 52
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 52
run: 1715 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1716 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8511 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1717 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: 4380 => ((1 list-address))
setm: ((1 list-address)) <= 4380
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8513 to 4380
run: 1718 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4382 list-address) (raw))
sizeof: ((4382 list-address) (raw))
run: 4445 => ((2 list-address))
setm: ((2 list-address)) <= 4445
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8514 to 4445
run: 1719 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4445 => ((1 list-address))
setm: ((1 list-address)) <= 4445
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4445
run: 1720 list-length 7: (((jump)) ((-5 offset)))
run: 1721 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1722 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8542 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1723 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: 4445 => ((1 list-address))
setm: ((1 list-address)) <= 4445
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8544 to 4445
run: 1724 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4445 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4445
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8545 to 4445
run: 1725 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4445 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4445
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4445
run: 1726 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1727 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 53 => ((2 integer))
setm: ((2 integer)) <= 53
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 53
run: 1728 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1729 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8573 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1730 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: 4445 => ((1 list-address))
setm: ((1 list-address)) <= 4445
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8575 to 4445
run: 1731 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4447 list-address) (raw))
sizeof: ((4447 list-address) (raw))
run: 4510 => ((2 list-address))
setm: ((2 list-address)) <= 4510
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8576 to 4510
run: 1732 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4510 => ((1 list-address))
setm: ((1 list-address)) <= 4510
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4510
run: 1733 list-length 7: (((jump)) ((-5 offset)))
run: 1734 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1735 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8604 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1736 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: 4510 => ((1 list-address))
setm: ((1 list-address)) <= 4510
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8606 to 4510
run: 1737 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4510 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4510
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8607 to 4510
run: 1738 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4510 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4510
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4510
run: 1739 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1740 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 54 => ((2 integer))
setm: ((2 integer)) <= 54
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 54
run: 1741 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1742 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8635 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1743 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: 4510 => ((1 list-address))
setm: ((1 list-address)) <= 4510
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8637 to 4510
run: 1744 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4512 list-address) (raw))
sizeof: ((4512 list-address) (raw))
run: 4575 => ((2 list-address))
setm: ((2 list-address)) <= 4575
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8638 to 4575
run: 1745 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4575 => ((1 list-address))
setm: ((1 list-address)) <= 4575
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4575
run: 1746 list-length 7: (((jump)) ((-5 offset)))
run: 1747 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1748 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8666 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1749 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: 4575 => ((1 list-address))
setm: ((1 list-address)) <= 4575
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8668 to 4575
run: 1750 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4575 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4575
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8669 to 4575
run: 1751 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4575 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4575
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4575
run: 1752 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1753 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 55 => ((2 integer))
setm: ((2 integer)) <= 55
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 55
run: 1754 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1755 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8697 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1756 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: 4575 => ((1 list-address))
setm: ((1 list-address)) <= 4575
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8699 to 4575
run: 1757 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4577 list-address) (raw))
sizeof: ((4577 list-address) (raw))
run: 4640 => ((2 list-address))
setm: ((2 list-address)) <= 4640
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8700 to 4640
run: 1758 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4640 => ((1 list-address))
setm: ((1 list-address)) <= 4640
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4640
run: 1759 list-length 7: (((jump)) ((-5 offset)))
run: 1760 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1761 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8728 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1762 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: 4640 => ((1 list-address))
setm: ((1 list-address)) <= 4640
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8730 to 4640
run: 1763 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4640 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4640
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8731 to 4640
run: 1764 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4640 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4640
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4640
run: 1765 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1766 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 56 => ((2 integer))
setm: ((2 integer)) <= 56
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 56
run: 1767 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1768 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8759 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1769 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: 4640 => ((1 list-address))
setm: ((1 list-address)) <= 4640
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8761 to 4640
run: 1770 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4642 list-address) (raw))
sizeof: ((4642 list-address) (raw))
run: 4705 => ((2 list-address))
setm: ((2 list-address)) <= 4705
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8762 to 4705
run: 1771 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4705 => ((1 list-address))
setm: ((1 list-address)) <= 4705
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4705
run: 1772 list-length 7: (((jump)) ((-5 offset)))
run: 1773 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1774 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8790 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1775 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: 4705 => ((1 list-address))
setm: ((1 list-address)) <= 4705
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8792 to 4705
run: 1776 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4705 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4705
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8793 to 4705
run: 1777 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4705 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4705
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4705
run: 1778 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1779 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 57 => ((2 integer))
setm: ((2 integer)) <= 57
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 57
run: 1780 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1781 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8821 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1782 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: 4705 => ((1 list-address))
setm: ((1 list-address)) <= 4705
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8823 to 4705
run: 1783 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4707 list-address) (raw))
sizeof: ((4707 list-address) (raw))
run: 4770 => ((2 list-address))
setm: ((2 list-address)) <= 4770
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8824 to 4770
run: 1784 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4770 => ((1 list-address))
setm: ((1 list-address)) <= 4770
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4770
run: 1785 list-length 7: (((jump)) ((-5 offset)))
run: 1786 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1787 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8852 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1788 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: 4770 => ((1 list-address))
setm: ((1 list-address)) <= 4770
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8854 to 4770
run: 1789 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4770 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4770
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8855 to 4770
run: 1790 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4770 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4770
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4770
run: 1791 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1792 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 58 => ((2 integer))
setm: ((2 integer)) <= 58
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 58
run: 1793 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1794 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8883 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1795 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: 4770 => ((1 list-address))
setm: ((1 list-address)) <= 4770
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8885 to 4770
run: 1796 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4772 list-address) (raw))
sizeof: ((4772 list-address) (raw))
run: 4835 => ((2 list-address))
setm: ((2 list-address)) <= 4835
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8886 to 4835
run: 1797 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4835 => ((1 list-address))
setm: ((1 list-address)) <= 4835
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4835
run: 1798 list-length 7: (((jump)) ((-5 offset)))
run: 1799 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1800 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8914 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1801 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: 4835 => ((1 list-address))
setm: ((1 list-address)) <= 4835
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8916 to 4835
run: 1802 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4835 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4835
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8917 to 4835
run: 1803 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4835 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4835
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4835
run: 1804 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1805 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 59 => ((2 integer))
setm: ((2 integer)) <= 59
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 59
run: 1806 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1807 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8945 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1808 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: 4835 => ((1 list-address))
setm: ((1 list-address)) <= 4835
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8947 to 4835
run: 1809 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4837 list-address) (raw))
sizeof: ((4837 list-address) (raw))
run: 4900 => ((2 list-address))
setm: ((2 list-address)) <= 4900
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 8948 to 4900
run: 1810 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4900 => ((1 list-address))
setm: ((1 list-address)) <= 4900
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4900
run: 1811 list-length 7: (((jump)) ((-5 offset)))
run: 1812 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1813 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 8976 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1814 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: 4900 => ((1 list-address))
setm: ((1 list-address)) <= 4900
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 8978 to 4900
run: 1815 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4900 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4900
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 8979 to 4900
run: 1816 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4900 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4900
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4900
run: 1817 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1818 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 60 => ((2 integer))
setm: ((2 integer)) <= 60
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 60
run: 1819 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1820 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9007 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1821 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: 4900 => ((1 list-address))
setm: ((1 list-address)) <= 4900
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9009 to 4900
run: 1822 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4902 list-address) (raw))
sizeof: ((4902 list-address) (raw))
run: 4965 => ((2 list-address))
setm: ((2 list-address)) <= 4965
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9010 to 4965
run: 1823 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4965 => ((1 list-address))
setm: ((1 list-address)) <= 4965
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 4965
run: 1824 list-length 7: (((jump)) ((-5 offset)))
run: 1825 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1826 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9038 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1827 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: 4965 => ((1 list-address))
setm: ((1 list-address)) <= 4965
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9040 to 4965
run: 1828 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4965 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4965
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9041 to 4965
run: 1829 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 4965 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 4965
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 4965
run: 1830 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1831 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 61 => ((2 integer))
setm: ((2 integer)) <= 61
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 61
run: 1832 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1833 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9069 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1834 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: 4965 => ((1 list-address))
setm: ((1 list-address)) <= 4965
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9071 to 4965
run: 1835 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4967 list-address) (raw))
sizeof: ((4967 list-address) (raw))
run: 5030 => ((2 list-address))
setm: ((2 list-address)) <= 5030
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9072 to 5030
run: 1836 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5030 => ((1 list-address))
setm: ((1 list-address)) <= 5030
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 5030
run: 1837 list-length 7: (((jump)) ((-5 offset)))
run: 1838 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1839 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9100 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1840 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: 5030 => ((1 list-address))
setm: ((1 list-address)) <= 5030
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9102 to 5030
run: 1841 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5030 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5030
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9103 to 5030
run: 1842 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5030 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5030
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 5030
run: 1843 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1844 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 62 => ((2 integer))
setm: ((2 integer)) <= 62
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 62
run: 1845 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1846 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9131 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1847 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: 5030 => ((1 list-address))
setm: ((1 list-address)) <= 5030
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9133 to 5030
run: 1848 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5032 list-address) (raw))
sizeof: ((5032 list-address) (raw))
run: 5095 => ((2 list-address))
setm: ((2 list-address)) <= 5095
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9134 to 5095
run: 1849 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5095 => ((1 list-address))
setm: ((1 list-address)) <= 5095
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 5095
run: 1850 list-length 7: (((jump)) ((-5 offset)))
run: 1851 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1852 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9162 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1853 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: 5095 => ((1 list-address))
setm: ((1 list-address)) <= 5095
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9164 to 5095
run: 1854 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5095 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5095
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9165 to 5095
run: 1855 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5095 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5095
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 5095
run: 1856 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1857 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 63 => ((2 integer))
setm: ((2 integer)) <= 63
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 63
run: 1858 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1859 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9193 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1860 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: 5095 => ((1 list-address))
setm: ((1 list-address)) <= 5095
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9195 to 5095
run: 1861 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5097 list-address) (raw))
sizeof: ((5097 list-address) (raw))
run: 5160 => ((2 list-address))
setm: ((2 list-address)) <= 5160
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9196 to 5160
run: 1862 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5160 => ((1 list-address))
setm: ((1 list-address)) <= 5160
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to 5160
run: 1863 list-length 7: (((jump)) ((-5 offset)))
run: 1864 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1865 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9224 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1866 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: 5160 => ((1 list-address))
setm: ((1 list-address)) <= 5160
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9226 to 5160
run: 1867 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5160 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5160
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9227 to 5160
run: 1868 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: 5160 => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= 5160
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to 5160
run: 1869 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1870 list-length 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: 64 => ((2 integer))
setm: ((2 integer)) <= 64
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5290 to 64
run: 1871 list-length 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1872 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9255 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1873 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: 5160 => ((1 list-address))
setm: ((1 list-address)) <= 5160
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9257 to 5160
run: 1874 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5162 list-address) (raw))
sizeof: ((5162 list-address) (raw))
run: nil => ((2 list-address))
setm: ((2 list-address)) <= nil
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9258 to nil
run: 1875 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: nil => ((1 list-address))
setm: ((1 list-address)) <= nil
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 5289 to nil
run: 1876 list-length 7: (((jump)) ((-5 offset)))
run: 1877 list-length 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1878 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9286 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1879 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (nil)
run: nil => ((1 list-address))
setm: ((1 list-address)) <= nil
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9288 to nil
run: 1880 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: nil => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= nil
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9289 to nil
run: 1881 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((3 tagged-value-address)))
reply: nil => ((3 tagged-value-address))
setm: ((3 tagged-value-address)) <= nil
setm: size of ((3 tagged-value-address)) is 1
setm: ((3 tagged-value-address)): setting 5291 to nil
run: 1882 list-length 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
m: ((3 tagged-value-address))
sizeof: ((3 tagged-value-address))
run: 1883 list-length 8: (((reply)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
reply: (((2 integer))) (((2 integer)))
reply: 64 => ((2 integer))
setm: ((2 integer)) <= 64
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 5259 to 64
run: 1884 init-board 3: (((3 boolean)) <- ((equal)) ((2 integer)) ((64 literal)))
m: ((2 integer))
sizeof: ((2 integer))
run: t => ((3 boolean))
setm: ((3 boolean)) <= t
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 5260 to t
run: 1885 init-board 4: (((assert)) ((3 boolean)) ((chessboard had incorrect size literal)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 1886 init-board 5: (((4 board-address)) <- ((new)) ((board literal)) ((8 literal)))
sizeof: ((_ file-address))
run: 9317 => ((4 board-address))
setm: ((4 board-address)) <= 9317
setm: size of ((4 board-address)) is 1
setm: ((4 board-address)): setting 5261 to 9317
run: 1887 init-board 6: (((5 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5262 to 0
run: 1888 init-board 7: (((6 list-address)) <- ((copy)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1065 => ((6 list-address))
setm: ((6 list-address)) <= 1065
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5263 to 1065
run: 1889 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5264 to nil
run: 1890 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 1891 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
run: 9318 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9318
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5265 to 9318
run: 1892 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 1893 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9326 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1894 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9328 to 1065
run: 1895 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 9357 => ((2 file-address))
setm: ((2 file-address)) <= 9357
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 9329 to 9357
run: 1896 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9330 to 0
run: 1897 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9331 to nil
run: 1898 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1899 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1900 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9366 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1901 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9368 to 1065
run: 1902 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1065 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1065
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9369 to 1065
run: 1903 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1065 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1065
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9332 to 1065
run: 1904 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
run: 9358 => ((6 square-address))
setm: ((6 square-address)) <= 9358
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9333 to 9358
run: 1905 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1066 location) (raw))
sizeof: ((1066 location) (raw))
run: #\R => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\R
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9358 to #\R
run: 1906 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1907 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9397 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1908 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1065)
run: 1065 => ((1 list-address))
setm: ((1 list-address)) <= 1065
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9399 to 1065
run: 1909 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1067 list-address) (raw))
sizeof: ((1067 list-address) (raw))
run: 1130 => ((2 list-address))
setm: ((2 list-address)) <= 1130
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9400 to 1130
run: 1910 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1130 => ((1 list-address))
setm: ((1 list-address)) <= 1130
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9328 to 1130
run: 1911 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9330 to 1
run: 1912 init-file 11: (((jump)) ((-8 offset)))
run: 1913 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9331 to nil
run: 1914 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1915 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1916 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9428 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1917 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: 1130 => ((1 list-address))
setm: ((1 list-address)) <= 1130
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9430 to 1130
run: 1918 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1130 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1130
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9431 to 1130
run: 1919 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1130 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1130
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9332 to 1130
run: 1920 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
run: 9359 => ((6 square-address))
setm: ((6 square-address)) <= 9359
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9333 to 9359
run: 1921 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1131 location) (raw))
sizeof: ((1131 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9359 to #\P
run: 1922 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1923 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9459 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1924 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1130)
run: 1130 => ((1 list-address))
setm: ((1 list-address)) <= 1130
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9461 to 1130
run: 1925 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1132 list-address) (raw))
sizeof: ((1132 list-address) (raw))
run: 1195 => ((2 list-address))
setm: ((2 list-address)) <= 1195
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9462 to 1195
run: 1926 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1195 => ((1 list-address))
setm: ((1 list-address)) <= 1195
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9328 to 1195
run: 1927 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9330 to 2
run: 1928 init-file 11: (((jump)) ((-8 offset)))
run: 1929 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9331 to nil
run: 1930 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1931 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1932 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9490 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1933 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: 1195 => ((1 list-address))
setm: ((1 list-address)) <= 1195
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9492 to 1195
run: 1934 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1195 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1195
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9493 to 1195
run: 1935 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1195 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1195
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9332 to 1195
run: 1936 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
run: 9360 => ((6 square-address))
setm: ((6 square-address)) <= 9360
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9333 to 9360
run: 1937 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1196 location) (raw))
sizeof: ((1196 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9360 to #\_
run: 1938 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1939 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9521 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1940 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1195)
run: 1195 => ((1 list-address))
setm: ((1 list-address)) <= 1195
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9523 to 1195
run: 1941 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1197 list-address) (raw))
sizeof: ((1197 list-address) (raw))
run: 1260 => ((2 list-address))
setm: ((2 list-address)) <= 1260
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9524 to 1260
run: 1942 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1260 => ((1 list-address))
setm: ((1 list-address)) <= 1260
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9328 to 1260
run: 1943 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9330 to 3
run: 1944 init-file 11: (((jump)) ((-8 offset)))
run: 1945 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9331 to nil
run: 1946 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1947 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1948 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9552 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1949 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: 1260 => ((1 list-address))
setm: ((1 list-address)) <= 1260
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9554 to 1260
run: 1950 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1260 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1260
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9555 to 1260
run: 1951 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1260 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1260
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9332 to 1260
run: 1952 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
run: 9361 => ((6 square-address))
setm: ((6 square-address)) <= 9361
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9333 to 9361
run: 1953 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1261 location) (raw))
sizeof: ((1261 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9361 to #\_
run: 1954 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1955 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9583 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1956 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1260)
run: 1260 => ((1 list-address))
setm: ((1 list-address)) <= 1260
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9585 to 1260
run: 1957 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1262 list-address) (raw))
sizeof: ((1262 list-address) (raw))
run: 1325 => ((2 list-address))
setm: ((2 list-address)) <= 1325
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9586 to 1325
run: 1958 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1325 => ((1 list-address))
setm: ((1 list-address)) <= 1325
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9328 to 1325
run: 1959 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9330 to 4
run: 1960 init-file 11: (((jump)) ((-8 offset)))
run: 1961 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9331 to nil
run: 1962 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1963 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1964 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9614 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1965 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: 1325 => ((1 list-address))
setm: ((1 list-address)) <= 1325
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9616 to 1325
run: 1966 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1325 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1325
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9617 to 1325
run: 1967 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1325 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1325
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9332 to 1325
run: 1968 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
run: 9362 => ((6 square-address))
setm: ((6 square-address)) <= 9362
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9333 to 9362
run: 1969 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1326 location) (raw))
sizeof: ((1326 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9362 to #\_
run: 1970 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1971 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9645 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1972 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1325)
run: 1325 => ((1 list-address))
setm: ((1 list-address)) <= 1325
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9647 to 1325
run: 1973 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1327 list-address) (raw))
sizeof: ((1327 list-address) (raw))
run: 1390 => ((2 list-address))
setm: ((2 list-address)) <= 1390
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9648 to 1390
run: 1974 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1390 => ((1 list-address))
setm: ((1 list-address)) <= 1390
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9328 to 1390
run: 1975 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9330 to 5
run: 1976 init-file 11: (((jump)) ((-8 offset)))
run: 1977 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9331 to nil
run: 1978 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1979 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1980 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9676 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1981 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: 1390 => ((1 list-address))
setm: ((1 list-address)) <= 1390
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9678 to 1390
run: 1982 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1390 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1390
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9679 to 1390
run: 1983 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1390 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1390
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9332 to 1390
run: 1984 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
run: 9363 => ((6 square-address))
setm: ((6 square-address)) <= 9363
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9333 to 9363
run: 1985 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1391 location) (raw))
sizeof: ((1391 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9363 to #\_
run: 1986 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1987 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9707 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1988 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1390)
run: 1390 => ((1 list-address))
setm: ((1 list-address)) <= 1390
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9709 to 1390
run: 1989 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1392 list-address) (raw))
sizeof: ((1392 list-address) (raw))
run: 1455 => ((2 list-address))
setm: ((2 list-address)) <= 1455
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9710 to 1455
run: 1990 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1455 => ((1 list-address))
setm: ((1 list-address)) <= 1455
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9328 to 1455
run: 1991 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9330 to 6
run: 1992 init-file 11: (((jump)) ((-8 offset)))
run: 1993 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9331 to nil
run: 1994 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1995 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1996 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9738 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1997 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: 1455 => ((1 list-address))
setm: ((1 list-address)) <= 1455
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9740 to 1455
run: 1998 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1455 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1455
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9741 to 1455
run: 1999 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1455 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1455
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9332 to 1455
run: 2000 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
run: 9364 => ((6 square-address))
setm: ((6 square-address)) <= 9364
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9333 to 9364
schedule: scheduling init-file/init-board/main for further processing
schedule: init-file/init-board/main
run: 2001 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1456 location) (raw))
sizeof: ((1456 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9364 to #\p
run: 2002 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2003 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9769 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2004 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1455)
run: 1455 => ((1 list-address))
setm: ((1 list-address)) <= 1455
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9771 to 1455
run: 2005 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1457 list-address) (raw))
sizeof: ((1457 list-address) (raw))
run: 1520 => ((2 list-address))
setm: ((2 list-address)) <= 1520
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9772 to 1520
run: 2006 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1520 => ((1 list-address))
setm: ((1 list-address)) <= 1520
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9328 to 1520
run: 2007 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9330 to 7
run: 2008 init-file 11: (((jump)) ((-8 offset)))
run: 2009 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9331 to nil
run: 2010 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2011 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2012 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9800 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2013 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: 1520 => ((1 list-address))
setm: ((1 list-address)) <= 1520
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9802 to 1520
run: 2014 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1520 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1520
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9803 to 1520
run: 2015 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1520 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1520
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9332 to 1520
run: 2016 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
run: 9365 => ((6 square-address))
setm: ((6 square-address)) <= 9365
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9333 to 9365
run: 2017 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1521 location) (raw))
sizeof: ((1521 location) (raw))
run: #\r => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\r
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9365 to #\r
run: 2018 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2019 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9831 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2020 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1520)
run: 1520 => ((1 list-address))
setm: ((1 list-address)) <= 1520
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9833 to 1520
run: 2021 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1522 list-address) (raw))
sizeof: ((1522 list-address) (raw))
run: 1585 => ((2 list-address))
setm: ((2 list-address)) <= 1585
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9834 to 1585
run: 2022 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1585 => ((1 list-address))
setm: ((1 list-address)) <= 1585
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9328 to 1585
run: 2023 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9330 to 8
run: 2024 init-file 11: (((jump)) ((-8 offset)))
run: 2025 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9331 to t
run: 2026 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2027 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 9357 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 9357
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9318 to 9357
reply: 1585 => ((6 list-address))
setm: ((6 list-address)) <= 1585
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5263 to 1585
run: 2028 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5262 to 1
run: 2029 init-board 13: (((jump)) ((-6 offset)))
run: 2030 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5264 to nil
run: 2031 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 2032 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
run: 9319 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9319
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5265 to 9319
run: 2033 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 2034 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9862 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2035 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: 1585 => ((1 list-address))
setm: ((1 list-address)) <= 1585
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9864 to 1585
run: 2036 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 9893 => ((2 file-address))
setm: ((2 file-address)) <= 9893
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 9865 to 9893
run: 2037 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9866 to 0
run: 2038 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9867 to nil
run: 2039 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2040 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2041 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9902 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2042 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: 1585 => ((1 list-address))
setm: ((1 list-address)) <= 1585
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9904 to 1585
run: 2043 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1585 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1585
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9905 to 1585
run: 2044 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1585 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1585
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9868 to 1585
run: 2045 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
run: 9894 => ((6 square-address))
setm: ((6 square-address)) <= 9894
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9869 to 9894
run: 2046 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1586 location) (raw))
sizeof: ((1586 location) (raw))
run: #\N => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\N
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9894 to #\N
run: 2047 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2048 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9933 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2049 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1585)
run: 1585 => ((1 list-address))
setm: ((1 list-address)) <= 1585
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9935 to 1585
run: 2050 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1587 list-address) (raw))
sizeof: ((1587 list-address) (raw))
run: 1650 => ((2 list-address))
setm: ((2 list-address)) <= 1650
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9936 to 1650
run: 2051 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1650 => ((1 list-address))
setm: ((1 list-address)) <= 1650
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9864 to 1650
run: 2052 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9866 to 1
run: 2053 init-file 11: (((jump)) ((-8 offset)))
run: 2054 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9867 to nil
run: 2055 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2056 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2057 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9964 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2058 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: 1650 => ((1 list-address))
setm: ((1 list-address)) <= 1650
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9966 to 1650
run: 2059 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1650 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1650
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 9967 to 1650
run: 2060 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1650 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1650
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9868 to 1650
run: 2061 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
run: 9895 => ((6 square-address))
setm: ((6 square-address)) <= 9895
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9869 to 9895
run: 2062 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1651 location) (raw))
sizeof: ((1651 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9895 to #\P
run: 2063 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2064 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 9995 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2065 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1650)
run: 1650 => ((1 list-address))
setm: ((1 list-address)) <= 1650
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9997 to 1650
run: 2066 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1652 list-address) (raw))
sizeof: ((1652 list-address) (raw))
run: 1715 => ((2 list-address))
setm: ((2 list-address)) <= 1715
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 9998 to 1715
run: 2067 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1715 => ((1 list-address))
setm: ((1 list-address)) <= 1715
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9864 to 1715
run: 2068 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9866 to 2
run: 2069 init-file 11: (((jump)) ((-8 offset)))
run: 2070 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9867 to nil
run: 2071 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2072 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2073 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10026 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2074 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: 1715 => ((1 list-address))
setm: ((1 list-address)) <= 1715
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10028 to 1715
run: 2075 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1715 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1715
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10029 to 1715
run: 2076 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1715 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1715
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9868 to 1715
run: 2077 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
run: 9896 => ((6 square-address))
setm: ((6 square-address)) <= 9896
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9869 to 9896
run: 2078 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1716 location) (raw))
sizeof: ((1716 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9896 to #\_
run: 2079 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2080 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10057 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2081 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1715)
run: 1715 => ((1 list-address))
setm: ((1 list-address)) <= 1715
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10059 to 1715
run: 2082 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1717 list-address) (raw))
sizeof: ((1717 list-address) (raw))
run: 1780 => ((2 list-address))
setm: ((2 list-address)) <= 1780
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10060 to 1780
run: 2083 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1780 => ((1 list-address))
setm: ((1 list-address)) <= 1780
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9864 to 1780
run: 2084 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9866 to 3
run: 2085 init-file 11: (((jump)) ((-8 offset)))
run: 2086 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9867 to nil
run: 2087 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2088 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2089 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10088 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2090 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: 1780 => ((1 list-address))
setm: ((1 list-address)) <= 1780
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10090 to 1780
run: 2091 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1780 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1780
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10091 to 1780
run: 2092 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1780 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1780
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9868 to 1780
run: 2093 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
run: 9897 => ((6 square-address))
setm: ((6 square-address)) <= 9897
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9869 to 9897
run: 2094 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1781 location) (raw))
sizeof: ((1781 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9897 to #\_
run: 2095 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2096 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10119 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2097 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1780)
run: 1780 => ((1 list-address))
setm: ((1 list-address)) <= 1780
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10121 to 1780
run: 2098 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1782 list-address) (raw))
sizeof: ((1782 list-address) (raw))
run: 1845 => ((2 list-address))
setm: ((2 list-address)) <= 1845
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10122 to 1845
run: 2099 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1845 => ((1 list-address))
setm: ((1 list-address)) <= 1845
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9864 to 1845
run: 2100 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9866 to 4
run: 2101 init-file 11: (((jump)) ((-8 offset)))
run: 2102 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9867 to nil
run: 2103 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2104 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2105 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10150 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2106 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: 1845 => ((1 list-address))
setm: ((1 list-address)) <= 1845
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10152 to 1845
run: 2107 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1845 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1845
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10153 to 1845
run: 2108 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1845 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1845
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9868 to 1845
run: 2109 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
run: 9898 => ((6 square-address))
setm: ((6 square-address)) <= 9898
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9869 to 9898
run: 2110 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1846 location) (raw))
sizeof: ((1846 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9898 to #\_
run: 2111 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2112 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10181 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2113 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1845)
run: 1845 => ((1 list-address))
setm: ((1 list-address)) <= 1845
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10183 to 1845
run: 2114 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1847 list-address) (raw))
sizeof: ((1847 list-address) (raw))
run: 1910 => ((2 list-address))
setm: ((2 list-address)) <= 1910
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10184 to 1910
run: 2115 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1910 => ((1 list-address))
setm: ((1 list-address)) <= 1910
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9864 to 1910
run: 2116 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9866 to 5
run: 2117 init-file 11: (((jump)) ((-8 offset)))
run: 2118 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9867 to nil
run: 2119 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2120 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2121 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10212 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2122 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: 1910 => ((1 list-address))
setm: ((1 list-address)) <= 1910
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10214 to 1910
run: 2123 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1910 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1910
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10215 to 1910
run: 2124 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1910 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1910
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9868 to 1910
run: 2125 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
run: 9899 => ((6 square-address))
setm: ((6 square-address)) <= 9899
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9869 to 9899
run: 2126 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1911 location) (raw))
sizeof: ((1911 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9899 to #\_
run: 2127 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2128 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10243 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2129 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1910)
run: 1910 => ((1 list-address))
setm: ((1 list-address)) <= 1910
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10245 to 1910
run: 2130 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1912 list-address) (raw))
sizeof: ((1912 list-address) (raw))
run: 1975 => ((2 list-address))
setm: ((2 list-address)) <= 1975
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10246 to 1975
run: 2131 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1975 => ((1 list-address))
setm: ((1 list-address)) <= 1975
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9864 to 1975
run: 2132 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9866 to 6
run: 2133 init-file 11: (((jump)) ((-8 offset)))
run: 2134 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9867 to nil
run: 2135 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2136 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2137 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10274 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2138 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: 1975 => ((1 list-address))
setm: ((1 list-address)) <= 1975
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10276 to 1975
run: 2139 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1975 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1975
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10277 to 1975
run: 2140 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 1975 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 1975
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9868 to 1975
run: 2141 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
run: 9900 => ((6 square-address))
setm: ((6 square-address)) <= 9900
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9869 to 9900
run: 2142 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((1976 location) (raw))
sizeof: ((1976 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9900 to #\p
run: 2143 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2144 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10305 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2145 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1975)
run: 1975 => ((1 list-address))
setm: ((1 list-address)) <= 1975
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10307 to 1975
run: 2146 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1977 list-address) (raw))
sizeof: ((1977 list-address) (raw))
run: 2040 => ((2 list-address))
setm: ((2 list-address)) <= 2040
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10308 to 2040
run: 2147 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2040 => ((1 list-address))
setm: ((1 list-address)) <= 2040
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9864 to 2040
run: 2148 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9866 to 7
run: 2149 init-file 11: (((jump)) ((-8 offset)))
run: 2150 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9867 to nil
run: 2151 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2152 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2153 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10336 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2154 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: 2040 => ((1 list-address))
setm: ((1 list-address)) <= 2040
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10338 to 2040
run: 2155 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2040 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2040
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10339 to 2040
run: 2156 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2040 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2040
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 9868 to 2040
run: 2157 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
run: 9901 => ((6 square-address))
setm: ((6 square-address)) <= 9901
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 9869 to 9901
run: 2158 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2041 location) (raw))
sizeof: ((2041 location) (raw))
run: #\n => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\n
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 9901 to #\n
run: 2159 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2160 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10367 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2161 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2040)
run: 2040 => ((1 list-address))
setm: ((1 list-address)) <= 2040
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10369 to 2040
run: 2162 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2042 list-address) (raw))
sizeof: ((2042 list-address) (raw))
run: 2105 => ((2 list-address))
setm: ((2 list-address)) <= 2105
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10370 to 2105
run: 2163 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2105 => ((1 list-address))
setm: ((1 list-address)) <= 2105
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 9864 to 2105
run: 2164 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 9866 to 8
run: 2165 init-file 11: (((jump)) ((-8 offset)))
run: 2166 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 9867 to t
run: 2167 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2168 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 9893 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 9893
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9319 to 9893
reply: 2105 => ((6 list-address))
setm: ((6 list-address)) <= 2105
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5263 to 2105
run: 2169 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5262 to 2
run: 2170 init-board 13: (((jump)) ((-6 offset)))
run: 2171 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5264 to nil
run: 2172 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 2173 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
run: 9320 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9320
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5265 to 9320
run: 2174 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 2175 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10398 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2176 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: 2105 => ((1 list-address))
setm: ((1 list-address)) <= 2105
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10400 to 2105
run: 2177 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 10429 => ((2 file-address))
setm: ((2 file-address)) <= 10429
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 10401 to 10429
run: 2178 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10402 to 0
run: 2179 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10403 to nil
run: 2180 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2181 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2182 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10438 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2183 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: 2105 => ((1 list-address))
setm: ((1 list-address)) <= 2105
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10440 to 2105
run: 2184 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2105 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2105
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10441 to 2105
run: 2185 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2105 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2105
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10404 to 2105
run: 2186 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
run: 10430 => ((6 square-address))
setm: ((6 square-address)) <= 10430
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10405 to 10430
run: 2187 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2106 location) (raw))
sizeof: ((2106 location) (raw))
run: #\B => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\B
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10430 to #\B
run: 2188 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2189 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10469 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2190 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2105)
run: 2105 => ((1 list-address))
setm: ((1 list-address)) <= 2105
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10471 to 2105
run: 2191 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2107 list-address) (raw))
sizeof: ((2107 list-address) (raw))
run: 2170 => ((2 list-address))
setm: ((2 list-address)) <= 2170
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10472 to 2170
run: 2192 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2170 => ((1 list-address))
setm: ((1 list-address)) <= 2170
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10400 to 2170
run: 2193 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10402 to 1
run: 2194 init-file 11: (((jump)) ((-8 offset)))
run: 2195 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10403 to nil
run: 2196 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2197 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2198 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10500 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2199 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: 2170 => ((1 list-address))
setm: ((1 list-address)) <= 2170
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10502 to 2170
run: 2200 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2170 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2170
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10503 to 2170
run: 2201 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2170 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2170
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10404 to 2170
run: 2202 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
run: 10431 => ((6 square-address))
setm: ((6 square-address)) <= 10431
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10405 to 10431
run: 2203 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2171 location) (raw))
sizeof: ((2171 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10431 to #\P
run: 2204 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2205 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10531 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2206 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2170)
run: 2170 => ((1 list-address))
setm: ((1 list-address)) <= 2170
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10533 to 2170
run: 2207 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2172 list-address) (raw))
sizeof: ((2172 list-address) (raw))
run: 2235 => ((2 list-address))
setm: ((2 list-address)) <= 2235
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10534 to 2235
run: 2208 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2235 => ((1 list-address))
setm: ((1 list-address)) <= 2235
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10400 to 2235
run: 2209 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10402 to 2
run: 2210 init-file 11: (((jump)) ((-8 offset)))
run: 2211 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10403 to nil
run: 2212 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2213 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2214 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10562 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2215 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: 2235 => ((1 list-address))
setm: ((1 list-address)) <= 2235
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10564 to 2235
run: 2216 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2235 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2235
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10565 to 2235
run: 2217 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2235 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2235
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10404 to 2235
run: 2218 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
run: 10432 => ((6 square-address))
setm: ((6 square-address)) <= 10432
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10405 to 10432
run: 2219 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2236 location) (raw))
sizeof: ((2236 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10432 to #\_
run: 2220 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2221 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10593 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2222 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2235)
run: 2235 => ((1 list-address))
setm: ((1 list-address)) <= 2235
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10595 to 2235
run: 2223 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2237 list-address) (raw))
sizeof: ((2237 list-address) (raw))
run: 2300 => ((2 list-address))
setm: ((2 list-address)) <= 2300
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10596 to 2300
run: 2224 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2300 => ((1 list-address))
setm: ((1 list-address)) <= 2300
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10400 to 2300
run: 2225 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10402 to 3
run: 2226 init-file 11: (((jump)) ((-8 offset)))
run: 2227 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10403 to nil
run: 2228 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2229 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2230 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10624 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2231 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: 2300 => ((1 list-address))
setm: ((1 list-address)) <= 2300
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10626 to 2300
run: 2232 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2300 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2300
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10627 to 2300
run: 2233 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2300 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2300
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10404 to 2300
run: 2234 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
run: 10433 => ((6 square-address))
setm: ((6 square-address)) <= 10433
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10405 to 10433
run: 2235 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2301 location) (raw))
sizeof: ((2301 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10433 to #\_
run: 2236 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2237 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10655 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2238 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2300)
run: 2300 => ((1 list-address))
setm: ((1 list-address)) <= 2300
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10657 to 2300
run: 2239 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2302 list-address) (raw))
sizeof: ((2302 list-address) (raw))
run: 2365 => ((2 list-address))
setm: ((2 list-address)) <= 2365
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10658 to 2365
run: 2240 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2365 => ((1 list-address))
setm: ((1 list-address)) <= 2365
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10400 to 2365
run: 2241 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10402 to 4
run: 2242 init-file 11: (((jump)) ((-8 offset)))
run: 2243 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10403 to nil
run: 2244 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2245 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2246 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10686 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2247 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: 2365 => ((1 list-address))
setm: ((1 list-address)) <= 2365
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10688 to 2365
run: 2248 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2365 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2365
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10689 to 2365
run: 2249 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2365 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2365
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10404 to 2365
run: 2250 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
run: 10434 => ((6 square-address))
setm: ((6 square-address)) <= 10434
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10405 to 10434
run: 2251 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2366 location) (raw))
sizeof: ((2366 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10434 to #\_
run: 2252 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2253 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10717 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2254 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2365)
run: 2365 => ((1 list-address))
setm: ((1 list-address)) <= 2365
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10719 to 2365
run: 2255 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2367 list-address) (raw))
sizeof: ((2367 list-address) (raw))
run: 2430 => ((2 list-address))
setm: ((2 list-address)) <= 2430
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10720 to 2430
run: 2256 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2430 => ((1 list-address))
setm: ((1 list-address)) <= 2430
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10400 to 2430
run: 2257 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10402 to 5
run: 2258 init-file 11: (((jump)) ((-8 offset)))
run: 2259 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10403 to nil
run: 2260 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2261 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2262 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10748 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2263 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: 2430 => ((1 list-address))
setm: ((1 list-address)) <= 2430
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10750 to 2430
run: 2264 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2430 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2430
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10751 to 2430
run: 2265 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2430 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2430
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10404 to 2430
run: 2266 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
run: 10435 => ((6 square-address))
setm: ((6 square-address)) <= 10435
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10405 to 10435
run: 2267 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2431 location) (raw))
sizeof: ((2431 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10435 to #\_
run: 2268 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2269 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10779 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2270 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2430)
run: 2430 => ((1 list-address))
setm: ((1 list-address)) <= 2430
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10781 to 2430
run: 2271 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2432 list-address) (raw))
sizeof: ((2432 list-address) (raw))
run: 2495 => ((2 list-address))
setm: ((2 list-address)) <= 2495
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10782 to 2495
run: 2272 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2495 => ((1 list-address))
setm: ((1 list-address)) <= 2495
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10400 to 2495
run: 2273 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10402 to 6
run: 2274 init-file 11: (((jump)) ((-8 offset)))
run: 2275 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10403 to nil
run: 2276 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2277 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2278 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10810 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2279 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: 2495 => ((1 list-address))
setm: ((1 list-address)) <= 2495
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10812 to 2495
run: 2280 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2495 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2495
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10813 to 2495
run: 2281 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2495 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2495
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10404 to 2495
run: 2282 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
run: 10436 => ((6 square-address))
setm: ((6 square-address)) <= 10436
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10405 to 10436
run: 2283 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2496 location) (raw))
sizeof: ((2496 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10436 to #\p
run: 2284 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2285 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10841 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2286 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2495)
run: 2495 => ((1 list-address))
setm: ((1 list-address)) <= 2495
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10843 to 2495
run: 2287 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2497 list-address) (raw))
sizeof: ((2497 list-address) (raw))
run: 2560 => ((2 list-address))
setm: ((2 list-address)) <= 2560
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10844 to 2560
run: 2288 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2560 => ((1 list-address))
setm: ((1 list-address)) <= 2560
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10400 to 2560
run: 2289 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10402 to 7
run: 2290 init-file 11: (((jump)) ((-8 offset)))
run: 2291 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10403 to nil
run: 2292 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2293 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2294 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10872 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2295 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: 2560 => ((1 list-address))
setm: ((1 list-address)) <= 2560
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10874 to 2560
run: 2296 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2560 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2560
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10875 to 2560
run: 2297 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2560 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2560
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10404 to 2560
run: 2298 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
run: 10437 => ((6 square-address))
setm: ((6 square-address)) <= 10437
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10405 to 10437
run: 2299 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2561 location) (raw))
sizeof: ((2561 location) (raw))
run: #\b => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\b
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10437 to #\b
run: 2300 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2301 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10903 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2302 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2560)
run: 2560 => ((1 list-address))
setm: ((1 list-address)) <= 2560
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10905 to 2560
run: 2303 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2562 list-address) (raw))
sizeof: ((2562 list-address) (raw))
run: 2625 => ((2 list-address))
setm: ((2 list-address)) <= 2625
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 10906 to 2625
run: 2304 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2625 => ((1 list-address))
setm: ((1 list-address)) <= 2625
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10400 to 2625
run: 2305 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10402 to 8
run: 2306 init-file 11: (((jump)) ((-8 offset)))
run: 2307 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10403 to t
run: 2308 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2309 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 10429 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 10429
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9320 to 10429
reply: 2625 => ((6 list-address))
setm: ((6 list-address)) <= 2625
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5263 to 2625
run: 2310 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5262 to 3
run: 2311 init-board 13: (((jump)) ((-6 offset)))
run: 2312 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5264 to nil
run: 2313 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 2314 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
run: 9321 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9321
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5265 to 9321
run: 2315 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 2316 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10934 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2317 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: 2625 => ((1 list-address))
setm: ((1 list-address)) <= 2625
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10936 to 2625
run: 2318 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 10965 => ((2 file-address))
setm: ((2 file-address)) <= 10965
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 10937 to 10965
run: 2319 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10938 to 0
run: 2320 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10939 to nil
run: 2321 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2322 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2323 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 10974 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2324 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: 2625 => ((1 list-address))
setm: ((1 list-address)) <= 2625
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10976 to 2625
run: 2325 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2625 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2625
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 10977 to 2625
run: 2326 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2625 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2625
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10940 to 2625
run: 2327 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
run: 10966 => ((6 square-address))
setm: ((6 square-address)) <= 10966
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10941 to 10966
run: 2328 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2626 location) (raw))
sizeof: ((2626 location) (raw))
run: #\Q => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\Q
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10966 to #\Q
run: 2329 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2330 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11005 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2331 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2625)
run: 2625 => ((1 list-address))
setm: ((1 list-address)) <= 2625
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11007 to 2625
run: 2332 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2627 list-address) (raw))
sizeof: ((2627 list-address) (raw))
run: 2690 => ((2 list-address))
setm: ((2 list-address)) <= 2690
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11008 to 2690
run: 2333 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2690 => ((1 list-address))
setm: ((1 list-address)) <= 2690
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10936 to 2690
run: 2334 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10938 to 1
run: 2335 init-file 11: (((jump)) ((-8 offset)))
run: 2336 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10939 to nil
run: 2337 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2338 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2339 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11036 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2340 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: 2690 => ((1 list-address))
setm: ((1 list-address)) <= 2690
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11038 to 2690
run: 2341 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2690 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2690
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11039 to 2690
run: 2342 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2690 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2690
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10940 to 2690
run: 2343 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
run: 10967 => ((6 square-address))
setm: ((6 square-address)) <= 10967
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10941 to 10967
run: 2344 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2691 location) (raw))
sizeof: ((2691 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10967 to #\P
run: 2345 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2346 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11067 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2347 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2690)
run: 2690 => ((1 list-address))
setm: ((1 list-address)) <= 2690
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11069 to 2690
run: 2348 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2692 list-address) (raw))
sizeof: ((2692 list-address) (raw))
run: 2755 => ((2 list-address))
setm: ((2 list-address)) <= 2755
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11070 to 2755
run: 2349 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2755 => ((1 list-address))
setm: ((1 list-address)) <= 2755
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10936 to 2755
run: 2350 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10938 to 2
run: 2351 init-file 11: (((jump)) ((-8 offset)))
run: 2352 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10939 to nil
run: 2353 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2354 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2355 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11098 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2356 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: 2755 => ((1 list-address))
setm: ((1 list-address)) <= 2755
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11100 to 2755
run: 2357 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2755 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2755
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11101 to 2755
run: 2358 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2755 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2755
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10940 to 2755
run: 2359 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
run: 10968 => ((6 square-address))
setm: ((6 square-address)) <= 10968
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10941 to 10968
run: 2360 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2756 location) (raw))
sizeof: ((2756 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10968 to #\_
run: 2361 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2362 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11129 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2363 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2755)
run: 2755 => ((1 list-address))
setm: ((1 list-address)) <= 2755
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11131 to 2755
run: 2364 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2757 list-address) (raw))
sizeof: ((2757 list-address) (raw))
run: 2820 => ((2 list-address))
setm: ((2 list-address)) <= 2820
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11132 to 2820
run: 2365 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2820 => ((1 list-address))
setm: ((1 list-address)) <= 2820
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10936 to 2820
run: 2366 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10938 to 3
run: 2367 init-file 11: (((jump)) ((-8 offset)))
run: 2368 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10939 to nil
run: 2369 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2370 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2371 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11160 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2372 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: 2820 => ((1 list-address))
setm: ((1 list-address)) <= 2820
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11162 to 2820
run: 2373 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2820 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2820
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11163 to 2820
run: 2374 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2820 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2820
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10940 to 2820
run: 2375 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
run: 10969 => ((6 square-address))
setm: ((6 square-address)) <= 10969
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10941 to 10969
run: 2376 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2821 location) (raw))
sizeof: ((2821 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10969 to #\_
run: 2377 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2378 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11191 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2379 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2820)
run: 2820 => ((1 list-address))
setm: ((1 list-address)) <= 2820
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11193 to 2820
run: 2380 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2822 list-address) (raw))
sizeof: ((2822 list-address) (raw))
run: 2885 => ((2 list-address))
setm: ((2 list-address)) <= 2885
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11194 to 2885
run: 2381 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2885 => ((1 list-address))
setm: ((1 list-address)) <= 2885
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10936 to 2885
run: 2382 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10938 to 4
run: 2383 init-file 11: (((jump)) ((-8 offset)))
run: 2384 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10939 to nil
run: 2385 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2386 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2387 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11222 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2388 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: 2885 => ((1 list-address))
setm: ((1 list-address)) <= 2885
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11224 to 2885
run: 2389 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2885 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2885
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11225 to 2885
run: 2390 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2885 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2885
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10940 to 2885
run: 2391 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
run: 10970 => ((6 square-address))
setm: ((6 square-address)) <= 10970
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10941 to 10970
run: 2392 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2886 location) (raw))
sizeof: ((2886 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10970 to #\_
run: 2393 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2394 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11253 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2395 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2885)
run: 2885 => ((1 list-address))
setm: ((1 list-address)) <= 2885
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11255 to 2885
run: 2396 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2887 list-address) (raw))
sizeof: ((2887 list-address) (raw))
run: 2950 => ((2 list-address))
setm: ((2 list-address)) <= 2950
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11256 to 2950
run: 2397 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 2950 => ((1 list-address))
setm: ((1 list-address)) <= 2950
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10936 to 2950
run: 2398 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10938 to 5
run: 2399 init-file 11: (((jump)) ((-8 offset)))
run: 2400 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10939 to nil
run: 2401 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2402 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2403 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11284 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2404 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: 2950 => ((1 list-address))
setm: ((1 list-address)) <= 2950
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11286 to 2950
run: 2405 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 2950 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 2950
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11287 to 2950
run: 2406 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 2950 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 2950
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10940 to 2950
run: 2407 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
run: 10971 => ((6 square-address))
setm: ((6 square-address)) <= 10971
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10941 to 10971
run: 2408 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((2951 location) (raw))
sizeof: ((2951 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10971 to #\_
run: 2409 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2410 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11315 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2411 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2950)
run: 2950 => ((1 list-address))
setm: ((1 list-address)) <= 2950
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11317 to 2950
run: 2412 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((2952 list-address) (raw))
sizeof: ((2952 list-address) (raw))
run: 3015 => ((2 list-address))
setm: ((2 list-address)) <= 3015
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11318 to 3015
run: 2413 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3015 => ((1 list-address))
setm: ((1 list-address)) <= 3015
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10936 to 3015
run: 2414 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10938 to 6
run: 2415 init-file 11: (((jump)) ((-8 offset)))
run: 2416 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10939 to nil
run: 2417 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2418 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2419 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11346 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2420 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: 3015 => ((1 list-address))
setm: ((1 list-address)) <= 3015
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11348 to 3015
run: 2421 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3015 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3015
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11349 to 3015
run: 2422 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3015 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3015
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10940 to 3015
run: 2423 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
run: 10972 => ((6 square-address))
setm: ((6 square-address)) <= 10972
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10941 to 10972
run: 2424 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3016 location) (raw))
sizeof: ((3016 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10972 to #\p
run: 2425 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2426 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11377 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2427 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3015)
run: 3015 => ((1 list-address))
setm: ((1 list-address)) <= 3015
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11379 to 3015
run: 2428 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3017 list-address) (raw))
sizeof: ((3017 list-address) (raw))
run: 3080 => ((2 list-address))
setm: ((2 list-address)) <= 3080
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11380 to 3080
run: 2429 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3080 => ((1 list-address))
setm: ((1 list-address)) <= 3080
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10936 to 3080
run: 2430 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10938 to 7
run: 2431 init-file 11: (((jump)) ((-8 offset)))
run: 2432 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10939 to nil
run: 2433 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2434 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2435 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11408 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2436 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: 3080 => ((1 list-address))
setm: ((1 list-address)) <= 3080
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11410 to 3080
run: 2437 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3080 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3080
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11411 to 3080
run: 2438 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3080 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3080
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 10940 to 3080
run: 2439 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
run: 10973 => ((6 square-address))
setm: ((6 square-address)) <= 10973
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 10941 to 10973
run: 2440 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3081 location) (raw))
sizeof: ((3081 location) (raw))
run: #\q => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\q
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 10973 to #\q
run: 2441 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2442 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11439 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2443 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3080)
run: 3080 => ((1 list-address))
setm: ((1 list-address)) <= 3080
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11441 to 3080
run: 2444 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3082 list-address) (raw))
sizeof: ((3082 list-address) (raw))
run: 3145 => ((2 list-address))
setm: ((2 list-address)) <= 3145
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11442 to 3145
run: 2445 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3145 => ((1 list-address))
setm: ((1 list-address)) <= 3145
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 10936 to 3145
run: 2446 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 10938 to 8
run: 2447 init-file 11: (((jump)) ((-8 offset)))
run: 2448 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 10939 to t
run: 2449 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2450 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 10965 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 10965
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9321 to 10965
reply: 3145 => ((6 list-address))
setm: ((6 list-address)) <= 3145
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5263 to 3145
run: 2451 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5262 to 4
run: 2452 init-board 13: (((jump)) ((-6 offset)))
run: 2453 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5264 to nil
run: 2454 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 2455 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
run: 9322 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9322
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5265 to 9322
run: 2456 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 2457 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11470 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2458 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: 3145 => ((1 list-address))
setm: ((1 list-address)) <= 3145
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11472 to 3145
run: 2459 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 11501 => ((2 file-address))
setm: ((2 file-address)) <= 11501
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 11473 to 11501
run: 2460 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11474 to 0
run: 2461 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11475 to nil
run: 2462 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2463 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2464 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11510 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2465 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: 3145 => ((1 list-address))
setm: ((1 list-address)) <= 3145
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11512 to 3145
run: 2466 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3145 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3145
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11513 to 3145
run: 2467 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3145 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3145
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11476 to 3145
run: 2468 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
run: 11502 => ((6 square-address))
setm: ((6 square-address)) <= 11502
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11477 to 11502
run: 2469 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3146 location) (raw))
sizeof: ((3146 location) (raw))
run: #\K => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\K
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11502 to #\K
run: 2470 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2471 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11541 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2472 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3145)
run: 3145 => ((1 list-address))
setm: ((1 list-address)) <= 3145
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11543 to 3145
run: 2473 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3147 list-address) (raw))
sizeof: ((3147 list-address) (raw))
run: 3210 => ((2 list-address))
setm: ((2 list-address)) <= 3210
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11544 to 3210
run: 2474 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3210 => ((1 list-address))
setm: ((1 list-address)) <= 3210
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11472 to 3210
run: 2475 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11474 to 1
run: 2476 init-file 11: (((jump)) ((-8 offset)))
run: 2477 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11475 to nil
run: 2478 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2479 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2480 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11572 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2481 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: 3210 => ((1 list-address))
setm: ((1 list-address)) <= 3210
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11574 to 3210
run: 2482 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3210 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3210
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11575 to 3210
run: 2483 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3210 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3210
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11476 to 3210
run: 2484 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
run: 11503 => ((6 square-address))
setm: ((6 square-address)) <= 11503
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11477 to 11503
run: 2485 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3211 location) (raw))
sizeof: ((3211 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11503 to #\P
run: 2486 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2487 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11603 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2488 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3210)
run: 3210 => ((1 list-address))
setm: ((1 list-address)) <= 3210
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11605 to 3210
run: 2489 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3212 list-address) (raw))
sizeof: ((3212 list-address) (raw))
run: 3275 => ((2 list-address))
setm: ((2 list-address)) <= 3275
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11606 to 3275
run: 2490 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3275 => ((1 list-address))
setm: ((1 list-address)) <= 3275
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11472 to 3275
run: 2491 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11474 to 2
run: 2492 init-file 11: (((jump)) ((-8 offset)))
run: 2493 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11475 to nil
run: 2494 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2495 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2496 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11634 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2497 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: 3275 => ((1 list-address))
setm: ((1 list-address)) <= 3275
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11636 to 3275
run: 2498 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3275 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3275
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11637 to 3275
run: 2499 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3275 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3275
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11476 to 3275
run: 2500 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
run: 11504 => ((6 square-address))
setm: ((6 square-address)) <= 11504
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11477 to 11504
schedule: scheduling init-file/init-board/main for further processing
schedule: init-file/init-board/main
run: 2501 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3276 location) (raw))
sizeof: ((3276 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11504 to #\_
run: 2502 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2503 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11665 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2504 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3275)
run: 3275 => ((1 list-address))
setm: ((1 list-address)) <= 3275
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11667 to 3275
run: 2505 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3277 list-address) (raw))
sizeof: ((3277 list-address) (raw))
run: 3340 => ((2 list-address))
setm: ((2 list-address)) <= 3340
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11668 to 3340
run: 2506 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3340 => ((1 list-address))
setm: ((1 list-address)) <= 3340
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11472 to 3340
run: 2507 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11474 to 3
run: 2508 init-file 11: (((jump)) ((-8 offset)))
run: 2509 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11475 to nil
run: 2510 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2511 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2512 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11696 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2513 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: 3340 => ((1 list-address))
setm: ((1 list-address)) <= 3340
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11698 to 3340
run: 2514 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3340 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3340
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11699 to 3340
run: 2515 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3340 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3340
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11476 to 3340
run: 2516 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
run: 11505 => ((6 square-address))
setm: ((6 square-address)) <= 11505
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11477 to 11505
run: 2517 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3341 location) (raw))
sizeof: ((3341 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11505 to #\_
run: 2518 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2519 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11727 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2520 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3340)
run: 3340 => ((1 list-address))
setm: ((1 list-address)) <= 3340
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11729 to 3340
run: 2521 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3342 list-address) (raw))
sizeof: ((3342 list-address) (raw))
run: 3405 => ((2 list-address))
setm: ((2 list-address)) <= 3405
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11730 to 3405
run: 2522 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3405 => ((1 list-address))
setm: ((1 list-address)) <= 3405
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11472 to 3405
run: 2523 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11474 to 4
run: 2524 init-file 11: (((jump)) ((-8 offset)))
run: 2525 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11475 to nil
run: 2526 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2527 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2528 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11758 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2529 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: 3405 => ((1 list-address))
setm: ((1 list-address)) <= 3405
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11760 to 3405
run: 2530 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3405 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3405
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11761 to 3405
run: 2531 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3405 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3405
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11476 to 3405
run: 2532 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
run: 11506 => ((6 square-address))
setm: ((6 square-address)) <= 11506
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11477 to 11506
run: 2533 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3406 location) (raw))
sizeof: ((3406 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11506 to #\_
run: 2534 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2535 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11789 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2536 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3405)
run: 3405 => ((1 list-address))
setm: ((1 list-address)) <= 3405
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11791 to 3405
run: 2537 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3407 list-address) (raw))
sizeof: ((3407 list-address) (raw))
run: 3470 => ((2 list-address))
setm: ((2 list-address)) <= 3470
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11792 to 3470
run: 2538 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3470 => ((1 list-address))
setm: ((1 list-address)) <= 3470
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11472 to 3470
run: 2539 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11474 to 5
run: 2540 init-file 11: (((jump)) ((-8 offset)))
run: 2541 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11475 to nil
run: 2542 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2543 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2544 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11820 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2545 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: 3470 => ((1 list-address))
setm: ((1 list-address)) <= 3470
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11822 to 3470
run: 2546 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3470 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3470
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11823 to 3470
run: 2547 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3470 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3470
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11476 to 3470
run: 2548 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
run: 11507 => ((6 square-address))
setm: ((6 square-address)) <= 11507
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11477 to 11507
run: 2549 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3471 location) (raw))
sizeof: ((3471 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11507 to #\_
run: 2550 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2551 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11851 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2552 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3470)
run: 3470 => ((1 list-address))
setm: ((1 list-address)) <= 3470
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11853 to 3470
run: 2553 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3472 list-address) (raw))
sizeof: ((3472 list-address) (raw))
run: 3535 => ((2 list-address))
setm: ((2 list-address)) <= 3535
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11854 to 3535
run: 2554 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3535 => ((1 list-address))
setm: ((1 list-address)) <= 3535
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11472 to 3535
run: 2555 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11474 to 6
run: 2556 init-file 11: (((jump)) ((-8 offset)))
run: 2557 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11475 to nil
run: 2558 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2559 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2560 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11882 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2561 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: 3535 => ((1 list-address))
setm: ((1 list-address)) <= 3535
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11884 to 3535
run: 2562 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3535 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3535
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11885 to 3535
run: 2563 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3535 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3535
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11476 to 3535
run: 2564 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
run: 11508 => ((6 square-address))
setm: ((6 square-address)) <= 11508
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11477 to 11508
run: 2565 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3536 location) (raw))
sizeof: ((3536 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11508 to #\p
run: 2566 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2567 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11913 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2568 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3535)
run: 3535 => ((1 list-address))
setm: ((1 list-address)) <= 3535
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11915 to 3535
run: 2569 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3537 list-address) (raw))
sizeof: ((3537 list-address) (raw))
run: 3600 => ((2 list-address))
setm: ((2 list-address)) <= 3600
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11916 to 3600
run: 2570 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3600 => ((1 list-address))
setm: ((1 list-address)) <= 3600
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11472 to 3600
run: 2571 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11474 to 7
run: 2572 init-file 11: (((jump)) ((-8 offset)))
run: 2573 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11475 to nil
run: 2574 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2575 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2576 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11944 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2577 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: 3600 => ((1 list-address))
setm: ((1 list-address)) <= 3600
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11946 to 3600
run: 2578 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3600 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3600
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 11947 to 3600
run: 2579 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3600 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3600
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 11476 to 3600
run: 2580 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
run: 11509 => ((6 square-address))
setm: ((6 square-address)) <= 11509
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 11477 to 11509
run: 2581 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3601 location) (raw))
sizeof: ((3601 location) (raw))
run: #\k => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\k
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 11509 to #\k
run: 2582 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2583 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 11975 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2584 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3600)
run: 3600 => ((1 list-address))
setm: ((1 list-address)) <= 3600
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11977 to 3600
run: 2585 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3602 list-address) (raw))
sizeof: ((3602 list-address) (raw))
run: 3665 => ((2 list-address))
setm: ((2 list-address)) <= 3665
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 11978 to 3665
run: 2586 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3665 => ((1 list-address))
setm: ((1 list-address)) <= 3665
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 11472 to 3665
run: 2587 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 11474 to 8
run: 2588 init-file 11: (((jump)) ((-8 offset)))
run: 2589 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 11475 to t
run: 2590 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2591 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 11501 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 11501
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9322 to 11501
reply: 3665 => ((6 list-address))
setm: ((6 list-address)) <= 3665
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5263 to 3665
run: 2592 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 5 => ((5 integer))
setm: ((5 integer)) <= 5
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5262 to 5
run: 2593 init-board 13: (((jump)) ((-6 offset)))
run: 2594 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5264 to nil
run: 2595 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 2596 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
run: 9323 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9323
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5265 to 9323
run: 2597 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 2598 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12006 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2599 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: 3665 => ((1 list-address))
setm: ((1 list-address)) <= 3665
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12008 to 3665
run: 2600 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 12037 => ((2 file-address))
setm: ((2 file-address)) <= 12037
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 12009 to 12037
run: 2601 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12010 to 0
run: 2602 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12011 to nil
run: 2603 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2604 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2605 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12046 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2606 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: 3665 => ((1 list-address))
setm: ((1 list-address)) <= 3665
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12048 to 3665
run: 2607 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3665 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3665
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12049 to 3665
run: 2608 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3665 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3665
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12012 to 3665
run: 2609 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
run: 12038 => ((6 square-address))
setm: ((6 square-address)) <= 12038
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12013 to 12038
run: 2610 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3666 location) (raw))
sizeof: ((3666 location) (raw))
run: #\B => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\B
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12038 to #\B
run: 2611 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2612 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12077 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2613 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3665)
run: 3665 => ((1 list-address))
setm: ((1 list-address)) <= 3665
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12079 to 3665
run: 2614 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3667 list-address) (raw))
sizeof: ((3667 list-address) (raw))
run: 3730 => ((2 list-address))
setm: ((2 list-address)) <= 3730
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12080 to 3730
run: 2615 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3730 => ((1 list-address))
setm: ((1 list-address)) <= 3730
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12008 to 3730
run: 2616 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12010 to 1
run: 2617 init-file 11: (((jump)) ((-8 offset)))
run: 2618 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12011 to nil
run: 2619 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2620 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2621 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12108 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2622 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: 3730 => ((1 list-address))
setm: ((1 list-address)) <= 3730
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12110 to 3730
run: 2623 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3730 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3730
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12111 to 3730
run: 2624 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3730 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3730
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12012 to 3730
run: 2625 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
run: 12039 => ((6 square-address))
setm: ((6 square-address)) <= 12039
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12013 to 12039
run: 2626 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3731 location) (raw))
sizeof: ((3731 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12039 to #\P
run: 2627 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2628 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12139 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2629 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3730)
run: 3730 => ((1 list-address))
setm: ((1 list-address)) <= 3730
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12141 to 3730
run: 2630 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3732 list-address) (raw))
sizeof: ((3732 list-address) (raw))
run: 3795 => ((2 list-address))
setm: ((2 list-address)) <= 3795
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12142 to 3795
run: 2631 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3795 => ((1 list-address))
setm: ((1 list-address)) <= 3795
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12008 to 3795
run: 2632 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12010 to 2
run: 2633 init-file 11: (((jump)) ((-8 offset)))
run: 2634 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12011 to nil
run: 2635 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2636 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2637 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12170 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2638 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: 3795 => ((1 list-address))
setm: ((1 list-address)) <= 3795
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12172 to 3795
run: 2639 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3795 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3795
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12173 to 3795
run: 2640 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3795 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3795
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12012 to 3795
run: 2641 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
run: 12040 => ((6 square-address))
setm: ((6 square-address)) <= 12040
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12013 to 12040
run: 2642 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3796 location) (raw))
sizeof: ((3796 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12040 to #\_
run: 2643 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2644 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12201 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2645 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3795)
run: 3795 => ((1 list-address))
setm: ((1 list-address)) <= 3795
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12203 to 3795
run: 2646 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3797 list-address) (raw))
sizeof: ((3797 list-address) (raw))
run: 3860 => ((2 list-address))
setm: ((2 list-address)) <= 3860
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12204 to 3860
run: 2647 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3860 => ((1 list-address))
setm: ((1 list-address)) <= 3860
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12008 to 3860
run: 2648 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12010 to 3
run: 2649 init-file 11: (((jump)) ((-8 offset)))
run: 2650 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12011 to nil
run: 2651 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2652 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2653 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12232 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2654 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: 3860 => ((1 list-address))
setm: ((1 list-address)) <= 3860
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12234 to 3860
run: 2655 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3860 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3860
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12235 to 3860
run: 2656 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3860 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3860
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12012 to 3860
run: 2657 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
run: 12041 => ((6 square-address))
setm: ((6 square-address)) <= 12041
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12013 to 12041
run: 2658 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3861 location) (raw))
sizeof: ((3861 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12041 to #\_
run: 2659 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2660 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12263 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2661 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3860)
run: 3860 => ((1 list-address))
setm: ((1 list-address)) <= 3860
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12265 to 3860
run: 2662 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3862 list-address) (raw))
sizeof: ((3862 list-address) (raw))
run: 3925 => ((2 list-address))
setm: ((2 list-address)) <= 3925
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12266 to 3925
run: 2663 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3925 => ((1 list-address))
setm: ((1 list-address)) <= 3925
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12008 to 3925
run: 2664 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12010 to 4
run: 2665 init-file 11: (((jump)) ((-8 offset)))
run: 2666 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12011 to nil
run: 2667 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2668 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2669 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12294 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2670 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: 3925 => ((1 list-address))
setm: ((1 list-address)) <= 3925
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12296 to 3925
run: 2671 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3925 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3925
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12297 to 3925
run: 2672 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3925 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3925
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12012 to 3925
run: 2673 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
run: 12042 => ((6 square-address))
setm: ((6 square-address)) <= 12042
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12013 to 12042
run: 2674 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3926 location) (raw))
sizeof: ((3926 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12042 to #\_
run: 2675 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2676 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12325 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2677 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3925)
run: 3925 => ((1 list-address))
setm: ((1 list-address)) <= 3925
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12327 to 3925
run: 2678 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3927 list-address) (raw))
sizeof: ((3927 list-address) (raw))
run: 3990 => ((2 list-address))
setm: ((2 list-address)) <= 3990
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12328 to 3990
run: 2679 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 3990 => ((1 list-address))
setm: ((1 list-address)) <= 3990
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12008 to 3990
run: 2680 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12010 to 5
run: 2681 init-file 11: (((jump)) ((-8 offset)))
run: 2682 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12011 to nil
run: 2683 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2684 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2685 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12356 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2686 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: 3990 => ((1 list-address))
setm: ((1 list-address)) <= 3990
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12358 to 3990
run: 2687 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 3990 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 3990
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12359 to 3990
run: 2688 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 3990 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 3990
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12012 to 3990
run: 2689 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
run: 12043 => ((6 square-address))
setm: ((6 square-address)) <= 12043
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12013 to 12043
run: 2690 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((3991 location) (raw))
sizeof: ((3991 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12043 to #\_
run: 2691 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2692 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12387 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2693 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3990)
run: 3990 => ((1 list-address))
setm: ((1 list-address)) <= 3990
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12389 to 3990
run: 2694 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((3992 list-address) (raw))
sizeof: ((3992 list-address) (raw))
run: 4055 => ((2 list-address))
setm: ((2 list-address)) <= 4055
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12390 to 4055
run: 2695 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4055 => ((1 list-address))
setm: ((1 list-address)) <= 4055
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12008 to 4055
run: 2696 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12010 to 6
run: 2697 init-file 11: (((jump)) ((-8 offset)))
run: 2698 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12011 to nil
run: 2699 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2700 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2701 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12418 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2702 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: 4055 => ((1 list-address))
setm: ((1 list-address)) <= 4055
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12420 to 4055
run: 2703 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4055 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4055
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12421 to 4055
run: 2704 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4055 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4055
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12012 to 4055
run: 2705 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
run: 12044 => ((6 square-address))
setm: ((6 square-address)) <= 12044
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12013 to 12044
run: 2706 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4056 location) (raw))
sizeof: ((4056 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12044 to #\p
run: 2707 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2708 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12449 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2709 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4055)
run: 4055 => ((1 list-address))
setm: ((1 list-address)) <= 4055
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12451 to 4055
run: 2710 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4057 list-address) (raw))
sizeof: ((4057 list-address) (raw))
run: 4120 => ((2 list-address))
setm: ((2 list-address)) <= 4120
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12452 to 4120
run: 2711 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4120 => ((1 list-address))
setm: ((1 list-address)) <= 4120
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12008 to 4120
run: 2712 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12010 to 7
run: 2713 init-file 11: (((jump)) ((-8 offset)))
run: 2714 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12011 to nil
run: 2715 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2716 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2717 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12480 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2718 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: 4120 => ((1 list-address))
setm: ((1 list-address)) <= 4120
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12482 to 4120
run: 2719 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4120 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4120
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12483 to 4120
run: 2720 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4120 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4120
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12012 to 4120
run: 2721 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
run: 12045 => ((6 square-address))
setm: ((6 square-address)) <= 12045
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12013 to 12045
run: 2722 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4121 location) (raw))
sizeof: ((4121 location) (raw))
run: #\b => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\b
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12045 to #\b
run: 2723 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2724 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12511 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2725 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4120)
run: 4120 => ((1 list-address))
setm: ((1 list-address)) <= 4120
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12513 to 4120
run: 2726 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4122 list-address) (raw))
sizeof: ((4122 list-address) (raw))
run: 4185 => ((2 list-address))
setm: ((2 list-address)) <= 4185
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12514 to 4185
run: 2727 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4185 => ((1 list-address))
setm: ((1 list-address)) <= 4185
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12008 to 4185
run: 2728 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12010 to 8
run: 2729 init-file 11: (((jump)) ((-8 offset)))
run: 2730 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12011 to t
run: 2731 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2732 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 12037 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 12037
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9323 to 12037
reply: 4185 => ((6 list-address))
setm: ((6 list-address)) <= 4185
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5263 to 4185
run: 2733 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 6 => ((5 integer))
setm: ((5 integer)) <= 6
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5262 to 6
run: 2734 init-board 13: (((jump)) ((-6 offset)))
run: 2735 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5264 to nil
run: 2736 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 2737 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
run: 9324 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9324
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5265 to 9324
run: 2738 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 2739 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12542 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2740 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: 4185 => ((1 list-address))
setm: ((1 list-address)) <= 4185
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12544 to 4185
run: 2741 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 12573 => ((2 file-address))
setm: ((2 file-address)) <= 12573
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 12545 to 12573
run: 2742 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12546 to 0
run: 2743 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12547 to nil
run: 2744 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2745 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2746 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12582 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2747 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: 4185 => ((1 list-address))
setm: ((1 list-address)) <= 4185
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12584 to 4185
run: 2748 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4185 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4185
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12585 to 4185
run: 2749 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4185 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4185
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12548 to 4185
run: 2750 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
run: 12574 => ((6 square-address))
setm: ((6 square-address)) <= 12574
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12549 to 12574
run: 2751 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4186 location) (raw))
sizeof: ((4186 location) (raw))
run: #\N => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\N
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12574 to #\N
run: 2752 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2753 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12613 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2754 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4185)
run: 4185 => ((1 list-address))
setm: ((1 list-address)) <= 4185
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12615 to 4185
run: 2755 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4187 list-address) (raw))
sizeof: ((4187 list-address) (raw))
run: 4250 => ((2 list-address))
setm: ((2 list-address)) <= 4250
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12616 to 4250
run: 2756 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4250 => ((1 list-address))
setm: ((1 list-address)) <= 4250
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12544 to 4250
run: 2757 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12546 to 1
run: 2758 init-file 11: (((jump)) ((-8 offset)))
run: 2759 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12547 to nil
run: 2760 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2761 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2762 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12644 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2763 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: 4250 => ((1 list-address))
setm: ((1 list-address)) <= 4250
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12646 to 4250
run: 2764 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4250 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4250
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12647 to 4250
run: 2765 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4250 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4250
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12548 to 4250
run: 2766 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
run: 12575 => ((6 square-address))
setm: ((6 square-address)) <= 12575
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12549 to 12575
run: 2767 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4251 location) (raw))
sizeof: ((4251 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12575 to #\P
run: 2768 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2769 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12675 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2770 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4250)
run: 4250 => ((1 list-address))
setm: ((1 list-address)) <= 4250
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12677 to 4250
run: 2771 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4252 list-address) (raw))
sizeof: ((4252 list-address) (raw))
run: 4315 => ((2 list-address))
setm: ((2 list-address)) <= 4315
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12678 to 4315
run: 2772 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4315 => ((1 list-address))
setm: ((1 list-address)) <= 4315
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12544 to 4315
run: 2773 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12546 to 2
run: 2774 init-file 11: (((jump)) ((-8 offset)))
run: 2775 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12547 to nil
run: 2776 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2777 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2778 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12706 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2779 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: 4315 => ((1 list-address))
setm: ((1 list-address)) <= 4315
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12708 to 4315
run: 2780 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4315 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4315
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12709 to 4315
run: 2781 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4315 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4315
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12548 to 4315
run: 2782 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
run: 12576 => ((6 square-address))
setm: ((6 square-address)) <= 12576
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12549 to 12576
run: 2783 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4316 location) (raw))
sizeof: ((4316 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12576 to #\_
run: 2784 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2785 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12737 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2786 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4315)
run: 4315 => ((1 list-address))
setm: ((1 list-address)) <= 4315
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12739 to 4315
run: 2787 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4317 list-address) (raw))
sizeof: ((4317 list-address) (raw))
run: 4380 => ((2 list-address))
setm: ((2 list-address)) <= 4380
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12740 to 4380
run: 2788 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4380 => ((1 list-address))
setm: ((1 list-address)) <= 4380
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12544 to 4380
run: 2789 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12546 to 3
run: 2790 init-file 11: (((jump)) ((-8 offset)))
run: 2791 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12547 to nil
run: 2792 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2793 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2794 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12768 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2795 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: 4380 => ((1 list-address))
setm: ((1 list-address)) <= 4380
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12770 to 4380
run: 2796 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4380 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4380
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12771 to 4380
run: 2797 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4380 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4380
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12548 to 4380
run: 2798 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
run: 12577 => ((6 square-address))
setm: ((6 square-address)) <= 12577
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12549 to 12577
run: 2799 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4381 location) (raw))
sizeof: ((4381 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12577 to #\_
run: 2800 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2801 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12799 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2802 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4380)
run: 4380 => ((1 list-address))
setm: ((1 list-address)) <= 4380
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12801 to 4380
run: 2803 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4382 list-address) (raw))
sizeof: ((4382 list-address) (raw))
run: 4445 => ((2 list-address))
setm: ((2 list-address)) <= 4445
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12802 to 4445
run: 2804 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4445 => ((1 list-address))
setm: ((1 list-address)) <= 4445
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12544 to 4445
run: 2805 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12546 to 4
run: 2806 init-file 11: (((jump)) ((-8 offset)))
run: 2807 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12547 to nil
run: 2808 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2809 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2810 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12830 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2811 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: 4445 => ((1 list-address))
setm: ((1 list-address)) <= 4445
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12832 to 4445
run: 2812 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4445 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4445
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12833 to 4445
run: 2813 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4445 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4445
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12548 to 4445
run: 2814 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
run: 12578 => ((6 square-address))
setm: ((6 square-address)) <= 12578
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12549 to 12578
run: 2815 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4446 location) (raw))
sizeof: ((4446 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12578 to #\_
run: 2816 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2817 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12861 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2818 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4445)
run: 4445 => ((1 list-address))
setm: ((1 list-address)) <= 4445
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12863 to 4445
run: 2819 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4447 list-address) (raw))
sizeof: ((4447 list-address) (raw))
run: 4510 => ((2 list-address))
setm: ((2 list-address)) <= 4510
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12864 to 4510
run: 2820 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4510 => ((1 list-address))
setm: ((1 list-address)) <= 4510
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12544 to 4510
run: 2821 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12546 to 5
run: 2822 init-file 11: (((jump)) ((-8 offset)))
run: 2823 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12547 to nil
run: 2824 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2825 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2826 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12892 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2827 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: 4510 => ((1 list-address))
setm: ((1 list-address)) <= 4510
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12894 to 4510
run: 2828 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4510 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4510
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12895 to 4510
run: 2829 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4510 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4510
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12548 to 4510
run: 2830 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
run: 12579 => ((6 square-address))
setm: ((6 square-address)) <= 12579
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12549 to 12579
run: 2831 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4511 location) (raw))
sizeof: ((4511 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12579 to #\_
run: 2832 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2833 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12923 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2834 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4510)
run: 4510 => ((1 list-address))
setm: ((1 list-address)) <= 4510
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12925 to 4510
run: 2835 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4512 list-address) (raw))
sizeof: ((4512 list-address) (raw))
run: 4575 => ((2 list-address))
setm: ((2 list-address)) <= 4575
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12926 to 4575
run: 2836 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4575 => ((1 list-address))
setm: ((1 list-address)) <= 4575
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12544 to 4575
run: 2837 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12546 to 6
run: 2838 init-file 11: (((jump)) ((-8 offset)))
run: 2839 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12547 to nil
run: 2840 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2841 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2842 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12954 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2843 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: 4575 => ((1 list-address))
setm: ((1 list-address)) <= 4575
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12956 to 4575
run: 2844 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4575 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4575
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 12957 to 4575
run: 2845 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4575 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4575
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12548 to 4575
run: 2846 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
run: 12580 => ((6 square-address))
setm: ((6 square-address)) <= 12580
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12549 to 12580
run: 2847 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4576 location) (raw))
sizeof: ((4576 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12580 to #\p
run: 2848 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2849 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 12985 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2850 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4575)
run: 4575 => ((1 list-address))
setm: ((1 list-address)) <= 4575
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12987 to 4575
run: 2851 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4577 list-address) (raw))
sizeof: ((4577 list-address) (raw))
run: 4640 => ((2 list-address))
setm: ((2 list-address)) <= 4640
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 12988 to 4640
run: 2852 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4640 => ((1 list-address))
setm: ((1 list-address)) <= 4640
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12544 to 4640
run: 2853 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12546 to 7
run: 2854 init-file 11: (((jump)) ((-8 offset)))
run: 2855 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12547 to nil
run: 2856 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2857 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2858 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13016 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2859 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: 4640 => ((1 list-address))
setm: ((1 list-address)) <= 4640
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13018 to 4640
run: 2860 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4640 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4640
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13019 to 4640
run: 2861 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4640 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4640
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 12548 to 4640
run: 2862 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
run: 12581 => ((6 square-address))
setm: ((6 square-address)) <= 12581
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 12549 to 12581
run: 2863 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4641 location) (raw))
sizeof: ((4641 location) (raw))
run: #\n => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\n
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 12581 to #\n
run: 2864 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2865 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13047 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2866 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4640)
run: 4640 => ((1 list-address))
setm: ((1 list-address)) <= 4640
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13049 to 4640
run: 2867 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4642 list-address) (raw))
sizeof: ((4642 list-address) (raw))
run: 4705 => ((2 list-address))
setm: ((2 list-address)) <= 4705
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13050 to 4705
run: 2868 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4705 => ((1 list-address))
setm: ((1 list-address)) <= 4705
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 12544 to 4705
run: 2869 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 12546 to 8
run: 2870 init-file 11: (((jump)) ((-8 offset)))
run: 2871 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 12547 to t
run: 2872 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2873 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 12573 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 12573
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9324 to 12573
reply: 4705 => ((6 list-address))
setm: ((6 list-address)) <= 4705
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5263 to 4705
run: 2874 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 7 => ((5 integer))
setm: ((5 integer)) <= 7
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5262 to 7
run: 2875 init-board 13: (((jump)) ((-6 offset)))
run: 2876 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((7 boolean))
setm: ((7 boolean)) <= nil
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5264 to nil
run: 2877 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 2878 init-board 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
run: 9325 => ((8 file-address-address))
setm: ((8 file-address-address)) <= 9325
setm: size of ((8 file-address-address)) is 1
setm: ((8 file-address-address)): setting 5265 to 9325
run: 2879 init-board 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
m: ((6 list-address))
sizeof: ((6 list-address))
run: 2880 init-file 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13078 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2881 init-file 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: 4705 => ((1 list-address))
setm: ((1 list-address)) <= 4705
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13080 to 4705
run: 2882 init-file 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
sizeof: ((_ square))
run: 13109 => ((2 file-address))
setm: ((2 file-address)) <= 13109
setm: size of ((2 file-address)) is 1
setm: ((2 file-address)): setting 13081 to 13109
run: 2883 init-file 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13082 to 0
run: 2884 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13083 to nil
run: 2885 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2886 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2887 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13118 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2888 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: 4705 => ((1 list-address))
setm: ((1 list-address)) <= 4705
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13120 to 4705
run: 2889 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4705 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4705
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13121 to 4705
run: 2890 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4705 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4705
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13084 to 4705
run: 2891 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
run: 13110 => ((6 square-address))
setm: ((6 square-address)) <= 13110
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13085 to 13110
run: 2892 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4706 location) (raw))
sizeof: ((4706 location) (raw))
run: #\R => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\R
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13110 to #\R
run: 2893 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2894 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13149 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2895 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4705)
run: 4705 => ((1 list-address))
setm: ((1 list-address)) <= 4705
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13151 to 4705
run: 2896 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4707 list-address) (raw))
sizeof: ((4707 list-address) (raw))
run: 4770 => ((2 list-address))
setm: ((2 list-address)) <= 4770
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13152 to 4770
run: 2897 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4770 => ((1 list-address))
setm: ((1 list-address)) <= 4770
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13080 to 4770
run: 2898 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13082 to 1
run: 2899 init-file 11: (((jump)) ((-8 offset)))
run: 2900 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13083 to nil
run: 2901 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2902 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2903 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13180 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2904 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: 4770 => ((1 list-address))
setm: ((1 list-address)) <= 4770
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13182 to 4770
run: 2905 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4770 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4770
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13183 to 4770
run: 2906 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4770 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4770
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13084 to 4770
run: 2907 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
run: 13111 => ((6 square-address))
setm: ((6 square-address)) <= 13111
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13085 to 13111
run: 2908 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4771 location) (raw))
sizeof: ((4771 location) (raw))
run: #\P => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\P
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13111 to #\P
run: 2909 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2910 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13211 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2911 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4770)
run: 4770 => ((1 list-address))
setm: ((1 list-address)) <= 4770
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13213 to 4770
run: 2912 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4772 list-address) (raw))
sizeof: ((4772 list-address) (raw))
run: 4835 => ((2 list-address))
setm: ((2 list-address)) <= 4835
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13214 to 4835
run: 2913 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4835 => ((1 list-address))
setm: ((1 list-address)) <= 4835
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13080 to 4835
run: 2914 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13082 to 2
run: 2915 init-file 11: (((jump)) ((-8 offset)))
run: 2916 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13083 to nil
run: 2917 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2918 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2919 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13242 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2920 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: 4835 => ((1 list-address))
setm: ((1 list-address)) <= 4835
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13244 to 4835
run: 2921 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4835 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4835
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13245 to 4835
run: 2922 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4835 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4835
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13084 to 4835
run: 2923 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
run: 13112 => ((6 square-address))
setm: ((6 square-address)) <= 13112
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13085 to 13112
run: 2924 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4836 location) (raw))
sizeof: ((4836 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13112 to #\_
run: 2925 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2926 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13273 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2927 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4835)
run: 4835 => ((1 list-address))
setm: ((1 list-address)) <= 4835
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13275 to 4835
run: 2928 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4837 list-address) (raw))
sizeof: ((4837 list-address) (raw))
run: 4900 => ((2 list-address))
setm: ((2 list-address)) <= 4900
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13276 to 4900
run: 2929 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4900 => ((1 list-address))
setm: ((1 list-address)) <= 4900
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13080 to 4900
run: 2930 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13082 to 3
run: 2931 init-file 11: (((jump)) ((-8 offset)))
run: 2932 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13083 to nil
run: 2933 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2934 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2935 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13304 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2936 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: 4900 => ((1 list-address))
setm: ((1 list-address)) <= 4900
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13306 to 4900
run: 2937 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4900 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4900
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13307 to 4900
run: 2938 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4900 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4900
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13084 to 4900
run: 2939 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
run: 13113 => ((6 square-address))
setm: ((6 square-address)) <= 13113
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13085 to 13113
run: 2940 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4901 location) (raw))
sizeof: ((4901 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13113 to #\_
run: 2941 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2942 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13335 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2943 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4900)
run: 4900 => ((1 list-address))
setm: ((1 list-address)) <= 4900
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13337 to 4900
run: 2944 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4902 list-address) (raw))
sizeof: ((4902 list-address) (raw))
run: 4965 => ((2 list-address))
setm: ((2 list-address)) <= 4965
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13338 to 4965
run: 2945 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 4965 => ((1 list-address))
setm: ((1 list-address)) <= 4965
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13080 to 4965
run: 2946 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13082 to 4
run: 2947 init-file 11: (((jump)) ((-8 offset)))
run: 2948 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13083 to nil
run: 2949 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2950 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2951 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13366 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2952 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: 4965 => ((1 list-address))
setm: ((1 list-address)) <= 4965
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13368 to 4965
run: 2953 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 4965 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 4965
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13369 to 4965
run: 2954 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 4965 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 4965
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13084 to 4965
run: 2955 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
run: 13114 => ((6 square-address))
setm: ((6 square-address)) <= 13114
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13085 to 13114
run: 2956 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((4966 location) (raw))
sizeof: ((4966 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13114 to #\_
run: 2957 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2958 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13397 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2959 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4965)
run: 4965 => ((1 list-address))
setm: ((1 list-address)) <= 4965
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13399 to 4965
run: 2960 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((4967 list-address) (raw))
sizeof: ((4967 list-address) (raw))
run: 5030 => ((2 list-address))
setm: ((2 list-address)) <= 5030
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13400 to 5030
run: 2961 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5030 => ((1 list-address))
setm: ((1 list-address)) <= 5030
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13080 to 5030
run: 2962 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13082 to 5
run: 2963 init-file 11: (((jump)) ((-8 offset)))
run: 2964 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13083 to nil
run: 2965 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2966 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2967 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13428 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2968 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: 5030 => ((1 list-address))
setm: ((1 list-address)) <= 5030
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13430 to 5030
run: 2969 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5030 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5030
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13431 to 5030
run: 2970 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5030 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5030
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13084 to 5030
run: 2971 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
run: 13115 => ((6 square-address))
setm: ((6 square-address)) <= 13115
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13085 to 13115
run: 2972 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5031 location) (raw))
sizeof: ((5031 location) (raw))
run: #\_ => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\_
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13115 to #\_
run: 2973 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2974 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13459 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2975 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5030)
run: 5030 => ((1 list-address))
setm: ((1 list-address)) <= 5030
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13461 to 5030
run: 2976 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5032 list-address) (raw))
sizeof: ((5032 list-address) (raw))
run: 5095 => ((2 list-address))
setm: ((2 list-address)) <= 5095
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13462 to 5095
run: 2977 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5095 => ((1 list-address))
setm: ((1 list-address)) <= 5095
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13080 to 5095
run: 2978 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13082 to 6
run: 2979 init-file 11: (((jump)) ((-8 offset)))
run: 2980 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13083 to nil
run: 2981 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2982 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2983 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13490 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2984 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: 5095 => ((1 list-address))
setm: ((1 list-address)) <= 5095
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13492 to 5095
run: 2985 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5095 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5095
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13493 to 5095
run: 2986 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5095 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5095
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13084 to 5095
run: 2987 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
run: 13116 => ((6 square-address))
setm: ((6 square-address)) <= 13116
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13085 to 13116
run: 2988 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5096 location) (raw))
sizeof: ((5096 location) (raw))
run: #\p => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\p
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13116 to #\p
run: 2989 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2990 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13521 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2991 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5095)
run: 5095 => ((1 list-address))
setm: ((1 list-address)) <= 5095
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13523 to 5095
run: 2992 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5097 list-address) (raw))
sizeof: ((5097 list-address) (raw))
run: 5160 => ((2 list-address))
setm: ((2 list-address)) <= 5160
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13524 to 5160
run: 2993 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 5160 => ((1 list-address))
setm: ((1 list-address)) <= 5160
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13080 to 5160
run: 2994 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13082 to 7
run: 2995 init-file 11: (((jump)) ((-8 offset)))
run: 2996 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13083 to nil
run: 2997 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2998 init-file 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 2999 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13552 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3000 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: 5160 => ((1 list-address))
setm: ((1 list-address)) <= 5160
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13554 to 5160
schedule: scheduling list-value-address/init-file/init-board/main for further processing
schedule: list-value-address/init-file/init-board/main
run: 3001 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 5160 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 5160
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 13555 to 5160
run: 3002 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((5 tagged-value-address)))
reply: 5160 => ((5 tagged-value-address))
setm: ((5 tagged-value-address)) <= 5160
setm: size of ((5 tagged-value-address)) is 1
setm: ((5 tagged-value-address)): setting 13084 to 5160
run: 3003 init-file 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
run: 13117 => ((6 square-address))
setm: ((6 square-address)) <= 13117
setm: size of ((6 square-address)) is 1
setm: ((6 square-address)): setting 13085 to 13117
run: 3004 init-file 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((5161 location) (raw))
sizeof: ((5161 location) (raw))
run: #\r => ((6 square-address) (deref))
setm: ((6 square-address) (deref)) <= #\r
setm: size of ((6 square-address) (deref)) is 1
setm: ((6 square-address) (deref)): setting 13117 to #\r
run: 3005 init-file 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 3006 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13583 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3007 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5160)
run: 5160 => ((1 list-address))
setm: ((1 list-address)) <= 5160
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13585 to 5160
run: 3008 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((5162 list-address) (raw))
sizeof: ((5162 list-address) (raw))
run: nil => ((2 list-address))
setm: ((2 list-address)) <= nil
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 13586 to nil
run: 3009 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: nil => ((1 list-address))
setm: ((1 list-address)) <= nil
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 13080 to nil
run: 3010 init-file 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((3 integer))
setm: ((3 integer)) <= 8
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13082 to 8
run: 3011 init-file 11: (((jump)) ((-8 offset)))
run: 3012 init-file 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13083 to t
run: 3013 init-file 5: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 3014 init-file 12: (((reply)) ((2 file-address)) ((1 list-address)))
m: ((2 file-address))
sizeof: ((2 file-address))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((2 file-address)) ((1 list-address))) (((8 file-address-address) (deref)) ((6 list-address)))
reply: 13109 => ((8 file-address-address) (deref))
setm: ((8 file-address-address) (deref)) <= 13109
setm: size of ((8 file-address-address) (deref)) is 1
setm: ((8 file-address-address) (deref)): setting 9325 to 13109
reply: nil => ((6 list-address))
setm: ((6 list-address)) <= nil
setm: size of ((6 list-address)) is 1
setm: ((6 list-address)): setting 5263 to nil
run: 3015 init-board 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: 8 => ((5 integer))
setm: ((5 integer)) <= 8
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 5262 to 8
run: 3016 init-board 13: (((jump)) ((-6 offset)))
run: 3017 init-board 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((7 boolean))
setm: ((7 boolean)) <= t
setm: size of ((7 boolean)) is 1
setm: ((7 boolean)): setting 5264 to t
run: 3018 init-board 9: (((jump-if)) ((7 boolean)) ((4 offset)))
m: ((7 boolean))
sizeof: ((7 boolean))
run: 3019 init-board 14: (((reply)) ((4 board-address)))
m: ((4 board-address))
sizeof: ((4 board-address))
reply: (((4 board-address))) (((2 board-address)))
reply: 9317 => ((2 board-address))
setm: ((2 board-address)) <= 9317
setm: size of ((2 board-address)) is 1
setm: ((2 board-address)): setting 1003 to 9317
run: 3020 main 3: (((3 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
run: 3021 init-fake-terminal 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 13614 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3022 init-fake-terminal 1: (((1 terminal-address)) <- ((new)) ((terminal literal)))
sizeof: ((_ terminal))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 13616 to 13645
run: 3023 init-fake-terminal 2: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 13646 => ((2 integer-address))
setm: ((2 integer-address)) <= 13646
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 13617 to 13646
run: 3024 init-fake-terminal 3: (((2 integer-address) (deref)) <- ((next-input)))
arg: nil 0 (20 10)
run: 20 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 20
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13646 to 20
run: 3025 init-fake-terminal 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((0 offset)))
run: 13645 => ((3 integer-address))
setm: ((3 integer-address)) <= 13645
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 13618 to 13645
run: 3026 init-fake-terminal 5: (((3 integer-address) (deref)) <- ((next-input)))
arg: nil 1 (20 10)
run: 10 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 10
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13645 to 10
run: 3027 init-fake-terminal 6: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((4 integer-address))
setm: ((4 integer-address)) <= 13647
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 13619 to 13647
run: 3028 init-fake-terminal 7: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13647 to 0
run: 3029 init-fake-terminal 8: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((5 integer-address))
setm: ((5 integer-address)) <= 13648
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 13620 to 13648
run: 3030 init-fake-terminal 9: (((5 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((5 integer-address) (deref))
setm: ((5 integer-address) (deref)) <= 0
setm: size of ((5 integer-address) (deref)) is 1
setm: ((5 integer-address) (deref)): setting 13648 to 0
run: 3031 init-fake-terminal 10: (((6 integer)) <- ((multiply)) ((2 integer-address) (deref)) ((3 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
run: 200 => ((6 integer))
setm: ((6 integer)) <= 200
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 13621 to 200
run: 3032 init-fake-terminal 11: (((7 string-address-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13649 => ((7 string-address-address))
setm: ((7 string-address-address)) <= 13649
setm: size of ((7 string-address-address)) is 1
setm: ((7 string-address-address)): setting 13622 to 13649
run: 3033 init-fake-terminal 12: (((7 string-address-address) (deref)) <- ((new)) ((string literal)) ((6 integer)))
m: ((6 integer))
sizeof: ((6 integer))
sizeof: ((_ byte))
run: 13650 => ((7 string-address-address) (deref))
setm: ((7 string-address-address) (deref)) <= 13650
setm: size of ((7 string-address-address) (deref)) is 1
setm: ((7 string-address-address) (deref)): setting 13649 to 13650
run: 3034 init-fake-terminal 13: (((clear-screen)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 3035 clear-screen 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13851 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3036 clear-screen 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 13853 to 13645
run: 3037 clear-screen 2: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 3038 clear-screen 3: (((2 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((2 string-address))
setm: ((2 string-address)) <= 13650
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 13854 to 13650
run: 3039 clear-screen 4: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
run: 200 => ((3 integer))
setm: ((3 integer)) <= 200
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13855 to 200
run: 3040 clear-screen 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 0
run: 3041 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3042 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3043 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13651 => ((1 byte-address))
setm: ((1 byte-address)) <= 13651
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13651
run: 3044 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13651 to #\space
run: 3045 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 1
run: 3046 clear-screen 11: (((jump)) ((-6 offset)))
run: 3047 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3048 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3049 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13652 => ((1 byte-address))
setm: ((1 byte-address)) <= 13652
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13652
run: 3050 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13652 to #\space
run: 3051 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 2
run: 3052 clear-screen 11: (((jump)) ((-6 offset)))
run: 3053 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3054 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3055 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13653 => ((1 byte-address))
setm: ((1 byte-address)) <= 13653
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13653
run: 3056 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13653 to #\space
run: 3057 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 3
run: 3058 clear-screen 11: (((jump)) ((-6 offset)))
run: 3059 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3060 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3061 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13654 => ((1 byte-address))
setm: ((1 byte-address)) <= 13654
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13654
run: 3062 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13654 to #\space
run: 3063 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 4
run: 3064 clear-screen 11: (((jump)) ((-6 offset)))
run: 3065 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3066 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3067 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13655 => ((1 byte-address))
setm: ((1 byte-address)) <= 13655
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13655
run: 3068 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13655 to #\space
run: 3069 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 5 => ((4 integer))
setm: ((4 integer)) <= 5
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 5
run: 3070 clear-screen 11: (((jump)) ((-6 offset)))
run: 3071 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3072 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3073 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13656 => ((1 byte-address))
setm: ((1 byte-address)) <= 13656
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13656
run: 3074 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13656 to #\space
run: 3075 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 6 => ((4 integer))
setm: ((4 integer)) <= 6
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 6
run: 3076 clear-screen 11: (((jump)) ((-6 offset)))
run: 3077 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3078 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3079 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13657 => ((1 byte-address))
setm: ((1 byte-address)) <= 13657
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13657
run: 3080 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13657 to #\space
run: 3081 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 7 => ((4 integer))
setm: ((4 integer)) <= 7
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 7
run: 3082 clear-screen 11: (((jump)) ((-6 offset)))
run: 3083 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3084 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3085 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13658 => ((1 byte-address))
setm: ((1 byte-address)) <= 13658
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13658
run: 3086 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13658 to #\space
run: 3087 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 8 => ((4 integer))
setm: ((4 integer)) <= 8
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 8
run: 3088 clear-screen 11: (((jump)) ((-6 offset)))
run: 3089 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3090 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3091 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13659 => ((1 byte-address))
setm: ((1 byte-address)) <= 13659
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13659
run: 3092 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13659 to #\space
run: 3093 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 9
run: 3094 clear-screen 11: (((jump)) ((-6 offset)))
run: 3095 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3096 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3097 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13660 => ((1 byte-address))
setm: ((1 byte-address)) <= 13660
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13660
run: 3098 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13660 to #\space
run: 3099 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 10 => ((4 integer))
setm: ((4 integer)) <= 10
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 10
run: 3100 clear-screen 11: (((jump)) ((-6 offset)))
run: 3101 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3102 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3103 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13661 => ((1 byte-address))
setm: ((1 byte-address)) <= 13661
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13661
run: 3104 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13661 to #\space
run: 3105 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 11 => ((4 integer))
setm: ((4 integer)) <= 11
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 11
run: 3106 clear-screen 11: (((jump)) ((-6 offset)))
run: 3107 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3108 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3109 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13662 => ((1 byte-address))
setm: ((1 byte-address)) <= 13662
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13662
run: 3110 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13662 to #\space
run: 3111 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 12 => ((4 integer))
setm: ((4 integer)) <= 12
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 12
run: 3112 clear-screen 11: (((jump)) ((-6 offset)))
run: 3113 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3114 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3115 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13663 => ((1 byte-address))
setm: ((1 byte-address)) <= 13663
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13663
run: 3116 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13663 to #\space
run: 3117 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 13 => ((4 integer))
setm: ((4 integer)) <= 13
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 13
run: 3118 clear-screen 11: (((jump)) ((-6 offset)))
run: 3119 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3120 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3121 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13664 => ((1 byte-address))
setm: ((1 byte-address)) <= 13664
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13664
run: 3122 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13664 to #\space
run: 3123 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 14 => ((4 integer))
setm: ((4 integer)) <= 14
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 14
run: 3124 clear-screen 11: (((jump)) ((-6 offset)))
run: 3125 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3126 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3127 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13665 => ((1 byte-address))
setm: ((1 byte-address)) <= 13665
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13665
run: 3128 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13665 to #\space
run: 3129 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 15 => ((4 integer))
setm: ((4 integer)) <= 15
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 15
run: 3130 clear-screen 11: (((jump)) ((-6 offset)))
run: 3131 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3132 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3133 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13666 => ((1 byte-address))
setm: ((1 byte-address)) <= 13666
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13666
run: 3134 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13666 to #\space
run: 3135 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 16 => ((4 integer))
setm: ((4 integer)) <= 16
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 16
run: 3136 clear-screen 11: (((jump)) ((-6 offset)))
run: 3137 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3138 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3139 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13667 => ((1 byte-address))
setm: ((1 byte-address)) <= 13667
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13667
run: 3140 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13667 to #\space
run: 3141 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 17 => ((4 integer))
setm: ((4 integer)) <= 17
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 17
run: 3142 clear-screen 11: (((jump)) ((-6 offset)))
run: 3143 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3144 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3145 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13668 => ((1 byte-address))
setm: ((1 byte-address)) <= 13668
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13668
run: 3146 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13668 to #\space
run: 3147 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 18 => ((4 integer))
setm: ((4 integer)) <= 18
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 18
run: 3148 clear-screen 11: (((jump)) ((-6 offset)))
run: 3149 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3150 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3151 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13669 => ((1 byte-address))
setm: ((1 byte-address)) <= 13669
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13669
run: 3152 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13669 to #\space
run: 3153 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 19 => ((4 integer))
setm: ((4 integer)) <= 19
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 19
run: 3154 clear-screen 11: (((jump)) ((-6 offset)))
run: 3155 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3156 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3157 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13670 => ((1 byte-address))
setm: ((1 byte-address)) <= 13670
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13670
run: 3158 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13670 to #\space
run: 3159 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 20 => ((4 integer))
setm: ((4 integer)) <= 20
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 20
run: 3160 clear-screen 11: (((jump)) ((-6 offset)))
run: 3161 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3162 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3163 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13671 => ((1 byte-address))
setm: ((1 byte-address)) <= 13671
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13671
run: 3164 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13671 to #\space
run: 3165 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 21 => ((4 integer))
setm: ((4 integer)) <= 21
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 21
run: 3166 clear-screen 11: (((jump)) ((-6 offset)))
run: 3167 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3168 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3169 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13672 => ((1 byte-address))
setm: ((1 byte-address)) <= 13672
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13672
run: 3170 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13672 to #\space
run: 3171 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 22 => ((4 integer))
setm: ((4 integer)) <= 22
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 22
run: 3172 clear-screen 11: (((jump)) ((-6 offset)))
run: 3173 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3174 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3175 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13673 => ((1 byte-address))
setm: ((1 byte-address)) <= 13673
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13673
run: 3176 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13673 to #\space
run: 3177 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 23 => ((4 integer))
setm: ((4 integer)) <= 23
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 23
run: 3178 clear-screen 11: (((jump)) ((-6 offset)))
run: 3179 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3180 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3181 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13674 => ((1 byte-address))
setm: ((1 byte-address)) <= 13674
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13674
run: 3182 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13674 to #\space
run: 3183 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 24 => ((4 integer))
setm: ((4 integer)) <= 24
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 24
run: 3184 clear-screen 11: (((jump)) ((-6 offset)))
run: 3185 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3186 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3187 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13675 => ((1 byte-address))
setm: ((1 byte-address)) <= 13675
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13675
run: 3188 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13675 to #\space
run: 3189 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 25 => ((4 integer))
setm: ((4 integer)) <= 25
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 25
run: 3190 clear-screen 11: (((jump)) ((-6 offset)))
run: 3191 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3192 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3193 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13676 => ((1 byte-address))
setm: ((1 byte-address)) <= 13676
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13676
run: 3194 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13676 to #\space
run: 3195 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 26 => ((4 integer))
setm: ((4 integer)) <= 26
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 26
run: 3196 clear-screen 11: (((jump)) ((-6 offset)))
run: 3197 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3198 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3199 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13677 => ((1 byte-address))
setm: ((1 byte-address)) <= 13677
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13677
run: 3200 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13677 to #\space
run: 3201 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 27 => ((4 integer))
setm: ((4 integer)) <= 27
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 27
run: 3202 clear-screen 11: (((jump)) ((-6 offset)))
run: 3203 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3204 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3205 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13678 => ((1 byte-address))
setm: ((1 byte-address)) <= 13678
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13678
run: 3206 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13678 to #\space
run: 3207 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 28 => ((4 integer))
setm: ((4 integer)) <= 28
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 28
run: 3208 clear-screen 11: (((jump)) ((-6 offset)))
run: 3209 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3210 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3211 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13679 => ((1 byte-address))
setm: ((1 byte-address)) <= 13679
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13679
run: 3212 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13679 to #\space
run: 3213 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 29 => ((4 integer))
setm: ((4 integer)) <= 29
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 29
run: 3214 clear-screen 11: (((jump)) ((-6 offset)))
run: 3215 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3216 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3217 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13680 => ((1 byte-address))
setm: ((1 byte-address)) <= 13680
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13680
run: 3218 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13680 to #\space
run: 3219 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 30
run: 3220 clear-screen 11: (((jump)) ((-6 offset)))
run: 3221 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3222 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3223 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13681 => ((1 byte-address))
setm: ((1 byte-address)) <= 13681
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13681
run: 3224 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13681 to #\space
run: 3225 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 31 => ((4 integer))
setm: ((4 integer)) <= 31
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 31
run: 3226 clear-screen 11: (((jump)) ((-6 offset)))
run: 3227 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3228 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3229 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13682 => ((1 byte-address))
setm: ((1 byte-address)) <= 13682
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13682
run: 3230 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13682 to #\space
run: 3231 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 32 => ((4 integer))
setm: ((4 integer)) <= 32
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 32
run: 3232 clear-screen 11: (((jump)) ((-6 offset)))
run: 3233 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3234 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3235 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13683 => ((1 byte-address))
setm: ((1 byte-address)) <= 13683
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13683
run: 3236 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13683 to #\space
run: 3237 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 33 => ((4 integer))
setm: ((4 integer)) <= 33
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 33
run: 3238 clear-screen 11: (((jump)) ((-6 offset)))
run: 3239 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3240 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3241 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13684 => ((1 byte-address))
setm: ((1 byte-address)) <= 13684
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13684
run: 3242 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13684 to #\space
run: 3243 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 34 => ((4 integer))
setm: ((4 integer)) <= 34
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 34
run: 3244 clear-screen 11: (((jump)) ((-6 offset)))
run: 3245 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3246 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3247 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13685 => ((1 byte-address))
setm: ((1 byte-address)) <= 13685
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13685
run: 3248 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13685 to #\space
run: 3249 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 35 => ((4 integer))
setm: ((4 integer)) <= 35
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 35
run: 3250 clear-screen 11: (((jump)) ((-6 offset)))
run: 3251 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3252 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3253 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13686 => ((1 byte-address))
setm: ((1 byte-address)) <= 13686
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13686
run: 3254 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13686 to #\space
run: 3255 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 36 => ((4 integer))
setm: ((4 integer)) <= 36
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 36
run: 3256 clear-screen 11: (((jump)) ((-6 offset)))
run: 3257 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3258 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3259 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13687 => ((1 byte-address))
setm: ((1 byte-address)) <= 13687
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13687
run: 3260 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13687 to #\space
run: 3261 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 37 => ((4 integer))
setm: ((4 integer)) <= 37
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 37
run: 3262 clear-screen 11: (((jump)) ((-6 offset)))
run: 3263 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3264 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3265 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13688 => ((1 byte-address))
setm: ((1 byte-address)) <= 13688
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13688
run: 3266 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13688 to #\space
run: 3267 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 38 => ((4 integer))
setm: ((4 integer)) <= 38
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 38
run: 3268 clear-screen 11: (((jump)) ((-6 offset)))
run: 3269 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3270 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3271 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13689 => ((1 byte-address))
setm: ((1 byte-address)) <= 13689
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13689
run: 3272 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13689 to #\space
run: 3273 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 39 => ((4 integer))
setm: ((4 integer)) <= 39
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 39
run: 3274 clear-screen 11: (((jump)) ((-6 offset)))
run: 3275 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3276 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3277 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13690 => ((1 byte-address))
setm: ((1 byte-address)) <= 13690
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13690
run: 3278 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13690 to #\space
run: 3279 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 40 => ((4 integer))
setm: ((4 integer)) <= 40
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 40
run: 3280 clear-screen 11: (((jump)) ((-6 offset)))
run: 3281 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3282 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3283 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13691 => ((1 byte-address))
setm: ((1 byte-address)) <= 13691
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13691
run: 3284 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13691 to #\space
run: 3285 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 41 => ((4 integer))
setm: ((4 integer)) <= 41
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 41
run: 3286 clear-screen 11: (((jump)) ((-6 offset)))
run: 3287 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3288 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3289 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13692 => ((1 byte-address))
setm: ((1 byte-address)) <= 13692
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13692
run: 3290 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13692 to #\space
run: 3291 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 42 => ((4 integer))
setm: ((4 integer)) <= 42
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 42
run: 3292 clear-screen 11: (((jump)) ((-6 offset)))
run: 3293 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3294 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3295 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13693 => ((1 byte-address))
setm: ((1 byte-address)) <= 13693
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13693
run: 3296 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13693 to #\space
run: 3297 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 43 => ((4 integer))
setm: ((4 integer)) <= 43
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 43
run: 3298 clear-screen 11: (((jump)) ((-6 offset)))
run: 3299 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3300 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3301 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13694 => ((1 byte-address))
setm: ((1 byte-address)) <= 13694
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13694
run: 3302 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13694 to #\space
run: 3303 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 44 => ((4 integer))
setm: ((4 integer)) <= 44
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 44
run: 3304 clear-screen 11: (((jump)) ((-6 offset)))
run: 3305 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3306 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3307 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13695 => ((1 byte-address))
setm: ((1 byte-address)) <= 13695
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13695
run: 3308 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13695 to #\space
run: 3309 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 45 => ((4 integer))
setm: ((4 integer)) <= 45
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 45
run: 3310 clear-screen 11: (((jump)) ((-6 offset)))
run: 3311 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3312 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3313 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13696 => ((1 byte-address))
setm: ((1 byte-address)) <= 13696
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13696
run: 3314 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13696 to #\space
run: 3315 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 46 => ((4 integer))
setm: ((4 integer)) <= 46
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 46
run: 3316 clear-screen 11: (((jump)) ((-6 offset)))
run: 3317 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3318 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3319 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13697 => ((1 byte-address))
setm: ((1 byte-address)) <= 13697
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13697
run: 3320 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13697 to #\space
run: 3321 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 47 => ((4 integer))
setm: ((4 integer)) <= 47
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 47
run: 3322 clear-screen 11: (((jump)) ((-6 offset)))
run: 3323 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3324 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3325 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13698 => ((1 byte-address))
setm: ((1 byte-address)) <= 13698
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13698
run: 3326 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13698 to #\space
run: 3327 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 48 => ((4 integer))
setm: ((4 integer)) <= 48
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 48
run: 3328 clear-screen 11: (((jump)) ((-6 offset)))
run: 3329 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3330 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3331 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13699 => ((1 byte-address))
setm: ((1 byte-address)) <= 13699
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13699
run: 3332 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13699 to #\space
run: 3333 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 49 => ((4 integer))
setm: ((4 integer)) <= 49
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 49
run: 3334 clear-screen 11: (((jump)) ((-6 offset)))
run: 3335 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3336 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3337 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13700 => ((1 byte-address))
setm: ((1 byte-address)) <= 13700
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13700
run: 3338 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13700 to #\space
run: 3339 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 50 => ((4 integer))
setm: ((4 integer)) <= 50
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 50
run: 3340 clear-screen 11: (((jump)) ((-6 offset)))
run: 3341 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3342 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3343 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13701 => ((1 byte-address))
setm: ((1 byte-address)) <= 13701
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13701
run: 3344 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13701 to #\space
run: 3345 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 51 => ((4 integer))
setm: ((4 integer)) <= 51
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 51
run: 3346 clear-screen 11: (((jump)) ((-6 offset)))
run: 3347 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3348 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3349 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13702 => ((1 byte-address))
setm: ((1 byte-address)) <= 13702
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13702
run: 3350 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13702 to #\space
run: 3351 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 52 => ((4 integer))
setm: ((4 integer)) <= 52
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 52
run: 3352 clear-screen 11: (((jump)) ((-6 offset)))
run: 3353 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3354 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3355 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13703 => ((1 byte-address))
setm: ((1 byte-address)) <= 13703
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13703
run: 3356 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13703 to #\space
run: 3357 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 53 => ((4 integer))
setm: ((4 integer)) <= 53
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 53
run: 3358 clear-screen 11: (((jump)) ((-6 offset)))
run: 3359 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3360 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3361 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13704 => ((1 byte-address))
setm: ((1 byte-address)) <= 13704
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13704
run: 3362 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13704 to #\space
run: 3363 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 54 => ((4 integer))
setm: ((4 integer)) <= 54
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 54
run: 3364 clear-screen 11: (((jump)) ((-6 offset)))
run: 3365 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3366 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3367 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13705 => ((1 byte-address))
setm: ((1 byte-address)) <= 13705
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13705
run: 3368 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13705 to #\space
run: 3369 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 55 => ((4 integer))
setm: ((4 integer)) <= 55
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 55
run: 3370 clear-screen 11: (((jump)) ((-6 offset)))
run: 3371 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3372 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3373 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13706 => ((1 byte-address))
setm: ((1 byte-address)) <= 13706
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13706
run: 3374 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13706 to #\space
run: 3375 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 56 => ((4 integer))
setm: ((4 integer)) <= 56
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 56
run: 3376 clear-screen 11: (((jump)) ((-6 offset)))
run: 3377 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3378 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3379 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13707 => ((1 byte-address))
setm: ((1 byte-address)) <= 13707
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13707
run: 3380 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13707 to #\space
run: 3381 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 57 => ((4 integer))
setm: ((4 integer)) <= 57
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 57
run: 3382 clear-screen 11: (((jump)) ((-6 offset)))
run: 3383 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3384 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3385 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13708 => ((1 byte-address))
setm: ((1 byte-address)) <= 13708
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13708
run: 3386 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13708 to #\space
run: 3387 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 58 => ((4 integer))
setm: ((4 integer)) <= 58
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 58
run: 3388 clear-screen 11: (((jump)) ((-6 offset)))
run: 3389 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3390 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3391 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13709 => ((1 byte-address))
setm: ((1 byte-address)) <= 13709
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13709
run: 3392 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13709 to #\space
run: 3393 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 59 => ((4 integer))
setm: ((4 integer)) <= 59
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 59
run: 3394 clear-screen 11: (((jump)) ((-6 offset)))
run: 3395 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3396 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3397 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13710 => ((1 byte-address))
setm: ((1 byte-address)) <= 13710
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13710
run: 3398 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13710 to #\space
run: 3399 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 60 => ((4 integer))
setm: ((4 integer)) <= 60
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 60
run: 3400 clear-screen 11: (((jump)) ((-6 offset)))
run: 3401 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3402 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3403 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13711 => ((1 byte-address))
setm: ((1 byte-address)) <= 13711
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13711
run: 3404 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13711 to #\space
run: 3405 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 61 => ((4 integer))
setm: ((4 integer)) <= 61
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 61
run: 3406 clear-screen 11: (((jump)) ((-6 offset)))
run: 3407 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3408 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3409 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13712 => ((1 byte-address))
setm: ((1 byte-address)) <= 13712
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13712
run: 3410 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13712 to #\space
run: 3411 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 62 => ((4 integer))
setm: ((4 integer)) <= 62
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 62
run: 3412 clear-screen 11: (((jump)) ((-6 offset)))
run: 3413 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3414 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3415 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13713 => ((1 byte-address))
setm: ((1 byte-address)) <= 13713
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13713
run: 3416 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13713 to #\space
run: 3417 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 63 => ((4 integer))
setm: ((4 integer)) <= 63
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 63
run: 3418 clear-screen 11: (((jump)) ((-6 offset)))
run: 3419 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3420 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3421 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13714 => ((1 byte-address))
setm: ((1 byte-address)) <= 13714
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13714
run: 3422 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13714 to #\space
run: 3423 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 64 => ((4 integer))
setm: ((4 integer)) <= 64
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 64
run: 3424 clear-screen 11: (((jump)) ((-6 offset)))
run: 3425 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3426 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3427 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13715 => ((1 byte-address))
setm: ((1 byte-address)) <= 13715
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13715
run: 3428 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13715 to #\space
run: 3429 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 65 => ((4 integer))
setm: ((4 integer)) <= 65
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 65
run: 3430 clear-screen 11: (((jump)) ((-6 offset)))
run: 3431 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3432 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3433 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13716 => ((1 byte-address))
setm: ((1 byte-address)) <= 13716
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13716
run: 3434 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13716 to #\space
run: 3435 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 66 => ((4 integer))
setm: ((4 integer)) <= 66
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 66
run: 3436 clear-screen 11: (((jump)) ((-6 offset)))
run: 3437 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3438 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3439 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13717 => ((1 byte-address))
setm: ((1 byte-address)) <= 13717
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13717
run: 3440 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13717 to #\space
run: 3441 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 67 => ((4 integer))
setm: ((4 integer)) <= 67
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 67
run: 3442 clear-screen 11: (((jump)) ((-6 offset)))
run: 3443 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3444 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3445 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13718 => ((1 byte-address))
setm: ((1 byte-address)) <= 13718
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13718
run: 3446 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13718 to #\space
run: 3447 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 68 => ((4 integer))
setm: ((4 integer)) <= 68
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 68
run: 3448 clear-screen 11: (((jump)) ((-6 offset)))
run: 3449 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3450 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3451 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13719 => ((1 byte-address))
setm: ((1 byte-address)) <= 13719
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13719
run: 3452 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13719 to #\space
run: 3453 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 69 => ((4 integer))
setm: ((4 integer)) <= 69
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 69
run: 3454 clear-screen 11: (((jump)) ((-6 offset)))
run: 3455 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3456 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3457 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13720 => ((1 byte-address))
setm: ((1 byte-address)) <= 13720
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13720
run: 3458 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13720 to #\space
run: 3459 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 70 => ((4 integer))
setm: ((4 integer)) <= 70
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 70
run: 3460 clear-screen 11: (((jump)) ((-6 offset)))
run: 3461 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3462 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3463 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13721 => ((1 byte-address))
setm: ((1 byte-address)) <= 13721
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13721
run: 3464 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13721 to #\space
run: 3465 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 71 => ((4 integer))
setm: ((4 integer)) <= 71
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 71
run: 3466 clear-screen 11: (((jump)) ((-6 offset)))
run: 3467 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3468 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3469 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13722 => ((1 byte-address))
setm: ((1 byte-address)) <= 13722
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13722
run: 3470 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13722 to #\space
run: 3471 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 72 => ((4 integer))
setm: ((4 integer)) <= 72
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 72
run: 3472 clear-screen 11: (((jump)) ((-6 offset)))
run: 3473 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3474 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3475 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13723 => ((1 byte-address))
setm: ((1 byte-address)) <= 13723
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13723
run: 3476 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13723 to #\space
run: 3477 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 73 => ((4 integer))
setm: ((4 integer)) <= 73
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 73
run: 3478 clear-screen 11: (((jump)) ((-6 offset)))
run: 3479 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3480 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3481 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13724 => ((1 byte-address))
setm: ((1 byte-address)) <= 13724
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13724
run: 3482 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13724 to #\space
run: 3483 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 74 => ((4 integer))
setm: ((4 integer)) <= 74
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 74
run: 3484 clear-screen 11: (((jump)) ((-6 offset)))
run: 3485 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3486 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3487 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13725 => ((1 byte-address))
setm: ((1 byte-address)) <= 13725
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13725
run: 3488 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13725 to #\space
run: 3489 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 75 => ((4 integer))
setm: ((4 integer)) <= 75
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 75
run: 3490 clear-screen 11: (((jump)) ((-6 offset)))
run: 3491 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3492 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3493 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13726 => ((1 byte-address))
setm: ((1 byte-address)) <= 13726
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13726
run: 3494 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13726 to #\space
run: 3495 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 76 => ((4 integer))
setm: ((4 integer)) <= 76
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 76
run: 3496 clear-screen 11: (((jump)) ((-6 offset)))
run: 3497 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3498 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3499 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13727 => ((1 byte-address))
setm: ((1 byte-address)) <= 13727
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13727
run: 3500 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13727 to #\space
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: 3501 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 77 => ((4 integer))
setm: ((4 integer)) <= 77
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 77
run: 3502 clear-screen 11: (((jump)) ((-6 offset)))
run: 3503 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3504 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3505 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13728 => ((1 byte-address))
setm: ((1 byte-address)) <= 13728
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13728
run: 3506 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13728 to #\space
run: 3507 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 78 => ((4 integer))
setm: ((4 integer)) <= 78
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 78
run: 3508 clear-screen 11: (((jump)) ((-6 offset)))
run: 3509 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3510 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3511 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13729 => ((1 byte-address))
setm: ((1 byte-address)) <= 13729
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13729
run: 3512 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13729 to #\space
run: 3513 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 79 => ((4 integer))
setm: ((4 integer)) <= 79
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 79
run: 3514 clear-screen 11: (((jump)) ((-6 offset)))
run: 3515 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3516 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3517 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13730 => ((1 byte-address))
setm: ((1 byte-address)) <= 13730
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13730
run: 3518 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13730 to #\space
run: 3519 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 80 => ((4 integer))
setm: ((4 integer)) <= 80
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 80
run: 3520 clear-screen 11: (((jump)) ((-6 offset)))
run: 3521 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3522 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3523 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13731 => ((1 byte-address))
setm: ((1 byte-address)) <= 13731
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13731
run: 3524 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13731 to #\space
run: 3525 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 81 => ((4 integer))
setm: ((4 integer)) <= 81
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 81
run: 3526 clear-screen 11: (((jump)) ((-6 offset)))
run: 3527 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3528 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3529 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13732 => ((1 byte-address))
setm: ((1 byte-address)) <= 13732
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13732
run: 3530 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13732 to #\space
run: 3531 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 82 => ((4 integer))
setm: ((4 integer)) <= 82
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 82
run: 3532 clear-screen 11: (((jump)) ((-6 offset)))
run: 3533 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3534 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3535 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13733 => ((1 byte-address))
setm: ((1 byte-address)) <= 13733
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13733
run: 3536 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13733 to #\space
run: 3537 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 83 => ((4 integer))
setm: ((4 integer)) <= 83
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 83
run: 3538 clear-screen 11: (((jump)) ((-6 offset)))
run: 3539 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3540 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3541 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13734 => ((1 byte-address))
setm: ((1 byte-address)) <= 13734
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13734
run: 3542 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13734 to #\space
run: 3543 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 84 => ((4 integer))
setm: ((4 integer)) <= 84
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 84
run: 3544 clear-screen 11: (((jump)) ((-6 offset)))
run: 3545 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3546 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3547 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13735 => ((1 byte-address))
setm: ((1 byte-address)) <= 13735
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13735
run: 3548 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13735 to #\space
run: 3549 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 85 => ((4 integer))
setm: ((4 integer)) <= 85
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 85
run: 3550 clear-screen 11: (((jump)) ((-6 offset)))
run: 3551 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3552 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3553 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13736 => ((1 byte-address))
setm: ((1 byte-address)) <= 13736
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13736
run: 3554 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13736 to #\space
run: 3555 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 86 => ((4 integer))
setm: ((4 integer)) <= 86
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 86
run: 3556 clear-screen 11: (((jump)) ((-6 offset)))
run: 3557 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3558 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3559 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13737 => ((1 byte-address))
setm: ((1 byte-address)) <= 13737
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13737
run: 3560 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13737 to #\space
run: 3561 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 87 => ((4 integer))
setm: ((4 integer)) <= 87
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 87
run: 3562 clear-screen 11: (((jump)) ((-6 offset)))
run: 3563 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3564 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3565 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13738 => ((1 byte-address))
setm: ((1 byte-address)) <= 13738
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13738
run: 3566 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13738 to #\space
run: 3567 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 88 => ((4 integer))
setm: ((4 integer)) <= 88
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 88
run: 3568 clear-screen 11: (((jump)) ((-6 offset)))
run: 3569 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3570 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3571 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13739 => ((1 byte-address))
setm: ((1 byte-address)) <= 13739
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13739
run: 3572 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13739 to #\space
run: 3573 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 89 => ((4 integer))
setm: ((4 integer)) <= 89
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 89
run: 3574 clear-screen 11: (((jump)) ((-6 offset)))
run: 3575 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3576 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3577 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13740 => ((1 byte-address))
setm: ((1 byte-address)) <= 13740
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13740
run: 3578 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13740 to #\space
run: 3579 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 90 => ((4 integer))
setm: ((4 integer)) <= 90
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 90
run: 3580 clear-screen 11: (((jump)) ((-6 offset)))
run: 3581 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3582 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3583 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13741 => ((1 byte-address))
setm: ((1 byte-address)) <= 13741
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13741
run: 3584 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13741 to #\space
run: 3585 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 91 => ((4 integer))
setm: ((4 integer)) <= 91
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 91
run: 3586 clear-screen 11: (((jump)) ((-6 offset)))
run: 3587 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3588 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3589 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13742 => ((1 byte-address))
setm: ((1 byte-address)) <= 13742
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13742
run: 3590 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13742 to #\space
run: 3591 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 92 => ((4 integer))
setm: ((4 integer)) <= 92
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 92
run: 3592 clear-screen 11: (((jump)) ((-6 offset)))
run: 3593 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3594 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3595 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13743 => ((1 byte-address))
setm: ((1 byte-address)) <= 13743
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13743
run: 3596 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13743 to #\space
run: 3597 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 93 => ((4 integer))
setm: ((4 integer)) <= 93
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 93
run: 3598 clear-screen 11: (((jump)) ((-6 offset)))
run: 3599 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3600 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3601 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13744 => ((1 byte-address))
setm: ((1 byte-address)) <= 13744
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13744
run: 3602 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13744 to #\space
run: 3603 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 94 => ((4 integer))
setm: ((4 integer)) <= 94
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 94
run: 3604 clear-screen 11: (((jump)) ((-6 offset)))
run: 3605 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3606 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3607 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13745 => ((1 byte-address))
setm: ((1 byte-address)) <= 13745
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13745
run: 3608 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13745 to #\space
run: 3609 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 95 => ((4 integer))
setm: ((4 integer)) <= 95
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 95
run: 3610 clear-screen 11: (((jump)) ((-6 offset)))
run: 3611 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3612 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3613 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13746 => ((1 byte-address))
setm: ((1 byte-address)) <= 13746
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13746
run: 3614 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13746 to #\space
run: 3615 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 96 => ((4 integer))
setm: ((4 integer)) <= 96
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 96
run: 3616 clear-screen 11: (((jump)) ((-6 offset)))
run: 3617 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3618 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3619 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13747 => ((1 byte-address))
setm: ((1 byte-address)) <= 13747
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13747
run: 3620 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13747 to #\space
run: 3621 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 97 => ((4 integer))
setm: ((4 integer)) <= 97
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 97
run: 3622 clear-screen 11: (((jump)) ((-6 offset)))
run: 3623 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3624 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3625 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13748 => ((1 byte-address))
setm: ((1 byte-address)) <= 13748
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13748
run: 3626 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13748 to #\space
run: 3627 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 98 => ((4 integer))
setm: ((4 integer)) <= 98
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 98
run: 3628 clear-screen 11: (((jump)) ((-6 offset)))
run: 3629 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3630 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3631 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13749 => ((1 byte-address))
setm: ((1 byte-address)) <= 13749
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13749
run: 3632 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13749 to #\space
run: 3633 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 99 => ((4 integer))
setm: ((4 integer)) <= 99
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 99
run: 3634 clear-screen 11: (((jump)) ((-6 offset)))
run: 3635 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3636 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3637 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13750 => ((1 byte-address))
setm: ((1 byte-address)) <= 13750
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13750
run: 3638 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13750 to #\space
run: 3639 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 100 => ((4 integer))
setm: ((4 integer)) <= 100
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 100
run: 3640 clear-screen 11: (((jump)) ((-6 offset)))
run: 3641 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3642 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3643 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13751 => ((1 byte-address))
setm: ((1 byte-address)) <= 13751
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13751
run: 3644 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13751 to #\space
run: 3645 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 101 => ((4 integer))
setm: ((4 integer)) <= 101
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 101
run: 3646 clear-screen 11: (((jump)) ((-6 offset)))
run: 3647 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3648 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3649 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13752 => ((1 byte-address))
setm: ((1 byte-address)) <= 13752
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13752
run: 3650 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13752 to #\space
run: 3651 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 102 => ((4 integer))
setm: ((4 integer)) <= 102
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 102
run: 3652 clear-screen 11: (((jump)) ((-6 offset)))
run: 3653 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3654 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3655 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13753 => ((1 byte-address))
setm: ((1 byte-address)) <= 13753
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13753
run: 3656 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13753 to #\space
run: 3657 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 103 => ((4 integer))
setm: ((4 integer)) <= 103
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 103
run: 3658 clear-screen 11: (((jump)) ((-6 offset)))
run: 3659 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3660 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3661 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13754 => ((1 byte-address))
setm: ((1 byte-address)) <= 13754
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13754
run: 3662 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13754 to #\space
run: 3663 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 104 => ((4 integer))
setm: ((4 integer)) <= 104
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 104
run: 3664 clear-screen 11: (((jump)) ((-6 offset)))
run: 3665 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3666 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3667 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13755 => ((1 byte-address))
setm: ((1 byte-address)) <= 13755
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13755
run: 3668 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13755 to #\space
run: 3669 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 105 => ((4 integer))
setm: ((4 integer)) <= 105
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 105
run: 3670 clear-screen 11: (((jump)) ((-6 offset)))
run: 3671 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3672 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3673 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13756 => ((1 byte-address))
setm: ((1 byte-address)) <= 13756
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13756
run: 3674 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13756 to #\space
run: 3675 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 106 => ((4 integer))
setm: ((4 integer)) <= 106
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 106
run: 3676 clear-screen 11: (((jump)) ((-6 offset)))
run: 3677 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3678 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3679 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13757 => ((1 byte-address))
setm: ((1 byte-address)) <= 13757
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13757
run: 3680 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13757 to #\space
run: 3681 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 107 => ((4 integer))
setm: ((4 integer)) <= 107
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 107
run: 3682 clear-screen 11: (((jump)) ((-6 offset)))
run: 3683 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3684 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3685 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13758 => ((1 byte-address))
setm: ((1 byte-address)) <= 13758
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13758
run: 3686 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13758 to #\space
run: 3687 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 108 => ((4 integer))
setm: ((4 integer)) <= 108
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 108
run: 3688 clear-screen 11: (((jump)) ((-6 offset)))
run: 3689 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3690 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3691 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13759 => ((1 byte-address))
setm: ((1 byte-address)) <= 13759
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13759
run: 3692 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13759 to #\space
run: 3693 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 109 => ((4 integer))
setm: ((4 integer)) <= 109
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 109
run: 3694 clear-screen 11: (((jump)) ((-6 offset)))
run: 3695 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3696 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3697 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13760 => ((1 byte-address))
setm: ((1 byte-address)) <= 13760
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13760
run: 3698 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13760 to #\space
run: 3699 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 110 => ((4 integer))
setm: ((4 integer)) <= 110
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 110
run: 3700 clear-screen 11: (((jump)) ((-6 offset)))
run: 3701 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3702 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3703 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13761 => ((1 byte-address))
setm: ((1 byte-address)) <= 13761
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13761
run: 3704 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13761 to #\space
run: 3705 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 111 => ((4 integer))
setm: ((4 integer)) <= 111
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 111
run: 3706 clear-screen 11: (((jump)) ((-6 offset)))
run: 3707 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3708 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3709 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13762 => ((1 byte-address))
setm: ((1 byte-address)) <= 13762
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13762
run: 3710 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13762 to #\space
run: 3711 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 112 => ((4 integer))
setm: ((4 integer)) <= 112
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 112
run: 3712 clear-screen 11: (((jump)) ((-6 offset)))
run: 3713 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3714 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3715 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13763 => ((1 byte-address))
setm: ((1 byte-address)) <= 13763
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13763
run: 3716 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13763 to #\space
run: 3717 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 113 => ((4 integer))
setm: ((4 integer)) <= 113
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 113
run: 3718 clear-screen 11: (((jump)) ((-6 offset)))
run: 3719 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3720 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3721 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13764 => ((1 byte-address))
setm: ((1 byte-address)) <= 13764
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13764
run: 3722 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13764 to #\space
run: 3723 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 114 => ((4 integer))
setm: ((4 integer)) <= 114
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 114
run: 3724 clear-screen 11: (((jump)) ((-6 offset)))
run: 3725 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3726 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3727 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13765 => ((1 byte-address))
setm: ((1 byte-address)) <= 13765
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13765
run: 3728 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13765 to #\space
run: 3729 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 115 => ((4 integer))
setm: ((4 integer)) <= 115
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 115
run: 3730 clear-screen 11: (((jump)) ((-6 offset)))
run: 3731 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3732 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3733 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13766 => ((1 byte-address))
setm: ((1 byte-address)) <= 13766
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13766
run: 3734 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13766 to #\space
run: 3735 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 116 => ((4 integer))
setm: ((4 integer)) <= 116
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 116
run: 3736 clear-screen 11: (((jump)) ((-6 offset)))
run: 3737 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3738 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3739 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13767 => ((1 byte-address))
setm: ((1 byte-address)) <= 13767
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13767
run: 3740 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13767 to #\space
run: 3741 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 117 => ((4 integer))
setm: ((4 integer)) <= 117
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 117
run: 3742 clear-screen 11: (((jump)) ((-6 offset)))
run: 3743 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3744 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3745 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13768 => ((1 byte-address))
setm: ((1 byte-address)) <= 13768
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13768
run: 3746 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13768 to #\space
run: 3747 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 118 => ((4 integer))
setm: ((4 integer)) <= 118
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 118
run: 3748 clear-screen 11: (((jump)) ((-6 offset)))
run: 3749 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3750 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3751 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13769 => ((1 byte-address))
setm: ((1 byte-address)) <= 13769
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13769
run: 3752 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13769 to #\space
run: 3753 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 119 => ((4 integer))
setm: ((4 integer)) <= 119
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 119
run: 3754 clear-screen 11: (((jump)) ((-6 offset)))
run: 3755 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3756 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3757 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13770 => ((1 byte-address))
setm: ((1 byte-address)) <= 13770
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13770
run: 3758 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13770 to #\space
run: 3759 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 120 => ((4 integer))
setm: ((4 integer)) <= 120
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 120
run: 3760 clear-screen 11: (((jump)) ((-6 offset)))
run: 3761 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3762 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3763 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13771 => ((1 byte-address))
setm: ((1 byte-address)) <= 13771
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13771
run: 3764 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13771 to #\space
run: 3765 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 121 => ((4 integer))
setm: ((4 integer)) <= 121
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 121
run: 3766 clear-screen 11: (((jump)) ((-6 offset)))
run: 3767 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3768 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3769 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13772 => ((1 byte-address))
setm: ((1 byte-address)) <= 13772
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13772
run: 3770 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13772 to #\space
run: 3771 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 122 => ((4 integer))
setm: ((4 integer)) <= 122
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 122
run: 3772 clear-screen 11: (((jump)) ((-6 offset)))
run: 3773 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3774 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3775 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13773 => ((1 byte-address))
setm: ((1 byte-address)) <= 13773
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13773
run: 3776 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13773 to #\space
run: 3777 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 123 => ((4 integer))
setm: ((4 integer)) <= 123
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 123
run: 3778 clear-screen 11: (((jump)) ((-6 offset)))
run: 3779 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3780 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3781 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13774 => ((1 byte-address))
setm: ((1 byte-address)) <= 13774
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13774
run: 3782 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13774 to #\space
run: 3783 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 124 => ((4 integer))
setm: ((4 integer)) <= 124
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 124
run: 3784 clear-screen 11: (((jump)) ((-6 offset)))
run: 3785 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3786 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3787 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13775 => ((1 byte-address))
setm: ((1 byte-address)) <= 13775
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13775
run: 3788 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13775 to #\space
run: 3789 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 125 => ((4 integer))
setm: ((4 integer)) <= 125
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 125
run: 3790 clear-screen 11: (((jump)) ((-6 offset)))
run: 3791 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3792 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3793 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13776 => ((1 byte-address))
setm: ((1 byte-address)) <= 13776
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13776
run: 3794 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13776 to #\space
run: 3795 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 126 => ((4 integer))
setm: ((4 integer)) <= 126
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 126
run: 3796 clear-screen 11: (((jump)) ((-6 offset)))
run: 3797 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3798 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3799 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13777 => ((1 byte-address))
setm: ((1 byte-address)) <= 13777
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13777
run: 3800 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13777 to #\space
run: 3801 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 127 => ((4 integer))
setm: ((4 integer)) <= 127
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 127
run: 3802 clear-screen 11: (((jump)) ((-6 offset)))
run: 3803 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3804 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3805 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13778 => ((1 byte-address))
setm: ((1 byte-address)) <= 13778
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13778
run: 3806 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13778 to #\space
run: 3807 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 128 => ((4 integer))
setm: ((4 integer)) <= 128
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 128
run: 3808 clear-screen 11: (((jump)) ((-6 offset)))
run: 3809 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3810 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3811 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13779 => ((1 byte-address))
setm: ((1 byte-address)) <= 13779
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13779
run: 3812 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13779 to #\space
run: 3813 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 129 => ((4 integer))
setm: ((4 integer)) <= 129
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 129
run: 3814 clear-screen 11: (((jump)) ((-6 offset)))
run: 3815 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3816 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3817 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13780 => ((1 byte-address))
setm: ((1 byte-address)) <= 13780
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13780
run: 3818 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13780 to #\space
run: 3819 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 130 => ((4 integer))
setm: ((4 integer)) <= 130
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 130
run: 3820 clear-screen 11: (((jump)) ((-6 offset)))
run: 3821 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3822 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3823 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13781 => ((1 byte-address))
setm: ((1 byte-address)) <= 13781
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13781
run: 3824 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13781 to #\space
run: 3825 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 131 => ((4 integer))
setm: ((4 integer)) <= 131
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 131
run: 3826 clear-screen 11: (((jump)) ((-6 offset)))
run: 3827 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3828 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3829 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13782 => ((1 byte-address))
setm: ((1 byte-address)) <= 13782
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13782
run: 3830 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13782 to #\space
run: 3831 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 132 => ((4 integer))
setm: ((4 integer)) <= 132
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 132
run: 3832 clear-screen 11: (((jump)) ((-6 offset)))
run: 3833 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3834 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3835 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13783 => ((1 byte-address))
setm: ((1 byte-address)) <= 13783
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13783
run: 3836 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13783 to #\space
run: 3837 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 133 => ((4 integer))
setm: ((4 integer)) <= 133
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 133
run: 3838 clear-screen 11: (((jump)) ((-6 offset)))
run: 3839 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3840 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3841 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13784 => ((1 byte-address))
setm: ((1 byte-address)) <= 13784
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13784
run: 3842 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13784 to #\space
run: 3843 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 134 => ((4 integer))
setm: ((4 integer)) <= 134
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 134
run: 3844 clear-screen 11: (((jump)) ((-6 offset)))
run: 3845 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3846 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3847 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13785 => ((1 byte-address))
setm: ((1 byte-address)) <= 13785
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13785
run: 3848 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13785 to #\space
run: 3849 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 135 => ((4 integer))
setm: ((4 integer)) <= 135
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 135
run: 3850 clear-screen 11: (((jump)) ((-6 offset)))
run: 3851 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3852 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3853 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13786 => ((1 byte-address))
setm: ((1 byte-address)) <= 13786
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13786
run: 3854 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13786 to #\space
run: 3855 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 136 => ((4 integer))
setm: ((4 integer)) <= 136
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 136
run: 3856 clear-screen 11: (((jump)) ((-6 offset)))
run: 3857 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3858 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3859 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13787 => ((1 byte-address))
setm: ((1 byte-address)) <= 13787
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13787
run: 3860 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13787 to #\space
run: 3861 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 137 => ((4 integer))
setm: ((4 integer)) <= 137
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 137
run: 3862 clear-screen 11: (((jump)) ((-6 offset)))
run: 3863 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3864 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3865 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13788 => ((1 byte-address))
setm: ((1 byte-address)) <= 13788
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13788
run: 3866 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13788 to #\space
run: 3867 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 138 => ((4 integer))
setm: ((4 integer)) <= 138
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 138
run: 3868 clear-screen 11: (((jump)) ((-6 offset)))
run: 3869 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3870 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3871 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13789 => ((1 byte-address))
setm: ((1 byte-address)) <= 13789
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13789
run: 3872 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13789 to #\space
run: 3873 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 139 => ((4 integer))
setm: ((4 integer)) <= 139
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 139
run: 3874 clear-screen 11: (((jump)) ((-6 offset)))
run: 3875 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3876 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3877 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13790 => ((1 byte-address))
setm: ((1 byte-address)) <= 13790
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13790
run: 3878 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13790 to #\space
run: 3879 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 140 => ((4 integer))
setm: ((4 integer)) <= 140
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 140
run: 3880 clear-screen 11: (((jump)) ((-6 offset)))
run: 3881 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3882 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3883 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13791 => ((1 byte-address))
setm: ((1 byte-address)) <= 13791
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13791
run: 3884 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13791 to #\space
run: 3885 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 141 => ((4 integer))
setm: ((4 integer)) <= 141
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 141
run: 3886 clear-screen 11: (((jump)) ((-6 offset)))
run: 3887 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3888 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3889 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13792 => ((1 byte-address))
setm: ((1 byte-address)) <= 13792
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13792
run: 3890 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13792 to #\space
run: 3891 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 142 => ((4 integer))
setm: ((4 integer)) <= 142
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 142
run: 3892 clear-screen 11: (((jump)) ((-6 offset)))
run: 3893 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3894 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3895 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13793 => ((1 byte-address))
setm: ((1 byte-address)) <= 13793
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13793
run: 3896 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13793 to #\space
run: 3897 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 143 => ((4 integer))
setm: ((4 integer)) <= 143
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 143
run: 3898 clear-screen 11: (((jump)) ((-6 offset)))
run: 3899 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3900 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3901 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13794 => ((1 byte-address))
setm: ((1 byte-address)) <= 13794
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13794
run: 3902 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13794 to #\space
run: 3903 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 144 => ((4 integer))
setm: ((4 integer)) <= 144
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 144
run: 3904 clear-screen 11: (((jump)) ((-6 offset)))
run: 3905 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3906 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3907 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13795 => ((1 byte-address))
setm: ((1 byte-address)) <= 13795
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13795
run: 3908 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13795 to #\space
run: 3909 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 145 => ((4 integer))
setm: ((4 integer)) <= 145
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 145
run: 3910 clear-screen 11: (((jump)) ((-6 offset)))
run: 3911 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3912 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3913 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13796 => ((1 byte-address))
setm: ((1 byte-address)) <= 13796
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13796
run: 3914 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13796 to #\space
run: 3915 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 146 => ((4 integer))
setm: ((4 integer)) <= 146
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 146
run: 3916 clear-screen 11: (((jump)) ((-6 offset)))
run: 3917 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3918 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3919 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13797 => ((1 byte-address))
setm: ((1 byte-address)) <= 13797
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13797
run: 3920 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13797 to #\space
run: 3921 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 147 => ((4 integer))
setm: ((4 integer)) <= 147
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 147
run: 3922 clear-screen 11: (((jump)) ((-6 offset)))
run: 3923 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3924 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3925 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13798 => ((1 byte-address))
setm: ((1 byte-address)) <= 13798
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13798
run: 3926 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13798 to #\space
run: 3927 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 148 => ((4 integer))
setm: ((4 integer)) <= 148
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 148
run: 3928 clear-screen 11: (((jump)) ((-6 offset)))
run: 3929 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3930 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3931 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13799 => ((1 byte-address))
setm: ((1 byte-address)) <= 13799
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13799
run: 3932 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13799 to #\space
run: 3933 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 149 => ((4 integer))
setm: ((4 integer)) <= 149
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 149
run: 3934 clear-screen 11: (((jump)) ((-6 offset)))
run: 3935 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3936 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3937 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13800 => ((1 byte-address))
setm: ((1 byte-address)) <= 13800
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13800
run: 3938 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13800 to #\space
run: 3939 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 150 => ((4 integer))
setm: ((4 integer)) <= 150
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 150
run: 3940 clear-screen 11: (((jump)) ((-6 offset)))
run: 3941 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3942 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3943 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13801 => ((1 byte-address))
setm: ((1 byte-address)) <= 13801
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13801
run: 3944 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13801 to #\space
run: 3945 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 151 => ((4 integer))
setm: ((4 integer)) <= 151
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 151
run: 3946 clear-screen 11: (((jump)) ((-6 offset)))
run: 3947 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3948 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3949 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13802 => ((1 byte-address))
setm: ((1 byte-address)) <= 13802
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13802
run: 3950 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13802 to #\space
run: 3951 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 152 => ((4 integer))
setm: ((4 integer)) <= 152
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 152
run: 3952 clear-screen 11: (((jump)) ((-6 offset)))
run: 3953 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3954 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3955 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13803 => ((1 byte-address))
setm: ((1 byte-address)) <= 13803
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13803
run: 3956 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13803 to #\space
run: 3957 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 153 => ((4 integer))
setm: ((4 integer)) <= 153
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 153
run: 3958 clear-screen 11: (((jump)) ((-6 offset)))
run: 3959 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3960 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3961 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13804 => ((1 byte-address))
setm: ((1 byte-address)) <= 13804
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13804
run: 3962 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13804 to #\space
run: 3963 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 154 => ((4 integer))
setm: ((4 integer)) <= 154
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 154
run: 3964 clear-screen 11: (((jump)) ((-6 offset)))
run: 3965 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3966 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3967 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13805 => ((1 byte-address))
setm: ((1 byte-address)) <= 13805
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13805
run: 3968 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13805 to #\space
run: 3969 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 155 => ((4 integer))
setm: ((4 integer)) <= 155
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 155
run: 3970 clear-screen 11: (((jump)) ((-6 offset)))
run: 3971 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3972 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3973 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13806 => ((1 byte-address))
setm: ((1 byte-address)) <= 13806
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13806
run: 3974 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13806 to #\space
run: 3975 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 156 => ((4 integer))
setm: ((4 integer)) <= 156
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 156
run: 3976 clear-screen 11: (((jump)) ((-6 offset)))
run: 3977 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3978 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3979 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13807 => ((1 byte-address))
setm: ((1 byte-address)) <= 13807
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13807
run: 3980 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13807 to #\space
run: 3981 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 157 => ((4 integer))
setm: ((4 integer)) <= 157
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 157
run: 3982 clear-screen 11: (((jump)) ((-6 offset)))
run: 3983 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3984 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3985 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13808 => ((1 byte-address))
setm: ((1 byte-address)) <= 13808
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13808
run: 3986 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13808 to #\space
run: 3987 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 158 => ((4 integer))
setm: ((4 integer)) <= 158
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 158
run: 3988 clear-screen 11: (((jump)) ((-6 offset)))
run: 3989 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3990 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3991 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13809 => ((1 byte-address))
setm: ((1 byte-address)) <= 13809
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13809
run: 3992 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13809 to #\space
run: 3993 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 159 => ((4 integer))
setm: ((4 integer)) <= 159
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 159
run: 3994 clear-screen 11: (((jump)) ((-6 offset)))
run: 3995 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 3996 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 3997 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13810 => ((1 byte-address))
setm: ((1 byte-address)) <= 13810
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13810
run: 3998 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13810 to #\space
run: 3999 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 160 => ((4 integer))
setm: ((4 integer)) <= 160
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 160
run: 4000 clear-screen 11: (((jump)) ((-6 offset)))
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: 4001 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4002 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4003 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13811 => ((1 byte-address))
setm: ((1 byte-address)) <= 13811
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13811
run: 4004 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13811 to #\space
run: 4005 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 161 => ((4 integer))
setm: ((4 integer)) <= 161
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 161
run: 4006 clear-screen 11: (((jump)) ((-6 offset)))
run: 4007 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4008 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4009 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13812 => ((1 byte-address))
setm: ((1 byte-address)) <= 13812
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13812
run: 4010 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13812 to #\space
run: 4011 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 162 => ((4 integer))
setm: ((4 integer)) <= 162
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 162
run: 4012 clear-screen 11: (((jump)) ((-6 offset)))
run: 4013 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4014 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4015 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13813 => ((1 byte-address))
setm: ((1 byte-address)) <= 13813
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13813
run: 4016 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13813 to #\space
run: 4017 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 163 => ((4 integer))
setm: ((4 integer)) <= 163
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 163
run: 4018 clear-screen 11: (((jump)) ((-6 offset)))
run: 4019 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4020 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4021 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13814 => ((1 byte-address))
setm: ((1 byte-address)) <= 13814
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13814
run: 4022 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13814 to #\space
run: 4023 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 164 => ((4 integer))
setm: ((4 integer)) <= 164
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 164
run: 4024 clear-screen 11: (((jump)) ((-6 offset)))
run: 4025 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4026 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4027 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13815 => ((1 byte-address))
setm: ((1 byte-address)) <= 13815
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13815
run: 4028 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13815 to #\space
run: 4029 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 165 => ((4 integer))
setm: ((4 integer)) <= 165
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 165
run: 4030 clear-screen 11: (((jump)) ((-6 offset)))
run: 4031 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4032 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4033 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13816 => ((1 byte-address))
setm: ((1 byte-address)) <= 13816
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13816
run: 4034 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13816 to #\space
run: 4035 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 166 => ((4 integer))
setm: ((4 integer)) <= 166
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 166
run: 4036 clear-screen 11: (((jump)) ((-6 offset)))
run: 4037 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4038 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4039 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13817 => ((1 byte-address))
setm: ((1 byte-address)) <= 13817
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13817
run: 4040 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13817 to #\space
run: 4041 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 167 => ((4 integer))
setm: ((4 integer)) <= 167
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 167
run: 4042 clear-screen 11: (((jump)) ((-6 offset)))
run: 4043 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4044 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4045 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13818 => ((1 byte-address))
setm: ((1 byte-address)) <= 13818
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13818
run: 4046 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13818 to #\space
run: 4047 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 168 => ((4 integer))
setm: ((4 integer)) <= 168
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 168
run: 4048 clear-screen 11: (((jump)) ((-6 offset)))
run: 4049 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4050 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4051 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13819 => ((1 byte-address))
setm: ((1 byte-address)) <= 13819
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13819
run: 4052 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13819 to #\space
run: 4053 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 169 => ((4 integer))
setm: ((4 integer)) <= 169
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 169
run: 4054 clear-screen 11: (((jump)) ((-6 offset)))
run: 4055 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4056 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4057 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13820 => ((1 byte-address))
setm: ((1 byte-address)) <= 13820
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13820
run: 4058 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13820 to #\space
run: 4059 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 170 => ((4 integer))
setm: ((4 integer)) <= 170
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 170
run: 4060 clear-screen 11: (((jump)) ((-6 offset)))
run: 4061 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4062 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4063 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13821 => ((1 byte-address))
setm: ((1 byte-address)) <= 13821
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13821
run: 4064 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13821 to #\space
run: 4065 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 171 => ((4 integer))
setm: ((4 integer)) <= 171
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 171
run: 4066 clear-screen 11: (((jump)) ((-6 offset)))
run: 4067 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4068 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4069 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13822 => ((1 byte-address))
setm: ((1 byte-address)) <= 13822
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13822
run: 4070 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13822 to #\space
run: 4071 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 172 => ((4 integer))
setm: ((4 integer)) <= 172
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 172
run: 4072 clear-screen 11: (((jump)) ((-6 offset)))
run: 4073 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4074 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4075 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13823 => ((1 byte-address))
setm: ((1 byte-address)) <= 13823
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13823
run: 4076 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13823 to #\space
run: 4077 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 173 => ((4 integer))
setm: ((4 integer)) <= 173
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 173
run: 4078 clear-screen 11: (((jump)) ((-6 offset)))
run: 4079 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4080 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4081 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13824 => ((1 byte-address))
setm: ((1 byte-address)) <= 13824
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13824
run: 4082 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13824 to #\space
run: 4083 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 174 => ((4 integer))
setm: ((4 integer)) <= 174
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 174
run: 4084 clear-screen 11: (((jump)) ((-6 offset)))
run: 4085 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4086 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4087 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13825 => ((1 byte-address))
setm: ((1 byte-address)) <= 13825
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13825
run: 4088 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13825 to #\space
run: 4089 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 175 => ((4 integer))
setm: ((4 integer)) <= 175
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 175
run: 4090 clear-screen 11: (((jump)) ((-6 offset)))
run: 4091 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4092 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4093 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13826 => ((1 byte-address))
setm: ((1 byte-address)) <= 13826
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13826
run: 4094 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13826 to #\space
run: 4095 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 176 => ((4 integer))
setm: ((4 integer)) <= 176
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 176
run: 4096 clear-screen 11: (((jump)) ((-6 offset)))
run: 4097 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4098 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4099 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13827 => ((1 byte-address))
setm: ((1 byte-address)) <= 13827
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13827
run: 4100 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13827 to #\space
run: 4101 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 177 => ((4 integer))
setm: ((4 integer)) <= 177
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 177
run: 4102 clear-screen 11: (((jump)) ((-6 offset)))
run: 4103 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4104 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4105 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13828 => ((1 byte-address))
setm: ((1 byte-address)) <= 13828
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13828
run: 4106 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13828 to #\space
run: 4107 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 178 => ((4 integer))
setm: ((4 integer)) <= 178
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 178
run: 4108 clear-screen 11: (((jump)) ((-6 offset)))
run: 4109 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4110 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4111 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13829 => ((1 byte-address))
setm: ((1 byte-address)) <= 13829
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13829
run: 4112 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13829 to #\space
run: 4113 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 179 => ((4 integer))
setm: ((4 integer)) <= 179
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 179
run: 4114 clear-screen 11: (((jump)) ((-6 offset)))
run: 4115 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4116 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4117 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13830 => ((1 byte-address))
setm: ((1 byte-address)) <= 13830
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13830
run: 4118 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13830 to #\space
run: 4119 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 180 => ((4 integer))
setm: ((4 integer)) <= 180
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 180
run: 4120 clear-screen 11: (((jump)) ((-6 offset)))
run: 4121 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4122 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4123 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13831 => ((1 byte-address))
setm: ((1 byte-address)) <= 13831
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13831
run: 4124 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13831 to #\space
run: 4125 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 181 => ((4 integer))
setm: ((4 integer)) <= 181
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 181
run: 4126 clear-screen 11: (((jump)) ((-6 offset)))
run: 4127 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4128 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4129 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13832 => ((1 byte-address))
setm: ((1 byte-address)) <= 13832
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13832
run: 4130 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13832 to #\space
run: 4131 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 182 => ((4 integer))
setm: ((4 integer)) <= 182
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 182
run: 4132 clear-screen 11: (((jump)) ((-6 offset)))
run: 4133 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4134 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4135 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13833 => ((1 byte-address))
setm: ((1 byte-address)) <= 13833
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13833
run: 4136 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13833 to #\space
run: 4137 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 183 => ((4 integer))
setm: ((4 integer)) <= 183
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 183
run: 4138 clear-screen 11: (((jump)) ((-6 offset)))
run: 4139 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4140 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4141 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13834 => ((1 byte-address))
setm: ((1 byte-address)) <= 13834
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13834
run: 4142 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13834 to #\space
run: 4143 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 184 => ((4 integer))
setm: ((4 integer)) <= 184
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 184
run: 4144 clear-screen 11: (((jump)) ((-6 offset)))
run: 4145 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4146 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4147 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13835 => ((1 byte-address))
setm: ((1 byte-address)) <= 13835
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13835
run: 4148 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13835 to #\space
run: 4149 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 185 => ((4 integer))
setm: ((4 integer)) <= 185
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 185
run: 4150 clear-screen 11: (((jump)) ((-6 offset)))
run: 4151 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4152 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4153 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13836 => ((1 byte-address))
setm: ((1 byte-address)) <= 13836
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13836
run: 4154 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13836 to #\space
run: 4155 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 186 => ((4 integer))
setm: ((4 integer)) <= 186
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 186
run: 4156 clear-screen 11: (((jump)) ((-6 offset)))
run: 4157 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4158 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4159 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13837 => ((1 byte-address))
setm: ((1 byte-address)) <= 13837
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13837
run: 4160 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13837 to #\space
run: 4161 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 187 => ((4 integer))
setm: ((4 integer)) <= 187
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 187
run: 4162 clear-screen 11: (((jump)) ((-6 offset)))
run: 4163 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4164 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4165 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13838 => ((1 byte-address))
setm: ((1 byte-address)) <= 13838
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13838
run: 4166 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13838 to #\space
run: 4167 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 188 => ((4 integer))
setm: ((4 integer)) <= 188
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 188
run: 4168 clear-screen 11: (((jump)) ((-6 offset)))
run: 4169 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4170 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4171 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13839 => ((1 byte-address))
setm: ((1 byte-address)) <= 13839
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13839
run: 4172 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13839 to #\space
run: 4173 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 189 => ((4 integer))
setm: ((4 integer)) <= 189
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 189
run: 4174 clear-screen 11: (((jump)) ((-6 offset)))
run: 4175 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4176 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4177 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13840 => ((1 byte-address))
setm: ((1 byte-address)) <= 13840
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13840
run: 4178 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13840 to #\space
run: 4179 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 190 => ((4 integer))
setm: ((4 integer)) <= 190
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 190
run: 4180 clear-screen 11: (((jump)) ((-6 offset)))
run: 4181 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4182 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4183 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13841 => ((1 byte-address))
setm: ((1 byte-address)) <= 13841
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13841
run: 4184 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13841 to #\space
run: 4185 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 191 => ((4 integer))
setm: ((4 integer)) <= 191
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 191
run: 4186 clear-screen 11: (((jump)) ((-6 offset)))
run: 4187 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4188 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4189 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13842 => ((1 byte-address))
setm: ((1 byte-address)) <= 13842
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13842
run: 4190 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13842 to #\space
run: 4191 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 192 => ((4 integer))
setm: ((4 integer)) <= 192
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 192
run: 4192 clear-screen 11: (((jump)) ((-6 offset)))
run: 4193 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4194 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4195 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13843 => ((1 byte-address))
setm: ((1 byte-address)) <= 13843
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13843
run: 4196 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13843 to #\space
run: 4197 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 193 => ((4 integer))
setm: ((4 integer)) <= 193
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 193
run: 4198 clear-screen 11: (((jump)) ((-6 offset)))
run: 4199 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4200 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4201 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13844 => ((1 byte-address))
setm: ((1 byte-address)) <= 13844
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13844
run: 4202 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13844 to #\space
run: 4203 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 194 => ((4 integer))
setm: ((4 integer)) <= 194
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 194
run: 4204 clear-screen 11: (((jump)) ((-6 offset)))
run: 4205 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4206 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4207 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13845 => ((1 byte-address))
setm: ((1 byte-address)) <= 13845
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13845
run: 4208 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13845 to #\space
run: 4209 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 195 => ((4 integer))
setm: ((4 integer)) <= 195
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 195
run: 4210 clear-screen 11: (((jump)) ((-6 offset)))
run: 4211 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4212 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4213 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13846 => ((1 byte-address))
setm: ((1 byte-address)) <= 13846
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13846
run: 4214 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13846 to #\space
run: 4215 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 196 => ((4 integer))
setm: ((4 integer)) <= 196
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 196
run: 4216 clear-screen 11: (((jump)) ((-6 offset)))
run: 4217 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4218 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4219 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13847 => ((1 byte-address))
setm: ((1 byte-address)) <= 13847
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13847
run: 4220 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13847 to #\space
run: 4221 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 197 => ((4 integer))
setm: ((4 integer)) <= 197
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 197
run: 4222 clear-screen 11: (((jump)) ((-6 offset)))
run: 4223 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4224 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4225 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13848 => ((1 byte-address))
setm: ((1 byte-address)) <= 13848
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13848
run: 4226 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13848 to #\space
run: 4227 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 198 => ((4 integer))
setm: ((4 integer)) <= 198
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 198
run: 4228 clear-screen 11: (((jump)) ((-6 offset)))
run: 4229 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4230 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4231 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13849 => ((1 byte-address))
setm: ((1 byte-address)) <= 13849
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13849
run: 4232 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13849 to #\space
run: 4233 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 199 => ((4 integer))
setm: ((4 integer)) <= 199
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 199
run: 4234 clear-screen 11: (((jump)) ((-6 offset)))
run: 4235 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to nil
run: 4236 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4237 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13850 => ((1 byte-address))
setm: ((1 byte-address)) <= 13850
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 13853 to 13850
run: 4238 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 13850 to #\space
run: 4239 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 200 => ((4 integer))
setm: ((4 integer)) <= 200
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13856 to 200
run: 4240 clear-screen 11: (((jump)) ((-6 offset)))
run: 4241 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13857 to t
run: 4242 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4243 clear-screen 12: (((reply)))
reply: nil nil
run: 4244 init-fake-terminal 14: (((reply)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
reply: (((1 terminal-address))) (((3 terminal-address)))
reply: 13645 => ((3 terminal-address))
setm: ((3 terminal-address)) <= 13645
setm: size of ((3 terminal-address)) is 1
setm: ((3 terminal-address)): setting 1004 to 13645
run: 4245 main 4: (((print-board)) ((3 terminal-address)) ((2 board-address)))
m: ((3 terminal-address))
sizeof: ((3 terminal-address))
m: ((2 board-address))
sizeof: ((2 board-address))
run: 4246 print-board 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13882 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4247 print-board 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 9317)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 13884 to 13645
run: 4248 print-board 2: (((2 board-address)) <- ((next-input)))
arg: nil 1 (13645 9317)
run: 9317 => ((2 board-address))
setm: ((2 board-address)) <= 9317
setm: size of ((2 board-address)) is 1
setm: ((2 board-address)): setting 13885 to 9317
run: 4249 print-board 3: (((3 integer)) <- ((copy)) ((7 literal)))
run: 7 => ((3 integer))
setm: ((3 integer)) <= 7
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13886 to 7
run: 4250 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4251 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4252 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 8 => ((5 integer))
setm: ((5 integer)) <= 8
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13888 to 8
run: 4253 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 4254 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13913 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4255 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 8)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 13915 to 13645
run: 4256 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 8)
run: 8 => ((2 integer))
setm: ((2 integer)) <= 8
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 13916 to 8
run: 4257 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 4258 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13944 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4259 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (8)
run: 8 => ((1 integer))
setm: ((1 integer)) <= 8
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 13946 to 8
run: 4260 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 13947 to nil
run: 4261 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 4262 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13949 to nil
run: 4263 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 13950 to nil
run: 4264 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4265 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 4266 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 13975 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4267 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 14006 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14006
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 13977 to 14006
run: 4268 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 14006 => ((2 integer-address))
setm: ((2 integer-address)) <= 14006
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 13978 to 14006
run: 4269 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 14006 to 0
run: 4270 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 14007 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 14007
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 13979 to 14007
run: 4271 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 13980 to 30
run: 4272 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 14008 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 14008
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 14007 to 14008
run: 4273 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 14006 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 14006
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 13951 to 14006
run: 4274 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 13952 to #\0
run: 4275 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 13953 to 48
run: 4276 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 13954 to nil
run: 4277 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4278 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 13946 to 0
run: 8 => ((10 integer))
setm: ((10 integer)) <= 8
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 13955 to 8
run: 4279 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 56 => ((11 integer))
setm: ((11 integer)) <= 56
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 13956 to 56
run: 4280 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\8 => ((12 character))
setm: ((12 character)) <= #\8
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 13957 to #\8
run: 4281 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 4282 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14039 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4283 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14006 #\8)
run: 14006 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14006
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 14041 to 14006
run: 4284 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (14006 #\8)
run: #\8 => ((2 character))
setm: ((2 character)) <= #\8
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14042 to #\8
run: 4285 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 4286 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14070 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4287 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14006)
run: 14006 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14006
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 14072 to 14006
run: 4288 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((14006 integer) (raw))
sizeof: ((14006 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 14073 to 0
run: 4289 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14007 string-address) (raw))
sizeof: ((14007 string-address) (raw))
run: 14008 => ((3 string-address))
setm: ((3 string-address)) <= 14008
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 14074 to 14008
run: 4290 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((14008 integer) (raw))
sizeof: ((14008 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14075 to 30
run: 4291 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14076 to nil
run: 4292 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 14043 to nil
run: 4293 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 4294 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 14006 => ((4 integer-address))
setm: ((4 integer-address)) <= 14006
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14044 to 14006
run: 4295 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14007 string-address) (raw))
sizeof: ((14007 string-address) (raw))
run: 14008 => ((5 string-address))
setm: ((5 string-address)) <= 14008
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 14045 to 14008
run: 4296 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((14008 string) (raw))
m: ((14008 integer) (raw))
sizeof: ((14008 integer) (raw))
sizeof: ((_ byte))
run: 14009 => ((6 byte-address))
setm: ((6 byte-address)) <= 14009
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 14046 to 14009
run: 4297 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\8 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\8
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 14009 to #\8
run: 4298 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 14006 to 1
run: 4299 append 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
m: ((1 buffer-address) (same-as-arg 0))
sizeof: ((1 buffer-address) (same-as-arg 0))
reply: (((1 buffer-address) (same-as-arg 0))) (((6 buffer-address)))
reply: 14006 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 14006
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 13951 to 14006
run: 4300 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 4301 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 13954 to t
run: 4302 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4303 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4304 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((14006 integer) (raw))
sizeof: ((14006 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 13958 to 1
run: 4305 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14007 string-address) (raw))
sizeof: ((14007 string-address) (raw))
run: 14008 => ((14 string-address))
setm: ((14 string-address)) <= 14008
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 13959 to 14008
run: 4306 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 14101 => ((15 string-address))
setm: ((15 string-address)) <= 14101
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 13960 to 14101
run: 4307 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 13961 to 0
run: 4308 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 13962 to 0
run: 4309 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 13954 to nil
run: 4310 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4311 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((14008 string) (raw))
m: ((14008 integer) (raw))
sizeof: ((14008 integer) (raw))
sizeof: ((_ byte))
m: ((14009 byte) (raw))
sizeof: ((14009 byte) (raw))
run: #\8 => ((18 byte))
setm: ((18 byte)) <= #\8
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 13963 to #\8
run: 4312 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((14101 string) (raw))
m: ((14101 integer) (raw))
sizeof: ((14101 integer) (raw))
sizeof: ((_ byte))
run: 14102 => ((19 byte-address))
setm: ((19 byte-address)) <= 14102
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 13964 to 14102
run: 4313 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\8 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\8
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 14102 to #\8
run: 4314 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 13961 to -1
run: 4315 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 13962 to 1
run: 4316 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 4317 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 13954 to t
run: 4318 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4319 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 14101 => ((3 string-address))
setm: ((3 string-address)) <= 14101
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 13917 to 14101
run: 4320 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 4321 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14103 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4322 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 14101)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14105 to 13645
run: 4323 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 14101)
run: 14101 => ((2 string-address))
setm: ((2 string-address)) <= 14101
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 14106 to 14101
run: 4324 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((14101 integer) (raw))
sizeof: ((14101 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 14107 to 1
run: 4325 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14108 to 0
run: 4326 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14109 to nil
run: 4327 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4328 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((14101 string) (raw))
m: ((14101 integer) (raw))
sizeof: ((14101 integer) (raw))
sizeof: ((_ byte))
m: ((14102 byte) (raw))
sizeof: ((14102 byte) (raw))
run: #\8 => ((6 character))
setm: ((6 character)) <= #\8
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 14110 to #\8
run: 4329 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4330 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14134 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4331 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\8)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14136 to 13645
run: 4332 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\8)
run: #\8 => ((2 character))
setm: ((2 character)) <= #\8
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14137 to #\8
run: 4333 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4334 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14138 to 13647
run: 4335 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14139 to 13648
run: 4336 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14140 to 20
run: 4337 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14141 to 0
run: 4338 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14142 to 0
run: 4339 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14143 to 13650
run: 4340 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13651 => ((9 byte-address))
setm: ((9 byte-address)) <= 13651
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14144 to 13651
run: 4341 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\8 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\8
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13651 to #\8
run: 4342 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 4343 print-character 13: (((reply)))
reply: nil nil
run: 4344 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14108 to 1
run: 4345 print-string 10: (((jump)) ((-6 offset)))
run: 4346 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14109 to t
run: 4347 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4348 print-board 8: (((6 string-address)) <- ((new))  | )
run: 14165 => ((6 string-address))
setm: ((6 string-address)) <= 14165
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 14165
run: 4349 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 4350 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14169 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4351 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 14165)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14171 to 13645
run: 4352 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 14165)
run: 14165 => ((2 string-address))
setm: ((2 string-address)) <= 14165
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 14172 to 14165
run: 4353 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((14165 integer) (raw))
sizeof: ((14165 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 14173 to 3
run: 4354 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14174 to 0
run: 4355 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14175 to nil
run: 4356 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4357 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((14165 string) (raw))
m: ((14165 integer) (raw))
sizeof: ((14165 integer) (raw))
sizeof: ((_ byte))
m: ((14166 byte) (raw))
sizeof: ((14166 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 14176 to #\space
run: 4358 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4359 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14200 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4360 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14202 to 13645
run: 4361 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14203 to #\space
run: 4362 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4363 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14204 to 13647
run: 4364 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14205 to 13648
run: 4365 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14206 to 20
run: 4366 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14207 to 0
run: 4367 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14208 to 1
run: 4368 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14209 to 13650
run: 4369 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13652 => ((9 byte-address))
setm: ((9 byte-address)) <= 13652
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14210 to 13652
run: 4370 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13652 to #\space
run: 4371 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 4372 print-character 13: (((reply)))
reply: nil nil
run: 4373 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14174 to 1
run: 4374 print-string 10: (((jump)) ((-6 offset)))
run: 4375 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14175 to nil
run: 4376 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4377 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((14165 string) (raw))
m: ((14165 integer) (raw))
sizeof: ((14165 integer) (raw))
sizeof: ((_ byte))
m: ((14167 byte) (raw))
sizeof: ((14167 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 14176 to #\|
run: 4378 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4379 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14231 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4380 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14233 to 13645
run: 4381 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14234 to #\|
run: 4382 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4383 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14235 to 13647
run: 4384 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14236 to 13648
run: 4385 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14237 to 20
run: 4386 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14238 to 0
run: 4387 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14239 to 2
run: 4388 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14240 to 13650
run: 4389 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13653 => ((9 byte-address))
setm: ((9 byte-address)) <= 13653
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14241 to 13653
run: 4390 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13653 to #\|
run: 4391 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 4392 print-character 13: (((reply)))
reply: nil nil
run: 4393 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14174 to 2
run: 4394 print-string 10: (((jump)) ((-6 offset)))
run: 4395 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14175 to nil
run: 4396 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4397 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((14165 string) (raw))
m: ((14165 integer) (raw))
sizeof: ((14165 integer) (raw))
sizeof: ((_ byte))
m: ((14168 byte) (raw))
sizeof: ((14168 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 14176 to #\space
run: 4398 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4399 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14262 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4400 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14264 to 13645
run: 4401 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14265 to #\space
run: 4402 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4403 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14266 to 13647
run: 4404 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14267 to 13648
run: 4405 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14268 to 20
run: 4406 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14269 to 0
run: 4407 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14270 to 3
run: 4408 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14271 to 13650
run: 4409 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13654 => ((9 byte-address))
setm: ((9 byte-address)) <= 13654
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14272 to 13654
run: 4410 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13654 to #\space
run: 4411 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 4412 print-character 13: (((reply)))
reply: nil nil
run: 4413 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14174 to 3
run: 4414 print-string 10: (((jump)) ((-6 offset)))
run: 4415 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14175 to t
run: 4416 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4417 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 0
run: 4418 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4419 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4420 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9318 file-address) (raw))
sizeof: ((9318 file-address) (raw))
run: 9357 => ((8 file-address))
setm: ((8 file-address)) <= 9357
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9357
run: 4421 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
m: ((9365 square) (raw))
sizeof: ((9365 square) (raw))
run: #\r => ((6 square))
setm: ((6 square)) <= #\r
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\r
run: 4422 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4423 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14293 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4424 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\r)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14295 to 13645
run: 4425 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\r)
run: #\r => ((2 character))
setm: ((2 character)) <= #\r
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14296 to #\r
run: 4426 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4427 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14297 to 13647
run: 4428 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14298 to 13648
run: 4429 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14299 to 20
run: 4430 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14300 to 0
run: 4431 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14301 to 4
run: 4432 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14302 to 13650
run: 4433 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13655 => ((9 byte-address))
setm: ((9 byte-address)) <= 13655
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14303 to 13655
run: 4434 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\r => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\r
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13655 to #\r
run: 4435 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 4436 print-character 13: (((reply)))
reply: nil nil
run: 4437 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4438 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14324 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4439 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14326 to 13645
run: 4440 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14327 to #\space
run: 4441 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4442 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14328 to 13647
run: 4443 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14329 to 13648
run: 4444 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14330 to 20
run: 4445 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14331 to 0
run: 4446 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14332 to 5
run: 4447 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14333 to 13650
run: 4448 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13656 => ((9 byte-address))
setm: ((9 byte-address)) <= 13656
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14334 to 13656
run: 4449 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13656 to #\space
run: 4450 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 4451 print-character 13: (((reply)))
reply: nil nil
run: 4452 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 1
run: 4453 print-board 18: (((jump)) ((-8 offset)))
run: 4454 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4455 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4456 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9319 file-address) (raw))
sizeof: ((9319 file-address) (raw))
run: 9893 => ((8 file-address))
setm: ((8 file-address)) <= 9893
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9893
run: 4457 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
m: ((9901 square) (raw))
sizeof: ((9901 square) (raw))
run: #\n => ((6 square))
setm: ((6 square)) <= #\n
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\n
run: 4458 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4459 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14355 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4460 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\n)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14357 to 13645
run: 4461 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\n)
run: #\n => ((2 character))
setm: ((2 character)) <= #\n
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14358 to #\n
run: 4462 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4463 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14359 to 13647
run: 4464 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14360 to 13648
run: 4465 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14361 to 20
run: 4466 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14362 to 0
run: 4467 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14363 to 6
run: 4468 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14364 to 13650
run: 4469 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13657 => ((9 byte-address))
setm: ((9 byte-address)) <= 13657
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14365 to 13657
run: 4470 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\n => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\n
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13657 to #\n
run: 4471 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 4472 print-character 13: (((reply)))
reply: nil nil
run: 4473 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4474 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14386 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4475 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14388 to 13645
run: 4476 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14389 to #\space
run: 4477 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4478 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14390 to 13647
run: 4479 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14391 to 13648
run: 4480 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14392 to 20
run: 4481 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14393 to 0
run: 4482 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14394 to 7
run: 4483 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14395 to 13650
run: 4484 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13658 => ((9 byte-address))
setm: ((9 byte-address)) <= 13658
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14396 to 13658
run: 4485 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13658 to #\space
run: 4486 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 4487 print-character 13: (((reply)))
reply: nil nil
run: 4488 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 2
run: 4489 print-board 18: (((jump)) ((-8 offset)))
run: 4490 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4491 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4492 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9320 file-address) (raw))
sizeof: ((9320 file-address) (raw))
run: 10429 => ((8 file-address))
setm: ((8 file-address)) <= 10429
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10429
run: 4493 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
m: ((10437 square) (raw))
sizeof: ((10437 square) (raw))
run: #\b => ((6 square))
setm: ((6 square)) <= #\b
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\b
run: 4494 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4495 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14417 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4496 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\b)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14419 to 13645
run: 4497 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\b)
run: #\b => ((2 character))
setm: ((2 character)) <= #\b
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14420 to #\b
run: 4498 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4499 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14421 to 13647
run: 4500 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14422 to 13648
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 4501 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14423 to 20
run: 4502 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14424 to 0
run: 4503 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14425 to 8
run: 4504 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14426 to 13650
run: 4505 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13659 => ((9 byte-address))
setm: ((9 byte-address)) <= 13659
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14427 to 13659
run: 4506 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\b => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\b
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13659 to #\b
run: 4507 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 4508 print-character 13: (((reply)))
reply: nil nil
run: 4509 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4510 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14448 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4511 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14450 to 13645
run: 4512 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14451 to #\space
run: 4513 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4514 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14452 to 13647
run: 4515 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14453 to 13648
run: 4516 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14454 to 20
run: 4517 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14455 to 0
run: 4518 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((7 integer))
setm: ((7 integer)) <= 9
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14456 to 9
run: 4519 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14457 to 13650
run: 4520 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13660 => ((9 byte-address))
setm: ((9 byte-address)) <= 13660
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14458 to 13660
run: 4521 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13660 to #\space
run: 4522 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 4523 print-character 13: (((reply)))
reply: nil nil
run: 4524 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 3
run: 4525 print-board 18: (((jump)) ((-8 offset)))
run: 4526 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4527 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4528 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9321 file-address) (raw))
sizeof: ((9321 file-address) (raw))
run: 10965 => ((8 file-address))
setm: ((8 file-address)) <= 10965
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10965
run: 4529 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
m: ((10973 square) (raw))
sizeof: ((10973 square) (raw))
run: #\q => ((6 square))
setm: ((6 square)) <= #\q
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\q
run: 4530 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4531 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14479 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4532 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\q)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14481 to 13645
run: 4533 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\q)
run: #\q => ((2 character))
setm: ((2 character)) <= #\q
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14482 to #\q
run: 4534 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4535 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14483 to 13647
run: 4536 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14484 to 13648
run: 4537 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14485 to 20
run: 4538 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14486 to 0
run: 4539 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((7 integer))
setm: ((7 integer)) <= 10
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14487 to 10
run: 4540 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14488 to 13650
run: 4541 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13661 => ((9 byte-address))
setm: ((9 byte-address)) <= 13661
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14489 to 13661
run: 4542 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\q => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\q
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13661 to #\q
run: 4543 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 4544 print-character 13: (((reply)))
reply: nil nil
run: 4545 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4546 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14510 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4547 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14512 to 13645
run: 4548 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14513 to #\space
run: 4549 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4550 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14514 to 13647
run: 4551 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14515 to 13648
run: 4552 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14516 to 20
run: 4553 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14517 to 0
run: 4554 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((7 integer))
setm: ((7 integer)) <= 11
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14518 to 11
run: 4555 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14519 to 13650
run: 4556 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13662 => ((9 byte-address))
setm: ((9 byte-address)) <= 13662
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14520 to 13662
run: 4557 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13662 to #\space
run: 4558 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 4559 print-character 13: (((reply)))
reply: nil nil
run: 4560 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 4
run: 4561 print-board 18: (((jump)) ((-8 offset)))
run: 4562 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4563 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4564 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9322 file-address) (raw))
sizeof: ((9322 file-address) (raw))
run: 11501 => ((8 file-address))
setm: ((8 file-address)) <= 11501
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 11501
run: 4565 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
m: ((11509 square) (raw))
sizeof: ((11509 square) (raw))
run: #\k => ((6 square))
setm: ((6 square)) <= #\k
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\k
run: 4566 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4567 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14541 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4568 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\k)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14543 to 13645
run: 4569 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\k)
run: #\k => ((2 character))
setm: ((2 character)) <= #\k
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14544 to #\k
run: 4570 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4571 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14545 to 13647
run: 4572 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14546 to 13648
run: 4573 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14547 to 20
run: 4574 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14548 to 0
run: 4575 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((7 integer))
setm: ((7 integer)) <= 12
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14549 to 12
run: 4576 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14550 to 13650
run: 4577 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13663 => ((9 byte-address))
setm: ((9 byte-address)) <= 13663
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14551 to 13663
run: 4578 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\k => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\k
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13663 to #\k
run: 4579 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 4580 print-character 13: (((reply)))
reply: nil nil
run: 4581 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4582 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14572 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4583 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14574 to 13645
run: 4584 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14575 to #\space
run: 4585 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4586 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14576 to 13647
run: 4587 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14577 to 13648
run: 4588 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14578 to 20
run: 4589 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14579 to 0
run: 4590 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((7 integer))
setm: ((7 integer)) <= 13
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14580 to 13
run: 4591 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14581 to 13650
run: 4592 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13664 => ((9 byte-address))
setm: ((9 byte-address)) <= 13664
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14582 to 13664
run: 4593 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13664 to #\space
run: 4594 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 4595 print-character 13: (((reply)))
reply: nil nil
run: 4596 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 5
run: 4597 print-board 18: (((jump)) ((-8 offset)))
run: 4598 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4599 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4600 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9323 file-address) (raw))
sizeof: ((9323 file-address) (raw))
run: 12037 => ((8 file-address))
setm: ((8 file-address)) <= 12037
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12037
run: 4601 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
m: ((12045 square) (raw))
sizeof: ((12045 square) (raw))
run: #\b => ((6 square))
setm: ((6 square)) <= #\b
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\b
run: 4602 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4603 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14603 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4604 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\b)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14605 to 13645
run: 4605 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\b)
run: #\b => ((2 character))
setm: ((2 character)) <= #\b
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14606 to #\b
run: 4606 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4607 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14607 to 13647
run: 4608 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14608 to 13648
run: 4609 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14609 to 20
run: 4610 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14610 to 0
run: 4611 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((7 integer))
setm: ((7 integer)) <= 14
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14611 to 14
run: 4612 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14612 to 13650
run: 4613 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13665 => ((9 byte-address))
setm: ((9 byte-address)) <= 13665
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14613 to 13665
run: 4614 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\b => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\b
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13665 to #\b
run: 4615 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 4616 print-character 13: (((reply)))
reply: nil nil
run: 4617 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4618 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14634 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4619 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14636 to 13645
run: 4620 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14637 to #\space
run: 4621 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4622 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14638 to 13647
run: 4623 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14639 to 13648
run: 4624 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14640 to 20
run: 4625 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14641 to 0
run: 4626 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((7 integer))
setm: ((7 integer)) <= 15
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14642 to 15
run: 4627 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14643 to 13650
run: 4628 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13666 => ((9 byte-address))
setm: ((9 byte-address)) <= 13666
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14644 to 13666
run: 4629 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13666 to #\space
run: 4630 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 4631 print-character 13: (((reply)))
reply: nil nil
run: 4632 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 6
run: 4633 print-board 18: (((jump)) ((-8 offset)))
run: 4634 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4635 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4636 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9324 file-address) (raw))
sizeof: ((9324 file-address) (raw))
run: 12573 => ((8 file-address))
setm: ((8 file-address)) <= 12573
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12573
run: 4637 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
m: ((12581 square) (raw))
sizeof: ((12581 square) (raw))
run: #\n => ((6 square))
setm: ((6 square)) <= #\n
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\n
run: 4638 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4639 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14665 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4640 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\n)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14667 to 13645
run: 4641 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\n)
run: #\n => ((2 character))
setm: ((2 character)) <= #\n
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14668 to #\n
run: 4642 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4643 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14669 to 13647
run: 4644 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14670 to 13648
run: 4645 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14671 to 20
run: 4646 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14672 to 0
run: 4647 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((7 integer))
setm: ((7 integer)) <= 16
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14673 to 16
run: 4648 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14674 to 13650
run: 4649 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13667 => ((9 byte-address))
setm: ((9 byte-address)) <= 13667
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14675 to 13667
run: 4650 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\n => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\n
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13667 to #\n
run: 4651 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 4652 print-character 13: (((reply)))
reply: nil nil
run: 4653 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4654 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14696 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4655 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14698 to 13645
run: 4656 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14699 to #\space
run: 4657 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4658 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14700 to 13647
run: 4659 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14701 to 13648
run: 4660 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14702 to 20
run: 4661 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14703 to 0
run: 4662 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((7 integer))
setm: ((7 integer)) <= 17
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14704 to 17
run: 4663 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14705 to 13650
run: 4664 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13668 => ((9 byte-address))
setm: ((9 byte-address)) <= 13668
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14706 to 13668
run: 4665 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13668 to #\space
run: 4666 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 4667 print-character 13: (((reply)))
reply: nil nil
run: 4668 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 7
run: 4669 print-board 18: (((jump)) ((-8 offset)))
run: 4670 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4671 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4672 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9325 file-address) (raw))
sizeof: ((9325 file-address) (raw))
run: 13109 => ((8 file-address))
setm: ((8 file-address)) <= 13109
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 13109
run: 4673 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
m: ((13117 square) (raw))
sizeof: ((13117 square) (raw))
run: #\r => ((6 square))
setm: ((6 square)) <= #\r
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\r
run: 4674 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4675 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14727 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4676 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\r)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14729 to 13645
run: 4677 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\r)
run: #\r => ((2 character))
setm: ((2 character)) <= #\r
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14730 to #\r
run: 4678 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4679 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14731 to 13647
run: 4680 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14732 to 13648
run: 4681 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14733 to 20
run: 4682 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14734 to 0
run: 4683 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((7 integer))
setm: ((7 integer)) <= 18
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14735 to 18
run: 4684 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14736 to 13650
run: 4685 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13669 => ((9 byte-address))
setm: ((9 byte-address)) <= 13669
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14737 to 13669
run: 4686 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\r => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\r
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13669 to #\r
run: 4687 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 4688 print-character 13: (((reply)))
reply: nil nil
run: 4689 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4690 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14758 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4691 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14760 to 13645
run: 4692 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14761 to #\space
run: 4693 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4694 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14762 to 13647
run: 4695 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14763 to 13648
run: 4696 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 14764 to 20
run: 4697 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 14765 to 0
run: 4698 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((7 integer))
setm: ((7 integer)) <= 19
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 14766 to 19
run: 4699 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 14767 to 13650
run: 4700 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13670 => ((9 byte-address))
setm: ((9 byte-address)) <= 13670
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 14768 to 13670
run: 4701 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13670 to #\space
run: 4702 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 20
run: 4703 print-character 13: (((reply)))
reply: nil nil
run: 4704 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 8
run: 4705 print-board 18: (((jump)) ((-8 offset)))
run: 4706 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to t
run: 4707 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4708 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((3 integer))
setm: ((3 integer)) <= 6
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13886 to 6
run: 4709 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4710 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14789 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4711 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14791 to 13645
run: 4712 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4713 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 14792 to 13647
run: 4714 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 1 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 1
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 1
run: 4715 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 14793 to 13648
run: 4716 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 4717 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 4718 print-board 21: (((jump)) ((-18 offset)))
run: 4719 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4720 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4721 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 7 => ((5 integer))
setm: ((5 integer)) <= 7
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13888 to 7
run: 4722 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 4723 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14820 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4724 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 7)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 14822 to 13645
run: 4725 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 7)
run: 7 => ((2 integer))
setm: ((2 integer)) <= 7
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 14823 to 7
run: 4726 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 4727 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14851 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4728 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (7)
run: 7 => ((1 integer))
setm: ((1 integer)) <= 7
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 14853 to 7
run: 4729 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 14854 to nil
run: 4730 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 4731 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 14856 to nil
run: 4732 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14857 to nil
run: 4733 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4734 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 4735 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14882 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4736 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 14913 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14913
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 14884 to 14913
run: 4737 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 14913 => ((2 integer-address))
setm: ((2 integer-address)) <= 14913
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 14885 to 14913
run: 4738 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 14913 to 0
run: 4739 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 14914 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 14914
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 14886 to 14914
run: 4740 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14887 to 30
run: 4741 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 14915 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 14915
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 14914 to 14915
run: 4742 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 14913 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 14913
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 14858 to 14913
run: 4743 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 14859 to #\0
run: 4744 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 14860 to 48
run: 4745 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14861 to nil
run: 4746 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4747 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 14853 to 0
run: 7 => ((10 integer))
setm: ((10 integer)) <= 7
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 14862 to 7
run: 4748 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 55 => ((11 integer))
setm: ((11 integer)) <= 55
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 14863 to 55
run: 4749 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\7 => ((12 character))
setm: ((12 character)) <= #\7
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 14864 to #\7
run: 4750 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 4751 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14946 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4752 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14913 #\7)
run: 14913 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14913
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 14948 to 14913
run: 4753 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (14913 #\7)
run: #\7 => ((2 character))
setm: ((2 character)) <= #\7
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 14949 to #\7
run: 4754 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 4755 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 14977 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4756 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14913)
run: 14913 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 14913
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 14979 to 14913
run: 4757 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((14913 integer) (raw))
sizeof: ((14913 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 14980 to 0
run: 4758 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14914 string-address) (raw))
sizeof: ((14914 string-address) (raw))
run: 14915 => ((3 string-address))
setm: ((3 string-address)) <= 14915
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 14981 to 14915
run: 4759 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((14915 integer) (raw))
sizeof: ((14915 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 14982 to 30
run: 4760 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 14983 to nil
run: 4761 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 14950 to nil
run: 4762 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 4763 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 14913 => ((4 integer-address))
setm: ((4 integer-address)) <= 14913
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 14951 to 14913
run: 4764 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14914 string-address) (raw))
sizeof: ((14914 string-address) (raw))
run: 14915 => ((5 string-address))
setm: ((5 string-address)) <= 14915
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 14952 to 14915
run: 4765 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((14915 string) (raw))
m: ((14915 integer) (raw))
sizeof: ((14915 integer) (raw))
sizeof: ((_ byte))
run: 14916 => ((6 byte-address))
setm: ((6 byte-address)) <= 14916
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 14953 to 14916
run: 4766 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\7 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\7
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 14916 to #\7
run: 4767 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 14913 to 1
run: 4768 append 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
m: ((1 buffer-address) (same-as-arg 0))
sizeof: ((1 buffer-address) (same-as-arg 0))
reply: (((1 buffer-address) (same-as-arg 0))) (((6 buffer-address)))
reply: 14913 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 14913
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 14858 to 14913
run: 4769 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 4770 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14861 to t
run: 4771 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4772 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4773 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((14913 integer) (raw))
sizeof: ((14913 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 14865 to 1
run: 4774 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((14914 string-address) (raw))
sizeof: ((14914 string-address) (raw))
run: 14915 => ((14 string-address))
setm: ((14 string-address)) <= 14915
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 14866 to 14915
run: 4775 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 15008 => ((15 string-address))
setm: ((15 string-address)) <= 15008
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 14867 to 15008
run: 4776 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 14868 to 0
run: 4777 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 14869 to 0
run: 4778 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14861 to nil
run: 4779 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4780 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((14915 string) (raw))
m: ((14915 integer) (raw))
sizeof: ((14915 integer) (raw))
sizeof: ((_ byte))
m: ((14916 byte) (raw))
sizeof: ((14916 byte) (raw))
run: #\7 => ((18 byte))
setm: ((18 byte)) <= #\7
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 14870 to #\7
run: 4781 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((15008 string) (raw))
m: ((15008 integer) (raw))
sizeof: ((15008 integer) (raw))
sizeof: ((_ byte))
run: 15009 => ((19 byte-address))
setm: ((19 byte-address)) <= 15009
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 14871 to 15009
run: 4782 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\7 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\7
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 15009 to #\7
run: 4783 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 14868 to -1
run: 4784 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 14869 to 1
run: 4785 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 4786 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 14861 to t
run: 4787 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 4788 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 15008 => ((3 string-address))
setm: ((3 string-address)) <= 15008
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 14824 to 15008
run: 4789 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 4790 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15010 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4791 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 15008)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15012 to 13645
run: 4792 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 15008)
run: 15008 => ((2 string-address))
setm: ((2 string-address)) <= 15008
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 15013 to 15008
run: 4793 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((15008 integer) (raw))
sizeof: ((15008 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 15014 to 1
run: 4794 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15015 to 0
run: 4795 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15016 to nil
run: 4796 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4797 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15008 string) (raw))
m: ((15008 integer) (raw))
sizeof: ((15008 integer) (raw))
sizeof: ((_ byte))
m: ((15009 byte) (raw))
sizeof: ((15009 byte) (raw))
run: #\7 => ((6 character))
setm: ((6 character)) <= #\7
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15017 to #\7
run: 4798 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4799 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15041 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4800 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\7)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15043 to 13645
run: 4801 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\7)
run: #\7 => ((2 character))
setm: ((2 character)) <= #\7
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15044 to #\7
run: 4802 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4803 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15045 to 13647
run: 4804 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15046 to 13648
run: 4805 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15047 to 20
run: 4806 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15048 to 20
run: 4807 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((7 integer))
setm: ((7 integer)) <= 20
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15049 to 20
run: 4808 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15050 to 13650
run: 4809 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13671 => ((9 byte-address))
setm: ((9 byte-address)) <= 13671
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15051 to 13671
run: 4810 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\7 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\7
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13671 to #\7
run: 4811 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 4812 print-character 13: (((reply)))
reply: nil nil
run: 4813 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15015 to 1
run: 4814 print-string 10: (((jump)) ((-6 offset)))
run: 4815 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15016 to t
run: 4816 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4817 print-board 8: (((6 string-address)) <- ((new))  | )
run: 15072 => ((6 string-address))
setm: ((6 string-address)) <= 15072
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 15072
run: 4818 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 4819 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15076 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4820 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 15072)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15078 to 13645
run: 4821 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 15072)
run: 15072 => ((2 string-address))
setm: ((2 string-address)) <= 15072
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 15079 to 15072
run: 4822 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((15072 integer) (raw))
sizeof: ((15072 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 15080 to 3
run: 4823 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15081 to 0
run: 4824 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15082 to nil
run: 4825 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4826 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15072 string) (raw))
m: ((15072 integer) (raw))
sizeof: ((15072 integer) (raw))
sizeof: ((_ byte))
m: ((15073 byte) (raw))
sizeof: ((15073 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15083 to #\space
run: 4827 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4828 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15107 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4829 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15109 to 13645
run: 4830 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15110 to #\space
run: 4831 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4832 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15111 to 13647
run: 4833 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15112 to 13648
run: 4834 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15113 to 20
run: 4835 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15114 to 20
run: 4836 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 21 => ((7 integer))
setm: ((7 integer)) <= 21
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15115 to 21
run: 4837 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15116 to 13650
run: 4838 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13672 => ((9 byte-address))
setm: ((9 byte-address)) <= 13672
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15117 to 13672
run: 4839 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13672 to #\space
run: 4840 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 4841 print-character 13: (((reply)))
reply: nil nil
run: 4842 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15081 to 1
run: 4843 print-string 10: (((jump)) ((-6 offset)))
run: 4844 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15082 to nil
run: 4845 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4846 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15072 string) (raw))
m: ((15072 integer) (raw))
sizeof: ((15072 integer) (raw))
sizeof: ((_ byte))
m: ((15074 byte) (raw))
sizeof: ((15074 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15083 to #\|
run: 4847 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4848 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15138 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4849 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15140 to 13645
run: 4850 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15141 to #\|
run: 4851 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4852 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15142 to 13647
run: 4853 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15143 to 13648
run: 4854 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15144 to 20
run: 4855 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15145 to 20
run: 4856 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 22 => ((7 integer))
setm: ((7 integer)) <= 22
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15146 to 22
run: 4857 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15147 to 13650
run: 4858 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13673 => ((9 byte-address))
setm: ((9 byte-address)) <= 13673
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15148 to 13673
run: 4859 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13673 to #\|
run: 4860 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 4861 print-character 13: (((reply)))
reply: nil nil
run: 4862 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15081 to 2
run: 4863 print-string 10: (((jump)) ((-6 offset)))
run: 4864 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15082 to nil
run: 4865 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4866 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15072 string) (raw))
m: ((15072 integer) (raw))
sizeof: ((15072 integer) (raw))
sizeof: ((_ byte))
m: ((15075 byte) (raw))
sizeof: ((15075 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15083 to #\space
run: 4867 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 4868 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15169 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4869 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15171 to 13645
run: 4870 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15172 to #\space
run: 4871 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4872 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15173 to 13647
run: 4873 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15174 to 13648
run: 4874 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15175 to 20
run: 4875 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15176 to 20
run: 4876 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 23 => ((7 integer))
setm: ((7 integer)) <= 23
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15177 to 23
run: 4877 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15178 to 13650
run: 4878 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13674 => ((9 byte-address))
setm: ((9 byte-address)) <= 13674
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15179 to 13674
run: 4879 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13674 to #\space
run: 4880 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 4881 print-character 13: (((reply)))
reply: nil nil
run: 4882 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15081 to 3
run: 4883 print-string 10: (((jump)) ((-6 offset)))
run: 4884 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15082 to t
run: 4885 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 4886 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 0
run: 4887 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4888 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4889 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9318 file-address) (raw))
sizeof: ((9318 file-address) (raw))
run: 9357 => ((8 file-address))
setm: ((8 file-address)) <= 9357
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9357
run: 4890 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
m: ((9364 square) (raw))
sizeof: ((9364 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\p
run: 4891 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4892 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15200 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4893 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15202 to 13645
run: 4894 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15203 to #\p
run: 4895 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4896 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15204 to 13647
run: 4897 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15205 to 13648
run: 4898 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15206 to 20
run: 4899 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15207 to 20
run: 4900 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 24 => ((7 integer))
setm: ((7 integer)) <= 24
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15208 to 24
run: 4901 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15209 to 13650
run: 4902 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13675 => ((9 byte-address))
setm: ((9 byte-address)) <= 13675
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15210 to 13675
run: 4903 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13675 to #\p
run: 4904 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 4905 print-character 13: (((reply)))
reply: nil nil
run: 4906 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4907 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15231 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4908 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15233 to 13645
run: 4909 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15234 to #\space
run: 4910 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4911 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15235 to 13647
run: 4912 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15236 to 13648
run: 4913 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15237 to 20
run: 4914 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15238 to 20
run: 4915 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 25 => ((7 integer))
setm: ((7 integer)) <= 25
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15239 to 25
run: 4916 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15240 to 13650
run: 4917 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13676 => ((9 byte-address))
setm: ((9 byte-address)) <= 13676
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15241 to 13676
run: 4918 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13676 to #\space
run: 4919 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 4920 print-character 13: (((reply)))
reply: nil nil
run: 4921 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 1
run: 4922 print-board 18: (((jump)) ((-8 offset)))
run: 4923 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4924 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4925 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9319 file-address) (raw))
sizeof: ((9319 file-address) (raw))
run: 9893 => ((8 file-address))
setm: ((8 file-address)) <= 9893
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9893
run: 4926 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
m: ((9900 square) (raw))
sizeof: ((9900 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\p
run: 4927 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4928 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15262 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4929 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15264 to 13645
run: 4930 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15265 to #\p
run: 4931 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4932 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15266 to 13647
run: 4933 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15267 to 13648
run: 4934 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15268 to 20
run: 4935 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15269 to 20
run: 4936 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 26 => ((7 integer))
setm: ((7 integer)) <= 26
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15270 to 26
run: 4937 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15271 to 13650
run: 4938 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13677 => ((9 byte-address))
setm: ((9 byte-address)) <= 13677
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15272 to 13677
run: 4939 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13677 to #\p
run: 4940 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 4941 print-character 13: (((reply)))
reply: nil nil
run: 4942 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4943 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15293 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4944 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15295 to 13645
run: 4945 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15296 to #\space
run: 4946 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4947 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15297 to 13647
run: 4948 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15298 to 13648
run: 4949 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15299 to 20
run: 4950 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15300 to 20
run: 4951 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 27 => ((7 integer))
setm: ((7 integer)) <= 27
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15301 to 27
run: 4952 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15302 to 13650
run: 4953 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13678 => ((9 byte-address))
setm: ((9 byte-address)) <= 13678
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15303 to 13678
run: 4954 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13678 to #\space
run: 4955 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 4956 print-character 13: (((reply)))
reply: nil nil
run: 4957 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 2
run: 4958 print-board 18: (((jump)) ((-8 offset)))
run: 4959 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4960 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4961 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9320 file-address) (raw))
sizeof: ((9320 file-address) (raw))
run: 10429 => ((8 file-address))
setm: ((8 file-address)) <= 10429
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10429
run: 4962 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
m: ((10436 square) (raw))
sizeof: ((10436 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\p
run: 4963 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 4964 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15324 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4965 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15326 to 13645
run: 4966 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15327 to #\p
run: 4967 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4968 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15328 to 13647
run: 4969 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15329 to 13648
run: 4970 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15330 to 20
run: 4971 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15331 to 20
run: 4972 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 28 => ((7 integer))
setm: ((7 integer)) <= 28
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15332 to 28
run: 4973 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15333 to 13650
run: 4974 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13679 => ((9 byte-address))
setm: ((9 byte-address)) <= 13679
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15334 to 13679
run: 4975 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13679 to #\p
run: 4976 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 4977 print-character 13: (((reply)))
reply: nil nil
run: 4978 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4979 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15355 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 4980 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15357 to 13645
run: 4981 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15358 to #\space
run: 4982 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 4983 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15359 to 13647
run: 4984 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15360 to 13648
run: 4985 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15361 to 20
run: 4986 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15362 to 20
run: 4987 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 29 => ((7 integer))
setm: ((7 integer)) <= 29
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15363 to 29
run: 4988 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15364 to 13650
run: 4989 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13680 => ((9 byte-address))
setm: ((9 byte-address)) <= 13680
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15365 to 13680
run: 4990 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13680 to #\space
run: 4991 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 4992 print-character 13: (((reply)))
reply: nil nil
run: 4993 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 3
run: 4994 print-board 18: (((jump)) ((-8 offset)))
run: 4995 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 4996 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 4997 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9321 file-address) (raw))
sizeof: ((9321 file-address) (raw))
run: 10965 => ((8 file-address))
setm: ((8 file-address)) <= 10965
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10965
run: 4998 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
m: ((10972 square) (raw))
sizeof: ((10972 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\p
run: 4999 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5000 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15386 => ((default-space space-address))
sizeof: ((default-space space-address))
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 5001 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15388 to 13645
run: 5002 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15389 to #\p
run: 5003 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5004 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15390 to 13647
run: 5005 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15391 to 13648
run: 5006 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15392 to 20
run: 5007 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15393 to 20
run: 5008 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 30 => ((7 integer))
setm: ((7 integer)) <= 30
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15394 to 30
run: 5009 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15395 to 13650
run: 5010 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13681 => ((9 byte-address))
setm: ((9 byte-address)) <= 13681
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15396 to 13681
run: 5011 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13681 to #\p
run: 5012 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 5013 print-character 13: (((reply)))
reply: nil nil
run: 5014 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5015 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15417 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5016 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15419 to 13645
run: 5017 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15420 to #\space
run: 5018 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5019 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15421 to 13647
run: 5020 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15422 to 13648
run: 5021 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15423 to 20
run: 5022 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15424 to 20
run: 5023 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 31 => ((7 integer))
setm: ((7 integer)) <= 31
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15425 to 31
run: 5024 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15426 to 13650
run: 5025 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13682 => ((9 byte-address))
setm: ((9 byte-address)) <= 13682
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15427 to 13682
run: 5026 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13682 to #\space
run: 5027 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 5028 print-character 13: (((reply)))
reply: nil nil
run: 5029 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 4
run: 5030 print-board 18: (((jump)) ((-8 offset)))
run: 5031 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5032 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5033 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9322 file-address) (raw))
sizeof: ((9322 file-address) (raw))
run: 11501 => ((8 file-address))
setm: ((8 file-address)) <= 11501
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 11501
run: 5034 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
m: ((11508 square) (raw))
sizeof: ((11508 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\p
run: 5035 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5036 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15448 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5037 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15450 to 13645
run: 5038 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15451 to #\p
run: 5039 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5040 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15452 to 13647
run: 5041 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15453 to 13648
run: 5042 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15454 to 20
run: 5043 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15455 to 20
run: 5044 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 32 => ((7 integer))
setm: ((7 integer)) <= 32
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15456 to 32
run: 5045 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15457 to 13650
run: 5046 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13683 => ((9 byte-address))
setm: ((9 byte-address)) <= 13683
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15458 to 13683
run: 5047 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13683 to #\p
run: 5048 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 5049 print-character 13: (((reply)))
reply: nil nil
run: 5050 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5051 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15479 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5052 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15481 to 13645
run: 5053 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15482 to #\space
run: 5054 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5055 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15483 to 13647
run: 5056 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15484 to 13648
run: 5057 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15485 to 20
run: 5058 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15486 to 20
run: 5059 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 33 => ((7 integer))
setm: ((7 integer)) <= 33
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15487 to 33
run: 5060 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15488 to 13650
run: 5061 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13684 => ((9 byte-address))
setm: ((9 byte-address)) <= 13684
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15489 to 13684
run: 5062 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13684 to #\space
run: 5063 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 5064 print-character 13: (((reply)))
reply: nil nil
run: 5065 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 5
run: 5066 print-board 18: (((jump)) ((-8 offset)))
run: 5067 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5068 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5069 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9323 file-address) (raw))
sizeof: ((9323 file-address) (raw))
run: 12037 => ((8 file-address))
setm: ((8 file-address)) <= 12037
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12037
run: 5070 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
m: ((12044 square) (raw))
sizeof: ((12044 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\p
run: 5071 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5072 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15510 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5073 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15512 to 13645
run: 5074 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15513 to #\p
run: 5075 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5076 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15514 to 13647
run: 5077 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15515 to 13648
run: 5078 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15516 to 20
run: 5079 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15517 to 20
run: 5080 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 34 => ((7 integer))
setm: ((7 integer)) <= 34
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15518 to 34
run: 5081 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15519 to 13650
run: 5082 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13685 => ((9 byte-address))
setm: ((9 byte-address)) <= 13685
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15520 to 13685
run: 5083 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13685 to #\p
run: 5084 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 5085 print-character 13: (((reply)))
reply: nil nil
run: 5086 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5087 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15541 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5088 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15543 to 13645
run: 5089 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15544 to #\space
run: 5090 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5091 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15545 to 13647
run: 5092 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15546 to 13648
run: 5093 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15547 to 20
run: 5094 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15548 to 20
run: 5095 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 35 => ((7 integer))
setm: ((7 integer)) <= 35
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15549 to 35
run: 5096 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15550 to 13650
run: 5097 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13686 => ((9 byte-address))
setm: ((9 byte-address)) <= 13686
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15551 to 13686
run: 5098 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13686 to #\space
run: 5099 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 5100 print-character 13: (((reply)))
reply: nil nil
run: 5101 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 6
run: 5102 print-board 18: (((jump)) ((-8 offset)))
run: 5103 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5104 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5105 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9324 file-address) (raw))
sizeof: ((9324 file-address) (raw))
run: 12573 => ((8 file-address))
setm: ((8 file-address)) <= 12573
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12573
run: 5106 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
m: ((12580 square) (raw))
sizeof: ((12580 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\p
run: 5107 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5108 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15572 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5109 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15574 to 13645
run: 5110 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15575 to #\p
run: 5111 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5112 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15576 to 13647
run: 5113 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15577 to 13648
run: 5114 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15578 to 20
run: 5115 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15579 to 20
run: 5116 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 36 => ((7 integer))
setm: ((7 integer)) <= 36
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15580 to 36
run: 5117 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15581 to 13650
run: 5118 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13687 => ((9 byte-address))
setm: ((9 byte-address)) <= 13687
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15582 to 13687
run: 5119 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13687 to #\p
run: 5120 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 5121 print-character 13: (((reply)))
reply: nil nil
run: 5122 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5123 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15603 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5124 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15605 to 13645
run: 5125 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15606 to #\space
run: 5126 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5127 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15607 to 13647
run: 5128 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15608 to 13648
run: 5129 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15609 to 20
run: 5130 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15610 to 20
run: 5131 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 37 => ((7 integer))
setm: ((7 integer)) <= 37
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15611 to 37
run: 5132 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15612 to 13650
run: 5133 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13688 => ((9 byte-address))
setm: ((9 byte-address)) <= 13688
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15613 to 13688
run: 5134 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13688 to #\space
run: 5135 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 5136 print-character 13: (((reply)))
reply: nil nil
run: 5137 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 7
run: 5138 print-board 18: (((jump)) ((-8 offset)))
run: 5139 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5140 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5141 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9325 file-address) (raw))
sizeof: ((9325 file-address) (raw))
run: 13109 => ((8 file-address))
setm: ((8 file-address)) <= 13109
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 13109
run: 5142 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
m: ((13116 square) (raw))
sizeof: ((13116 square) (raw))
run: #\p => ((6 square))
setm: ((6 square)) <= #\p
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\p
run: 5143 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5144 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15634 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5145 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\p)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15636 to 13645
run: 5146 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\p)
run: #\p => ((2 character))
setm: ((2 character)) <= #\p
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15637 to #\p
run: 5147 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5148 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15638 to 13647
run: 5149 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15639 to 13648
run: 5150 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15640 to 20
run: 5151 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15641 to 20
run: 5152 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 38 => ((7 integer))
setm: ((7 integer)) <= 38
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15642 to 38
run: 5153 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15643 to 13650
run: 5154 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13689 => ((9 byte-address))
setm: ((9 byte-address)) <= 13689
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15644 to 13689
run: 5155 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\p => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\p
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13689 to #\p
run: 5156 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 5157 print-character 13: (((reply)))
reply: nil nil
run: 5158 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5159 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15665 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5160 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15667 to 13645
run: 5161 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15668 to #\space
run: 5162 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5163 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15669 to 13647
run: 5164 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15670 to 13648
run: 5165 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15671 to 20
run: 5166 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 20 => ((6 integer))
setm: ((6 integer)) <= 20
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15672 to 20
run: 5167 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 39 => ((7 integer))
setm: ((7 integer)) <= 39
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15673 to 39
run: 5168 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15674 to 13650
run: 5169 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13690 => ((9 byte-address))
setm: ((9 byte-address)) <= 13690
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15675 to 13690
run: 5170 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13690 to #\space
run: 5171 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 20
run: 5172 print-character 13: (((reply)))
reply: nil nil
run: 5173 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 8
run: 5174 print-board 18: (((jump)) ((-8 offset)))
run: 5175 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to t
run: 5176 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5177 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13886 to 5
run: 5178 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5179 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15696 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5180 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15698 to 13645
run: 5181 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5182 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 15699 to 13647
run: 5183 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 2 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 2
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 2
run: 5184 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15700 to 13648
run: 5185 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 5186 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 5187 print-board 21: (((jump)) ((-18 offset)))
run: 5188 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5189 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5190 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 6 => ((5 integer))
setm: ((5 integer)) <= 6
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13888 to 6
run: 5191 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 5192 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15727 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5193 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 6)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15729 to 13645
run: 5194 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 6)
run: 6 => ((2 integer))
setm: ((2 integer)) <= 6
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 15730 to 6
run: 5195 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 5196 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15758 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5197 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (6)
run: 6 => ((1 integer))
setm: ((1 integer)) <= 6
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 15760 to 6
run: 5198 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 15761 to nil
run: 5199 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 5200 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 15763 to nil
run: 5201 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15764 to nil
run: 5202 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5203 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 5204 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15789 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5205 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 15820 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 15820
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 15791 to 15820
run: 5206 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 15820 => ((2 integer-address))
setm: ((2 integer-address)) <= 15820
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 15792 to 15820
run: 5207 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 15820 to 0
run: 5208 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 15821 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 15821
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 15793 to 15821
run: 5209 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15794 to 30
run: 5210 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 15822 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 15822
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 15821 to 15822
run: 5211 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 15820 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 15820
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 15765 to 15820
run: 5212 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 15766 to #\0
run: 5213 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 15767 to 48
run: 5214 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 15768 to nil
run: 5215 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5216 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 15760 to 0
run: 6 => ((10 integer))
setm: ((10 integer)) <= 6
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 15769 to 6
run: 5217 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 54 => ((11 integer))
setm: ((11 integer)) <= 54
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 15770 to 54
run: 5218 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\6 => ((12 character))
setm: ((12 character)) <= #\6
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 15771 to #\6
run: 5219 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 5220 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15853 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5221 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (15820 #\6)
run: 15820 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 15820
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 15855 to 15820
run: 5222 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (15820 #\6)
run: #\6 => ((2 character))
setm: ((2 character)) <= #\6
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15856 to #\6
run: 5223 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 5224 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15884 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5225 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (15820)
run: 15820 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 15820
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 15886 to 15820
run: 5226 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((15820 integer) (raw))
sizeof: ((15820 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 15887 to 0
run: 5227 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((15821 string-address) (raw))
sizeof: ((15821 string-address) (raw))
run: 15822 => ((3 string-address))
setm: ((3 string-address)) <= 15822
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 15888 to 15822
run: 5228 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((15822 integer) (raw))
sizeof: ((15822 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15889 to 30
run: 5229 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15890 to nil
run: 5230 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 15857 to nil
run: 5231 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 5232 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 15820 => ((4 integer-address))
setm: ((4 integer-address)) <= 15820
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15858 to 15820
run: 5233 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((15821 string-address) (raw))
sizeof: ((15821 string-address) (raw))
run: 15822 => ((5 string-address))
setm: ((5 string-address)) <= 15822
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 15859 to 15822
run: 5234 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((15822 string) (raw))
m: ((15822 integer) (raw))
sizeof: ((15822 integer) (raw))
sizeof: ((_ byte))
run: 15823 => ((6 byte-address))
setm: ((6 byte-address)) <= 15823
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 15860 to 15823
run: 5235 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\6 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\6
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 15823 to #\6
run: 5236 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 15820 to 1
run: 5237 append 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
m: ((1 buffer-address) (same-as-arg 0))
sizeof: ((1 buffer-address) (same-as-arg 0))
reply: (((1 buffer-address) (same-as-arg 0))) (((6 buffer-address)))
reply: 15820 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 15820
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 15765 to 15820
run: 5238 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 5239 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 15768 to t
run: 5240 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5241 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5242 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((15820 integer) (raw))
sizeof: ((15820 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 15772 to 1
run: 5243 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((15821 string-address) (raw))
sizeof: ((15821 string-address) (raw))
run: 15822 => ((14 string-address))
setm: ((14 string-address)) <= 15822
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 15773 to 15822
run: 5244 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 15915 => ((15 string-address))
setm: ((15 string-address)) <= 15915
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 15774 to 15915
run: 5245 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 15775 to 0
run: 5246 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 15776 to 0
run: 5247 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 15768 to nil
run: 5248 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5249 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((15822 string) (raw))
m: ((15822 integer) (raw))
sizeof: ((15822 integer) (raw))
sizeof: ((_ byte))
m: ((15823 byte) (raw))
sizeof: ((15823 byte) (raw))
run: #\6 => ((18 byte))
setm: ((18 byte)) <= #\6
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 15777 to #\6
run: 5250 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((15915 string) (raw))
m: ((15915 integer) (raw))
sizeof: ((15915 integer) (raw))
sizeof: ((_ byte))
run: 15916 => ((19 byte-address))
setm: ((19 byte-address)) <= 15916
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 15778 to 15916
run: 5251 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\6 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\6
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 15916 to #\6
run: 5252 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 15775 to -1
run: 5253 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 15776 to 1
run: 5254 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 5255 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 15768 to t
run: 5256 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5257 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 15915 => ((3 string-address))
setm: ((3 string-address)) <= 15915
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 15731 to 15915
run: 5258 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 5259 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15917 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5260 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 15915)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15919 to 13645
run: 5261 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 15915)
run: 15915 => ((2 string-address))
setm: ((2 string-address)) <= 15915
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 15920 to 15915
run: 5262 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((15915 integer) (raw))
sizeof: ((15915 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 15921 to 1
run: 5263 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15922 to 0
run: 5264 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15923 to nil
run: 5265 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5266 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15915 string) (raw))
m: ((15915 integer) (raw))
sizeof: ((15915 integer) (raw))
sizeof: ((_ byte))
m: ((15916 byte) (raw))
sizeof: ((15916 byte) (raw))
run: #\6 => ((6 character))
setm: ((6 character)) <= #\6
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15924 to #\6
run: 5267 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5268 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15948 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5269 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\6)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15950 to 13645
run: 5270 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\6)
run: #\6 => ((2 character))
setm: ((2 character)) <= #\6
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 15951 to #\6
run: 5271 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5272 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 15952 to 13647
run: 5273 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 15953 to 13648
run: 5274 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 15954 to 20
run: 5275 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 15955 to 40
run: 5276 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 40 => ((7 integer))
setm: ((7 integer)) <= 40
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 15956 to 40
run: 5277 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 15957 to 13650
run: 5278 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13691 => ((9 byte-address))
setm: ((9 byte-address)) <= 13691
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 15958 to 13691
run: 5279 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\6 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\6
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13691 to #\6
run: 5280 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 5281 print-character 13: (((reply)))
reply: nil nil
run: 5282 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15922 to 1
run: 5283 print-string 10: (((jump)) ((-6 offset)))
run: 5284 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15923 to t
run: 5285 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5286 print-board 8: (((6 string-address)) <- ((new))  | )
run: 15979 => ((6 string-address))
setm: ((6 string-address)) <= 15979
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 15979
run: 5287 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 5288 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 15983 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5289 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 15979)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 15985 to 13645
run: 5290 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 15979)
run: 15979 => ((2 string-address))
setm: ((2 string-address)) <= 15979
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 15986 to 15979
run: 5291 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((15979 integer) (raw))
sizeof: ((15979 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 15987 to 3
run: 5292 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15988 to 0
run: 5293 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15989 to nil
run: 5294 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5295 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15979 string) (raw))
m: ((15979 integer) (raw))
sizeof: ((15979 integer) (raw))
sizeof: ((_ byte))
m: ((15980 byte) (raw))
sizeof: ((15980 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15990 to #\space
run: 5296 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5297 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16014 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5298 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16016 to 13645
run: 5299 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16017 to #\space
run: 5300 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5301 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16018 to 13647
run: 5302 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16019 to 13648
run: 5303 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16020 to 20
run: 5304 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16021 to 40
run: 5305 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 41 => ((7 integer))
setm: ((7 integer)) <= 41
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16022 to 41
run: 5306 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16023 to 13650
run: 5307 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13692 => ((9 byte-address))
setm: ((9 byte-address)) <= 13692
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16024 to 13692
run: 5308 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13692 to #\space
run: 5309 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 5310 print-character 13: (((reply)))
reply: nil nil
run: 5311 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15988 to 1
run: 5312 print-string 10: (((jump)) ((-6 offset)))
run: 5313 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15989 to nil
run: 5314 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5315 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15979 string) (raw))
m: ((15979 integer) (raw))
sizeof: ((15979 integer) (raw))
sizeof: ((_ byte))
m: ((15981 byte) (raw))
sizeof: ((15981 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15990 to #\|
run: 5316 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5317 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16045 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5318 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16047 to 13645
run: 5319 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16048 to #\|
run: 5320 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5321 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16049 to 13647
run: 5322 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16050 to 13648
run: 5323 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16051 to 20
run: 5324 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16052 to 40
run: 5325 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 42 => ((7 integer))
setm: ((7 integer)) <= 42
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16053 to 42
run: 5326 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16054 to 13650
run: 5327 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13693 => ((9 byte-address))
setm: ((9 byte-address)) <= 13693
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16055 to 13693
run: 5328 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13693 to #\|
run: 5329 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 5330 print-character 13: (((reply)))
reply: nil nil
run: 5331 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15988 to 2
run: 5332 print-string 10: (((jump)) ((-6 offset)))
run: 5333 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15989 to nil
run: 5334 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5335 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((15979 string) (raw))
m: ((15979 integer) (raw))
sizeof: ((15979 integer) (raw))
sizeof: ((_ byte))
m: ((15982 byte) (raw))
sizeof: ((15982 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 15990 to #\space
run: 5336 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5337 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16076 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5338 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16078 to 13645
run: 5339 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16079 to #\space
run: 5340 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5341 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16080 to 13647
run: 5342 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16081 to 13648
run: 5343 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16082 to 20
run: 5344 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16083 to 40
run: 5345 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 43 => ((7 integer))
setm: ((7 integer)) <= 43
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16084 to 43
run: 5346 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16085 to 13650
run: 5347 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13694 => ((9 byte-address))
setm: ((9 byte-address)) <= 13694
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16086 to 13694
run: 5348 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13694 to #\space
run: 5349 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 5350 print-character 13: (((reply)))
reply: nil nil
run: 5351 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 15988 to 3
run: 5352 print-string 10: (((jump)) ((-6 offset)))
run: 5353 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 15989 to t
run: 5354 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5355 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 0
run: 5356 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5357 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5358 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9318 file-address) (raw))
sizeof: ((9318 file-address) (raw))
run: 9357 => ((8 file-address))
setm: ((8 file-address)) <= 9357
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9357
run: 5359 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
m: ((9363 square) (raw))
sizeof: ((9363 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5360 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5361 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16107 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5362 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16109 to 13645
run: 5363 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16110 to #\_
run: 5364 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5365 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16111 to 13647
run: 5366 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16112 to 13648
run: 5367 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16113 to 20
run: 5368 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16114 to 40
run: 5369 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 44 => ((7 integer))
setm: ((7 integer)) <= 44
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16115 to 44
run: 5370 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16116 to 13650
run: 5371 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13695 => ((9 byte-address))
setm: ((9 byte-address)) <= 13695
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16117 to 13695
run: 5372 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13695 to #\_
run: 5373 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 5374 print-character 13: (((reply)))
reply: nil nil
run: 5375 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5376 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16138 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5377 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16140 to 13645
run: 5378 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16141 to #\space
run: 5379 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5380 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16142 to 13647
run: 5381 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16143 to 13648
run: 5382 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16144 to 20
run: 5383 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16145 to 40
run: 5384 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 45 => ((7 integer))
setm: ((7 integer)) <= 45
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16146 to 45
run: 5385 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16147 to 13650
run: 5386 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13696 => ((9 byte-address))
setm: ((9 byte-address)) <= 13696
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16148 to 13696
run: 5387 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13696 to #\space
run: 5388 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 5389 print-character 13: (((reply)))
reply: nil nil
run: 5390 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 1
run: 5391 print-board 18: (((jump)) ((-8 offset)))
run: 5392 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5393 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5394 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9319 file-address) (raw))
sizeof: ((9319 file-address) (raw))
run: 9893 => ((8 file-address))
setm: ((8 file-address)) <= 9893
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9893
run: 5395 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
m: ((9899 square) (raw))
sizeof: ((9899 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5396 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5397 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16169 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5398 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16171 to 13645
run: 5399 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16172 to #\_
run: 5400 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5401 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16173 to 13647
run: 5402 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16174 to 13648
run: 5403 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16175 to 20
run: 5404 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16176 to 40
run: 5405 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 46 => ((7 integer))
setm: ((7 integer)) <= 46
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16177 to 46
run: 5406 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16178 to 13650
run: 5407 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13697 => ((9 byte-address))
setm: ((9 byte-address)) <= 13697
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16179 to 13697
run: 5408 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13697 to #\_
run: 5409 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 5410 print-character 13: (((reply)))
reply: nil nil
run: 5411 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5412 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16200 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5413 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16202 to 13645
run: 5414 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16203 to #\space
run: 5415 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5416 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16204 to 13647
run: 5417 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16205 to 13648
run: 5418 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16206 to 20
run: 5419 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16207 to 40
run: 5420 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 47 => ((7 integer))
setm: ((7 integer)) <= 47
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16208 to 47
run: 5421 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16209 to 13650
run: 5422 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13698 => ((9 byte-address))
setm: ((9 byte-address)) <= 13698
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16210 to 13698
run: 5423 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13698 to #\space
run: 5424 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 5425 print-character 13: (((reply)))
reply: nil nil
run: 5426 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 2
run: 5427 print-board 18: (((jump)) ((-8 offset)))
run: 5428 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5429 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5430 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9320 file-address) (raw))
sizeof: ((9320 file-address) (raw))
run: 10429 => ((8 file-address))
setm: ((8 file-address)) <= 10429
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10429
run: 5431 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
m: ((10435 square) (raw))
sizeof: ((10435 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5432 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5433 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16231 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5434 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16233 to 13645
run: 5435 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16234 to #\_
run: 5436 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5437 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16235 to 13647
run: 5438 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16236 to 13648
run: 5439 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16237 to 20
run: 5440 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16238 to 40
run: 5441 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 48 => ((7 integer))
setm: ((7 integer)) <= 48
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16239 to 48
run: 5442 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16240 to 13650
run: 5443 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13699 => ((9 byte-address))
setm: ((9 byte-address)) <= 13699
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16241 to 13699
run: 5444 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13699 to #\_
run: 5445 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 5446 print-character 13: (((reply)))
reply: nil nil
run: 5447 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5448 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16262 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5449 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16264 to 13645
run: 5450 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16265 to #\space
run: 5451 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5452 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16266 to 13647
run: 5453 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16267 to 13648
run: 5454 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16268 to 20
run: 5455 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16269 to 40
run: 5456 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 49 => ((7 integer))
setm: ((7 integer)) <= 49
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16270 to 49
run: 5457 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16271 to 13650
run: 5458 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13700 => ((9 byte-address))
setm: ((9 byte-address)) <= 13700
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16272 to 13700
run: 5459 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13700 to #\space
run: 5460 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 5461 print-character 13: (((reply)))
reply: nil nil
run: 5462 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 3
run: 5463 print-board 18: (((jump)) ((-8 offset)))
run: 5464 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5465 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5466 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9321 file-address) (raw))
sizeof: ((9321 file-address) (raw))
run: 10965 => ((8 file-address))
setm: ((8 file-address)) <= 10965
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10965
run: 5467 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
m: ((10971 square) (raw))
sizeof: ((10971 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5468 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5469 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16293 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5470 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16295 to 13645
run: 5471 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16296 to #\_
run: 5472 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5473 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16297 to 13647
run: 5474 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16298 to 13648
run: 5475 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16299 to 20
run: 5476 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16300 to 40
run: 5477 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 50 => ((7 integer))
setm: ((7 integer)) <= 50
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16301 to 50
run: 5478 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16302 to 13650
run: 5479 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13701 => ((9 byte-address))
setm: ((9 byte-address)) <= 13701
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16303 to 13701
run: 5480 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13701 to #\_
run: 5481 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 5482 print-character 13: (((reply)))
reply: nil nil
run: 5483 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5484 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16324 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5485 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16326 to 13645
run: 5486 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16327 to #\space
run: 5487 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5488 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16328 to 13647
run: 5489 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16329 to 13648
run: 5490 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16330 to 20
run: 5491 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16331 to 40
run: 5492 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 51 => ((7 integer))
setm: ((7 integer)) <= 51
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16332 to 51
run: 5493 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16333 to 13650
run: 5494 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13702 => ((9 byte-address))
setm: ((9 byte-address)) <= 13702
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16334 to 13702
run: 5495 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13702 to #\space
run: 5496 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 5497 print-character 13: (((reply)))
reply: nil nil
run: 5498 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 4
run: 5499 print-board 18: (((jump)) ((-8 offset)))
run: 5500 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
schedule: scheduling print-board/main for further processing
schedule: print-board/main
run: 5501 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5502 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9322 file-address) (raw))
sizeof: ((9322 file-address) (raw))
run: 11501 => ((8 file-address))
setm: ((8 file-address)) <= 11501
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 11501
run: 5503 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
m: ((11507 square) (raw))
sizeof: ((11507 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5504 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5505 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16355 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5506 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16357 to 13645
run: 5507 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16358 to #\_
run: 5508 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5509 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16359 to 13647
run: 5510 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16360 to 13648
run: 5511 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16361 to 20
run: 5512 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16362 to 40
run: 5513 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 52 => ((7 integer))
setm: ((7 integer)) <= 52
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16363 to 52
run: 5514 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16364 to 13650
run: 5515 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13703 => ((9 byte-address))
setm: ((9 byte-address)) <= 13703
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16365 to 13703
run: 5516 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13703 to #\_
run: 5517 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 5518 print-character 13: (((reply)))
reply: nil nil
run: 5519 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5520 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16386 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5521 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16388 to 13645
run: 5522 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16389 to #\space
run: 5523 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5524 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16390 to 13647
run: 5525 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16391 to 13648
run: 5526 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16392 to 20
run: 5527 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16393 to 40
run: 5528 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 53 => ((7 integer))
setm: ((7 integer)) <= 53
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16394 to 53
run: 5529 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16395 to 13650
run: 5530 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13704 => ((9 byte-address))
setm: ((9 byte-address)) <= 13704
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16396 to 13704
run: 5531 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13704 to #\space
run: 5532 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 5533 print-character 13: (((reply)))
reply: nil nil
run: 5534 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 5
run: 5535 print-board 18: (((jump)) ((-8 offset)))
run: 5536 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5537 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5538 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9323 file-address) (raw))
sizeof: ((9323 file-address) (raw))
run: 12037 => ((8 file-address))
setm: ((8 file-address)) <= 12037
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12037
run: 5539 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
m: ((12043 square) (raw))
sizeof: ((12043 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5540 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5541 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16417 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5542 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16419 to 13645
run: 5543 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16420 to #\_
run: 5544 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5545 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16421 to 13647
run: 5546 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16422 to 13648
run: 5547 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16423 to 20
run: 5548 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16424 to 40
run: 5549 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 54 => ((7 integer))
setm: ((7 integer)) <= 54
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16425 to 54
run: 5550 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16426 to 13650
run: 5551 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13705 => ((9 byte-address))
setm: ((9 byte-address)) <= 13705
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16427 to 13705
run: 5552 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13705 to #\_
run: 5553 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 5554 print-character 13: (((reply)))
reply: nil nil
run: 5555 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5556 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16448 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5557 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16450 to 13645
run: 5558 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16451 to #\space
run: 5559 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5560 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16452 to 13647
run: 5561 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16453 to 13648
run: 5562 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16454 to 20
run: 5563 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16455 to 40
run: 5564 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 55 => ((7 integer))
setm: ((7 integer)) <= 55
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16456 to 55
run: 5565 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16457 to 13650
run: 5566 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13706 => ((9 byte-address))
setm: ((9 byte-address)) <= 13706
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16458 to 13706
run: 5567 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13706 to #\space
run: 5568 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 5569 print-character 13: (((reply)))
reply: nil nil
run: 5570 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 6
run: 5571 print-board 18: (((jump)) ((-8 offset)))
run: 5572 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5573 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5574 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9324 file-address) (raw))
sizeof: ((9324 file-address) (raw))
run: 12573 => ((8 file-address))
setm: ((8 file-address)) <= 12573
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12573
run: 5575 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
m: ((12579 square) (raw))
sizeof: ((12579 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5576 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5577 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16479 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5578 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16481 to 13645
run: 5579 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16482 to #\_
run: 5580 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5581 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16483 to 13647
run: 5582 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16484 to 13648
run: 5583 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16485 to 20
run: 5584 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16486 to 40
run: 5585 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 56 => ((7 integer))
setm: ((7 integer)) <= 56
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16487 to 56
run: 5586 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16488 to 13650
run: 5587 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13707 => ((9 byte-address))
setm: ((9 byte-address)) <= 13707
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16489 to 13707
run: 5588 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13707 to #\_
run: 5589 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 5590 print-character 13: (((reply)))
reply: nil nil
run: 5591 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5592 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16510 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5593 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16512 to 13645
run: 5594 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16513 to #\space
run: 5595 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5596 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16514 to 13647
run: 5597 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16515 to 13648
run: 5598 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16516 to 20
run: 5599 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16517 to 40
run: 5600 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 57 => ((7 integer))
setm: ((7 integer)) <= 57
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16518 to 57
run: 5601 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16519 to 13650
run: 5602 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13708 => ((9 byte-address))
setm: ((9 byte-address)) <= 13708
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16520 to 13708
run: 5603 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13708 to #\space
run: 5604 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 5605 print-character 13: (((reply)))
reply: nil nil
run: 5606 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 7
run: 5607 print-board 18: (((jump)) ((-8 offset)))
run: 5608 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5609 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5610 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9325 file-address) (raw))
sizeof: ((9325 file-address) (raw))
run: 13109 => ((8 file-address))
setm: ((8 file-address)) <= 13109
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 13109
run: 5611 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
m: ((13115 square) (raw))
sizeof: ((13115 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5612 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5613 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16541 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5614 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16543 to 13645
run: 5615 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16544 to #\_
run: 5616 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5617 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16545 to 13647
run: 5618 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16546 to 13648
run: 5619 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16547 to 20
run: 5620 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16548 to 40
run: 5621 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 58 => ((7 integer))
setm: ((7 integer)) <= 58
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16549 to 58
run: 5622 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16550 to 13650
run: 5623 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13709 => ((9 byte-address))
setm: ((9 byte-address)) <= 13709
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16551 to 13709
run: 5624 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13709 to #\_
run: 5625 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 5626 print-character 13: (((reply)))
reply: nil nil
run: 5627 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5628 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16572 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5629 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16574 to 13645
run: 5630 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16575 to #\space
run: 5631 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5632 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16576 to 13647
run: 5633 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16577 to 13648
run: 5634 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16578 to 20
run: 5635 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 40 => ((6 integer))
setm: ((6 integer)) <= 40
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16579 to 40
run: 5636 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 59 => ((7 integer))
setm: ((7 integer)) <= 59
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16580 to 59
run: 5637 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16581 to 13650
run: 5638 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13710 => ((9 byte-address))
setm: ((9 byte-address)) <= 13710
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16582 to 13710
run: 5639 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13710 to #\space
run: 5640 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 20
run: 5641 print-character 13: (((reply)))
reply: nil nil
run: 5642 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 8
run: 5643 print-board 18: (((jump)) ((-8 offset)))
run: 5644 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to t
run: 5645 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5646 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13886 to 4
run: 5647 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5648 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16603 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5649 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16605 to 13645
run: 5650 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5651 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 16606 to 13647
run: 5652 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 3 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 3
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 3
run: 5653 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16607 to 13648
run: 5654 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 5655 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 5656 print-board 21: (((jump)) ((-18 offset)))
run: 5657 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5658 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5659 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 5 => ((5 integer))
setm: ((5 integer)) <= 5
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13888 to 5
run: 5660 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 5661 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16634 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5662 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 5)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16636 to 13645
run: 5663 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 5)
run: 5 => ((2 integer))
setm: ((2 integer)) <= 5
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 16637 to 5
run: 5664 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 5665 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16665 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5666 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (5)
run: 5 => ((1 integer))
setm: ((1 integer)) <= 5
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 16667 to 5
run: 5667 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 16668 to nil
run: 5668 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 5669 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 16670 to nil
run: 5670 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16671 to nil
run: 5671 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5672 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 5673 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16696 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5674 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 16727 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 16727
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 16698 to 16727
run: 5675 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 16727 => ((2 integer-address))
setm: ((2 integer-address)) <= 16727
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 16699 to 16727
run: 5676 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 16727 to 0
run: 5677 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 16728 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 16728
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 16700 to 16728
run: 5678 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16701 to 30
run: 5679 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 16729 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 16729
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 16728 to 16729
run: 5680 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 16727 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 16727
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 16672 to 16727
run: 5681 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 16673 to #\0
run: 5682 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 16674 to 48
run: 5683 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 16675 to nil
run: 5684 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5685 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 16667 to 0
run: 5 => ((10 integer))
setm: ((10 integer)) <= 5
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 16676 to 5
run: 5686 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 53 => ((11 integer))
setm: ((11 integer)) <= 53
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 16677 to 53
run: 5687 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\5 => ((12 character))
setm: ((12 character)) <= #\5
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 16678 to #\5
run: 5688 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 5689 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16760 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5690 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (16727 #\5)
run: 16727 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 16727
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 16762 to 16727
run: 5691 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (16727 #\5)
run: #\5 => ((2 character))
setm: ((2 character)) <= #\5
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16763 to #\5
run: 5692 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 5693 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16791 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5694 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (16727)
run: 16727 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 16727
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 16793 to 16727
run: 5695 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((16727 integer) (raw))
sizeof: ((16727 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 16794 to 0
run: 5696 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((16728 string-address) (raw))
sizeof: ((16728 string-address) (raw))
run: 16729 => ((3 string-address))
setm: ((3 string-address)) <= 16729
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 16795 to 16729
run: 5697 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((16729 integer) (raw))
sizeof: ((16729 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16796 to 30
run: 5698 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16797 to nil
run: 5699 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 16764 to nil
run: 5700 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 5701 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 16727 => ((4 integer-address))
setm: ((4 integer-address)) <= 16727
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16765 to 16727
run: 5702 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((16728 string-address) (raw))
sizeof: ((16728 string-address) (raw))
run: 16729 => ((5 string-address))
setm: ((5 string-address)) <= 16729
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 16766 to 16729
run: 5703 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((16729 string) (raw))
m: ((16729 integer) (raw))
sizeof: ((16729 integer) (raw))
sizeof: ((_ byte))
run: 16730 => ((6 byte-address))
setm: ((6 byte-address)) <= 16730
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 16767 to 16730
run: 5704 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\5 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\5
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 16730 to #\5
run: 5705 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 16727 to 1
run: 5706 append 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
m: ((1 buffer-address) (same-as-arg 0))
sizeof: ((1 buffer-address) (same-as-arg 0))
reply: (((1 buffer-address) (same-as-arg 0))) (((6 buffer-address)))
reply: 16727 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 16727
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 16672 to 16727
run: 5707 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 5708 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 16675 to t
run: 5709 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5710 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5711 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((16727 integer) (raw))
sizeof: ((16727 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 16679 to 1
run: 5712 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((16728 string-address) (raw))
sizeof: ((16728 string-address) (raw))
run: 16729 => ((14 string-address))
setm: ((14 string-address)) <= 16729
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 16680 to 16729
run: 5713 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 16822 => ((15 string-address))
setm: ((15 string-address)) <= 16822
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 16681 to 16822
run: 5714 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 16682 to 0
run: 5715 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 16683 to 0
run: 5716 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 16675 to nil
run: 5717 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5718 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((16729 string) (raw))
m: ((16729 integer) (raw))
sizeof: ((16729 integer) (raw))
sizeof: ((_ byte))
m: ((16730 byte) (raw))
sizeof: ((16730 byte) (raw))
run: #\5 => ((18 byte))
setm: ((18 byte)) <= #\5
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 16684 to #\5
run: 5719 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((16822 string) (raw))
m: ((16822 integer) (raw))
sizeof: ((16822 integer) (raw))
sizeof: ((_ byte))
run: 16823 => ((19 byte-address))
setm: ((19 byte-address)) <= 16823
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 16685 to 16823
run: 5720 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\5 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\5
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 16823 to #\5
run: 5721 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 16682 to -1
run: 5722 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 16683 to 1
run: 5723 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 5724 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 16675 to t
run: 5725 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 5726 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 16822 => ((3 string-address))
setm: ((3 string-address)) <= 16822
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 16638 to 16822
run: 5727 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 5728 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16824 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5729 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 16822)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16826 to 13645
run: 5730 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 16822)
run: 16822 => ((2 string-address))
setm: ((2 string-address)) <= 16822
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 16827 to 16822
run: 5731 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((16822 integer) (raw))
sizeof: ((16822 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 16828 to 1
run: 5732 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16829 to 0
run: 5733 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16830 to nil
run: 5734 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5735 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16822 string) (raw))
m: ((16822 integer) (raw))
sizeof: ((16822 integer) (raw))
sizeof: ((_ byte))
m: ((16823 byte) (raw))
sizeof: ((16823 byte) (raw))
run: #\5 => ((6 character))
setm: ((6 character)) <= #\5
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16831 to #\5
run: 5736 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5737 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16855 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5738 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\5)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16857 to 13645
run: 5739 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\5)
run: #\5 => ((2 character))
setm: ((2 character)) <= #\5
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16858 to #\5
run: 5740 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5741 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16859 to 13647
run: 5742 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16860 to 13648
run: 5743 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16861 to 20
run: 5744 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16862 to 60
run: 5745 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 60 => ((7 integer))
setm: ((7 integer)) <= 60
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16863 to 60
run: 5746 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16864 to 13650
run: 5747 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13711 => ((9 byte-address))
setm: ((9 byte-address)) <= 13711
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16865 to 13711
run: 5748 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\5 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\5
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13711 to #\5
run: 5749 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 5750 print-character 13: (((reply)))
reply: nil nil
run: 5751 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16829 to 1
run: 5752 print-string 10: (((jump)) ((-6 offset)))
run: 5753 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16830 to t
run: 5754 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5755 print-board 8: (((6 string-address)) <- ((new))  | )
run: 16886 => ((6 string-address))
setm: ((6 string-address)) <= 16886
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 16886
run: 5756 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 5757 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16890 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5758 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 16886)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16892 to 13645
run: 5759 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 16886)
run: 16886 => ((2 string-address))
setm: ((2 string-address)) <= 16886
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 16893 to 16886
run: 5760 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((16886 integer) (raw))
sizeof: ((16886 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 16894 to 3
run: 5761 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16895 to 0
run: 5762 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16896 to nil
run: 5763 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5764 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16886 string) (raw))
m: ((16886 integer) (raw))
sizeof: ((16886 integer) (raw))
sizeof: ((_ byte))
m: ((16887 byte) (raw))
sizeof: ((16887 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16897 to #\space
run: 5765 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5766 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16921 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5767 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16923 to 13645
run: 5768 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16924 to #\space
run: 5769 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5770 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16925 to 13647
run: 5771 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16926 to 13648
run: 5772 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16927 to 20
run: 5773 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16928 to 60
run: 5774 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 61 => ((7 integer))
setm: ((7 integer)) <= 61
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16929 to 61
run: 5775 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16930 to 13650
run: 5776 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13712 => ((9 byte-address))
setm: ((9 byte-address)) <= 13712
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16931 to 13712
run: 5777 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13712 to #\space
run: 5778 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 5779 print-character 13: (((reply)))
reply: nil nil
run: 5780 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16895 to 1
run: 5781 print-string 10: (((jump)) ((-6 offset)))
run: 5782 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16896 to nil
run: 5783 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5784 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16886 string) (raw))
m: ((16886 integer) (raw))
sizeof: ((16886 integer) (raw))
sizeof: ((_ byte))
m: ((16888 byte) (raw))
sizeof: ((16888 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16897 to #\|
run: 5785 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5786 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16952 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5787 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16954 to 13645
run: 5788 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16955 to #\|
run: 5789 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5790 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16956 to 13647
run: 5791 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16957 to 13648
run: 5792 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16958 to 20
run: 5793 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16959 to 60
run: 5794 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 62 => ((7 integer))
setm: ((7 integer)) <= 62
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16960 to 62
run: 5795 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16961 to 13650
run: 5796 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13713 => ((9 byte-address))
setm: ((9 byte-address)) <= 13713
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16962 to 13713
run: 5797 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13713 to #\|
run: 5798 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 5799 print-character 13: (((reply)))
reply: nil nil
run: 5800 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16895 to 2
run: 5801 print-string 10: (((jump)) ((-6 offset)))
run: 5802 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16896 to nil
run: 5803 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5804 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((16886 string) (raw))
m: ((16886 integer) (raw))
sizeof: ((16886 integer) (raw))
sizeof: ((_ byte))
m: ((16889 byte) (raw))
sizeof: ((16889 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 16897 to #\space
run: 5805 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 5806 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 16983 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5807 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 16985 to 13645
run: 5808 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 16986 to #\space
run: 5809 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5810 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 16987 to 13647
run: 5811 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 16988 to 13648
run: 5812 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 16989 to 20
run: 5813 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 16990 to 60
run: 5814 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 63 => ((7 integer))
setm: ((7 integer)) <= 63
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 16991 to 63
run: 5815 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 16992 to 13650
run: 5816 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13714 => ((9 byte-address))
setm: ((9 byte-address)) <= 13714
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 16993 to 13714
run: 5817 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13714 to #\space
run: 5818 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 5819 print-character 13: (((reply)))
reply: nil nil
run: 5820 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 16895 to 3
run: 5821 print-string 10: (((jump)) ((-6 offset)))
run: 5822 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 16896 to t
run: 5823 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 5824 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 0
run: 5825 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5826 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5827 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9318 file-address) (raw))
sizeof: ((9318 file-address) (raw))
run: 9357 => ((8 file-address))
setm: ((8 file-address)) <= 9357
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9357
run: 5828 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
m: ((9362 square) (raw))
sizeof: ((9362 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5829 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5830 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17014 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5831 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17016 to 13645
run: 5832 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17017 to #\_
run: 5833 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5834 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17018 to 13647
run: 5835 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17019 to 13648
run: 5836 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17020 to 20
run: 5837 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17021 to 60
run: 5838 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 64 => ((7 integer))
setm: ((7 integer)) <= 64
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17022 to 64
run: 5839 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17023 to 13650
run: 5840 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13715 => ((9 byte-address))
setm: ((9 byte-address)) <= 13715
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17024 to 13715
run: 5841 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13715 to #\_
run: 5842 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 5843 print-character 13: (((reply)))
reply: nil nil
run: 5844 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5845 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17045 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5846 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17047 to 13645
run: 5847 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17048 to #\space
run: 5848 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5849 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17049 to 13647
run: 5850 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17050 to 13648
run: 5851 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17051 to 20
run: 5852 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17052 to 60
run: 5853 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 65 => ((7 integer))
setm: ((7 integer)) <= 65
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17053 to 65
run: 5854 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17054 to 13650
run: 5855 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13716 => ((9 byte-address))
setm: ((9 byte-address)) <= 13716
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17055 to 13716
run: 5856 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13716 to #\space
run: 5857 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 5858 print-character 13: (((reply)))
reply: nil nil
run: 5859 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 1
run: 5860 print-board 18: (((jump)) ((-8 offset)))
run: 5861 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5862 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5863 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9319 file-address) (raw))
sizeof: ((9319 file-address) (raw))
run: 9893 => ((8 file-address))
setm: ((8 file-address)) <= 9893
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9893
run: 5864 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
m: ((9898 square) (raw))
sizeof: ((9898 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5865 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5866 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17076 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5867 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17078 to 13645
run: 5868 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17079 to #\_
run: 5869 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5870 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17080 to 13647
run: 5871 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17081 to 13648
run: 5872 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17082 to 20
run: 5873 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17083 to 60
run: 5874 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 66 => ((7 integer))
setm: ((7 integer)) <= 66
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17084 to 66
run: 5875 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17085 to 13650
run: 5876 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13717 => ((9 byte-address))
setm: ((9 byte-address)) <= 13717
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17086 to 13717
run: 5877 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13717 to #\_
run: 5878 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 5879 print-character 13: (((reply)))
reply: nil nil
run: 5880 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5881 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17107 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5882 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17109 to 13645
run: 5883 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17110 to #\space
run: 5884 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5885 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17111 to 13647
run: 5886 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17112 to 13648
run: 5887 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17113 to 20
run: 5888 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17114 to 60
run: 5889 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 67 => ((7 integer))
setm: ((7 integer)) <= 67
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17115 to 67
run: 5890 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17116 to 13650
run: 5891 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13718 => ((9 byte-address))
setm: ((9 byte-address)) <= 13718
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17117 to 13718
run: 5892 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13718 to #\space
run: 5893 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 5894 print-character 13: (((reply)))
reply: nil nil
run: 5895 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 2
run: 5896 print-board 18: (((jump)) ((-8 offset)))
run: 5897 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5898 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5899 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9320 file-address) (raw))
sizeof: ((9320 file-address) (raw))
run: 10429 => ((8 file-address))
setm: ((8 file-address)) <= 10429
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10429
run: 5900 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
m: ((10434 square) (raw))
sizeof: ((10434 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5901 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5902 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17138 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5903 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17140 to 13645
run: 5904 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17141 to #\_
run: 5905 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5906 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17142 to 13647
run: 5907 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17143 to 13648
run: 5908 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17144 to 20
run: 5909 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17145 to 60
run: 5910 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 68 => ((7 integer))
setm: ((7 integer)) <= 68
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17146 to 68
run: 5911 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17147 to 13650
run: 5912 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13719 => ((9 byte-address))
setm: ((9 byte-address)) <= 13719
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17148 to 13719
run: 5913 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13719 to #\_
run: 5914 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 5915 print-character 13: (((reply)))
reply: nil nil
run: 5916 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5917 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17169 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5918 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17171 to 13645
run: 5919 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17172 to #\space
run: 5920 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5921 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17173 to 13647
run: 5922 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17174 to 13648
run: 5923 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17175 to 20
run: 5924 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17176 to 60
run: 5925 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 69 => ((7 integer))
setm: ((7 integer)) <= 69
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17177 to 69
run: 5926 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17178 to 13650
run: 5927 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13720 => ((9 byte-address))
setm: ((9 byte-address)) <= 13720
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17179 to 13720
run: 5928 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13720 to #\space
run: 5929 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 5930 print-character 13: (((reply)))
reply: nil nil
run: 5931 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 3
run: 5932 print-board 18: (((jump)) ((-8 offset)))
run: 5933 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5934 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5935 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9321 file-address) (raw))
sizeof: ((9321 file-address) (raw))
run: 10965 => ((8 file-address))
setm: ((8 file-address)) <= 10965
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10965
run: 5936 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
m: ((10970 square) (raw))
sizeof: ((10970 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5937 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5938 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17200 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5939 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17202 to 13645
run: 5940 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17203 to #\_
run: 5941 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5942 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17204 to 13647
run: 5943 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17205 to 13648
run: 5944 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17206 to 20
run: 5945 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17207 to 60
run: 5946 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 70 => ((7 integer))
setm: ((7 integer)) <= 70
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17208 to 70
run: 5947 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17209 to 13650
run: 5948 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13721 => ((9 byte-address))
setm: ((9 byte-address)) <= 13721
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17210 to 13721
run: 5949 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13721 to #\_
run: 5950 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 5951 print-character 13: (((reply)))
reply: nil nil
run: 5952 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5953 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17231 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5954 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17233 to 13645
run: 5955 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17234 to #\space
run: 5956 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5957 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17235 to 13647
run: 5958 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17236 to 13648
run: 5959 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17237 to 20
run: 5960 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17238 to 60
run: 5961 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 71 => ((7 integer))
setm: ((7 integer)) <= 71
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17239 to 71
run: 5962 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17240 to 13650
run: 5963 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13722 => ((9 byte-address))
setm: ((9 byte-address)) <= 13722
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17241 to 13722
run: 5964 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13722 to #\space
run: 5965 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 5966 print-character 13: (((reply)))
reply: nil nil
run: 5967 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 4
run: 5968 print-board 18: (((jump)) ((-8 offset)))
run: 5969 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 5970 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 5971 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9322 file-address) (raw))
sizeof: ((9322 file-address) (raw))
run: 11501 => ((8 file-address))
setm: ((8 file-address)) <= 11501
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 11501
run: 5972 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
m: ((11506 square) (raw))
sizeof: ((11506 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 5973 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 5974 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17262 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5975 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17264 to 13645
run: 5976 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17265 to #\_
run: 5977 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5978 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17266 to 13647
run: 5979 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17267 to 13648
run: 5980 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17268 to 20
run: 5981 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17269 to 60
run: 5982 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 72 => ((7 integer))
setm: ((7 integer)) <= 72
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17270 to 72
run: 5983 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17271 to 13650
run: 5984 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13723 => ((9 byte-address))
setm: ((9 byte-address)) <= 13723
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17272 to 13723
run: 5985 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13723 to #\_
run: 5986 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 5987 print-character 13: (((reply)))
reply: nil nil
run: 5988 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5989 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17293 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5990 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17295 to 13645
run: 5991 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17296 to #\space
run: 5992 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 5993 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17297 to 13647
run: 5994 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17298 to 13648
run: 5995 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17299 to 20
run: 5996 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17300 to 60
run: 5997 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 73 => ((7 integer))
setm: ((7 integer)) <= 73
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17301 to 73
run: 5998 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17302 to 13650
run: 5999 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13724 => ((9 byte-address))
setm: ((9 byte-address)) <= 13724
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17303 to 13724
run: 6000 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13724 to #\space
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 6001 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 6002 print-character 13: (((reply)))
reply: nil nil
run: 6003 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 5
run: 6004 print-board 18: (((jump)) ((-8 offset)))
run: 6005 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6006 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6007 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9323 file-address) (raw))
sizeof: ((9323 file-address) (raw))
run: 12037 => ((8 file-address))
setm: ((8 file-address)) <= 12037
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12037
run: 6008 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
m: ((12042 square) (raw))
sizeof: ((12042 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6009 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6010 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17324 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6011 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17326 to 13645
run: 6012 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17327 to #\_
run: 6013 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6014 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17328 to 13647
run: 6015 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17329 to 13648
run: 6016 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17330 to 20
run: 6017 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17331 to 60
run: 6018 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 74 => ((7 integer))
setm: ((7 integer)) <= 74
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17332 to 74
run: 6019 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17333 to 13650
run: 6020 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13725 => ((9 byte-address))
setm: ((9 byte-address)) <= 13725
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17334 to 13725
run: 6021 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13725 to #\_
run: 6022 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 6023 print-character 13: (((reply)))
reply: nil nil
run: 6024 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6025 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17355 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6026 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17357 to 13645
run: 6027 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17358 to #\space
run: 6028 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6029 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17359 to 13647
run: 6030 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17360 to 13648
run: 6031 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17361 to 20
run: 6032 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17362 to 60
run: 6033 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 75 => ((7 integer))
setm: ((7 integer)) <= 75
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17363 to 75
run: 6034 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17364 to 13650
run: 6035 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13726 => ((9 byte-address))
setm: ((9 byte-address)) <= 13726
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17365 to 13726
run: 6036 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13726 to #\space
run: 6037 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 6038 print-character 13: (((reply)))
reply: nil nil
run: 6039 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 6
run: 6040 print-board 18: (((jump)) ((-8 offset)))
run: 6041 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6042 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6043 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9324 file-address) (raw))
sizeof: ((9324 file-address) (raw))
run: 12573 => ((8 file-address))
setm: ((8 file-address)) <= 12573
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12573
run: 6044 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
m: ((12578 square) (raw))
sizeof: ((12578 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6045 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6046 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17386 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6047 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17388 to 13645
run: 6048 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17389 to #\_
run: 6049 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6050 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17390 to 13647
run: 6051 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17391 to 13648
run: 6052 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17392 to 20
run: 6053 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17393 to 60
run: 6054 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 76 => ((7 integer))
setm: ((7 integer)) <= 76
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17394 to 76
run: 6055 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17395 to 13650
run: 6056 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13727 => ((9 byte-address))
setm: ((9 byte-address)) <= 13727
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17396 to 13727
run: 6057 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13727 to #\_
run: 6058 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 6059 print-character 13: (((reply)))
reply: nil nil
run: 6060 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6061 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17417 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6062 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17419 to 13645
run: 6063 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17420 to #\space
run: 6064 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6065 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17421 to 13647
run: 6066 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17422 to 13648
run: 6067 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17423 to 20
run: 6068 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17424 to 60
run: 6069 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 77 => ((7 integer))
setm: ((7 integer)) <= 77
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17425 to 77
run: 6070 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17426 to 13650
run: 6071 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13728 => ((9 byte-address))
setm: ((9 byte-address)) <= 13728
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17427 to 13728
run: 6072 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13728 to #\space
run: 6073 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 6074 print-character 13: (((reply)))
reply: nil nil
run: 6075 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 7
run: 6076 print-board 18: (((jump)) ((-8 offset)))
run: 6077 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6078 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6079 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9325 file-address) (raw))
sizeof: ((9325 file-address) (raw))
run: 13109 => ((8 file-address))
setm: ((8 file-address)) <= 13109
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 13109
run: 6080 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
m: ((13114 square) (raw))
sizeof: ((13114 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6081 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6082 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17448 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6083 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17450 to 13645
run: 6084 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17451 to #\_
run: 6085 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6086 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17452 to 13647
run: 6087 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17453 to 13648
run: 6088 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17454 to 20
run: 6089 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17455 to 60
run: 6090 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 78 => ((7 integer))
setm: ((7 integer)) <= 78
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17456 to 78
run: 6091 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17457 to 13650
run: 6092 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13729 => ((9 byte-address))
setm: ((9 byte-address)) <= 13729
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17458 to 13729
run: 6093 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13729 to #\_
run: 6094 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 6095 print-character 13: (((reply)))
reply: nil nil
run: 6096 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6097 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17479 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6098 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17481 to 13645
run: 6099 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17482 to #\space
run: 6100 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6101 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17483 to 13647
run: 6102 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17484 to 13648
run: 6103 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17485 to 20
run: 6104 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 60 => ((6 integer))
setm: ((6 integer)) <= 60
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17486 to 60
run: 6105 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 79 => ((7 integer))
setm: ((7 integer)) <= 79
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17487 to 79
run: 6106 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17488 to 13650
run: 6107 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13730 => ((9 byte-address))
setm: ((9 byte-address)) <= 13730
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17489 to 13730
run: 6108 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13730 to #\space
run: 6109 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 20
run: 6110 print-character 13: (((reply)))
reply: nil nil
run: 6111 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 8
run: 6112 print-board 18: (((jump)) ((-8 offset)))
run: 6113 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to t
run: 6114 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6115 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13886 to 3
run: 6116 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6117 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17510 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6118 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17512 to 13645
run: 6119 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6120 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 17513 to 13647
run: 6121 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 4 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 4
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 4
run: 6122 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17514 to 13648
run: 6123 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 6124 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 6125 print-board 21: (((jump)) ((-18 offset)))
run: 6126 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6127 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6128 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13888 to 4
run: 6129 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 6130 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17541 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6131 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 4)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17543 to 13645
run: 6132 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 4)
run: 4 => ((2 integer))
setm: ((2 integer)) <= 4
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 17544 to 4
run: 6133 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 6134 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17572 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6135 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4)
run: 4 => ((1 integer))
setm: ((1 integer)) <= 4
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 17574 to 4
run: 6136 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 17575 to nil
run: 6137 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 6138 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 17577 to nil
run: 6139 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17578 to nil
run: 6140 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6141 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 6142 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17603 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6143 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 17634 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 17634
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 17605 to 17634
run: 6144 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 17634 => ((2 integer-address))
setm: ((2 integer-address)) <= 17634
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 17606 to 17634
run: 6145 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 17634 to 0
run: 6146 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 17635 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 17635
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 17607 to 17635
run: 6147 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17608 to 30
run: 6148 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 17636 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 17636
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 17635 to 17636
run: 6149 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 17634 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 17634
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 17579 to 17634
run: 6150 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 17580 to #\0
run: 6151 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 17581 to 48
run: 6152 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 17582 to nil
run: 6153 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6154 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 17574 to 0
run: 4 => ((10 integer))
setm: ((10 integer)) <= 4
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 17583 to 4
run: 6155 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 52 => ((11 integer))
setm: ((11 integer)) <= 52
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 17584 to 52
run: 6156 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\4 => ((12 character))
setm: ((12 character)) <= #\4
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 17585 to #\4
run: 6157 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 6158 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17667 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6159 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (17634 #\4)
run: 17634 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 17634
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 17669 to 17634
run: 6160 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (17634 #\4)
run: #\4 => ((2 character))
setm: ((2 character)) <= #\4
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17670 to #\4
run: 6161 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 6162 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17698 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6163 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (17634)
run: 17634 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 17634
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 17700 to 17634
run: 6164 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((17634 integer) (raw))
sizeof: ((17634 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 17701 to 0
run: 6165 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((17635 string-address) (raw))
sizeof: ((17635 string-address) (raw))
run: 17636 => ((3 string-address))
setm: ((3 string-address)) <= 17636
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 17702 to 17636
run: 6166 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((17636 integer) (raw))
sizeof: ((17636 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17703 to 30
run: 6167 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17704 to nil
run: 6168 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 17671 to nil
run: 6169 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 6170 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 17634 => ((4 integer-address))
setm: ((4 integer-address)) <= 17634
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17672 to 17634
run: 6171 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((17635 string-address) (raw))
sizeof: ((17635 string-address) (raw))
run: 17636 => ((5 string-address))
setm: ((5 string-address)) <= 17636
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 17673 to 17636
run: 6172 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((17636 string) (raw))
m: ((17636 integer) (raw))
sizeof: ((17636 integer) (raw))
sizeof: ((_ byte))
run: 17637 => ((6 byte-address))
setm: ((6 byte-address)) <= 17637
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 17674 to 17637
run: 6173 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\4 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\4
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 17637 to #\4
run: 6174 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 17634 to 1
run: 6175 append 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
m: ((1 buffer-address) (same-as-arg 0))
sizeof: ((1 buffer-address) (same-as-arg 0))
reply: (((1 buffer-address) (same-as-arg 0))) (((6 buffer-address)))
reply: 17634 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 17634
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 17579 to 17634
run: 6176 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 6177 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 17582 to t
run: 6178 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6179 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6180 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((17634 integer) (raw))
sizeof: ((17634 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 17586 to 1
run: 6181 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((17635 string-address) (raw))
sizeof: ((17635 string-address) (raw))
run: 17636 => ((14 string-address))
setm: ((14 string-address)) <= 17636
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 17587 to 17636
run: 6182 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 17729 => ((15 string-address))
setm: ((15 string-address)) <= 17729
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 17588 to 17729
run: 6183 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 17589 to 0
run: 6184 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 17590 to 0
run: 6185 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 17582 to nil
run: 6186 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6187 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((17636 string) (raw))
m: ((17636 integer) (raw))
sizeof: ((17636 integer) (raw))
sizeof: ((_ byte))
m: ((17637 byte) (raw))
sizeof: ((17637 byte) (raw))
run: #\4 => ((18 byte))
setm: ((18 byte)) <= #\4
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 17591 to #\4
run: 6188 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((17729 string) (raw))
m: ((17729 integer) (raw))
sizeof: ((17729 integer) (raw))
sizeof: ((_ byte))
run: 17730 => ((19 byte-address))
setm: ((19 byte-address)) <= 17730
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 17592 to 17730
run: 6189 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\4 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\4
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 17730 to #\4
run: 6190 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 17589 to -1
run: 6191 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 17590 to 1
run: 6192 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 6193 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 17582 to t
run: 6194 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6195 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 17729 => ((3 string-address))
setm: ((3 string-address)) <= 17729
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 17545 to 17729
run: 6196 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 6197 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17731 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6198 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 17729)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17733 to 13645
run: 6199 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 17729)
run: 17729 => ((2 string-address))
setm: ((2 string-address)) <= 17729
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 17734 to 17729
run: 6200 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((17729 integer) (raw))
sizeof: ((17729 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 17735 to 1
run: 6201 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17736 to 0
run: 6202 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17737 to nil
run: 6203 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6204 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((17729 string) (raw))
m: ((17729 integer) (raw))
sizeof: ((17729 integer) (raw))
sizeof: ((_ byte))
m: ((17730 byte) (raw))
sizeof: ((17730 byte) (raw))
run: #\4 => ((6 character))
setm: ((6 character)) <= #\4
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 17738 to #\4
run: 6205 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6206 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17762 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6207 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\4)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17764 to 13645
run: 6208 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\4)
run: #\4 => ((2 character))
setm: ((2 character)) <= #\4
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17765 to #\4
run: 6209 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6210 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17766 to 13647
run: 6211 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17767 to 13648
run: 6212 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17768 to 20
run: 6213 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17769 to 80
run: 6214 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 80 => ((7 integer))
setm: ((7 integer)) <= 80
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17770 to 80
run: 6215 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17771 to 13650
run: 6216 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13731 => ((9 byte-address))
setm: ((9 byte-address)) <= 13731
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17772 to 13731
run: 6217 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\4 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\4
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13731 to #\4
run: 6218 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 6219 print-character 13: (((reply)))
reply: nil nil
run: 6220 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17736 to 1
run: 6221 print-string 10: (((jump)) ((-6 offset)))
run: 6222 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17737 to t
run: 6223 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6224 print-board 8: (((6 string-address)) <- ((new))  | )
run: 17793 => ((6 string-address))
setm: ((6 string-address)) <= 17793
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 17793
run: 6225 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 6226 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17797 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6227 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 17793)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17799 to 13645
run: 6228 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 17793)
run: 17793 => ((2 string-address))
setm: ((2 string-address)) <= 17793
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 17800 to 17793
run: 6229 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((17793 integer) (raw))
sizeof: ((17793 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 17801 to 3
run: 6230 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17802 to 0
run: 6231 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17803 to nil
run: 6232 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6233 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((17793 string) (raw))
m: ((17793 integer) (raw))
sizeof: ((17793 integer) (raw))
sizeof: ((_ byte))
m: ((17794 byte) (raw))
sizeof: ((17794 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 17804 to #\space
run: 6234 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6235 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17828 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6236 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17830 to 13645
run: 6237 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17831 to #\space
run: 6238 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6239 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17832 to 13647
run: 6240 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17833 to 13648
run: 6241 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17834 to 20
run: 6242 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17835 to 80
run: 6243 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 81 => ((7 integer))
setm: ((7 integer)) <= 81
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17836 to 81
run: 6244 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17837 to 13650
run: 6245 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13732 => ((9 byte-address))
setm: ((9 byte-address)) <= 13732
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17838 to 13732
run: 6246 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13732 to #\space
run: 6247 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 6248 print-character 13: (((reply)))
reply: nil nil
run: 6249 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17802 to 1
run: 6250 print-string 10: (((jump)) ((-6 offset)))
run: 6251 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17803 to nil
run: 6252 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6253 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((17793 string) (raw))
m: ((17793 integer) (raw))
sizeof: ((17793 integer) (raw))
sizeof: ((_ byte))
m: ((17795 byte) (raw))
sizeof: ((17795 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 17804 to #\|
run: 6254 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6255 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17859 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6256 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17861 to 13645
run: 6257 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17862 to #\|
run: 6258 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6259 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17863 to 13647
run: 6260 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17864 to 13648
run: 6261 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17865 to 20
run: 6262 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17866 to 80
run: 6263 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 82 => ((7 integer))
setm: ((7 integer)) <= 82
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17867 to 82
run: 6264 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17868 to 13650
run: 6265 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13733 => ((9 byte-address))
setm: ((9 byte-address)) <= 13733
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17869 to 13733
run: 6266 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13733 to #\|
run: 6267 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 6268 print-character 13: (((reply)))
reply: nil nil
run: 6269 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17802 to 2
run: 6270 print-string 10: (((jump)) ((-6 offset)))
run: 6271 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17803 to nil
run: 6272 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6273 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((17793 string) (raw))
m: ((17793 integer) (raw))
sizeof: ((17793 integer) (raw))
sizeof: ((_ byte))
m: ((17796 byte) (raw))
sizeof: ((17796 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 17804 to #\space
run: 6274 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6275 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17890 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6276 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17892 to 13645
run: 6277 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17893 to #\space
run: 6278 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6279 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17894 to 13647
run: 6280 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17895 to 13648
run: 6281 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17896 to 20
run: 6282 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17897 to 80
run: 6283 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 83 => ((7 integer))
setm: ((7 integer)) <= 83
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17898 to 83
run: 6284 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17899 to 13650
run: 6285 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13734 => ((9 byte-address))
setm: ((9 byte-address)) <= 13734
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17900 to 13734
run: 6286 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13734 to #\space
run: 6287 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 6288 print-character 13: (((reply)))
reply: nil nil
run: 6289 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 17802 to 3
run: 6290 print-string 10: (((jump)) ((-6 offset)))
run: 6291 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 17803 to t
run: 6292 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6293 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 0
run: 6294 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6295 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6296 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9318 file-address) (raw))
sizeof: ((9318 file-address) (raw))
run: 9357 => ((8 file-address))
setm: ((8 file-address)) <= 9357
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9357
run: 6297 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
m: ((9361 square) (raw))
sizeof: ((9361 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6298 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6299 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17921 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6300 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17923 to 13645
run: 6301 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17924 to #\_
run: 6302 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6303 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17925 to 13647
run: 6304 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17926 to 13648
run: 6305 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17927 to 20
run: 6306 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17928 to 80
run: 6307 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 84 => ((7 integer))
setm: ((7 integer)) <= 84
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17929 to 84
run: 6308 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17930 to 13650
run: 6309 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13735 => ((9 byte-address))
setm: ((9 byte-address)) <= 13735
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17931 to 13735
run: 6310 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13735 to #\_
run: 6311 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 6312 print-character 13: (((reply)))
reply: nil nil
run: 6313 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6314 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17952 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6315 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17954 to 13645
run: 6316 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17955 to #\space
run: 6317 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6318 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17956 to 13647
run: 6319 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17957 to 13648
run: 6320 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17958 to 20
run: 6321 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17959 to 80
run: 6322 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 85 => ((7 integer))
setm: ((7 integer)) <= 85
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17960 to 85
run: 6323 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17961 to 13650
run: 6324 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13736 => ((9 byte-address))
setm: ((9 byte-address)) <= 13736
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17962 to 13736
run: 6325 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13736 to #\space
run: 6326 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 6327 print-character 13: (((reply)))
reply: nil nil
run: 6328 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 1
run: 6329 print-board 18: (((jump)) ((-8 offset)))
run: 6330 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6331 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6332 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9319 file-address) (raw))
sizeof: ((9319 file-address) (raw))
run: 9893 => ((8 file-address))
setm: ((8 file-address)) <= 9893
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9893
run: 6333 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
m: ((9897 square) (raw))
sizeof: ((9897 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6334 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6335 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 17983 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6336 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 17985 to 13645
run: 6337 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 17986 to #\_
run: 6338 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6339 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 17987 to 13647
run: 6340 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 17988 to 13648
run: 6341 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 17989 to 20
run: 6342 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 17990 to 80
run: 6343 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 86 => ((7 integer))
setm: ((7 integer)) <= 86
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 17991 to 86
run: 6344 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 17992 to 13650
run: 6345 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13737 => ((9 byte-address))
setm: ((9 byte-address)) <= 13737
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 17993 to 13737
run: 6346 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13737 to #\_
run: 6347 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 6348 print-character 13: (((reply)))
reply: nil nil
run: 6349 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6350 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18014 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6351 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18016 to 13645
run: 6352 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18017 to #\space
run: 6353 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6354 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18018 to 13647
run: 6355 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18019 to 13648
run: 6356 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18020 to 20
run: 6357 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18021 to 80
run: 6358 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 87 => ((7 integer))
setm: ((7 integer)) <= 87
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18022 to 87
run: 6359 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18023 to 13650
run: 6360 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13738 => ((9 byte-address))
setm: ((9 byte-address)) <= 13738
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18024 to 13738
run: 6361 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13738 to #\space
run: 6362 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 6363 print-character 13: (((reply)))
reply: nil nil
run: 6364 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 2
run: 6365 print-board 18: (((jump)) ((-8 offset)))
run: 6366 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6367 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6368 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9320 file-address) (raw))
sizeof: ((9320 file-address) (raw))
run: 10429 => ((8 file-address))
setm: ((8 file-address)) <= 10429
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10429
run: 6369 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
m: ((10433 square) (raw))
sizeof: ((10433 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6370 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6371 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18045 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6372 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18047 to 13645
run: 6373 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18048 to #\_
run: 6374 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6375 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18049 to 13647
run: 6376 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18050 to 13648
run: 6377 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18051 to 20
run: 6378 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18052 to 80
run: 6379 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 88 => ((7 integer))
setm: ((7 integer)) <= 88
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18053 to 88
run: 6380 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18054 to 13650
run: 6381 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13739 => ((9 byte-address))
setm: ((9 byte-address)) <= 13739
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18055 to 13739
run: 6382 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13739 to #\_
run: 6383 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 6384 print-character 13: (((reply)))
reply: nil nil
run: 6385 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6386 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18076 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6387 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18078 to 13645
run: 6388 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18079 to #\space
run: 6389 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6390 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18080 to 13647
run: 6391 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18081 to 13648
run: 6392 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18082 to 20
run: 6393 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18083 to 80
run: 6394 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 89 => ((7 integer))
setm: ((7 integer)) <= 89
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18084 to 89
run: 6395 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18085 to 13650
run: 6396 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13740 => ((9 byte-address))
setm: ((9 byte-address)) <= 13740
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18086 to 13740
run: 6397 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13740 to #\space
run: 6398 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 6399 print-character 13: (((reply)))
reply: nil nil
run: 6400 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 3
run: 6401 print-board 18: (((jump)) ((-8 offset)))
run: 6402 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6403 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6404 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9321 file-address) (raw))
sizeof: ((9321 file-address) (raw))
run: 10965 => ((8 file-address))
setm: ((8 file-address)) <= 10965
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10965
run: 6405 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
m: ((10969 square) (raw))
sizeof: ((10969 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6406 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6407 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18107 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6408 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18109 to 13645
run: 6409 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18110 to #\_
run: 6410 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6411 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18111 to 13647
run: 6412 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18112 to 13648
run: 6413 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18113 to 20
run: 6414 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18114 to 80
run: 6415 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 90 => ((7 integer))
setm: ((7 integer)) <= 90
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18115 to 90
run: 6416 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18116 to 13650
run: 6417 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13741 => ((9 byte-address))
setm: ((9 byte-address)) <= 13741
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18117 to 13741
run: 6418 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13741 to #\_
run: 6419 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 6420 print-character 13: (((reply)))
reply: nil nil
run: 6421 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6422 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18138 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6423 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18140 to 13645
run: 6424 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18141 to #\space
run: 6425 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6426 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18142 to 13647
run: 6427 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18143 to 13648
run: 6428 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18144 to 20
run: 6429 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18145 to 80
run: 6430 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 91 => ((7 integer))
setm: ((7 integer)) <= 91
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18146 to 91
run: 6431 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18147 to 13650
run: 6432 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13742 => ((9 byte-address))
setm: ((9 byte-address)) <= 13742
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18148 to 13742
run: 6433 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13742 to #\space
run: 6434 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 6435 print-character 13: (((reply)))
reply: nil nil
run: 6436 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 4
run: 6437 print-board 18: (((jump)) ((-8 offset)))
run: 6438 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6439 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6440 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9322 file-address) (raw))
sizeof: ((9322 file-address) (raw))
run: 11501 => ((8 file-address))
setm: ((8 file-address)) <= 11501
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 11501
run: 6441 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
m: ((11505 square) (raw))
sizeof: ((11505 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6442 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6443 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18169 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6444 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18171 to 13645
run: 6445 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18172 to #\_
run: 6446 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6447 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18173 to 13647
run: 6448 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18174 to 13648
run: 6449 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18175 to 20
run: 6450 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18176 to 80
run: 6451 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 92 => ((7 integer))
setm: ((7 integer)) <= 92
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18177 to 92
run: 6452 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18178 to 13650
run: 6453 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13743 => ((9 byte-address))
setm: ((9 byte-address)) <= 13743
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18179 to 13743
run: 6454 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13743 to #\_
run: 6455 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 6456 print-character 13: (((reply)))
reply: nil nil
run: 6457 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6458 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18200 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6459 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18202 to 13645
run: 6460 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18203 to #\space
run: 6461 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6462 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18204 to 13647
run: 6463 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18205 to 13648
run: 6464 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18206 to 20
run: 6465 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18207 to 80
run: 6466 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 93 => ((7 integer))
setm: ((7 integer)) <= 93
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18208 to 93
run: 6467 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18209 to 13650
run: 6468 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13744 => ((9 byte-address))
setm: ((9 byte-address)) <= 13744
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18210 to 13744
run: 6469 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13744 to #\space
run: 6470 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 6471 print-character 13: (((reply)))
reply: nil nil
run: 6472 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 5
run: 6473 print-board 18: (((jump)) ((-8 offset)))
run: 6474 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6475 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6476 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9323 file-address) (raw))
sizeof: ((9323 file-address) (raw))
run: 12037 => ((8 file-address))
setm: ((8 file-address)) <= 12037
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12037
run: 6477 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
m: ((12041 square) (raw))
sizeof: ((12041 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6478 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6479 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18231 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6480 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18233 to 13645
run: 6481 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18234 to #\_
run: 6482 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6483 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18235 to 13647
run: 6484 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18236 to 13648
run: 6485 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18237 to 20
run: 6486 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18238 to 80
run: 6487 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 94 => ((7 integer))
setm: ((7 integer)) <= 94
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18239 to 94
run: 6488 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18240 to 13650
run: 6489 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13745 => ((9 byte-address))
setm: ((9 byte-address)) <= 13745
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18241 to 13745
run: 6490 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13745 to #\_
run: 6491 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 6492 print-character 13: (((reply)))
reply: nil nil
run: 6493 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6494 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18262 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6495 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18264 to 13645
run: 6496 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18265 to #\space
run: 6497 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6498 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18266 to 13647
run: 6499 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18267 to 13648
run: 6500 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18268 to 20
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 6501 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18269 to 80
run: 6502 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 95 => ((7 integer))
setm: ((7 integer)) <= 95
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18270 to 95
run: 6503 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18271 to 13650
run: 6504 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13746 => ((9 byte-address))
setm: ((9 byte-address)) <= 13746
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18272 to 13746
run: 6505 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13746 to #\space
run: 6506 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 6507 print-character 13: (((reply)))
reply: nil nil
run: 6508 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 6
run: 6509 print-board 18: (((jump)) ((-8 offset)))
run: 6510 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6511 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6512 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9324 file-address) (raw))
sizeof: ((9324 file-address) (raw))
run: 12573 => ((8 file-address))
setm: ((8 file-address)) <= 12573
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12573
run: 6513 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
m: ((12577 square) (raw))
sizeof: ((12577 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6514 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6515 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18293 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6516 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18295 to 13645
run: 6517 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18296 to #\_
run: 6518 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6519 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18297 to 13647
run: 6520 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18298 to 13648
run: 6521 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18299 to 20
run: 6522 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18300 to 80
run: 6523 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 96 => ((7 integer))
setm: ((7 integer)) <= 96
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18301 to 96
run: 6524 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18302 to 13650
run: 6525 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13747 => ((9 byte-address))
setm: ((9 byte-address)) <= 13747
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18303 to 13747
run: 6526 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13747 to #\_
run: 6527 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 6528 print-character 13: (((reply)))
reply: nil nil
run: 6529 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6530 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18324 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6531 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18326 to 13645
run: 6532 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18327 to #\space
run: 6533 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6534 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18328 to 13647
run: 6535 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18329 to 13648
run: 6536 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18330 to 20
run: 6537 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18331 to 80
run: 6538 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 97 => ((7 integer))
setm: ((7 integer)) <= 97
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18332 to 97
run: 6539 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18333 to 13650
run: 6540 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13748 => ((9 byte-address))
setm: ((9 byte-address)) <= 13748
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18334 to 13748
run: 6541 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13748 to #\space
run: 6542 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 6543 print-character 13: (((reply)))
reply: nil nil
run: 6544 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 7
run: 6545 print-board 18: (((jump)) ((-8 offset)))
run: 6546 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6547 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6548 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9325 file-address) (raw))
sizeof: ((9325 file-address) (raw))
run: 13109 => ((8 file-address))
setm: ((8 file-address)) <= 13109
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 13109
run: 6549 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
m: ((13113 square) (raw))
sizeof: ((13113 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6550 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6551 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18355 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6552 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18357 to 13645
run: 6553 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18358 to #\_
run: 6554 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6555 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18359 to 13647
run: 6556 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18360 to 13648
run: 6557 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18361 to 20
run: 6558 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18362 to 80
run: 6559 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 98 => ((7 integer))
setm: ((7 integer)) <= 98
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18363 to 98
run: 6560 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18364 to 13650
run: 6561 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13749 => ((9 byte-address))
setm: ((9 byte-address)) <= 13749
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18365 to 13749
run: 6562 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13749 to #\_
run: 6563 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 6564 print-character 13: (((reply)))
reply: nil nil
run: 6565 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6566 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18386 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6567 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18388 to 13645
run: 6568 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18389 to #\space
run: 6569 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6570 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18390 to 13647
run: 6571 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18391 to 13648
run: 6572 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18392 to 20
run: 6573 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 80 => ((6 integer))
setm: ((6 integer)) <= 80
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18393 to 80
run: 6574 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 99 => ((7 integer))
setm: ((7 integer)) <= 99
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18394 to 99
run: 6575 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18395 to 13650
run: 6576 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13750 => ((9 byte-address))
setm: ((9 byte-address)) <= 13750
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18396 to 13750
run: 6577 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13750 to #\space
run: 6578 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 20
run: 6579 print-character 13: (((reply)))
reply: nil nil
run: 6580 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 8
run: 6581 print-board 18: (((jump)) ((-8 offset)))
run: 6582 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to t
run: 6583 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6584 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((3 integer))
setm: ((3 integer)) <= 2
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13886 to 2
run: 6585 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6586 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18417 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6587 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18419 to 13645
run: 6588 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6589 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 18420 to 13647
run: 6590 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 5 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 5
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 5
run: 6591 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18421 to 13648
run: 6592 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 6593 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 6594 print-board 21: (((jump)) ((-18 offset)))
run: 6595 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6596 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6597 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 3 => ((5 integer))
setm: ((5 integer)) <= 3
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13888 to 3
run: 6598 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 6599 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18448 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6600 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 3)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18450 to 13645
run: 6601 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 3)
run: 3 => ((2 integer))
setm: ((2 integer)) <= 3
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 18451 to 3
run: 6602 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 6603 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18479 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6604 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (3)
run: 3 => ((1 integer))
setm: ((1 integer)) <= 3
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 18481 to 3
run: 6605 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 18482 to nil
run: 6606 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 6607 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 18484 to nil
run: 6608 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18485 to nil
run: 6609 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6610 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 6611 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18510 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6612 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 18541 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 18541
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 18512 to 18541
run: 6613 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 18541 => ((2 integer-address))
setm: ((2 integer-address)) <= 18541
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 18513 to 18541
run: 6614 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 18541 to 0
run: 6615 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 18542 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 18542
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 18514 to 18542
run: 6616 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18515 to 30
run: 6617 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 18543 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 18543
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 18542 to 18543
run: 6618 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 18541 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 18541
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 18486 to 18541
run: 6619 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 18487 to #\0
run: 6620 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 18488 to 48
run: 6621 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 18489 to nil
run: 6622 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6623 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 18481 to 0
run: 3 => ((10 integer))
setm: ((10 integer)) <= 3
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 18490 to 3
run: 6624 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 51 => ((11 integer))
setm: ((11 integer)) <= 51
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 18491 to 51
run: 6625 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\3 => ((12 character))
setm: ((12 character)) <= #\3
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 18492 to #\3
run: 6626 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 6627 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18574 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6628 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (18541 #\3)
run: 18541 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 18541
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 18576 to 18541
run: 6629 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (18541 #\3)
run: #\3 => ((2 character))
setm: ((2 character)) <= #\3
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18577 to #\3
run: 6630 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 6631 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18605 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6632 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (18541)
run: 18541 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 18541
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 18607 to 18541
run: 6633 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((18541 integer) (raw))
sizeof: ((18541 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 18608 to 0
run: 6634 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((18542 string-address) (raw))
sizeof: ((18542 string-address) (raw))
run: 18543 => ((3 string-address))
setm: ((3 string-address)) <= 18543
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 18609 to 18543
run: 6635 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((18543 integer) (raw))
sizeof: ((18543 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18610 to 30
run: 6636 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18611 to nil
run: 6637 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 18578 to nil
run: 6638 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 6639 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 18541 => ((4 integer-address))
setm: ((4 integer-address)) <= 18541
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18579 to 18541
run: 6640 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((18542 string-address) (raw))
sizeof: ((18542 string-address) (raw))
run: 18543 => ((5 string-address))
setm: ((5 string-address)) <= 18543
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 18580 to 18543
run: 6641 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((18543 string) (raw))
m: ((18543 integer) (raw))
sizeof: ((18543 integer) (raw))
sizeof: ((_ byte))
run: 18544 => ((6 byte-address))
setm: ((6 byte-address)) <= 18544
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 18581 to 18544
run: 6642 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\3 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\3
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 18544 to #\3
run: 6643 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 18541 to 1
run: 6644 append 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
m: ((1 buffer-address) (same-as-arg 0))
sizeof: ((1 buffer-address) (same-as-arg 0))
reply: (((1 buffer-address) (same-as-arg 0))) (((6 buffer-address)))
reply: 18541 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 18541
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 18486 to 18541
run: 6645 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 6646 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 18489 to t
run: 6647 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6648 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6649 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((18541 integer) (raw))
sizeof: ((18541 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 18493 to 1
run: 6650 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((18542 string-address) (raw))
sizeof: ((18542 string-address) (raw))
run: 18543 => ((14 string-address))
setm: ((14 string-address)) <= 18543
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 18494 to 18543
run: 6651 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 18636 => ((15 string-address))
setm: ((15 string-address)) <= 18636
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 18495 to 18636
run: 6652 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 18496 to 0
run: 6653 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 18497 to 0
run: 6654 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 18489 to nil
run: 6655 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6656 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((18543 string) (raw))
m: ((18543 integer) (raw))
sizeof: ((18543 integer) (raw))
sizeof: ((_ byte))
m: ((18544 byte) (raw))
sizeof: ((18544 byte) (raw))
run: #\3 => ((18 byte))
setm: ((18 byte)) <= #\3
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 18498 to #\3
run: 6657 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((18636 string) (raw))
m: ((18636 integer) (raw))
sizeof: ((18636 integer) (raw))
sizeof: ((_ byte))
run: 18637 => ((19 byte-address))
setm: ((19 byte-address)) <= 18637
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 18499 to 18637
run: 6658 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\3 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\3
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 18637 to #\3
run: 6659 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 18496 to -1
run: 6660 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 18497 to 1
run: 6661 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 6662 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 18489 to t
run: 6663 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 6664 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 18636 => ((3 string-address))
setm: ((3 string-address)) <= 18636
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 18452 to 18636
run: 6665 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 6666 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18638 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6667 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 18636)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18640 to 13645
run: 6668 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 18636)
run: 18636 => ((2 string-address))
setm: ((2 string-address)) <= 18636
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 18641 to 18636
run: 6669 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((18636 integer) (raw))
sizeof: ((18636 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 18642 to 1
run: 6670 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18643 to 0
run: 6671 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18644 to nil
run: 6672 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6673 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((18636 string) (raw))
m: ((18636 integer) (raw))
sizeof: ((18636 integer) (raw))
sizeof: ((_ byte))
m: ((18637 byte) (raw))
sizeof: ((18637 byte) (raw))
run: #\3 => ((6 character))
setm: ((6 character)) <= #\3
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 18645 to #\3
run: 6674 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6675 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18669 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6676 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\3)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18671 to 13645
run: 6677 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\3)
run: #\3 => ((2 character))
setm: ((2 character)) <= #\3
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18672 to #\3
run: 6678 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6679 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18673 to 13647
run: 6680 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18674 to 13648
run: 6681 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18675 to 20
run: 6682 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18676 to 100
run: 6683 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 100 => ((7 integer))
setm: ((7 integer)) <= 100
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18677 to 100
run: 6684 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18678 to 13650
run: 6685 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13751 => ((9 byte-address))
setm: ((9 byte-address)) <= 13751
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18679 to 13751
run: 6686 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\3 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\3
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13751 to #\3
run: 6687 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 6688 print-character 13: (((reply)))
reply: nil nil
run: 6689 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18643 to 1
run: 6690 print-string 10: (((jump)) ((-6 offset)))
run: 6691 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18644 to t
run: 6692 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6693 print-board 8: (((6 string-address)) <- ((new))  | )
run: 18700 => ((6 string-address))
setm: ((6 string-address)) <= 18700
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 18700
run: 6694 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 6695 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18704 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6696 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 18700)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18706 to 13645
run: 6697 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 18700)
run: 18700 => ((2 string-address))
setm: ((2 string-address)) <= 18700
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 18707 to 18700
run: 6698 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((18700 integer) (raw))
sizeof: ((18700 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 18708 to 3
run: 6699 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18709 to 0
run: 6700 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18710 to nil
run: 6701 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6702 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((18700 string) (raw))
m: ((18700 integer) (raw))
sizeof: ((18700 integer) (raw))
sizeof: ((_ byte))
m: ((18701 byte) (raw))
sizeof: ((18701 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 18711 to #\space
run: 6703 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6704 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18735 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6705 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18737 to 13645
run: 6706 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18738 to #\space
run: 6707 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6708 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18739 to 13647
run: 6709 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18740 to 13648
run: 6710 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18741 to 20
run: 6711 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18742 to 100
run: 6712 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 101 => ((7 integer))
setm: ((7 integer)) <= 101
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18743 to 101
run: 6713 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18744 to 13650
run: 6714 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13752 => ((9 byte-address))
setm: ((9 byte-address)) <= 13752
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18745 to 13752
run: 6715 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13752 to #\space
run: 6716 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 6717 print-character 13: (((reply)))
reply: nil nil
run: 6718 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18709 to 1
run: 6719 print-string 10: (((jump)) ((-6 offset)))
run: 6720 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18710 to nil
run: 6721 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6722 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((18700 string) (raw))
m: ((18700 integer) (raw))
sizeof: ((18700 integer) (raw))
sizeof: ((_ byte))
m: ((18702 byte) (raw))
sizeof: ((18702 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 18711 to #\|
run: 6723 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6724 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18766 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6725 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18768 to 13645
run: 6726 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18769 to #\|
run: 6727 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6728 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18770 to 13647
run: 6729 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18771 to 13648
run: 6730 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18772 to 20
run: 6731 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18773 to 100
run: 6732 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 102 => ((7 integer))
setm: ((7 integer)) <= 102
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18774 to 102
run: 6733 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18775 to 13650
run: 6734 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13753 => ((9 byte-address))
setm: ((9 byte-address)) <= 13753
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18776 to 13753
run: 6735 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13753 to #\|
run: 6736 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 6737 print-character 13: (((reply)))
reply: nil nil
run: 6738 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18709 to 2
run: 6739 print-string 10: (((jump)) ((-6 offset)))
run: 6740 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18710 to nil
run: 6741 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6742 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((18700 string) (raw))
m: ((18700 integer) (raw))
sizeof: ((18700 integer) (raw))
sizeof: ((_ byte))
m: ((18703 byte) (raw))
sizeof: ((18703 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 18711 to #\space
run: 6743 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 6744 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18797 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6745 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18799 to 13645
run: 6746 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18800 to #\space
run: 6747 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6748 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18801 to 13647
run: 6749 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18802 to 13648
run: 6750 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18803 to 20
run: 6751 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18804 to 100
run: 6752 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 103 => ((7 integer))
setm: ((7 integer)) <= 103
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18805 to 103
run: 6753 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18806 to 13650
run: 6754 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13754 => ((9 byte-address))
setm: ((9 byte-address)) <= 13754
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18807 to 13754
run: 6755 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13754 to #\space
run: 6756 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 6757 print-character 13: (((reply)))
reply: nil nil
run: 6758 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 18709 to 3
run: 6759 print-string 10: (((jump)) ((-6 offset)))
run: 6760 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 18710 to t
run: 6761 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 6762 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 0
run: 6763 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6764 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6765 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9318 file-address) (raw))
sizeof: ((9318 file-address) (raw))
run: 9357 => ((8 file-address))
setm: ((8 file-address)) <= 9357
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9357
run: 6766 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
m: ((9360 square) (raw))
sizeof: ((9360 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6767 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6768 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18828 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6769 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18830 to 13645
run: 6770 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18831 to #\_
run: 6771 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6772 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18832 to 13647
run: 6773 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18833 to 13648
run: 6774 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18834 to 20
run: 6775 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18835 to 100
run: 6776 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 104 => ((7 integer))
setm: ((7 integer)) <= 104
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18836 to 104
run: 6777 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18837 to 13650
run: 6778 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13755 => ((9 byte-address))
setm: ((9 byte-address)) <= 13755
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18838 to 13755
run: 6779 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13755 to #\_
run: 6780 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 6781 print-character 13: (((reply)))
reply: nil nil
run: 6782 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6783 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18859 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6784 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18861 to 13645
run: 6785 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18862 to #\space
run: 6786 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6787 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18863 to 13647
run: 6788 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18864 to 13648
run: 6789 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18865 to 20
run: 6790 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18866 to 100
run: 6791 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 105 => ((7 integer))
setm: ((7 integer)) <= 105
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18867 to 105
run: 6792 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18868 to 13650
run: 6793 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13756 => ((9 byte-address))
setm: ((9 byte-address)) <= 13756
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18869 to 13756
run: 6794 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13756 to #\space
run: 6795 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 6796 print-character 13: (((reply)))
reply: nil nil
run: 6797 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 1
run: 6798 print-board 18: (((jump)) ((-8 offset)))
run: 6799 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6800 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6801 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9319 file-address) (raw))
sizeof: ((9319 file-address) (raw))
run: 9893 => ((8 file-address))
setm: ((8 file-address)) <= 9893
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9893
run: 6802 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
m: ((9896 square) (raw))
sizeof: ((9896 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6803 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6804 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18890 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6805 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18892 to 13645
run: 6806 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18893 to #\_
run: 6807 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6808 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18894 to 13647
run: 6809 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18895 to 13648
run: 6810 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18896 to 20
run: 6811 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18897 to 100
run: 6812 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 106 => ((7 integer))
setm: ((7 integer)) <= 106
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18898 to 106
run: 6813 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18899 to 13650
run: 6814 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13757 => ((9 byte-address))
setm: ((9 byte-address)) <= 13757
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18900 to 13757
run: 6815 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13757 to #\_
run: 6816 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 6817 print-character 13: (((reply)))
reply: nil nil
run: 6818 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6819 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18921 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6820 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18923 to 13645
run: 6821 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18924 to #\space
run: 6822 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6823 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18925 to 13647
run: 6824 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18926 to 13648
run: 6825 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18927 to 20
run: 6826 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18928 to 100
run: 6827 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 107 => ((7 integer))
setm: ((7 integer)) <= 107
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18929 to 107
run: 6828 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18930 to 13650
run: 6829 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13758 => ((9 byte-address))
setm: ((9 byte-address)) <= 13758
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18931 to 13758
run: 6830 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13758 to #\space
run: 6831 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 6832 print-character 13: (((reply)))
reply: nil nil
run: 6833 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 2
run: 6834 print-board 18: (((jump)) ((-8 offset)))
run: 6835 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6836 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6837 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9320 file-address) (raw))
sizeof: ((9320 file-address) (raw))
run: 10429 => ((8 file-address))
setm: ((8 file-address)) <= 10429
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10429
run: 6838 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
m: ((10432 square) (raw))
sizeof: ((10432 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6839 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6840 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18952 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6841 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18954 to 13645
run: 6842 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18955 to #\_
run: 6843 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6844 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18956 to 13647
run: 6845 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18957 to 13648
run: 6846 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18958 to 20
run: 6847 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18959 to 100
run: 6848 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 108 => ((7 integer))
setm: ((7 integer)) <= 108
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18960 to 108
run: 6849 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18961 to 13650
run: 6850 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13759 => ((9 byte-address))
setm: ((9 byte-address)) <= 13759
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18962 to 13759
run: 6851 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13759 to #\_
run: 6852 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 6853 print-character 13: (((reply)))
reply: nil nil
run: 6854 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6855 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 18983 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6856 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 18985 to 13645
run: 6857 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 18986 to #\space
run: 6858 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6859 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 18987 to 13647
run: 6860 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 18988 to 13648
run: 6861 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 18989 to 20
run: 6862 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 18990 to 100
run: 6863 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 109 => ((7 integer))
setm: ((7 integer)) <= 109
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 18991 to 109
run: 6864 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 18992 to 13650
run: 6865 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13760 => ((9 byte-address))
setm: ((9 byte-address)) <= 13760
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 18993 to 13760
run: 6866 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13760 to #\space
run: 6867 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 6868 print-character 13: (((reply)))
reply: nil nil
run: 6869 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 3
run: 6870 print-board 18: (((jump)) ((-8 offset)))
run: 6871 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6872 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6873 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9321 file-address) (raw))
sizeof: ((9321 file-address) (raw))
run: 10965 => ((8 file-address))
setm: ((8 file-address)) <= 10965
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10965
run: 6874 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
m: ((10968 square) (raw))
sizeof: ((10968 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6875 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6876 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19014 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6877 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19016 to 13645
run: 6878 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19017 to #\_
run: 6879 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6880 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19018 to 13647
run: 6881 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19019 to 13648
run: 6882 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19020 to 20
run: 6883 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19021 to 100
run: 6884 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 110 => ((7 integer))
setm: ((7 integer)) <= 110
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19022 to 110
run: 6885 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19023 to 13650
run: 6886 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13761 => ((9 byte-address))
setm: ((9 byte-address)) <= 13761
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19024 to 13761
run: 6887 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13761 to #\_
run: 6888 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 6889 print-character 13: (((reply)))
reply: nil nil
run: 6890 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6891 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19045 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6892 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19047 to 13645
run: 6893 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19048 to #\space
run: 6894 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6895 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19049 to 13647
run: 6896 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19050 to 13648
run: 6897 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19051 to 20
run: 6898 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19052 to 100
run: 6899 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 111 => ((7 integer))
setm: ((7 integer)) <= 111
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19053 to 111
run: 6900 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19054 to 13650
run: 6901 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13762 => ((9 byte-address))
setm: ((9 byte-address)) <= 13762
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19055 to 13762
run: 6902 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13762 to #\space
run: 6903 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 6904 print-character 13: (((reply)))
reply: nil nil
run: 6905 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 4
run: 6906 print-board 18: (((jump)) ((-8 offset)))
run: 6907 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6908 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6909 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9322 file-address) (raw))
sizeof: ((9322 file-address) (raw))
run: 11501 => ((8 file-address))
setm: ((8 file-address)) <= 11501
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 11501
run: 6910 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
m: ((11504 square) (raw))
sizeof: ((11504 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6911 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6912 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19076 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6913 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19078 to 13645
run: 6914 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19079 to #\_
run: 6915 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6916 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19080 to 13647
run: 6917 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19081 to 13648
run: 6918 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19082 to 20
run: 6919 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19083 to 100
run: 6920 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 112 => ((7 integer))
setm: ((7 integer)) <= 112
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19084 to 112
run: 6921 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19085 to 13650
run: 6922 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13763 => ((9 byte-address))
setm: ((9 byte-address)) <= 13763
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19086 to 13763
run: 6923 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13763 to #\_
run: 6924 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 6925 print-character 13: (((reply)))
reply: nil nil
run: 6926 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6927 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19107 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6928 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19109 to 13645
run: 6929 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19110 to #\space
run: 6930 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6931 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19111 to 13647
run: 6932 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19112 to 13648
run: 6933 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19113 to 20
run: 6934 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19114 to 100
run: 6935 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 113 => ((7 integer))
setm: ((7 integer)) <= 113
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19115 to 113
run: 6936 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19116 to 13650
run: 6937 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13764 => ((9 byte-address))
setm: ((9 byte-address)) <= 13764
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19117 to 13764
run: 6938 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13764 to #\space
run: 6939 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 6940 print-character 13: (((reply)))
reply: nil nil
run: 6941 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 5
run: 6942 print-board 18: (((jump)) ((-8 offset)))
run: 6943 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6944 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6945 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9323 file-address) (raw))
sizeof: ((9323 file-address) (raw))
run: 12037 => ((8 file-address))
setm: ((8 file-address)) <= 12037
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12037
run: 6946 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
m: ((12040 square) (raw))
sizeof: ((12040 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6947 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6948 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19138 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6949 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19140 to 13645
run: 6950 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19141 to #\_
run: 6951 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6952 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19142 to 13647
run: 6953 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19143 to 13648
run: 6954 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19144 to 20
run: 6955 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19145 to 100
run: 6956 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 114 => ((7 integer))
setm: ((7 integer)) <= 114
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19146 to 114
run: 6957 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19147 to 13650
run: 6958 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13765 => ((9 byte-address))
setm: ((9 byte-address)) <= 13765
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19148 to 13765
run: 6959 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13765 to #\_
run: 6960 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 6961 print-character 13: (((reply)))
reply: nil nil
run: 6962 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6963 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19169 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6964 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19171 to 13645
run: 6965 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19172 to #\space
run: 6966 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6967 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19173 to 13647
run: 6968 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19174 to 13648
run: 6969 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19175 to 20
run: 6970 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19176 to 100
run: 6971 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 115 => ((7 integer))
setm: ((7 integer)) <= 115
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19177 to 115
run: 6972 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19178 to 13650
run: 6973 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13766 => ((9 byte-address))
setm: ((9 byte-address)) <= 13766
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19179 to 13766
run: 6974 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13766 to #\space
run: 6975 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 6976 print-character 13: (((reply)))
reply: nil nil
run: 6977 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 6
run: 6978 print-board 18: (((jump)) ((-8 offset)))
run: 6979 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 6980 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 6981 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9324 file-address) (raw))
sizeof: ((9324 file-address) (raw))
run: 12573 => ((8 file-address))
setm: ((8 file-address)) <= 12573
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12573
run: 6982 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
m: ((12576 square) (raw))
sizeof: ((12576 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 6983 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 6984 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19200 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 6985 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19202 to 13645
run: 6986 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19203 to #\_
run: 6987 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6988 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19204 to 13647
run: 6989 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19205 to 13648
run: 6990 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19206 to 20
run: 6991 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19207 to 100
run: 6992 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 116 => ((7 integer))
setm: ((7 integer)) <= 116
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19208 to 116
run: 6993 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19209 to 13650
run: 6994 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13767 => ((9 byte-address))
setm: ((9 byte-address)) <= 13767
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19210 to 13767
run: 6995 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13767 to #\_
run: 6996 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 6997 print-character 13: (((reply)))
reply: nil nil
run: 6998 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 6999 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19231 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7000 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19233 to 13645
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 7001 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19234 to #\space
run: 7002 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7003 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19235 to 13647
run: 7004 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19236 to 13648
run: 7005 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19237 to 20
run: 7006 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19238 to 100
run: 7007 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 117 => ((7 integer))
setm: ((7 integer)) <= 117
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19239 to 117
run: 7008 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19240 to 13650
run: 7009 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13768 => ((9 byte-address))
setm: ((9 byte-address)) <= 13768
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19241 to 13768
run: 7010 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13768 to #\space
run: 7011 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 7012 print-character 13: (((reply)))
reply: nil nil
run: 7013 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 7
run: 7014 print-board 18: (((jump)) ((-8 offset)))
run: 7015 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7016 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7017 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9325 file-address) (raw))
sizeof: ((9325 file-address) (raw))
run: 13109 => ((8 file-address))
setm: ((8 file-address)) <= 13109
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 13109
run: 7018 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
m: ((13112 square) (raw))
sizeof: ((13112 square) (raw))
run: #\_ => ((6 square))
setm: ((6 square)) <= #\_
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\_
run: 7019 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7020 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19262 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7021 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\_)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19264 to 13645
run: 7022 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\_)
run: #\_ => ((2 character))
setm: ((2 character)) <= #\_
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19265 to #\_
run: 7023 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7024 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19266 to 13647
run: 7025 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19267 to 13648
run: 7026 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19268 to 20
run: 7027 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19269 to 100
run: 7028 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 118 => ((7 integer))
setm: ((7 integer)) <= 118
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19270 to 118
run: 7029 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19271 to 13650
run: 7030 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13769 => ((9 byte-address))
setm: ((9 byte-address)) <= 13769
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19272 to 13769
run: 7031 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\_ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\_
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13769 to #\_
run: 7032 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 7033 print-character 13: (((reply)))
reply: nil nil
run: 7034 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7035 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19293 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7036 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19295 to 13645
run: 7037 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19296 to #\space
run: 7038 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7039 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19297 to 13647
run: 7040 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19298 to 13648
run: 7041 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19299 to 20
run: 7042 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 100 => ((6 integer))
setm: ((6 integer)) <= 100
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19300 to 100
run: 7043 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 119 => ((7 integer))
setm: ((7 integer)) <= 119
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19301 to 119
run: 7044 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19302 to 13650
run: 7045 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13770 => ((9 byte-address))
setm: ((9 byte-address)) <= 13770
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19303 to 13770
run: 7046 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13770 to #\space
run: 7047 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 20
run: 7048 print-character 13: (((reply)))
reply: nil nil
run: 7049 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 8
run: 7050 print-board 18: (((jump)) ((-8 offset)))
run: 7051 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to t
run: 7052 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7053 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13886 to 1
run: 7054 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7055 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19324 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7056 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19326 to 13645
run: 7057 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7058 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 19327 to 13647
run: 7059 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 6 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 6
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 6
run: 7060 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19328 to 13648
run: 7061 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 7062 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 7063 print-board 21: (((jump)) ((-18 offset)))
run: 7064 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7065 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7066 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13888 to 2
run: 7067 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 7068 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19355 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7069 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 2)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19357 to 13645
run: 7070 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 2)
run: 2 => ((2 integer))
setm: ((2 integer)) <= 2
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 19358 to 2
run: 7071 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 7072 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19386 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7073 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (2)
run: 2 => ((1 integer))
setm: ((1 integer)) <= 2
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 19388 to 2
run: 7074 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 19389 to nil
run: 7075 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 7076 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 19391 to nil
run: 7077 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19392 to nil
run: 7078 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7079 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 7080 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19417 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7081 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 19448 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 19448
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 19419 to 19448
run: 7082 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 19448 => ((2 integer-address))
setm: ((2 integer-address)) <= 19448
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 19420 to 19448
run: 7083 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 19448 to 0
run: 7084 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 19449 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 19449
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 19421 to 19449
run: 7085 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19422 to 30
run: 7086 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 19450 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 19450
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 19449 to 19450
run: 7087 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 19448 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 19448
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 19393 to 19448
run: 7088 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 19394 to #\0
run: 7089 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 19395 to 48
run: 7090 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 19396 to nil
run: 7091 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7092 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 19388 to 0
run: 2 => ((10 integer))
setm: ((10 integer)) <= 2
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 19397 to 2
run: 7093 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 50 => ((11 integer))
setm: ((11 integer)) <= 50
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 19398 to 50
run: 7094 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\2 => ((12 character))
setm: ((12 character)) <= #\2
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 19399 to #\2
run: 7095 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 7096 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19481 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7097 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (19448 #\2)
run: 19448 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 19448
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 19483 to 19448
run: 7098 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (19448 #\2)
run: #\2 => ((2 character))
setm: ((2 character)) <= #\2
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19484 to #\2
run: 7099 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 7100 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19512 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7101 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (19448)
run: 19448 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 19448
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 19514 to 19448
run: 7102 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((19448 integer) (raw))
sizeof: ((19448 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 19515 to 0
run: 7103 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((19449 string-address) (raw))
sizeof: ((19449 string-address) (raw))
run: 19450 => ((3 string-address))
setm: ((3 string-address)) <= 19450
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 19516 to 19450
run: 7104 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((19450 integer) (raw))
sizeof: ((19450 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19517 to 30
run: 7105 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19518 to nil
run: 7106 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 19485 to nil
run: 7107 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 7108 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 19448 => ((4 integer-address))
setm: ((4 integer-address)) <= 19448
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19486 to 19448
run: 7109 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((19449 string-address) (raw))
sizeof: ((19449 string-address) (raw))
run: 19450 => ((5 string-address))
setm: ((5 string-address)) <= 19450
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 19487 to 19450
run: 7110 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((19450 string) (raw))
m: ((19450 integer) (raw))
sizeof: ((19450 integer) (raw))
sizeof: ((_ byte))
run: 19451 => ((6 byte-address))
setm: ((6 byte-address)) <= 19451
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 19488 to 19451
run: 7111 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\2 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\2
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 19451 to #\2
run: 7112 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 19448 to 1
run: 7113 append 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
m: ((1 buffer-address) (same-as-arg 0))
sizeof: ((1 buffer-address) (same-as-arg 0))
reply: (((1 buffer-address) (same-as-arg 0))) (((6 buffer-address)))
reply: 19448 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 19448
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 19393 to 19448
run: 7114 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 7115 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 19396 to t
run: 7116 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7117 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7118 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((19448 integer) (raw))
sizeof: ((19448 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 19400 to 1
run: 7119 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((19449 string-address) (raw))
sizeof: ((19449 string-address) (raw))
run: 19450 => ((14 string-address))
setm: ((14 string-address)) <= 19450
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 19401 to 19450
run: 7120 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 19543 => ((15 string-address))
setm: ((15 string-address)) <= 19543
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 19402 to 19543
run: 7121 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 19403 to 0
run: 7122 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 19404 to 0
run: 7123 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 19396 to nil
run: 7124 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7125 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((19450 string) (raw))
m: ((19450 integer) (raw))
sizeof: ((19450 integer) (raw))
sizeof: ((_ byte))
m: ((19451 byte) (raw))
sizeof: ((19451 byte) (raw))
run: #\2 => ((18 byte))
setm: ((18 byte)) <= #\2
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 19405 to #\2
run: 7126 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((19543 string) (raw))
m: ((19543 integer) (raw))
sizeof: ((19543 integer) (raw))
sizeof: ((_ byte))
run: 19544 => ((19 byte-address))
setm: ((19 byte-address)) <= 19544
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 19406 to 19544
run: 7127 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\2 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\2
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 19544 to #\2
run: 7128 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 19403 to -1
run: 7129 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 19404 to 1
run: 7130 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 7131 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 19396 to t
run: 7132 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7133 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 19543 => ((3 string-address))
setm: ((3 string-address)) <= 19543
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 19359 to 19543
run: 7134 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 7135 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19545 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7136 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 19543)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19547 to 13645
run: 7137 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 19543)
run: 19543 => ((2 string-address))
setm: ((2 string-address)) <= 19543
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 19548 to 19543
run: 7138 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((19543 integer) (raw))
sizeof: ((19543 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 19549 to 1
run: 7139 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19550 to 0
run: 7140 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19551 to nil
run: 7141 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7142 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((19543 string) (raw))
m: ((19543 integer) (raw))
sizeof: ((19543 integer) (raw))
sizeof: ((_ byte))
m: ((19544 byte) (raw))
sizeof: ((19544 byte) (raw))
run: #\2 => ((6 character))
setm: ((6 character)) <= #\2
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 19552 to #\2
run: 7143 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7144 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19576 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7145 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\2)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19578 to 13645
run: 7146 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\2)
run: #\2 => ((2 character))
setm: ((2 character)) <= #\2
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19579 to #\2
run: 7147 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7148 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19580 to 13647
run: 7149 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19581 to 13648
run: 7150 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19582 to 20
run: 7151 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19583 to 120
run: 7152 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 120 => ((7 integer))
setm: ((7 integer)) <= 120
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19584 to 120
run: 7153 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19585 to 13650
run: 7154 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13771 => ((9 byte-address))
setm: ((9 byte-address)) <= 13771
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19586 to 13771
run: 7155 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\2 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\2
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13771 to #\2
run: 7156 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 7157 print-character 13: (((reply)))
reply: nil nil
run: 7158 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19550 to 1
run: 7159 print-string 10: (((jump)) ((-6 offset)))
run: 7160 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19551 to t
run: 7161 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7162 print-board 8: (((6 string-address)) <- ((new))  | )
run: 19607 => ((6 string-address))
setm: ((6 string-address)) <= 19607
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 19607
run: 7163 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 7164 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19611 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7165 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 19607)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19613 to 13645
run: 7166 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 19607)
run: 19607 => ((2 string-address))
setm: ((2 string-address)) <= 19607
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 19614 to 19607
run: 7167 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((19607 integer) (raw))
sizeof: ((19607 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 19615 to 3
run: 7168 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19616 to 0
run: 7169 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19617 to nil
run: 7170 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7171 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((19607 string) (raw))
m: ((19607 integer) (raw))
sizeof: ((19607 integer) (raw))
sizeof: ((_ byte))
m: ((19608 byte) (raw))
sizeof: ((19608 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 19618 to #\space
run: 7172 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7173 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19642 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7174 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19644 to 13645
run: 7175 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19645 to #\space
run: 7176 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7177 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19646 to 13647
run: 7178 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19647 to 13648
run: 7179 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19648 to 20
run: 7180 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19649 to 120
run: 7181 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 121 => ((7 integer))
setm: ((7 integer)) <= 121
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19650 to 121
run: 7182 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19651 to 13650
run: 7183 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13772 => ((9 byte-address))
setm: ((9 byte-address)) <= 13772
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19652 to 13772
run: 7184 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13772 to #\space
run: 7185 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 7186 print-character 13: (((reply)))
reply: nil nil
run: 7187 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19616 to 1
run: 7188 print-string 10: (((jump)) ((-6 offset)))
run: 7189 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19617 to nil
run: 7190 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7191 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((19607 string) (raw))
m: ((19607 integer) (raw))
sizeof: ((19607 integer) (raw))
sizeof: ((_ byte))
m: ((19609 byte) (raw))
sizeof: ((19609 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 19618 to #\|
run: 7192 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7193 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19673 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7194 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19675 to 13645
run: 7195 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19676 to #\|
run: 7196 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7197 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19677 to 13647
run: 7198 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19678 to 13648
run: 7199 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19679 to 20
run: 7200 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19680 to 120
run: 7201 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 122 => ((7 integer))
setm: ((7 integer)) <= 122
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19681 to 122
run: 7202 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19682 to 13650
run: 7203 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13773 => ((9 byte-address))
setm: ((9 byte-address)) <= 13773
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19683 to 13773
run: 7204 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13773 to #\|
run: 7205 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 7206 print-character 13: (((reply)))
reply: nil nil
run: 7207 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19616 to 2
run: 7208 print-string 10: (((jump)) ((-6 offset)))
run: 7209 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19617 to nil
run: 7210 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7211 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((19607 string) (raw))
m: ((19607 integer) (raw))
sizeof: ((19607 integer) (raw))
sizeof: ((_ byte))
m: ((19610 byte) (raw))
sizeof: ((19610 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 19618 to #\space
run: 7212 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7213 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19704 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7214 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19706 to 13645
run: 7215 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19707 to #\space
run: 7216 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7217 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19708 to 13647
run: 7218 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19709 to 13648
run: 7219 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19710 to 20
run: 7220 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19711 to 120
run: 7221 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 123 => ((7 integer))
setm: ((7 integer)) <= 123
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19712 to 123
run: 7222 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19713 to 13650
run: 7223 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13774 => ((9 byte-address))
setm: ((9 byte-address)) <= 13774
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19714 to 13774
run: 7224 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13774 to #\space
run: 7225 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 7226 print-character 13: (((reply)))
reply: nil nil
run: 7227 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 19616 to 3
run: 7228 print-string 10: (((jump)) ((-6 offset)))
run: 7229 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 19617 to t
run: 7230 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7231 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 0
run: 7232 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7233 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7234 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9318 file-address) (raw))
sizeof: ((9318 file-address) (raw))
run: 9357 => ((8 file-address))
setm: ((8 file-address)) <= 9357
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9357
run: 7235 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
m: ((9359 square) (raw))
sizeof: ((9359 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\P
run: 7236 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7237 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19735 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7238 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19737 to 13645
run: 7239 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19738 to #\P
run: 7240 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7241 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19739 to 13647
run: 7242 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19740 to 13648
run: 7243 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19741 to 20
run: 7244 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19742 to 120
run: 7245 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 124 => ((7 integer))
setm: ((7 integer)) <= 124
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19743 to 124
run: 7246 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19744 to 13650
run: 7247 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13775 => ((9 byte-address))
setm: ((9 byte-address)) <= 13775
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19745 to 13775
run: 7248 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13775 to #\P
run: 7249 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 7250 print-character 13: (((reply)))
reply: nil nil
run: 7251 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7252 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19766 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7253 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19768 to 13645
run: 7254 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19769 to #\space
run: 7255 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7256 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19770 to 13647
run: 7257 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19771 to 13648
run: 7258 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19772 to 20
run: 7259 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19773 to 120
run: 7260 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 125 => ((7 integer))
setm: ((7 integer)) <= 125
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19774 to 125
run: 7261 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19775 to 13650
run: 7262 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13776 => ((9 byte-address))
setm: ((9 byte-address)) <= 13776
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19776 to 13776
run: 7263 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13776 to #\space
run: 7264 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 7265 print-character 13: (((reply)))
reply: nil nil
run: 7266 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 1
run: 7267 print-board 18: (((jump)) ((-8 offset)))
run: 7268 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7269 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7270 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9319 file-address) (raw))
sizeof: ((9319 file-address) (raw))
run: 9893 => ((8 file-address))
setm: ((8 file-address)) <= 9893
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9893
run: 7271 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
m: ((9895 square) (raw))
sizeof: ((9895 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\P
run: 7272 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7273 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19797 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7274 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19799 to 13645
run: 7275 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19800 to #\P
run: 7276 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7277 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19801 to 13647
run: 7278 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19802 to 13648
run: 7279 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19803 to 20
run: 7280 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19804 to 120
run: 7281 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 126 => ((7 integer))
setm: ((7 integer)) <= 126
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19805 to 126
run: 7282 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19806 to 13650
run: 7283 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13777 => ((9 byte-address))
setm: ((9 byte-address)) <= 13777
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19807 to 13777
run: 7284 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13777 to #\P
run: 7285 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 7286 print-character 13: (((reply)))
reply: nil nil
run: 7287 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7288 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19828 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7289 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19830 to 13645
run: 7290 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19831 to #\space
run: 7291 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7292 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19832 to 13647
run: 7293 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19833 to 13648
run: 7294 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19834 to 20
run: 7295 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19835 to 120
run: 7296 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 127 => ((7 integer))
setm: ((7 integer)) <= 127
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19836 to 127
run: 7297 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19837 to 13650
run: 7298 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13778 => ((9 byte-address))
setm: ((9 byte-address)) <= 13778
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19838 to 13778
run: 7299 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13778 to #\space
run: 7300 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 7301 print-character 13: (((reply)))
reply: nil nil
run: 7302 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 2
run: 7303 print-board 18: (((jump)) ((-8 offset)))
run: 7304 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7305 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7306 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9320 file-address) (raw))
sizeof: ((9320 file-address) (raw))
run: 10429 => ((8 file-address))
setm: ((8 file-address)) <= 10429
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10429
run: 7307 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
m: ((10431 square) (raw))
sizeof: ((10431 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\P
run: 7308 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7309 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19859 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7310 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19861 to 13645
run: 7311 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19862 to #\P
run: 7312 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7313 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19863 to 13647
run: 7314 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19864 to 13648
run: 7315 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19865 to 20
run: 7316 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19866 to 120
run: 7317 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 128 => ((7 integer))
setm: ((7 integer)) <= 128
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19867 to 128
run: 7318 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19868 to 13650
run: 7319 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13779 => ((9 byte-address))
setm: ((9 byte-address)) <= 13779
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19869 to 13779
run: 7320 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13779 to #\P
run: 7321 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 7322 print-character 13: (((reply)))
reply: nil nil
run: 7323 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7324 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19890 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7325 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19892 to 13645
run: 7326 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19893 to #\space
run: 7327 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7328 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19894 to 13647
run: 7329 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19895 to 13648
run: 7330 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19896 to 20
run: 7331 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19897 to 120
run: 7332 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 129 => ((7 integer))
setm: ((7 integer)) <= 129
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19898 to 129
run: 7333 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19899 to 13650
run: 7334 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13780 => ((9 byte-address))
setm: ((9 byte-address)) <= 13780
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19900 to 13780
run: 7335 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13780 to #\space
run: 7336 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 7337 print-character 13: (((reply)))
reply: nil nil
run: 7338 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 3
run: 7339 print-board 18: (((jump)) ((-8 offset)))
run: 7340 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7341 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7342 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9321 file-address) (raw))
sizeof: ((9321 file-address) (raw))
run: 10965 => ((8 file-address))
setm: ((8 file-address)) <= 10965
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10965
run: 7343 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
m: ((10967 square) (raw))
sizeof: ((10967 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\P
run: 7344 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7345 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19921 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7346 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19923 to 13645
run: 7347 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19924 to #\P
run: 7348 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7349 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19925 to 13647
run: 7350 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19926 to 13648
run: 7351 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19927 to 20
run: 7352 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19928 to 120
run: 7353 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 130 => ((7 integer))
setm: ((7 integer)) <= 130
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19929 to 130
run: 7354 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19930 to 13650
run: 7355 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13781 => ((9 byte-address))
setm: ((9 byte-address)) <= 13781
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19931 to 13781
run: 7356 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13781 to #\P
run: 7357 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 7358 print-character 13: (((reply)))
reply: nil nil
run: 7359 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7360 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19952 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7361 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19954 to 13645
run: 7362 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19955 to #\space
run: 7363 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7364 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19956 to 13647
run: 7365 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19957 to 13648
run: 7366 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19958 to 20
run: 7367 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19959 to 120
run: 7368 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 131 => ((7 integer))
setm: ((7 integer)) <= 131
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19960 to 131
run: 7369 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19961 to 13650
run: 7370 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13782 => ((9 byte-address))
setm: ((9 byte-address)) <= 13782
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19962 to 13782
run: 7371 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13782 to #\space
run: 7372 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 7373 print-character 13: (((reply)))
reply: nil nil
run: 7374 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 4
run: 7375 print-board 18: (((jump)) ((-8 offset)))
run: 7376 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7377 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7378 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9322 file-address) (raw))
sizeof: ((9322 file-address) (raw))
run: 11501 => ((8 file-address))
setm: ((8 file-address)) <= 11501
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 11501
run: 7379 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
m: ((11503 square) (raw))
sizeof: ((11503 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\P
run: 7380 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7381 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 19983 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7382 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 19985 to 13645
run: 7383 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 19986 to #\P
run: 7384 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7385 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 19987 to 13647
run: 7386 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 19988 to 13648
run: 7387 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 19989 to 20
run: 7388 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 19990 to 120
run: 7389 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 132 => ((7 integer))
setm: ((7 integer)) <= 132
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 19991 to 132
run: 7390 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 19992 to 13650
run: 7391 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13783 => ((9 byte-address))
setm: ((9 byte-address)) <= 13783
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 19993 to 13783
run: 7392 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13783 to #\P
run: 7393 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 7394 print-character 13: (((reply)))
reply: nil nil
run: 7395 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7396 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20014 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7397 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20016 to 13645
run: 7398 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20017 to #\space
run: 7399 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7400 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20018 to 13647
run: 7401 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20019 to 13648
run: 7402 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20020 to 20
run: 7403 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20021 to 120
run: 7404 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 133 => ((7 integer))
setm: ((7 integer)) <= 133
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20022 to 133
run: 7405 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20023 to 13650
run: 7406 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13784 => ((9 byte-address))
setm: ((9 byte-address)) <= 13784
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20024 to 13784
run: 7407 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13784 to #\space
run: 7408 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 7409 print-character 13: (((reply)))
reply: nil nil
run: 7410 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 5
run: 7411 print-board 18: (((jump)) ((-8 offset)))
run: 7412 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7413 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7414 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9323 file-address) (raw))
sizeof: ((9323 file-address) (raw))
run: 12037 => ((8 file-address))
setm: ((8 file-address)) <= 12037
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12037
run: 7415 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
m: ((12039 square) (raw))
sizeof: ((12039 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\P
run: 7416 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7417 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20045 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7418 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20047 to 13645
run: 7419 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20048 to #\P
run: 7420 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7421 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20049 to 13647
run: 7422 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20050 to 13648
run: 7423 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20051 to 20
run: 7424 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20052 to 120
run: 7425 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 134 => ((7 integer))
setm: ((7 integer)) <= 134
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20053 to 134
run: 7426 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20054 to 13650
run: 7427 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13785 => ((9 byte-address))
setm: ((9 byte-address)) <= 13785
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20055 to 13785
run: 7428 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13785 to #\P
run: 7429 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 7430 print-character 13: (((reply)))
reply: nil nil
run: 7431 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7432 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20076 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7433 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20078 to 13645
run: 7434 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20079 to #\space
run: 7435 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7436 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20080 to 13647
run: 7437 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20081 to 13648
run: 7438 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20082 to 20
run: 7439 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20083 to 120
run: 7440 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 135 => ((7 integer))
setm: ((7 integer)) <= 135
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20084 to 135
run: 7441 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20085 to 13650
run: 7442 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13786 => ((9 byte-address))
setm: ((9 byte-address)) <= 13786
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20086 to 13786
run: 7443 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13786 to #\space
run: 7444 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 7445 print-character 13: (((reply)))
reply: nil nil
run: 7446 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 6
run: 7447 print-board 18: (((jump)) ((-8 offset)))
run: 7448 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7449 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7450 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9324 file-address) (raw))
sizeof: ((9324 file-address) (raw))
run: 12573 => ((8 file-address))
setm: ((8 file-address)) <= 12573
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12573
run: 7451 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
m: ((12575 square) (raw))
sizeof: ((12575 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\P
run: 7452 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7453 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20107 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7454 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20109 to 13645
run: 7455 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20110 to #\P
run: 7456 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7457 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20111 to 13647
run: 7458 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20112 to 13648
run: 7459 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20113 to 20
run: 7460 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20114 to 120
run: 7461 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 136 => ((7 integer))
setm: ((7 integer)) <= 136
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20115 to 136
run: 7462 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20116 to 13650
run: 7463 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13787 => ((9 byte-address))
setm: ((9 byte-address)) <= 13787
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20117 to 13787
run: 7464 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13787 to #\P
run: 7465 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 7466 print-character 13: (((reply)))
reply: nil nil
run: 7467 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7468 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20138 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7469 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20140 to 13645
run: 7470 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20141 to #\space
run: 7471 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7472 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20142 to 13647
run: 7473 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20143 to 13648
run: 7474 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20144 to 20
run: 7475 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20145 to 120
run: 7476 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 137 => ((7 integer))
setm: ((7 integer)) <= 137
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20146 to 137
run: 7477 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20147 to 13650
run: 7478 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13788 => ((9 byte-address))
setm: ((9 byte-address)) <= 13788
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20148 to 13788
run: 7479 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13788 to #\space
run: 7480 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 7481 print-character 13: (((reply)))
reply: nil nil
run: 7482 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 7
run: 7483 print-board 18: (((jump)) ((-8 offset)))
run: 7484 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7485 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7486 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9325 file-address) (raw))
sizeof: ((9325 file-address) (raw))
run: 13109 => ((8 file-address))
setm: ((8 file-address)) <= 13109
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 13109
run: 7487 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
m: ((13111 square) (raw))
sizeof: ((13111 square) (raw))
run: #\P => ((6 square))
setm: ((6 square)) <= #\P
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\P
run: 7488 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7489 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20169 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7490 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\P)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20171 to 13645
run: 7491 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\P)
run: #\P => ((2 character))
setm: ((2 character)) <= #\P
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20172 to #\P
run: 7492 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7493 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20173 to 13647
run: 7494 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20174 to 13648
run: 7495 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20175 to 20
run: 7496 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20176 to 120
run: 7497 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 138 => ((7 integer))
setm: ((7 integer)) <= 138
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20177 to 138
run: 7498 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20178 to 13650
run: 7499 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13789 => ((9 byte-address))
setm: ((9 byte-address)) <= 13789
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20179 to 13789
run: 7500 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\P => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\P
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13789 to #\P
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: 7501 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 7502 print-character 13: (((reply)))
reply: nil nil
run: 7503 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7504 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20200 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7505 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20202 to 13645
run: 7506 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20203 to #\space
run: 7507 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7508 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20204 to 13647
run: 7509 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20205 to 13648
run: 7510 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20206 to 20
run: 7511 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 120 => ((6 integer))
setm: ((6 integer)) <= 120
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20207 to 120
run: 7512 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 139 => ((7 integer))
setm: ((7 integer)) <= 139
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20208 to 139
run: 7513 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20209 to 13650
run: 7514 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13790 => ((9 byte-address))
setm: ((9 byte-address)) <= 13790
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20210 to 13790
run: 7515 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13790 to #\space
run: 7516 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 20
run: 7517 print-character 13: (((reply)))
reply: nil nil
run: 7518 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 8
run: 7519 print-board 18: (((jump)) ((-8 offset)))
run: 7520 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to t
run: 7521 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7522 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 0 => ((3 integer))
setm: ((3 integer)) <= 0
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13886 to 0
run: 7523 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7524 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20231 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7525 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20233 to 13645
run: 7526 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7527 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 20234 to 13647
run: 7528 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 7 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 7
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 7
run: 7529 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20235 to 13648
run: 7530 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 7531 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 7532 print-board 21: (((jump)) ((-18 offset)))
run: 7533 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7534 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7535 print-board 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 13888 to 1
run: 7536 print-board 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 integer))
sizeof: ((5 integer))
run: 7537 print-integer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20262 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7538 print-integer 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 1)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20264 to 13645
run: 7539 print-integer 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (13645 1)
run: 1 => ((2 integer))
setm: ((2 integer)) <= 1
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 20265 to 1
run: 7540 print-integer 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: 7541 integer-to-decimal-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20293 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7542 integer-to-decimal-string 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (1)
run: 1 => ((1 integer))
setm: ((1 integer)) <= 1
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 20295 to 1
run: 7543 integer-to-decimal-string 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 20296 to nil
run: 7544 integer-to-decimal-string 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 7545 integer-to-decimal-string 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 20298 to nil
run: 7546 integer-to-decimal-string 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20299 to nil
run: 7547 integer-to-decimal-string 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7548 integer-to-decimal-string 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 7549 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20324 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7550 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 20355 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 20355
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 20326 to 20355
run: 7551 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 20355 => ((2 integer-address))
setm: ((2 integer-address)) <= 20355
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 20327 to 20355
run: 7552 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 20355 to 0
run: 7553 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 20356 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 20356
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 20328 to 20356
run: 7554 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20329 to 30
run: 7555 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 20357 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 20357
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 20356 to 20357
run: 7556 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((6 buffer-address)))
reply: 20355 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 20355
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 20300 to 20355
run: 7557 integer-to-decimal-string 12: (((7 character)) <- ((copy)) ((0 literal)))
run: #\0 => ((7 character))
setm: ((7 character)) <= #\0
setm: size of ((7 character)) is 1
setm: ((7 character)): setting 20301 to #\0
run: 7558 integer-to-decimal-string 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
m: ((7 character))
sizeof: ((7 character))
run: 48 => ((8 integer))
setm: ((8 integer)) <= 48
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 20302 to 48
run: 7559 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 20303 to nil
run: 7560 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7561 integer-to-decimal-string 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
m: ((1 integer))
sizeof: ((1 integer))
m: ((1 integer))
sizeof: ((1 integer))
run: 0 => ((1 integer))
setm: ((1 integer)) <= 0
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 20295 to 0
run: 1 => ((10 integer))
setm: ((10 integer)) <= 1
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 20304 to 1
run: 7562 integer-to-decimal-string 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
m: ((8 integer))
sizeof: ((8 integer))
m: ((10 integer))
sizeof: ((10 integer))
run: 49 => ((11 integer))
setm: ((11 integer)) <= 49
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 20305 to 49
run: 7563 integer-to-decimal-string 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
m: ((11 integer))
sizeof: ((11 integer))
run: #\1 => ((12 character))
setm: ((12 character)) <= #\1
setm: size of ((12 character)) is 1
setm: ((12 character)): setting 20306 to #\1
run: 7564 integer-to-decimal-string 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
m: ((6 buffer-address))
sizeof: ((6 buffer-address))
m: ((12 character))
sizeof: ((12 character))
run: 7565 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20388 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7566 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (20355 #\1)
run: 20355 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 20355
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 20390 to 20355
run: 7567 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (20355 #\1)
run: #\1 => ((2 character))
setm: ((2 character)) <= #\1
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20391 to #\1
run: 7568 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 7569 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20419 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7570 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (20355)
run: 20355 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 20355
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 20421 to 20355
run: 7571 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((20355 integer) (raw))
sizeof: ((20355 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 20422 to 0
run: 7572 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((20356 string-address) (raw))
sizeof: ((20356 string-address) (raw))
run: 20357 => ((3 string-address))
setm: ((3 string-address)) <= 20357
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 20423 to 20357
run: 7573 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((20357 integer) (raw))
sizeof: ((20357 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20424 to 30
run: 7574 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20425 to nil
run: 7575 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 20392 to nil
run: 7576 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 7577 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 20355 => ((4 integer-address))
setm: ((4 integer-address)) <= 20355
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20393 to 20355
run: 7578 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((20356 string-address) (raw))
sizeof: ((20356 string-address) (raw))
run: 20357 => ((5 string-address))
setm: ((5 string-address)) <= 20357
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 20394 to 20357
run: 7579 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((20357 string) (raw))
m: ((20357 integer) (raw))
sizeof: ((20357 integer) (raw))
sizeof: ((_ byte))
run: 20358 => ((6 byte-address))
setm: ((6 byte-address)) <= 20358
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 20395 to 20358
run: 7580 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\1 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\1
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 20358 to #\1
run: 7581 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 20355 to 1
run: 7582 append 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
m: ((1 buffer-address) (same-as-arg 0))
sizeof: ((1 buffer-address) (same-as-arg 0))
reply: (((1 buffer-address) (same-as-arg 0))) (((6 buffer-address)))
reply: 20355 => ((6 buffer-address))
setm: ((6 buffer-address)) <= 20355
setm: size of ((6 buffer-address)) is 1
setm: ((6 buffer-address)): setting 20300 to 20355
run: 7583 integer-to-decimal-string 20: (((jump)) ((-7 offset)))
run: 7584 integer-to-decimal-string 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
m: ((1 integer))
sizeof: ((1 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 20303 to t
run: 7585 integer-to-decimal-string 15: (((jump-if)) ((9 boolean)) ((5 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7586 integer-to-decimal-string 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7587 integer-to-decimal-string 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
m: ((20355 integer) (raw))
sizeof: ((20355 integer) (raw))
run: 1 => ((13 integer))
setm: ((13 integer)) <= 1
setm: size of ((13 integer)) is 1
setm: ((13 integer)): setting 20307 to 1
run: 7588 integer-to-decimal-string 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((20356 string-address) (raw))
sizeof: ((20356 string-address) (raw))
run: 20357 => ((14 string-address))
setm: ((14 string-address)) <= 20357
setm: size of ((14 string-address)) is 1
setm: ((14 string-address)): setting 20308 to 20357
run: 7589 integer-to-decimal-string 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
m: ((13 integer))
sizeof: ((13 integer))
sizeof: ((_ byte))
run: 20450 => ((15 string-address))
setm: ((15 string-address)) <= 20450
setm: size of ((15 string-address)) is 1
setm: ((15 string-address)): setting 20309 to 20450
run: 7590 integer-to-decimal-string 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
m: ((13 integer))
sizeof: ((13 integer))
run: 0 => ((16 integer))
setm: ((16 integer)) <= 0
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 20310 to 0
run: 7591 integer-to-decimal-string 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((17 integer))
setm: ((17 integer)) <= 0
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 20311 to 0
run: 7592 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 20303 to nil
run: 7593 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7594 integer-to-decimal-string 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
m: ((16 integer))
sizeof: ((16 integer))
array-len: ((20357 string) (raw))
m: ((20357 integer) (raw))
sizeof: ((20357 integer) (raw))
sizeof: ((_ byte))
m: ((20358 byte) (raw))
sizeof: ((20358 byte) (raw))
run: #\1 => ((18 byte))
setm: ((18 byte)) <= #\1
setm: size of ((18 byte)) is 1
setm: ((18 byte)): setting 20312 to #\1
run: 7595 integer-to-decimal-string 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
m: ((17 integer))
sizeof: ((17 integer))
array-len: ((20450 string) (raw))
m: ((20450 integer) (raw))
sizeof: ((20450 integer) (raw))
sizeof: ((_ byte))
run: 20451 => ((19 byte-address))
setm: ((19 byte-address)) <= 20451
setm: size of ((19 byte-address)) is 1
setm: ((19 byte-address)): setting 20313 to 20451
run: 7596 integer-to-decimal-string 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
m: ((18 byte))
sizeof: ((18 byte))
run: #\1 => ((19 byte-address) (deref))
setm: ((19 byte-address) (deref)) <= #\1
setm: size of ((19 byte-address) (deref)) is 1
setm: ((19 byte-address) (deref)): setting 20451 to #\1
run: 7597 integer-to-decimal-string 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: -1 => ((16 integer))
setm: ((16 integer)) <= -1
setm: size of ((16 integer)) is 1
setm: ((16 integer)): setting 20310 to -1
run: 7598 integer-to-decimal-string 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
m: ((17 integer))
sizeof: ((17 integer))
run: 1 => ((17 integer))
setm: ((17 integer)) <= 1
setm: size of ((17 integer)) is 1
setm: ((17 integer)): setting 20311 to 1
run: 7599 integer-to-decimal-string 35: (((jump)) ((-8 offset)))
run: 7600 integer-to-decimal-string 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
m: ((16 integer))
sizeof: ((16 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 20303 to t
run: 7601 integer-to-decimal-string 29: (((jump-if)) ((9 boolean)) ((6 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 7602 integer-to-decimal-string 36: (((reply)) ((15 string-address)))
m: ((15 string-address))
sizeof: ((15 string-address))
reply: (((15 string-address))) (((3 string-address)))
reply: 20450 => ((3 string-address))
setm: ((3 string-address)) <= 20450
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 20266 to 20450
run: 7603 print-integer 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((3 string-address))
sizeof: ((3 string-address))
run: 7604 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20452 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7605 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 20450)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20454 to 13645
run: 7606 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 20450)
run: 20450 => ((2 string-address))
setm: ((2 string-address)) <= 20450
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 20455 to 20450
run: 7607 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((20450 integer) (raw))
sizeof: ((20450 integer) (raw))
run: 1 => ((3 integer))
setm: ((3 integer)) <= 1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 20456 to 1
run: 7608 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20457 to 0
run: 7609 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20458 to nil
run: 7610 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7611 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((20450 string) (raw))
m: ((20450 integer) (raw))
sizeof: ((20450 integer) (raw))
sizeof: ((_ byte))
m: ((20451 byte) (raw))
sizeof: ((20451 byte) (raw))
run: #\1 => ((6 character))
setm: ((6 character)) <= #\1
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 20459 to #\1
run: 7612 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7613 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20483 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7614 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\1)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20485 to 13645
run: 7615 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\1)
run: #\1 => ((2 character))
setm: ((2 character)) <= #\1
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20486 to #\1
run: 7616 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7617 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20487 to 13647
run: 7618 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20488 to 13648
run: 7619 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20489 to 20
run: 7620 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20490 to 140
run: 7621 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 140 => ((7 integer))
setm: ((7 integer)) <= 140
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20491 to 140
run: 7622 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20492 to 13650
run: 7623 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13791 => ((9 byte-address))
setm: ((9 byte-address)) <= 13791
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20493 to 13791
run: 7624 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\1 => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\1
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13791 to #\1
run: 7625 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 7626 print-character 13: (((reply)))
reply: nil nil
run: 7627 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20457 to 1
run: 7628 print-string 10: (((jump)) ((-6 offset)))
run: 7629 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20458 to t
run: 7630 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7631 print-board 8: (((6 string-address)) <- ((new))  | )
run: 20514 => ((6 string-address))
setm: ((6 string-address)) <= 20514
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 20514
run: 7632 print-board 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 7633 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20518 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7634 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 20514)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20520 to 13645
run: 7635 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 20514)
run: 20514 => ((2 string-address))
setm: ((2 string-address)) <= 20514
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 20521 to 20514
run: 7636 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((20514 integer) (raw))
sizeof: ((20514 integer) (raw))
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 20522 to 3
run: 7637 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20523 to 0
run: 7638 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20524 to nil
run: 7639 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7640 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((20514 string) (raw))
m: ((20514 integer) (raw))
sizeof: ((20514 integer) (raw))
sizeof: ((_ byte))
m: ((20515 byte) (raw))
sizeof: ((20515 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 20525 to #\space
run: 7641 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7642 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20549 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7643 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20551 to 13645
run: 7644 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20552 to #\space
run: 7645 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7646 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20553 to 13647
run: 7647 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20554 to 13648
run: 7648 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20555 to 20
run: 7649 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20556 to 140
run: 7650 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 141 => ((7 integer))
setm: ((7 integer)) <= 141
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20557 to 141
run: 7651 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20558 to 13650
run: 7652 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13792 => ((9 byte-address))
setm: ((9 byte-address)) <= 13792
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20559 to 13792
run: 7653 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13792 to #\space
run: 7654 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 7655 print-character 13: (((reply)))
reply: nil nil
run: 7656 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20523 to 1
run: 7657 print-string 10: (((jump)) ((-6 offset)))
run: 7658 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20524 to nil
run: 7659 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7660 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((20514 string) (raw))
m: ((20514 integer) (raw))
sizeof: ((20514 integer) (raw))
sizeof: ((_ byte))
m: ((20516 byte) (raw))
sizeof: ((20516 byte) (raw))
run: #\| => ((6 character))
setm: ((6 character)) <= #\|
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 20525 to #\|
run: 7661 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7662 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20580 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7663 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\|)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20582 to 13645
run: 7664 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\|)
run: #\| => ((2 character))
setm: ((2 character)) <= #\|
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20583 to #\|
run: 7665 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7666 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20584 to 13647
run: 7667 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20585 to 13648
run: 7668 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20586 to 20
run: 7669 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20587 to 140
run: 7670 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 142 => ((7 integer))
setm: ((7 integer)) <= 142
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20588 to 142
run: 7671 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20589 to 13650
run: 7672 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13793 => ((9 byte-address))
setm: ((9 byte-address)) <= 13793
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20590 to 13793
run: 7673 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\| => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\|
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13793 to #\|
run: 7674 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 7675 print-character 13: (((reply)))
reply: nil nil
run: 7676 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20523 to 2
run: 7677 print-string 10: (((jump)) ((-6 offset)))
run: 7678 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20524 to nil
run: 7679 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7680 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((20514 string) (raw))
m: ((20514 integer) (raw))
sizeof: ((20514 integer) (raw))
sizeof: ((_ byte))
m: ((20517 byte) (raw))
sizeof: ((20517 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 20525 to #\space
run: 7681 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 7682 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20611 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7683 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20613 to 13645
run: 7684 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20614 to #\space
run: 7685 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7686 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20615 to 13647
run: 7687 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20616 to 13648
run: 7688 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20617 to 20
run: 7689 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20618 to 140
run: 7690 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 143 => ((7 integer))
setm: ((7 integer)) <= 143
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20619 to 143
run: 7691 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20620 to 13650
run: 7692 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13794 => ((9 byte-address))
setm: ((9 byte-address)) <= 13794
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20621 to 13794
run: 7693 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13794 to #\space
run: 7694 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 7695 print-character 13: (((reply)))
reply: nil nil
run: 7696 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 20523 to 3
run: 7697 print-string 10: (((jump)) ((-6 offset)))
run: 7698 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 20524 to t
run: 7699 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 7700 print-board 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 0
run: 7701 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7702 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7703 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9318 file-address) (raw))
sizeof: ((9318 file-address) (raw))
run: 9357 => ((8 file-address))
setm: ((8 file-address)) <= 9357
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9357
run: 7704 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9357 file) (raw))
m: ((9357 integer) (raw))
sizeof: ((9357 integer) (raw))
sizeof: ((_ square))
m: ((9358 square) (raw))
sizeof: ((9358 square) (raw))
run: #\R => ((6 square))
setm: ((6 square)) <= #\R
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\R
run: 7705 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7706 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20642 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7707 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\R)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20644 to 13645
run: 7708 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\R)
run: #\R => ((2 character))
setm: ((2 character)) <= #\R
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20645 to #\R
run: 7709 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7710 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20646 to 13647
run: 7711 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20647 to 13648
run: 7712 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20648 to 20
run: 7713 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20649 to 140
run: 7714 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 144 => ((7 integer))
setm: ((7 integer)) <= 144
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20650 to 144
run: 7715 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20651 to 13650
run: 7716 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13795 => ((9 byte-address))
setm: ((9 byte-address)) <= 13795
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20652 to 13795
run: 7717 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\R => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\R
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13795 to #\R
run: 7718 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 7719 print-character 13: (((reply)))
reply: nil nil
run: 7720 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7721 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20673 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7722 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20675 to 13645
run: 7723 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20676 to #\space
run: 7724 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7725 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20677 to 13647
run: 7726 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20678 to 13648
run: 7727 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20679 to 20
run: 7728 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20680 to 140
run: 7729 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 145 => ((7 integer))
setm: ((7 integer)) <= 145
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20681 to 145
run: 7730 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20682 to 13650
run: 7731 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13796 => ((9 byte-address))
setm: ((9 byte-address)) <= 13796
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20683 to 13796
run: 7732 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13796 to #\space
run: 7733 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 7734 print-character 13: (((reply)))
reply: nil nil
run: 7735 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 1
run: 7736 print-board 18: (((jump)) ((-8 offset)))
run: 7737 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7738 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7739 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9319 file-address) (raw))
sizeof: ((9319 file-address) (raw))
run: 9893 => ((8 file-address))
setm: ((8 file-address)) <= 9893
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 9893
run: 7740 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((9893 file) (raw))
m: ((9893 integer) (raw))
sizeof: ((9893 integer) (raw))
sizeof: ((_ square))
m: ((9894 square) (raw))
sizeof: ((9894 square) (raw))
run: #\N => ((6 square))
setm: ((6 square)) <= #\N
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\N
run: 7741 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7742 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20704 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7743 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\N)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20706 to 13645
run: 7744 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\N)
run: #\N => ((2 character))
setm: ((2 character)) <= #\N
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20707 to #\N
run: 7745 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7746 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20708 to 13647
run: 7747 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20709 to 13648
run: 7748 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20710 to 20
run: 7749 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20711 to 140
run: 7750 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 146 => ((7 integer))
setm: ((7 integer)) <= 146
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20712 to 146
run: 7751 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20713 to 13650
run: 7752 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13797 => ((9 byte-address))
setm: ((9 byte-address)) <= 13797
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20714 to 13797
run: 7753 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\N => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\N
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13797 to #\N
run: 7754 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 7755 print-character 13: (((reply)))
reply: nil nil
run: 7756 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7757 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20735 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7758 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20737 to 13645
run: 7759 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20738 to #\space
run: 7760 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7761 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20739 to 13647
run: 7762 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20740 to 13648
run: 7763 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20741 to 20
run: 7764 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20742 to 140
run: 7765 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 147 => ((7 integer))
setm: ((7 integer)) <= 147
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20743 to 147
run: 7766 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20744 to 13650
run: 7767 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13798 => ((9 byte-address))
setm: ((9 byte-address)) <= 13798
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20745 to 13798
run: 7768 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13798 to #\space
run: 7769 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 7770 print-character 13: (((reply)))
reply: nil nil
run: 7771 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 2
run: 7772 print-board 18: (((jump)) ((-8 offset)))
run: 7773 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7774 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7775 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9320 file-address) (raw))
sizeof: ((9320 file-address) (raw))
run: 10429 => ((8 file-address))
setm: ((8 file-address)) <= 10429
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10429
run: 7776 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10429 file) (raw))
m: ((10429 integer) (raw))
sizeof: ((10429 integer) (raw))
sizeof: ((_ square))
m: ((10430 square) (raw))
sizeof: ((10430 square) (raw))
run: #\B => ((6 square))
setm: ((6 square)) <= #\B
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\B
run: 7777 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7778 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20766 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7779 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\B)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20768 to 13645
run: 7780 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\B)
run: #\B => ((2 character))
setm: ((2 character)) <= #\B
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20769 to #\B
run: 7781 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7782 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20770 to 13647
run: 7783 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20771 to 13648
run: 7784 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20772 to 20
run: 7785 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20773 to 140
run: 7786 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 148 => ((7 integer))
setm: ((7 integer)) <= 148
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20774 to 148
run: 7787 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20775 to 13650
run: 7788 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13799 => ((9 byte-address))
setm: ((9 byte-address)) <= 13799
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20776 to 13799
run: 7789 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\B => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\B
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13799 to #\B
run: 7790 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 7791 print-character 13: (((reply)))
reply: nil nil
run: 7792 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7793 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20797 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7794 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20799 to 13645
run: 7795 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20800 to #\space
run: 7796 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7797 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20801 to 13647
run: 7798 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20802 to 13648
run: 7799 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20803 to 20
run: 7800 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20804 to 140
run: 7801 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 149 => ((7 integer))
setm: ((7 integer)) <= 149
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20805 to 149
run: 7802 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20806 to 13650
run: 7803 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13800 => ((9 byte-address))
setm: ((9 byte-address)) <= 13800
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20807 to 13800
run: 7804 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13800 to #\space
run: 7805 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 7806 print-character 13: (((reply)))
reply: nil nil
run: 7807 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 3
run: 7808 print-board 18: (((jump)) ((-8 offset)))
run: 7809 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7810 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7811 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9321 file-address) (raw))
sizeof: ((9321 file-address) (raw))
run: 10965 => ((8 file-address))
setm: ((8 file-address)) <= 10965
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 10965
run: 7812 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((10965 file) (raw))
m: ((10965 integer) (raw))
sizeof: ((10965 integer) (raw))
sizeof: ((_ square))
m: ((10966 square) (raw))
sizeof: ((10966 square) (raw))
run: #\Q => ((6 square))
setm: ((6 square)) <= #\Q
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\Q
run: 7813 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7814 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20828 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7815 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\Q)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20830 to 13645
run: 7816 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\Q)
run: #\Q => ((2 character))
setm: ((2 character)) <= #\Q
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20831 to #\Q
run: 7817 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7818 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20832 to 13647
run: 7819 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20833 to 13648
run: 7820 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20834 to 20
run: 7821 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20835 to 140
run: 7822 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 150 => ((7 integer))
setm: ((7 integer)) <= 150
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20836 to 150
run: 7823 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20837 to 13650
run: 7824 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13801 => ((9 byte-address))
setm: ((9 byte-address)) <= 13801
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20838 to 13801
run: 7825 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\Q => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\Q
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13801 to #\Q
run: 7826 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 7827 print-character 13: (((reply)))
reply: nil nil
run: 7828 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7829 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20859 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7830 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20861 to 13645
run: 7831 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20862 to #\space
run: 7832 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7833 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20863 to 13647
run: 7834 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20864 to 13648
run: 7835 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20865 to 20
run: 7836 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20866 to 140
run: 7837 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 151 => ((7 integer))
setm: ((7 integer)) <= 151
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20867 to 151
run: 7838 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20868 to 13650
run: 7839 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13802 => ((9 byte-address))
setm: ((9 byte-address)) <= 13802
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20869 to 13802
run: 7840 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13802 to #\space
run: 7841 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 7842 print-character 13: (((reply)))
reply: nil nil
run: 7843 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 4 => ((7 integer))
setm: ((7 integer)) <= 4
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 4
run: 7844 print-board 18: (((jump)) ((-8 offset)))
run: 7845 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7846 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7847 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9322 file-address) (raw))
sizeof: ((9322 file-address) (raw))
run: 11501 => ((8 file-address))
setm: ((8 file-address)) <= 11501
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 11501
run: 7848 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((11501 file) (raw))
m: ((11501 integer) (raw))
sizeof: ((11501 integer) (raw))
sizeof: ((_ square))
m: ((11502 square) (raw))
sizeof: ((11502 square) (raw))
run: #\K => ((6 square))
setm: ((6 square)) <= #\K
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\K
run: 7849 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7850 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20890 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7851 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\K)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20892 to 13645
run: 7852 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\K)
run: #\K => ((2 character))
setm: ((2 character)) <= #\K
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20893 to #\K
run: 7853 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7854 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20894 to 13647
run: 7855 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20895 to 13648
run: 7856 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20896 to 20
run: 7857 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20897 to 140
run: 7858 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 152 => ((7 integer))
setm: ((7 integer)) <= 152
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20898 to 152
run: 7859 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20899 to 13650
run: 7860 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13803 => ((9 byte-address))
setm: ((9 byte-address)) <= 13803
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20900 to 13803
run: 7861 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\K => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\K
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13803 to #\K
run: 7862 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 7863 print-character 13: (((reply)))
reply: nil nil
run: 7864 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7865 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20921 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7866 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20923 to 13645
run: 7867 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20924 to #\space
run: 7868 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7869 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20925 to 13647
run: 7870 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20926 to 13648
run: 7871 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20927 to 20
run: 7872 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20928 to 140
run: 7873 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 153 => ((7 integer))
setm: ((7 integer)) <= 153
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20929 to 153
run: 7874 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20930 to 13650
run: 7875 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13804 => ((9 byte-address))
setm: ((9 byte-address)) <= 13804
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20931 to 13804
run: 7876 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13804 to #\space
run: 7877 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 7878 print-character 13: (((reply)))
reply: nil nil
run: 7879 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 5 => ((7 integer))
setm: ((7 integer)) <= 5
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 5
run: 7880 print-board 18: (((jump)) ((-8 offset)))
run: 7881 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7882 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7883 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9323 file-address) (raw))
sizeof: ((9323 file-address) (raw))
run: 12037 => ((8 file-address))
setm: ((8 file-address)) <= 12037
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12037
run: 7884 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12037 file) (raw))
m: ((12037 integer) (raw))
sizeof: ((12037 integer) (raw))
sizeof: ((_ square))
m: ((12038 square) (raw))
sizeof: ((12038 square) (raw))
run: #\B => ((6 square))
setm: ((6 square)) <= #\B
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\B
run: 7885 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7886 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20952 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7887 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\B)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20954 to 13645
run: 7888 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\B)
run: #\B => ((2 character))
setm: ((2 character)) <= #\B
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20955 to #\B
run: 7889 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7890 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20956 to 13647
run: 7891 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20957 to 13648
run: 7892 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20958 to 20
run: 7893 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20959 to 140
run: 7894 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 154 => ((7 integer))
setm: ((7 integer)) <= 154
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20960 to 154
run: 7895 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20961 to 13650
run: 7896 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13805 => ((9 byte-address))
setm: ((9 byte-address)) <= 13805
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20962 to 13805
run: 7897 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\B => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\B
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13805 to #\B
run: 7898 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 7899 print-character 13: (((reply)))
reply: nil nil
run: 7900 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7901 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 20983 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7902 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 20985 to 13645
run: 7903 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 20986 to #\space
run: 7904 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7905 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 20987 to 13647
run: 7906 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 20988 to 13648
run: 7907 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 20989 to 20
run: 7908 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 20990 to 140
run: 7909 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 155 => ((7 integer))
setm: ((7 integer)) <= 155
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 20991 to 155
run: 7910 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 20992 to 13650
run: 7911 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13806 => ((9 byte-address))
setm: ((9 byte-address)) <= 13806
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 20993 to 13806
run: 7912 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13806 to #\space
run: 7913 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 7914 print-character 13: (((reply)))
reply: nil nil
run: 7915 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 6 => ((7 integer))
setm: ((7 integer)) <= 6
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 6
run: 7916 print-board 18: (((jump)) ((-8 offset)))
run: 7917 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7918 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7919 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9324 file-address) (raw))
sizeof: ((9324 file-address) (raw))
run: 12573 => ((8 file-address))
setm: ((8 file-address)) <= 12573
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 12573
run: 7920 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((12573 file) (raw))
m: ((12573 integer) (raw))
sizeof: ((12573 integer) (raw))
sizeof: ((_ square))
m: ((12574 square) (raw))
sizeof: ((12574 square) (raw))
run: #\N => ((6 square))
setm: ((6 square)) <= #\N
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\N
run: 7921 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7922 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21014 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7923 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\N)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21016 to 13645
run: 7924 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\N)
run: #\N => ((2 character))
setm: ((2 character)) <= #\N
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21017 to #\N
run: 7925 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7926 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21018 to 13647
run: 7927 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21019 to 13648
run: 7928 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21020 to 20
run: 7929 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21021 to 140
run: 7930 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 156 => ((7 integer))
setm: ((7 integer)) <= 156
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21022 to 156
run: 7931 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21023 to 13650
run: 7932 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13807 => ((9 byte-address))
setm: ((9 byte-address)) <= 13807
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21024 to 13807
run: 7933 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\N => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\N
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13807 to #\N
run: 7934 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 7935 print-character 13: (((reply)))
reply: nil nil
run: 7936 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7937 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21045 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7938 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21047 to 13645
run: 7939 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21048 to #\space
run: 7940 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7941 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21049 to 13647
run: 7942 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21050 to 13648
run: 7943 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21051 to 20
run: 7944 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21052 to 140
run: 7945 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 157 => ((7 integer))
setm: ((7 integer)) <= 157
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21053 to 157
run: 7946 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21054 to 13650
run: 7947 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13808 => ((9 byte-address))
setm: ((9 byte-address)) <= 13808
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21055 to 13808
run: 7948 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13808 to #\space
run: 7949 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 7950 print-character 13: (((reply)))
reply: nil nil
run: 7951 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 7 => ((7 integer))
setm: ((7 integer)) <= 7
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 7
run: 7952 print-board 18: (((jump)) ((-8 offset)))
run: 7953 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to nil
run: 7954 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7955 print-board 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((9317 board) (raw))
m: ((9317 integer) (raw))
sizeof: ((9317 integer) (raw))
sizeof: ((_ file-address))
m: ((9325 file-address) (raw))
sizeof: ((9325 file-address) (raw))
run: 13109 => ((8 file-address))
setm: ((8 file-address)) <= 13109
setm: size of ((8 file-address)) is 1
setm: ((8 file-address)): setting 13891 to 13109
run: 7956 print-board 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
array-len: ((13109 file) (raw))
m: ((13109 integer) (raw))
sizeof: ((13109 integer) (raw))
sizeof: ((_ square))
m: ((13110 square) (raw))
sizeof: ((13110 square) (raw))
run: #\R => ((6 square))
setm: ((6 square)) <= #\R
setm: size of ((6 square)) is 1
setm: ((6 square)): setting 13889 to #\R
run: 7957 print-board 15: (((print-character)) ((1 terminal-address)) ((6 square)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 square))
sizeof: ((6 square))
run: 7958 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21076 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7959 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\R)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21078 to 13645
run: 7960 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\R)
run: #\R => ((2 character))
setm: ((2 character)) <= #\R
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21079 to #\R
run: 7961 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7962 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21080 to 13647
run: 7963 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21081 to 13648
run: 7964 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21082 to 20
run: 7965 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21083 to 140
run: 7966 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 158 => ((7 integer))
setm: ((7 integer)) <= 158
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21084 to 158
run: 7967 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21085 to 13650
run: 7968 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13809 => ((9 byte-address))
setm: ((9 byte-address)) <= 13809
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21086 to 13809
run: 7969 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\R => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\R
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13809 to #\R
run: 7970 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 7971 print-character 13: (((reply)))
reply: nil nil
run: 7972 print-board 16: (((print-character)) ((1 terminal-address)) ((  literal)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7973 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21107 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7974 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21109 to 13645
run: 7975 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21110 to #\space
run: 7976 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7977 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21111 to 13647
run: 7978 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21112 to 13648
run: 7979 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21113 to 20
run: 7980 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 140 => ((6 integer))
setm: ((6 integer)) <= 140
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21114 to 140
run: 7981 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 159 => ((7 integer))
setm: ((7 integer)) <= 159
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21115 to 159
run: 7982 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21116 to 13650
run: 7983 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13810 => ((9 byte-address))
setm: ((9 byte-address)) <= 13810
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21117 to 13810
run: 7984 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13810 to #\space
run: 7985 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 20 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 20
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 20
run: 7986 print-character 13: (((reply)))
reply: nil nil
run: 7987 print-board 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: 8 => ((7 integer))
setm: ((7 integer)) <= 8
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 13890 to 8
run: 7988 print-board 18: (((jump)) ((-8 offset)))
run: 7989 print-board 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
m: ((7 integer))
sizeof: ((7 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to t
run: 7990 print-board 12: (((jump-if)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7991 print-board 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: -1 => ((3 integer))
setm: ((3 integer)) <= -1
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 13886 to -1
run: 7992 print-board 20: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7993 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21138 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 7994 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21140 to 13645
run: 7995 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 7996 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 21141 to 13647
run: 7997 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 8 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 8
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 8
run: 7998 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21142 to 13648
run: 7999 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 8000 cursor-to-next-line 7: (((reply)))
reply: nil nil
schedule: scheduling print-board/main for further processing
schedule: print-board/main
run: 8001 print-board 21: (((jump)) ((-18 offset)))
run: 8002 print-board 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 13887 to t
run: 8003 print-board 5: (((jump-if)) ((4 boolean)) ((16 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 8004 print-board 22: (((6 string-address)) <- ((new))   +----------------)
run: 21169 => ((6 string-address))
setm: ((6 string-address)) <= 21169
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 21169
run: 8005 print-board 23: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 8006 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21189 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8007 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 21169)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21191 to 13645
run: 8008 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 21169)
run: 21169 => ((2 string-address))
setm: ((2 string-address)) <= 21169
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 21192 to 21169
run: 8009 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
run: 19 => ((3 integer))
setm: ((3 integer)) <= 19
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 21193 to 19
run: 8010 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 0
run: 8011 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8012 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8013 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21170 byte) (raw))
sizeof: ((21170 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\space
run: 8014 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8015 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21220 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8016 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21222 to 13645
run: 8017 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21223 to #\space
run: 8018 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8019 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21224 to 13647
run: 8020 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21225 to 13648
run: 8021 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21226 to 20
run: 8022 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21227 to 160
run: 8023 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 160 => ((7 integer))
setm: ((7 integer)) <= 160
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21228 to 160
run: 8024 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21229 to 13650
run: 8025 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13811 => ((9 byte-address))
setm: ((9 byte-address)) <= 13811
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21230 to 13811
run: 8026 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13811 to #\space
run: 8027 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 8028 print-character 13: (((reply)))
reply: nil nil
run: 8029 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 1
run: 8030 print-string 10: (((jump)) ((-6 offset)))
run: 8031 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8032 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8033 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21171 byte) (raw))
sizeof: ((21171 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\space
run: 8034 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8035 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21251 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8036 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21253 to 13645
run: 8037 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21254 to #\space
run: 8038 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8039 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21255 to 13647
run: 8040 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21256 to 13648
run: 8041 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21257 to 20
run: 8042 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21258 to 160
run: 8043 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 161 => ((7 integer))
setm: ((7 integer)) <= 161
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21259 to 161
run: 8044 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21260 to 13650
run: 8045 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13812 => ((9 byte-address))
setm: ((9 byte-address)) <= 13812
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21261 to 13812
run: 8046 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13812 to #\space
run: 8047 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 8048 print-character 13: (((reply)))
reply: nil nil
run: 8049 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 2
run: 8050 print-string 10: (((jump)) ((-6 offset)))
run: 8051 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8052 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8053 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21172 byte) (raw))
sizeof: ((21172 byte) (raw))
run: #\+ => ((6 character))
setm: ((6 character)) <= #\+
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\+
run: 8054 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8055 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21282 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8056 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\+)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21284 to 13645
run: 8057 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\+)
run: #\+ => ((2 character))
setm: ((2 character)) <= #\+
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21285 to #\+
run: 8058 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8059 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21286 to 13647
run: 8060 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21287 to 13648
run: 8061 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21288 to 20
run: 8062 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21289 to 160
run: 8063 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 162 => ((7 integer))
setm: ((7 integer)) <= 162
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21290 to 162
run: 8064 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21291 to 13650
run: 8065 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13813 => ((9 byte-address))
setm: ((9 byte-address)) <= 13813
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21292 to 13813
run: 8066 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\+ => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\+
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13813 to #\+
run: 8067 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 8068 print-character 13: (((reply)))
reply: nil nil
run: 8069 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 3
run: 8070 print-string 10: (((jump)) ((-6 offset)))
run: 8071 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8072 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8073 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21173 byte) (raw))
sizeof: ((21173 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8074 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8075 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21313 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8076 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21315 to 13645
run: 8077 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21316 to #\-
run: 8078 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8079 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21317 to 13647
run: 8080 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21318 to 13648
run: 8081 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21319 to 20
run: 8082 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21320 to 160
run: 8083 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 163 => ((7 integer))
setm: ((7 integer)) <= 163
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21321 to 163
run: 8084 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21322 to 13650
run: 8085 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13814 => ((9 byte-address))
setm: ((9 byte-address)) <= 13814
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21323 to 13814
run: 8086 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13814 to #\-
run: 8087 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 8088 print-character 13: (((reply)))
reply: nil nil
run: 8089 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 4
run: 8090 print-string 10: (((jump)) ((-6 offset)))
run: 8091 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8092 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8093 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21174 byte) (raw))
sizeof: ((21174 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8094 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8095 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21344 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8096 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21346 to 13645
run: 8097 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21347 to #\-
run: 8098 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8099 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21348 to 13647
run: 8100 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21349 to 13648
run: 8101 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21350 to 20
run: 8102 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21351 to 160
run: 8103 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 164 => ((7 integer))
setm: ((7 integer)) <= 164
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21352 to 164
run: 8104 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21353 to 13650
run: 8105 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13815 => ((9 byte-address))
setm: ((9 byte-address)) <= 13815
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21354 to 13815
run: 8106 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13815 to #\-
run: 8107 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 8108 print-character 13: (((reply)))
reply: nil nil
run: 8109 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 5 => ((4 integer))
setm: ((4 integer)) <= 5
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 5
run: 8110 print-string 10: (((jump)) ((-6 offset)))
run: 8111 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8112 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8113 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21175 byte) (raw))
sizeof: ((21175 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8114 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8115 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21375 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8116 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21377 to 13645
run: 8117 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21378 to #\-
run: 8118 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8119 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21379 to 13647
run: 8120 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21380 to 13648
run: 8121 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21381 to 20
run: 8122 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21382 to 160
run: 8123 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 165 => ((7 integer))
setm: ((7 integer)) <= 165
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21383 to 165
run: 8124 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21384 to 13650
run: 8125 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13816 => ((9 byte-address))
setm: ((9 byte-address)) <= 13816
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21385 to 13816
run: 8126 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13816 to #\-
run: 8127 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 8128 print-character 13: (((reply)))
reply: nil nil
run: 8129 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 6 => ((4 integer))
setm: ((4 integer)) <= 6
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 6
run: 8130 print-string 10: (((jump)) ((-6 offset)))
run: 8131 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8132 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8133 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21176 byte) (raw))
sizeof: ((21176 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8134 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8135 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21406 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8136 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21408 to 13645
run: 8137 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21409 to #\-
run: 8138 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8139 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21410 to 13647
run: 8140 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21411 to 13648
run: 8141 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21412 to 20
run: 8142 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21413 to 160
run: 8143 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 166 => ((7 integer))
setm: ((7 integer)) <= 166
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21414 to 166
run: 8144 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21415 to 13650
run: 8145 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13817 => ((9 byte-address))
setm: ((9 byte-address)) <= 13817
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21416 to 13817
run: 8146 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13817 to #\-
run: 8147 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 8148 print-character 13: (((reply)))
reply: nil nil
run: 8149 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 7 => ((4 integer))
setm: ((4 integer)) <= 7
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 7
run: 8150 print-string 10: (((jump)) ((-6 offset)))
run: 8151 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8152 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8153 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21177 byte) (raw))
sizeof: ((21177 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8154 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8155 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21437 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8156 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21439 to 13645
run: 8157 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21440 to #\-
run: 8158 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8159 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21441 to 13647
run: 8160 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21442 to 13648
run: 8161 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21443 to 20
run: 8162 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21444 to 160
run: 8163 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 167 => ((7 integer))
setm: ((7 integer)) <= 167
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21445 to 167
run: 8164 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21446 to 13650
run: 8165 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13818 => ((9 byte-address))
setm: ((9 byte-address)) <= 13818
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21447 to 13818
run: 8166 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13818 to #\-
run: 8167 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 8168 print-character 13: (((reply)))
reply: nil nil
run: 8169 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 8 => ((4 integer))
setm: ((4 integer)) <= 8
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 8
run: 8170 print-string 10: (((jump)) ((-6 offset)))
run: 8171 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8172 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8173 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21178 byte) (raw))
sizeof: ((21178 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8174 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8175 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21468 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8176 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21470 to 13645
run: 8177 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21471 to #\-
run: 8178 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8179 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21472 to 13647
run: 8180 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21473 to 13648
run: 8181 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21474 to 20
run: 8182 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21475 to 160
run: 8183 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 168 => ((7 integer))
setm: ((7 integer)) <= 168
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21476 to 168
run: 8184 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21477 to 13650
run: 8185 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13819 => ((9 byte-address))
setm: ((9 byte-address)) <= 13819
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21478 to 13819
run: 8186 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13819 to #\-
run: 8187 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 8188 print-character 13: (((reply)))
reply: nil nil
run: 8189 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 9
run: 8190 print-string 10: (((jump)) ((-6 offset)))
run: 8191 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8192 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8193 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21179 byte) (raw))
sizeof: ((21179 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8194 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8195 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21499 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8196 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21501 to 13645
run: 8197 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21502 to #\-
run: 8198 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8199 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21503 to 13647
run: 8200 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21504 to 13648
run: 8201 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21505 to 20
run: 8202 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21506 to 160
run: 8203 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 169 => ((7 integer))
setm: ((7 integer)) <= 169
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21507 to 169
run: 8204 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21508 to 13650
run: 8205 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13820 => ((9 byte-address))
setm: ((9 byte-address)) <= 13820
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21509 to 13820
run: 8206 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13820 to #\-
run: 8207 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 8208 print-character 13: (((reply)))
reply: nil nil
run: 8209 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 10 => ((4 integer))
setm: ((4 integer)) <= 10
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 10
run: 8210 print-string 10: (((jump)) ((-6 offset)))
run: 8211 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8212 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8213 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21180 byte) (raw))
sizeof: ((21180 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8214 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8215 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21530 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8216 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21532 to 13645
run: 8217 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21533 to #\-
run: 8218 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8219 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21534 to 13647
run: 8220 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21535 to 13648
run: 8221 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21536 to 20
run: 8222 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21537 to 160
run: 8223 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 170 => ((7 integer))
setm: ((7 integer)) <= 170
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21538 to 170
run: 8224 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21539 to 13650
run: 8225 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13821 => ((9 byte-address))
setm: ((9 byte-address)) <= 13821
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21540 to 13821
run: 8226 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13821 to #\-
run: 8227 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 8228 print-character 13: (((reply)))
reply: nil nil
run: 8229 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 11 => ((4 integer))
setm: ((4 integer)) <= 11
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 11
run: 8230 print-string 10: (((jump)) ((-6 offset)))
run: 8231 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8232 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8233 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21181 byte) (raw))
sizeof: ((21181 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8234 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8235 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21561 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8236 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21563 to 13645
run: 8237 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21564 to #\-
run: 8238 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8239 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21565 to 13647
run: 8240 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21566 to 13648
run: 8241 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21567 to 20
run: 8242 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21568 to 160
run: 8243 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 171 => ((7 integer))
setm: ((7 integer)) <= 171
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21569 to 171
run: 8244 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21570 to 13650
run: 8245 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13822 => ((9 byte-address))
setm: ((9 byte-address)) <= 13822
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21571 to 13822
run: 8246 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13822 to #\-
run: 8247 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 8248 print-character 13: (((reply)))
reply: nil nil
run: 8249 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 12 => ((4 integer))
setm: ((4 integer)) <= 12
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 12
run: 8250 print-string 10: (((jump)) ((-6 offset)))
run: 8251 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8252 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8253 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21182 byte) (raw))
sizeof: ((21182 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8254 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8255 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21592 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8256 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21594 to 13645
run: 8257 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21595 to #\-
run: 8258 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8259 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21596 to 13647
run: 8260 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21597 to 13648
run: 8261 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21598 to 20
run: 8262 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21599 to 160
run: 8263 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 172 => ((7 integer))
setm: ((7 integer)) <= 172
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21600 to 172
run: 8264 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21601 to 13650
run: 8265 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13823 => ((9 byte-address))
setm: ((9 byte-address)) <= 13823
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21602 to 13823
run: 8266 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13823 to #\-
run: 8267 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 8268 print-character 13: (((reply)))
reply: nil nil
run: 8269 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 13 => ((4 integer))
setm: ((4 integer)) <= 13
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 13
run: 8270 print-string 10: (((jump)) ((-6 offset)))
run: 8271 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8272 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8273 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21183 byte) (raw))
sizeof: ((21183 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8274 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8275 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21623 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8276 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21625 to 13645
run: 8277 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21626 to #\-
run: 8278 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8279 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21627 to 13647
run: 8280 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21628 to 13648
run: 8281 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21629 to 20
run: 8282 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21630 to 160
run: 8283 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 173 => ((7 integer))
setm: ((7 integer)) <= 173
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21631 to 173
run: 8284 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21632 to 13650
run: 8285 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13824 => ((9 byte-address))
setm: ((9 byte-address)) <= 13824
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21633 to 13824
run: 8286 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13824 to #\-
run: 8287 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 8288 print-character 13: (((reply)))
reply: nil nil
run: 8289 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 14 => ((4 integer))
setm: ((4 integer)) <= 14
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 14
run: 8290 print-string 10: (((jump)) ((-6 offset)))
run: 8291 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8292 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8293 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21184 byte) (raw))
sizeof: ((21184 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8294 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8295 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21654 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8296 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21656 to 13645
run: 8297 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21657 to #\-
run: 8298 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8299 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21658 to 13647
run: 8300 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21659 to 13648
run: 8301 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21660 to 20
run: 8302 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21661 to 160
run: 8303 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 174 => ((7 integer))
setm: ((7 integer)) <= 174
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21662 to 174
run: 8304 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21663 to 13650
run: 8305 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13825 => ((9 byte-address))
setm: ((9 byte-address)) <= 13825
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21664 to 13825
run: 8306 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13825 to #\-
run: 8307 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 8308 print-character 13: (((reply)))
reply: nil nil
run: 8309 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 15 => ((4 integer))
setm: ((4 integer)) <= 15
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 15
run: 8310 print-string 10: (((jump)) ((-6 offset)))
run: 8311 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8312 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8313 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21185 byte) (raw))
sizeof: ((21185 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8314 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8315 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21685 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8316 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21687 to 13645
run: 8317 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21688 to #\-
run: 8318 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8319 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21689 to 13647
run: 8320 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21690 to 13648
run: 8321 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21691 to 20
run: 8322 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21692 to 160
run: 8323 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 175 => ((7 integer))
setm: ((7 integer)) <= 175
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21693 to 175
run: 8324 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21694 to 13650
run: 8325 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13826 => ((9 byte-address))
setm: ((9 byte-address)) <= 13826
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21695 to 13826
run: 8326 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13826 to #\-
run: 8327 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 8328 print-character 13: (((reply)))
reply: nil nil
run: 8329 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 16 => ((4 integer))
setm: ((4 integer)) <= 16
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 16
run: 8330 print-string 10: (((jump)) ((-6 offset)))
run: 8331 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8332 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8333 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21186 byte) (raw))
sizeof: ((21186 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8334 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8335 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21716 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8336 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21718 to 13645
run: 8337 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21719 to #\-
run: 8338 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8339 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21720 to 13647
run: 8340 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21721 to 13648
run: 8341 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21722 to 20
run: 8342 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21723 to 160
run: 8343 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 176 => ((7 integer))
setm: ((7 integer)) <= 176
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21724 to 176
run: 8344 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21725 to 13650
run: 8345 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13827 => ((9 byte-address))
setm: ((9 byte-address)) <= 13827
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21726 to 13827
run: 8346 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13827 to #\-
run: 8347 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 8348 print-character 13: (((reply)))
reply: nil nil
run: 8349 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 17 => ((4 integer))
setm: ((4 integer)) <= 17
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 17
run: 8350 print-string 10: (((jump)) ((-6 offset)))
run: 8351 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8352 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8353 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21187 byte) (raw))
sizeof: ((21187 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8354 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8355 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21747 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8356 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21749 to 13645
run: 8357 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21750 to #\-
run: 8358 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8359 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21751 to 13647
run: 8360 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21752 to 13648
run: 8361 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21753 to 20
run: 8362 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21754 to 160
run: 8363 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 177 => ((7 integer))
setm: ((7 integer)) <= 177
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21755 to 177
run: 8364 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21756 to 13650
run: 8365 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13828 => ((9 byte-address))
setm: ((9 byte-address)) <= 13828
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21757 to 13828
run: 8366 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13828 to #\-
run: 8367 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 8368 print-character 13: (((reply)))
reply: nil nil
run: 8369 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 18 => ((4 integer))
setm: ((4 integer)) <= 18
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 18
run: 8370 print-string 10: (((jump)) ((-6 offset)))
run: 8371 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to nil
run: 8372 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8373 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21169 string) (raw))
m: ((21169 integer) (raw))
sizeof: ((21169 integer) (raw))
sizeof: ((_ byte))
m: ((21188 byte) (raw))
sizeof: ((21188 byte) (raw))
run: #\- => ((6 character))
setm: ((6 character)) <= #\-
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21196 to #\-
run: 8374 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8375 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21778 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8376 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\-)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21780 to 13645
run: 8377 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\-)
run: #\- => ((2 character))
setm: ((2 character)) <= #\-
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21781 to #\-
run: 8378 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8379 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21782 to 13647
run: 8380 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21783 to 13648
run: 8381 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21784 to 20
run: 8382 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 160 => ((6 integer))
setm: ((6 integer)) <= 160
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21785 to 160
run: 8383 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 178 => ((7 integer))
setm: ((7 integer)) <= 178
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21786 to 178
run: 8384 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21787 to 13650
run: 8385 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13829 => ((9 byte-address))
setm: ((9 byte-address)) <= 13829
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21788 to 13829
run: 8386 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\- => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\-
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13829 to #\-
run: 8387 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 8388 print-character 13: (((reply)))
reply: nil nil
run: 8389 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 19 => ((4 integer))
setm: ((4 integer)) <= 19
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21194 to 19
run: 8390 print-string 10: (((jump)) ((-6 offset)))
run: 8391 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21195 to t
run: 8392 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8393 print-board 24: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8394 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21809 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8395 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21811 to 13645
run: 8396 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8397 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 21812 to 13647
run: 8398 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 9 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 9
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 9
run: 8399 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21813 to 13648
run: 8400 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 8401 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 8402 print-board 25: (((6 string-address)) <- ((new))     a b c d e f g h)
run: 21840 => ((6 string-address))
setm: ((6 string-address)) <= 21840
setm: size of ((6 string-address)) is 1
setm: ((6 string-address)): setting 13889 to 21840
run: 8403 print-board 26: (((print-string)) ((1 terminal-address)) ((6 string-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 string-address))
sizeof: ((6 string-address))
run: 8404 print-string 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21860 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8405 print-string 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 21840)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21862 to 13645
run: 8406 print-string 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (13645 21840)
run: 21840 => ((2 string-address))
setm: ((2 string-address)) <= 21840
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 21863 to 21840
run: 8407 print-string 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
run: 19 => ((3 integer))
setm: ((3 integer)) <= 19
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 21864 to 19
run: 8408 print-string 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 0
run: 8409 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8410 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8411 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21841 byte) (raw))
sizeof: ((21841 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8412 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8413 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21891 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8414 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21893 to 13645
run: 8415 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21894 to #\space
run: 8416 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8417 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21895 to 13647
run: 8418 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21896 to 13648
run: 8419 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21897 to 20
run: 8420 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21898 to 180
run: 8421 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 180 => ((7 integer))
setm: ((7 integer)) <= 180
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21899 to 180
run: 8422 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21900 to 13650
run: 8423 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13831 => ((9 byte-address))
setm: ((9 byte-address)) <= 13831
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21901 to 13831
run: 8424 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13831 to #\space
run: 8425 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 1
run: 8426 print-character 13: (((reply)))
reply: nil nil
run: 8427 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 1
run: 8428 print-string 10: (((jump)) ((-6 offset)))
run: 8429 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8430 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8431 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21842 byte) (raw))
sizeof: ((21842 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8432 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8433 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21922 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8434 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21924 to 13645
run: 8435 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21925 to #\space
run: 8436 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8437 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21926 to 13647
run: 8438 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21927 to 13648
run: 8439 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21928 to 20
run: 8440 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21929 to 180
run: 8441 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 181 => ((7 integer))
setm: ((7 integer)) <= 181
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21930 to 181
run: 8442 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21931 to 13650
run: 8443 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13832 => ((9 byte-address))
setm: ((9 byte-address)) <= 13832
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21932 to 13832
run: 8444 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13832 to #\space
run: 8445 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 2
run: 8446 print-character 13: (((reply)))
reply: nil nil
run: 8447 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 2
run: 8448 print-string 10: (((jump)) ((-6 offset)))
run: 8449 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8450 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8451 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21843 byte) (raw))
sizeof: ((21843 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8452 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8453 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21953 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8454 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21955 to 13645
run: 8455 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21956 to #\space
run: 8456 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8457 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21957 to 13647
run: 8458 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21958 to 13648
run: 8459 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21959 to 20
run: 8460 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21960 to 180
run: 8461 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 182 => ((7 integer))
setm: ((7 integer)) <= 182
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21961 to 182
run: 8462 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21962 to 13650
run: 8463 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13833 => ((9 byte-address))
setm: ((9 byte-address)) <= 13833
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21963 to 13833
run: 8464 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13833 to #\space
run: 8465 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 3
run: 8466 print-character 13: (((reply)))
reply: nil nil
run: 8467 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 3
run: 8468 print-string 10: (((jump)) ((-6 offset)))
run: 8469 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8470 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8471 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21844 byte) (raw))
sizeof: ((21844 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8472 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8473 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 21984 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8474 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 21986 to 13645
run: 8475 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 21987 to #\space
run: 8476 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8477 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 21988 to 13647
run: 8478 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 21989 to 13648
run: 8479 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 21990 to 20
run: 8480 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 21991 to 180
run: 8481 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 183 => ((7 integer))
setm: ((7 integer)) <= 183
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 21992 to 183
run: 8482 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 21993 to 13650
run: 8483 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13834 => ((9 byte-address))
setm: ((9 byte-address)) <= 13834
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 21994 to 13834
run: 8484 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13834 to #\space
run: 8485 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 4
run: 8486 print-character 13: (((reply)))
reply: nil nil
run: 8487 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 4
run: 8488 print-string 10: (((jump)) ((-6 offset)))
run: 8489 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8490 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8491 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21845 byte) (raw))
sizeof: ((21845 byte) (raw))
run: #\a => ((6 character))
setm: ((6 character)) <= #\a
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\a
run: 8492 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8493 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22015 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8494 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\a)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22017 to 13645
run: 8495 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\a)
run: #\a => ((2 character))
setm: ((2 character)) <= #\a
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22018 to #\a
run: 8496 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8497 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22019 to 13647
run: 8498 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22020 to 13648
run: 8499 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22021 to 20
run: 8500 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22022 to 180
schedule: scheduling print-character/print-string/print-board/main for further processing
schedule: print-character/print-string/print-board/main
run: 8501 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 184 => ((7 integer))
setm: ((7 integer)) <= 184
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22023 to 184
run: 8502 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22024 to 13650
run: 8503 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13835 => ((9 byte-address))
setm: ((9 byte-address)) <= 13835
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22025 to 13835
run: 8504 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\a => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\a
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13835 to #\a
run: 8505 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 5
run: 8506 print-character 13: (((reply)))
reply: nil nil
run: 8507 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 5 => ((4 integer))
setm: ((4 integer)) <= 5
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 5
run: 8508 print-string 10: (((jump)) ((-6 offset)))
run: 8509 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8510 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8511 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21846 byte) (raw))
sizeof: ((21846 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8512 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8513 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22046 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8514 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22048 to 13645
run: 8515 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22049 to #\space
run: 8516 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8517 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22050 to 13647
run: 8518 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22051 to 13648
run: 8519 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22052 to 20
run: 8520 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22053 to 180
run: 8521 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 185 => ((7 integer))
setm: ((7 integer)) <= 185
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22054 to 185
run: 8522 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22055 to 13650
run: 8523 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13836 => ((9 byte-address))
setm: ((9 byte-address)) <= 13836
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22056 to 13836
run: 8524 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13836 to #\space
run: 8525 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 6
run: 8526 print-character 13: (((reply)))
reply: nil nil
run: 8527 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 6 => ((4 integer))
setm: ((4 integer)) <= 6
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 6
run: 8528 print-string 10: (((jump)) ((-6 offset)))
run: 8529 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8530 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8531 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21847 byte) (raw))
sizeof: ((21847 byte) (raw))
run: #\b => ((6 character))
setm: ((6 character)) <= #\b
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\b
run: 8532 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8533 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22077 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8534 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\b)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22079 to 13645
run: 8535 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\b)
run: #\b => ((2 character))
setm: ((2 character)) <= #\b
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22080 to #\b
run: 8536 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8537 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22081 to 13647
run: 8538 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22082 to 13648
run: 8539 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22083 to 20
run: 8540 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22084 to 180
run: 8541 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 186 => ((7 integer))
setm: ((7 integer)) <= 186
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22085 to 186
run: 8542 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22086 to 13650
run: 8543 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13837 => ((9 byte-address))
setm: ((9 byte-address)) <= 13837
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22087 to 13837
run: 8544 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\b => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\b
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13837 to #\b
run: 8545 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 7
run: 8546 print-character 13: (((reply)))
reply: nil nil
run: 8547 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 7 => ((4 integer))
setm: ((4 integer)) <= 7
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 7
run: 8548 print-string 10: (((jump)) ((-6 offset)))
run: 8549 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8550 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8551 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21848 byte) (raw))
sizeof: ((21848 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8552 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8553 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22108 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8554 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22110 to 13645
run: 8555 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22111 to #\space
run: 8556 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8557 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22112 to 13647
run: 8558 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22113 to 13648
run: 8559 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22114 to 20
run: 8560 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22115 to 180
run: 8561 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 187 => ((7 integer))
setm: ((7 integer)) <= 187
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22116 to 187
run: 8562 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22117 to 13650
run: 8563 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13838 => ((9 byte-address))
setm: ((9 byte-address)) <= 13838
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22118 to 13838
run: 8564 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13838 to #\space
run: 8565 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 8
run: 8566 print-character 13: (((reply)))
reply: nil nil
run: 8567 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 8 => ((4 integer))
setm: ((4 integer)) <= 8
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 8
run: 8568 print-string 10: (((jump)) ((-6 offset)))
run: 8569 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8570 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8571 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21849 byte) (raw))
sizeof: ((21849 byte) (raw))
run: #\c => ((6 character))
setm: ((6 character)) <= #\c
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\c
run: 8572 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8573 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22139 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8574 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\c)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22141 to 13645
run: 8575 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\c)
run: #\c => ((2 character))
setm: ((2 character)) <= #\c
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22142 to #\c
run: 8576 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8577 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22143 to 13647
run: 8578 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22144 to 13648
run: 8579 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22145 to 20
run: 8580 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22146 to 180
run: 8581 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 188 => ((7 integer))
setm: ((7 integer)) <= 188
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22147 to 188
run: 8582 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22148 to 13650
run: 8583 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13839 => ((9 byte-address))
setm: ((9 byte-address)) <= 13839
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22149 to 13839
run: 8584 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\c => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\c
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13839 to #\c
run: 8585 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 9
run: 8586 print-character 13: (((reply)))
reply: nil nil
run: 8587 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 9
run: 8588 print-string 10: (((jump)) ((-6 offset)))
run: 8589 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8590 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8591 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21850 byte) (raw))
sizeof: ((21850 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8592 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8593 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22170 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8594 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22172 to 13645
run: 8595 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22173 to #\space
run: 8596 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8597 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22174 to 13647
run: 8598 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22175 to 13648
run: 8599 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22176 to 20
run: 8600 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22177 to 180
run: 8601 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 189 => ((7 integer))
setm: ((7 integer)) <= 189
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22178 to 189
run: 8602 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22179 to 13650
run: 8603 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13840 => ((9 byte-address))
setm: ((9 byte-address)) <= 13840
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22180 to 13840
run: 8604 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13840 to #\space
run: 8605 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 10
run: 8606 print-character 13: (((reply)))
reply: nil nil
run: 8607 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 10 => ((4 integer))
setm: ((4 integer)) <= 10
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 10
run: 8608 print-string 10: (((jump)) ((-6 offset)))
run: 8609 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8610 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8611 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21851 byte) (raw))
sizeof: ((21851 byte) (raw))
run: #\d => ((6 character))
setm: ((6 character)) <= #\d
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\d
run: 8612 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8613 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22201 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8614 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\d)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22203 to 13645
run: 8615 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\d)
run: #\d => ((2 character))
setm: ((2 character)) <= #\d
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22204 to #\d
run: 8616 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8617 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22205 to 13647
run: 8618 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22206 to 13648
run: 8619 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22207 to 20
run: 8620 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22208 to 180
run: 8621 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 190 => ((7 integer))
setm: ((7 integer)) <= 190
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22209 to 190
run: 8622 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22210 to 13650
run: 8623 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13841 => ((9 byte-address))
setm: ((9 byte-address)) <= 13841
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22211 to 13841
run: 8624 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\d => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\d
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13841 to #\d
run: 8625 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 11 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 11
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 11
run: 8626 print-character 13: (((reply)))
reply: nil nil
run: 8627 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 11 => ((4 integer))
setm: ((4 integer)) <= 11
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 11
run: 8628 print-string 10: (((jump)) ((-6 offset)))
run: 8629 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8630 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8631 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21852 byte) (raw))
sizeof: ((21852 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8632 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8633 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22232 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8634 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22234 to 13645
run: 8635 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22235 to #\space
run: 8636 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8637 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22236 to 13647
run: 8638 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22237 to 13648
run: 8639 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22238 to 20
run: 8640 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22239 to 180
run: 8641 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 191 => ((7 integer))
setm: ((7 integer)) <= 191
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22240 to 191
run: 8642 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22241 to 13650
run: 8643 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13842 => ((9 byte-address))
setm: ((9 byte-address)) <= 13842
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22242 to 13842
run: 8644 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13842 to #\space
run: 8645 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 12 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 12
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 12
run: 8646 print-character 13: (((reply)))
reply: nil nil
run: 8647 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 12 => ((4 integer))
setm: ((4 integer)) <= 12
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 12
run: 8648 print-string 10: (((jump)) ((-6 offset)))
run: 8649 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8650 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8651 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21853 byte) (raw))
sizeof: ((21853 byte) (raw))
run: #\e => ((6 character))
setm: ((6 character)) <= #\e
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\e
run: 8652 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8653 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22263 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8654 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\e)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22265 to 13645
run: 8655 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\e)
run: #\e => ((2 character))
setm: ((2 character)) <= #\e
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22266 to #\e
run: 8656 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8657 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22267 to 13647
run: 8658 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22268 to 13648
run: 8659 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22269 to 20
run: 8660 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22270 to 180
run: 8661 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 192 => ((7 integer))
setm: ((7 integer)) <= 192
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22271 to 192
run: 8662 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22272 to 13650
run: 8663 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13843 => ((9 byte-address))
setm: ((9 byte-address)) <= 13843
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22273 to 13843
run: 8664 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\e => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\e
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13843 to #\e
run: 8665 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 13 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 13
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 13
run: 8666 print-character 13: (((reply)))
reply: nil nil
run: 8667 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 13 => ((4 integer))
setm: ((4 integer)) <= 13
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 13
run: 8668 print-string 10: (((jump)) ((-6 offset)))
run: 8669 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8670 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8671 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21854 byte) (raw))
sizeof: ((21854 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8672 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8673 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22294 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8674 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22296 to 13645
run: 8675 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22297 to #\space
run: 8676 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8677 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22298 to 13647
run: 8678 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22299 to 13648
run: 8679 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22300 to 20
run: 8680 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22301 to 180
run: 8681 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 193 => ((7 integer))
setm: ((7 integer)) <= 193
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22302 to 193
run: 8682 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22303 to 13650
run: 8683 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13844 => ((9 byte-address))
setm: ((9 byte-address)) <= 13844
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22304 to 13844
run: 8684 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13844 to #\space
run: 8685 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 14 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 14
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 14
run: 8686 print-character 13: (((reply)))
reply: nil nil
run: 8687 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 14 => ((4 integer))
setm: ((4 integer)) <= 14
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 14
run: 8688 print-string 10: (((jump)) ((-6 offset)))
run: 8689 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8690 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8691 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21855 byte) (raw))
sizeof: ((21855 byte) (raw))
run: #\f => ((6 character))
setm: ((6 character)) <= #\f
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\f
run: 8692 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8693 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22325 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8694 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\f)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22327 to 13645
run: 8695 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\f)
run: #\f => ((2 character))
setm: ((2 character)) <= #\f
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22328 to #\f
run: 8696 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8697 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22329 to 13647
run: 8698 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22330 to 13648
run: 8699 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22331 to 20
run: 8700 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22332 to 180
run: 8701 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 194 => ((7 integer))
setm: ((7 integer)) <= 194
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22333 to 194
run: 8702 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22334 to 13650
run: 8703 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13845 => ((9 byte-address))
setm: ((9 byte-address)) <= 13845
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22335 to 13845
run: 8704 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\f => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\f
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13845 to #\f
run: 8705 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 15 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 15
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 15
run: 8706 print-character 13: (((reply)))
reply: nil nil
run: 8707 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 15 => ((4 integer))
setm: ((4 integer)) <= 15
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 15
run: 8708 print-string 10: (((jump)) ((-6 offset)))
run: 8709 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8710 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8711 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21856 byte) (raw))
sizeof: ((21856 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8712 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8713 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22356 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8714 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22358 to 13645
run: 8715 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22359 to #\space
run: 8716 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8717 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22360 to 13647
run: 8718 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22361 to 13648
run: 8719 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22362 to 20
run: 8720 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22363 to 180
run: 8721 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 195 => ((7 integer))
setm: ((7 integer)) <= 195
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22364 to 195
run: 8722 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22365 to 13650
run: 8723 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13846 => ((9 byte-address))
setm: ((9 byte-address)) <= 13846
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22366 to 13846
run: 8724 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13846 to #\space
run: 8725 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 16 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 16
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 16
run: 8726 print-character 13: (((reply)))
reply: nil nil
run: 8727 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 16 => ((4 integer))
setm: ((4 integer)) <= 16
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 16
run: 8728 print-string 10: (((jump)) ((-6 offset)))
run: 8729 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8730 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8731 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21857 byte) (raw))
sizeof: ((21857 byte) (raw))
run: #\g => ((6 character))
setm: ((6 character)) <= #\g
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\g
run: 8732 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8733 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22387 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8734 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\g)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22389 to 13645
run: 8735 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\g)
run: #\g => ((2 character))
setm: ((2 character)) <= #\g
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22390 to #\g
run: 8736 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8737 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22391 to 13647
run: 8738 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22392 to 13648
run: 8739 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22393 to 20
run: 8740 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22394 to 180
run: 8741 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 196 => ((7 integer))
setm: ((7 integer)) <= 196
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22395 to 196
run: 8742 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22396 to 13650
run: 8743 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13847 => ((9 byte-address))
setm: ((9 byte-address)) <= 13847
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22397 to 13847
run: 8744 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\g => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\g
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13847 to #\g
run: 8745 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 17 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 17
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 17
run: 8746 print-character 13: (((reply)))
reply: nil nil
run: 8747 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 17 => ((4 integer))
setm: ((4 integer)) <= 17
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 17
run: 8748 print-string 10: (((jump)) ((-6 offset)))
run: 8749 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8750 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8751 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21858 byte) (raw))
sizeof: ((21858 byte) (raw))
run: #\space => ((6 character))
setm: ((6 character)) <= #\space
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\space
run: 8752 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8753 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22418 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8754 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\space)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22420 to 13645
run: 8755 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\space)
run: #\space => ((2 character))
setm: ((2 character)) <= #\space
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22421 to #\space
run: 8756 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8757 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22422 to 13647
run: 8758 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22423 to 13648
run: 8759 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22424 to 20
run: 8760 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22425 to 180
run: 8761 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 197 => ((7 integer))
setm: ((7 integer)) <= 197
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22426 to 197
run: 8762 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22427 to 13650
run: 8763 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13848 => ((9 byte-address))
setm: ((9 byte-address)) <= 13848
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22428 to 13848
run: 8764 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\space => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\space
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13848 to #\space
run: 8765 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 18 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 18
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 18
run: 8766 print-character 13: (((reply)))
reply: nil nil
run: 8767 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 18 => ((4 integer))
setm: ((4 integer)) <= 18
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 18
run: 8768 print-string 10: (((jump)) ((-6 offset)))
run: 8769 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to nil
run: 8770 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8771 print-string 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((21840 string) (raw))
m: ((21840 integer) (raw))
sizeof: ((21840 integer) (raw))
sizeof: ((_ byte))
m: ((21859 byte) (raw))
sizeof: ((21859 byte) (raw))
run: #\h => ((6 character))
setm: ((6 character)) <= #\h
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 21867 to #\h
run: 8772 print-string 8: (((print-character)) ((1 terminal-address)) ((6 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((6 character))
sizeof: ((6 character))
run: 8773 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22449 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8774 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645 #\h)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22451 to 13645
run: 8775 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (13645 #\h)
run: #\h => ((2 character))
setm: ((2 character)) <= #\h
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 22452 to #\h
run: 8776 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8777 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((3 integer-address))
setm: ((3 integer-address)) <= 13647
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22453 to 13647
run: 8778 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((4 integer-address))
setm: ((4 integer-address)) <= 13648
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 22454 to 13648
run: 8779 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((13646 integer) (raw))
sizeof: ((13646 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 22455 to 20
run: 8780 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 180 => ((6 integer))
setm: ((6 integer)) <= 180
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 22456 to 180
run: 8781 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 198 => ((7 integer))
setm: ((7 integer)) <= 198
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 22457 to 198
run: 8782 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((8 string-address))
setm: ((8 string-address)) <= 13650
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 22458 to 13650
run: 8783 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((13650 string) (raw))
m: ((13650 integer) (raw))
sizeof: ((13650 integer) (raw))
sizeof: ((_ byte))
run: 13849 => ((9 byte-address))
setm: ((9 byte-address)) <= 13849
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 22459 to 13849
run: 8784 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\h => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\h
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 13849 to #\h
run: 8785 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 19 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 19
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 13648 to 19
run: 8786 print-character 13: (((reply)))
reply: nil nil
run: 8787 print-string 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 19 => ((4 integer))
setm: ((4 integer)) <= 19
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 21865 to 19
run: 8788 print-string 10: (((jump)) ((-6 offset)))
run: 8789 print-string 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 21866 to t
run: 8790 print-string 6: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 8791 print-board 27: (((cursor-to-next-line)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8792 cursor-to-next-line 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 22480 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 8793 cursor-to-next-line 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (13645)
run: 13645 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 13645
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 22482 to 13645
run: 8794 cursor-to-next-line 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 8795 cursor-to-next-line 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13647 => ((2 integer-address))
setm: ((2 integer-address)) <= 13647
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 22483 to 13647
run: 8796 cursor-to-next-line 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 10 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 10
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 13647 to 10
run: 8797 cursor-to-next-line 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 13648 => ((3 integer-address))
setm: ((3 integer-address)) <= 13648
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 22484 to 13648
run: 8798 cursor-to-next-line 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 13648 to 0
run: 8799 cursor-to-next-line 7: (((reply)))
reply: nil nil
run: 8800 main 5: (((5 string-address) (raw)) <- ((get)) ((3 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((13649 string-address) (raw))
sizeof: ((13649 string-address) (raw))
run: 13650 => ((5 string-address) (raw))
setm: ((5 string-address) (raw)) <= 13650
setm: size of ((5 string-address) (raw)) is 1
setm: ((5 string-address) (raw)): setting 5 to 13650
schedule: done with routine 
