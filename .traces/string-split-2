9991 load: --- defining scenario-string-split-2
9993 parse: instruction: run
9993 parse:   ingredient: {"\n    1:address:array:character <- new [a/b/c]\n    2:address:array:address:array:character <- split 1:address:array:character, 47/slash\n    3:number <- length *2:address:array:address:array:character\n    4:address:array:character <- index *2:address:array:address:array:character, 0\n    5:address:array:character <- index *2:address:array:address:array:character, 1\n    6:address:array:character <- index *2:address:array:address:array:character, 2\n    10:array:character <- copy *4:address:array:character\n    20:array:character <- copy *5:address:array:character\n    30:array:character <- copy *6:address:array:character\n  ": "literal-string"}
9992 load: after rewriting: run [
    1:address:array:character <- new [a/b/c]
    2:address:array:address:array:character <- split 1:address:array:character, 47/slash
    3:number <- length *2:address:array:address:array:character
    4:address:array:character <- index *2:address:array:address:array:character, 0
    5:address:array:character <- index *2:address:array:address:array:character, 1
    6:address:array:character <- index *2:address:array:address:array:character, 2
    10:array:character <- copy *4:address:array:character
    20:array:character <- copy *5:address:array:character
    30:array:character <- copy *6:address:array:character
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   ingredient: {"\n    3 <- 3  # length of result\n    10:string <- [a]\n    20:string <- [b]\n    30:string <- [c]\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 3  # length of result
    10:string <- [a]
    20:string <- [b]
    30:string <- [c]
  ]
9999 after-brace: recipe scenario-string-split-2
9999 after-brace: run ...
9999 after-brace: memory-should-contain ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: scenario-string-split-2
 102 run: run [
    1:address:array:character <- new [a/b/c]
    2:address:array:address:array:character <- split 1:address:array:character, 47/slash
    3:number <- length *2:address:array:address:array:character
    4:address:array:character <- index *2:address:array:address:array:character, 0
    5:address:array:character <- index *2:address:array:address:array:character, 1
    6:address:array:character <- index *2:address:array:address:array:character, 2
    10:array:character <- copy *4:address:array:character
    20:array:character <- copy *5:address:array:character
    30:array:character <- copy *6:address:array:character
  ]
9991 load: --- defining run1001
9993 parse: instruction: new
9993 parse:   ingredient: {"a/b/c": "literal-string"}
9993 parse:   product: {"1": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 1:address:array:character <- new [a/b/c]
9993 parse: instruction: split
9993 parse:   ingredient: {"1": <"address" : <"array" : <"character" : <>>>>}
9993 parse:   ingredient: {"47": "literal", "slash": <>}
9993 parse:   product: {"2": <"address" : <"array" : <"address" : <"array" : <"character" : <>>>>>>}
9992 load: after rewriting: 2:address:array:address:array:character <- split 1:address:array:character, 47/slash
9993 parse: instruction: length
9993 parse:   ingredient: {"*2": <"address" : <"array" : <"address" : <"array" : <"character" : <>>>>>>, "lookup": <>}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- length *2:address:array:address:array:character
9993 parse: instruction: index
9993 parse:   ingredient: {"*2": <"address" : <"array" : <"address" : <"array" : <"character" : <>>>>>>, "lookup": <>}
9993 parse:   ingredient: {"0": "literal"}
9993 parse:   product: {"4": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 4:address:array:character <- index *2:address:array:address:array:character, 0
9993 parse: instruction: index
9993 parse:   ingredient: {"*2": <"address" : <"array" : <"address" : <"array" : <"character" : <>>>>>>, "lookup": <>}
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   product: {"5": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 5:address:array:character <- index *2:address:array:address:array:character, 1
9993 parse: instruction: index
9993 parse:   ingredient: {"*2": <"address" : <"array" : <"address" : <"array" : <"character" : <>>>>>>, "lookup": <>}
9993 parse:   ingredient: {"2": "literal"}
9993 parse:   product: {"6": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 6:address:array:character <- index *2:address:array:address:array:character, 2
9993 parse: instruction: copy
9993 parse:   ingredient: {"*4": <"address" : <"array" : <"character" : <>>>>, "lookup": <>}
9993 parse:   product: {"10": <"array" : <"character" : <>>>}
9992 load: after rewriting: 10:array:character <- copy *4:address:array:character
9993 parse: instruction: copy
9993 parse:   ingredient: {"*5": <"address" : <"array" : <"character" : <>>>>, "lookup": <>}
9993 parse:   product: {"20": <"array" : <"character" : <>>>}
9992 load: after rewriting: 20:array:character <- copy *5:address:array:character
9993 parse: instruction: copy
9993 parse:   ingredient: {"*6": <"address" : <"array" : <"character" : <>>>>, "lookup": <>}
9993 parse:   product: {"30": <"array" : <"character" : <>>>}
9992 load: after rewriting: 30:array:character <- copy *6:address:array:character
9999 after-brace: recipe run1001
9999 after-brace: new ...
9999 after-brace: split ...
9999 after-brace: length ...
9999 after-brace: index ...
9999 after-brace: index ...
9999 after-brace: index ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 trace: run: incrementing callstack depth to 2
 103 run: 1:address:array:character <- new [a/b/c]
9999 mem: storing 1000 in location 1
 103 run: 2:address:array:address:array:character <- split 1:address:array:character, 47/slash
9999 mem: location 1 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1006
 104 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1008
 104 run: delim:character <- next-ingredient 
9999 mem: storing 47 in location 1009
 104 run: len:number <- length *s
9999 mem: location 1008 is 1000
9999 mem: storing 5 in location 1010
 104 run: empty?:boolean <- equal len, 0
9999 mem: location 1010 is 5
9999 mem: storing 0 in location 1011
 104 run: break-unless empty?, 
9999 mem: location 1011 is 0
9999 run: jumping to instruction 9
 104 run: count:number <- copy 1
9999 mem: storing 1 in location 1013
 104 run: idx:number <- copy 0
9999 mem: storing 0 in location 1014
 104 run: idx <- find-next s, delim, idx
9999 mem: location 1008 is 1000
9999 mem: location 1009 is 47
9999 mem: location 1014 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1020
 105 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1022
 105 run: pattern:character <- next-ingredient 
9999 mem: storing 47 in location 1023
 105 run: idx:number <- next-ingredient 
9999 mem: storing 0 in location 1024
 105 run: len:number <- length *text
9999 mem: location 1022 is 1000
9999 mem: storing 5 in location 1025
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 0
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 0
9999 run: address to copy is 1001
9999 run: its type is character
9999 mem: location 1001 is 97
9999 mem: storing 97 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 97
9999 mem: location 1023 is 47
9999 mem: storing 0 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 105 run: idx <- add idx, 1
9999 mem: location 1024 is 0
9999 mem: storing 1 in location 1024
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 1
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 1
9999 run: address to copy is 1002
9999 run: its type is character
9999 mem: location 1002 is 47
9999 mem: storing 47 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 47
9999 mem: location 1023 is 47
9999 mem: storing 1 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 1
9999 run: jumping to instruction 13
 105 run: reply idx
9999 mem: location 1024 is 1
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1
9999 mem: storing 1 in location 1014
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1014 is 1
9999 mem: location 1010 is 5
9999 mem: storing 0 in location 1015
 104 run: break-if done?, 
9999 mem: location 1015 is 0
9999 run: jump-if fell through
 104 run: idx <- add idx, 1
9999 mem: location 1014 is 1
9999 mem: storing 2 in location 1014
 104 run: count <- add count, 1
9999 mem: location 1013 is 1
9999 mem: storing 2 in location 1013
 104 run: loop 
9999 run: jumping to instruction 13
 104 run: idx <- find-next s, delim, idx
9999 mem: location 1008 is 1000
9999 mem: location 1009 is 47
9999 mem: location 1014 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 105 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1022
 105 run: pattern:character <- next-ingredient 
9999 mem: storing 47 in location 1023
 105 run: idx:number <- next-ingredient 
9999 mem: storing 2 in location 1024
 105 run: len:number <- length *text
9999 mem: location 1022 is 1000
9999 mem: storing 5 in location 1025
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 2
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 2
9999 run: address to copy is 1003
9999 run: its type is character
9999 mem: location 1003 is 98
9999 mem: storing 98 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 98
9999 mem: location 1023 is 47
9999 mem: storing 0 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 105 run: idx <- add idx, 1
9999 mem: location 1024 is 2
9999 mem: storing 3 in location 1024
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 3
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 3
9999 run: address to copy is 1004
9999 run: its type is character
9999 mem: location 1004 is 47
9999 mem: storing 47 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 47
9999 mem: location 1023 is 47
9999 mem: storing 1 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 1
9999 run: jumping to instruction 13
 105 run: reply idx
9999 mem: location 1024 is 3
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 3
9999 mem: storing 3 in location 1014
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1014 is 3
9999 mem: location 1010 is 5
9999 mem: storing 0 in location 1015
 104 run: break-if done?, 
9999 mem: location 1015 is 0
9999 run: jump-if fell through
 104 run: idx <- add idx, 1
9999 mem: location 1014 is 3
9999 mem: storing 4 in location 1014
 104 run: count <- add count, 1
9999 mem: location 1013 is 2
9999 mem: storing 3 in location 1013
 104 run: loop 
9999 run: jumping to instruction 13
 104 run: idx <- find-next s, delim, idx
9999 mem: location 1008 is 1000
9999 mem: location 1009 is 47
9999 mem: location 1014 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 105 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1022
 105 run: pattern:character <- next-ingredient 
9999 mem: storing 47 in location 1023
 105 run: idx:number <- next-ingredient 
9999 mem: storing 4 in location 1024
 105 run: len:number <- length *text
9999 mem: location 1022 is 1000
9999 mem: storing 5 in location 1025
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 4
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 4
9999 run: address to copy is 1005
9999 run: its type is character
9999 mem: location 1005 is 99
9999 mem: storing 99 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 99
9999 mem: location 1023 is 47
9999 mem: storing 0 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 105 run: idx <- add idx, 1
9999 mem: location 1024 is 4
9999 mem: storing 5 in location 1024
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 5
9999 mem: location 1025 is 5
9999 mem: storing 1 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 1
9999 run: jumping to instruction 13
 105 run: reply idx
9999 mem: location 1024 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1014
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1014 is 5
9999 mem: location 1010 is 5
9999 mem: storing 1 in location 1015
 104 run: break-if done?, 
9999 mem: location 1015 is 1
9999 run: jumping to instruction 19
 104 run: result:address:array:address:array:character <- new location:type, count
9999 mem: location 1013 is 3
9999 mem: array size is 3
9999 mem: new alloc: 1029
9999 mem: storing 1029 in location 1012
 104 run: curr-result:number <- copy 0
9999 mem: storing 0 in location 1016
 104 run: start:number <- copy 0
9999 mem: storing 0 in location 1017
 104 run: done?:boolean <- greater-or-equal start, len
9999 mem: location 1017 is 0
9999 mem: location 1010 is 5
9999 mem: storing 0 in location 1015
 104 run: break-if done?, 
9999 mem: location 1015 is 0
9999 run: jump-if fell through
 104 run: end:number <- find-next s, delim, start
9999 mem: location 1008 is 1000
9999 mem: location 1009 is 47
9999 mem: location 1017 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 105 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1022
 105 run: pattern:character <- next-ingredient 
9999 mem: storing 47 in location 1023
 105 run: idx:number <- next-ingredient 
9999 mem: storing 0 in location 1024
 105 run: len:number <- length *text
9999 mem: location 1022 is 1000
9999 mem: storing 5 in location 1025
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 0
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 0
9999 run: address to copy is 1001
9999 run: its type is character
9999 mem: location 1001 is 97
9999 mem: storing 97 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 97
9999 mem: location 1023 is 47
9999 mem: storing 0 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 105 run: idx <- add idx, 1
9999 mem: location 1024 is 0
9999 mem: storing 1 in location 1024
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 1
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 1
9999 run: address to copy is 1002
9999 run: its type is character
9999 mem: location 1002 is 47
9999 mem: storing 47 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 47
9999 mem: location 1023 is 47
9999 mem: storing 1 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 1
9999 run: jumping to instruction 13
 105 run: reply idx
9999 mem: location 1024 is 1
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1
9999 mem: storing 1 in location 1018
 104 run: dest:address:address:array:character <- index-address *result, curr-result
9999 mem: location 1012 is 1029
9999 mem: location 1016 is 0
9999 mem: storing 1030 in location 1019
 104 run: *dest <- string-copy s, start, end
9999 mem: location 1008 is 1000
9999 mem: location 1017 is 0
9999 mem: location 1018 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1033
 105 run: buf:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1035
 105 run: start:number <- next-ingredient 
9999 mem: storing 0 in location 1036
 105 run: end:number <- next-ingredient 
9999 mem: storing 1 in location 1037
 105 run: len:number <- length *buf
9999 mem: location 1035 is 1000
9999 mem: storing 5 in location 1038
 105 run: end:number <- min len, end
9999 mem: location 1038 is 5
9999 mem: location 1037 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
9999 mem: new alloc: 1045
 106 run: x:number <- next-ingredient 
9999 mem: storing 5 in location 1047
 106 run: y:number <- next-ingredient 
9999 mem: storing 1 in location 1048
 106 run: return-x?:boolean <- lesser-than x, y
9999 mem: location 1047 is 5
9999 mem: location 1048 is 1
9999 mem: storing 0 in location 1049
 106 run: break-if return-x?, 
9999 mem: location 1049 is 0
9999 run: jump-if fell through
 106 run: reply y
9999 mem: location 1048 is 1
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 1
9999 mem: storing 1 in location 1037
 105 run: len <- subtract end, start
9999 mem: location 1037 is 1
9999 mem: location 1036 is 0
9999 mem: storing 1 in location 1038
 105 run: result:address:array:character <- new character:type, len
9999 mem: location 1038 is 1
9999 mem: array size is 1
9999 mem: new alloc: 1050
9999 mem: storing 1050 in location 1039
 105 run: src-idx:number <- copy start
9999 mem: location 1036 is 0
9999 mem: storing 0 in location 1040
 105 run: dest-idx:number <- copy 0
9999 mem: storing 0 in location 1041
 105 run: done?:boolean <- greater-or-equal src-idx, end
9999 mem: location 1040 is 0
9999 mem: location 1037 is 1
9999 mem: storing 0 in location 1042
 105 run: break-if done?, 
9999 mem: location 1042 is 0
9999 run: jump-if fell through
 105 run: src:character <- index *buf, src-idx
9999 mem: location 1035 is 1000
9999 mem: location 1040 is 0
9999 run: address to copy is 1001
9999 run: its type is character
9999 mem: location 1001 is 97
9999 mem: storing 97 in location 1043
 105 run: dest:address:character <- index-address *result, dest-idx
9999 mem: location 1039 is 1050
9999 mem: location 1041 is 0
9999 mem: storing 1051 in location 1044
 105 run: *dest <- copy src
9999 mem: location 1043 is 97
9999 mem: location 1044 is 1051
9999 mem: storing 97 in location 1051
 105 run: src-idx <- add src-idx, 1
9999 mem: location 1040 is 0
9999 mem: storing 1 in location 1040
 105 run: dest-idx <- add dest-idx, 1
9999 mem: location 1041 is 0
9999 mem: storing 1 in location 1041
 105 run: loop 
9999 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal src-idx, end
9999 mem: location 1040 is 1
9999 mem: location 1037 is 1
9999 mem: storing 1 in location 1042
 105 run: break-if done?, 
9999 mem: location 1042 is 1
9999 run: jumping to instruction 19
 105 run: reply result
9999 mem: location 1039 is 1050
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1050
9999 mem: location 1019 is 1030
9999 mem: storing 1050 in location 1030
 104 run: start <- add end, 1
9999 mem: location 1018 is 1
9999 mem: storing 2 in location 1017
 104 run: curr-result <- add curr-result, 1
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1016
 104 run: loop 
9999 run: jumping to instruction 24
 104 run: done?:boolean <- greater-or-equal start, len
9999 mem: location 1017 is 2
9999 mem: location 1010 is 5
9999 mem: storing 0 in location 1015
 104 run: break-if done?, 
9999 mem: location 1015 is 0
9999 run: jump-if fell through
 104 run: end:number <- find-next s, delim, start
9999 mem: location 1008 is 1000
9999 mem: location 1009 is 47
9999 mem: location 1017 is 2
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 105 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1022
 105 run: pattern:character <- next-ingredient 
9999 mem: storing 47 in location 1023
 105 run: idx:number <- next-ingredient 
9999 mem: storing 2 in location 1024
 105 run: len:number <- length *text
9999 mem: location 1022 is 1000
9999 mem: storing 5 in location 1025
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 2
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 2
9999 run: address to copy is 1003
9999 run: its type is character
9999 mem: location 1003 is 98
9999 mem: storing 98 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 98
9999 mem: location 1023 is 47
9999 mem: storing 0 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 105 run: idx <- add idx, 1
9999 mem: location 1024 is 2
9999 mem: storing 3 in location 1024
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 3
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 3
9999 run: address to copy is 1004
9999 run: its type is character
9999 mem: location 1004 is 47
9999 mem: storing 47 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 47
9999 mem: location 1023 is 47
9999 mem: storing 1 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 1
9999 run: jumping to instruction 13
 105 run: reply idx
9999 mem: location 1024 is 3
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 3
9999 mem: storing 3 in location 1018
 104 run: dest:address:address:array:character <- index-address *result, curr-result
9999 mem: location 1012 is 1029
9999 mem: location 1016 is 1
9999 mem: storing 1031 in location 1019
 104 run: *dest <- string-copy s, start, end
9999 mem: location 1008 is 1000
9999 mem: location 1017 is 2
9999 mem: location 1018 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 105 run: buf:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1035
 105 run: start:number <- next-ingredient 
9999 mem: storing 2 in location 1036
 105 run: end:number <- next-ingredient 
9999 mem: storing 3 in location 1037
 105 run: len:number <- length *buf
9999 mem: location 1035 is 1000
9999 mem: storing 5 in location 1038
 105 run: end:number <- min len, end
9999 mem: location 1038 is 5
9999 mem: location 1037 is 3
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 106 run: x:number <- next-ingredient 
9999 mem: storing 5 in location 1047
 106 run: y:number <- next-ingredient 
9999 mem: storing 3 in location 1048
 106 run: return-x?:boolean <- lesser-than x, y
9999 mem: location 1047 is 5
9999 mem: location 1048 is 3
9999 mem: storing 0 in location 1049
 106 run: break-if return-x?, 
9999 mem: location 1049 is 0
9999 run: jump-if fell through
 106 run: reply y
9999 mem: location 1048 is 3
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 3
9999 mem: storing 3 in location 1037
 105 run: len <- subtract end, start
9999 mem: location 1037 is 3
9999 mem: location 1036 is 2
9999 mem: storing 1 in location 1038
 105 run: result:address:array:character <- new character:type, len
9999 mem: location 1038 is 1
9999 mem: array size is 1
9999 mem: new alloc: 1052
9999 mem: storing 1052 in location 1039
 105 run: src-idx:number <- copy start
9999 mem: location 1036 is 2
9999 mem: storing 2 in location 1040
 105 run: dest-idx:number <- copy 0
9999 mem: storing 0 in location 1041
 105 run: done?:boolean <- greater-or-equal src-idx, end
9999 mem: location 1040 is 2
9999 mem: location 1037 is 3
9999 mem: storing 0 in location 1042
 105 run: break-if done?, 
9999 mem: location 1042 is 0
9999 run: jump-if fell through
 105 run: src:character <- index *buf, src-idx
9999 mem: location 1035 is 1000
9999 mem: location 1040 is 2
9999 run: address to copy is 1003
9999 run: its type is character
9999 mem: location 1003 is 98
9999 mem: storing 98 in location 1043
 105 run: dest:address:character <- index-address *result, dest-idx
9999 mem: location 1039 is 1052
9999 mem: location 1041 is 0
9999 mem: storing 1053 in location 1044
 105 run: *dest <- copy src
9999 mem: location 1043 is 98
9999 mem: location 1044 is 1053
9999 mem: storing 98 in location 1053
 105 run: src-idx <- add src-idx, 1
9999 mem: location 1040 is 2
9999 mem: storing 3 in location 1040
 105 run: dest-idx <- add dest-idx, 1
9999 mem: location 1041 is 0
9999 mem: storing 1 in location 1041
 105 run: loop 
9999 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal src-idx, end
9999 mem: location 1040 is 3
9999 mem: location 1037 is 3
9999 mem: storing 1 in location 1042
 105 run: break-if done?, 
9999 mem: location 1042 is 1
9999 run: jumping to instruction 19
 105 run: reply result
9999 mem: location 1039 is 1052
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1052
9999 mem: location 1019 is 1031
9999 mem: storing 1052 in location 1031
 104 run: start <- add end, 1
9999 mem: location 1018 is 3
9999 mem: storing 4 in location 1017
 104 run: curr-result <- add curr-result, 1
9999 mem: location 1016 is 1
9999 mem: storing 2 in location 1016
 104 run: loop 
9999 run: jumping to instruction 24
 104 run: done?:boolean <- greater-or-equal start, len
9999 mem: location 1017 is 4
9999 mem: location 1010 is 5
9999 mem: storing 0 in location 1015
 104 run: break-if done?, 
9999 mem: location 1015 is 0
9999 run: jump-if fell through
 104 run: end:number <- find-next s, delim, start
9999 mem: location 1008 is 1000
9999 mem: location 1009 is 47
9999 mem: location 1017 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
 105 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1022
 105 run: pattern:character <- next-ingredient 
9999 mem: storing 47 in location 1023
 105 run: idx:number <- next-ingredient 
9999 mem: storing 4 in location 1024
 105 run: len:number <- length *text
9999 mem: location 1022 is 1000
9999 mem: storing 5 in location 1025
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 4
9999 mem: location 1025 is 5
9999 mem: storing 0 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 0
9999 run: jump-if fell through
 105 run: curr:character <- index *text, idx
9999 mem: location 1022 is 1000
9999 mem: location 1024 is 4
9999 run: address to copy is 1005
9999 run: its type is character
9999 mem: location 1005 is 99
9999 mem: storing 99 in location 1027
 105 run: found?:boolean <- equal curr, pattern
9999 mem: location 1027 is 99
9999 mem: location 1023 is 47
9999 mem: storing 0 in location 1028
 105 run: break-if found?, 
9999 mem: location 1028 is 0
9999 run: jump-if fell through
 105 run: idx <- add idx, 1
9999 mem: location 1024 is 4
9999 mem: storing 5 in location 1024
 105 run: loop 
9999 run: jumping to instruction 6
 105 run: eof?:boolean <- greater-or-equal idx, len
9999 mem: location 1024 is 5
9999 mem: location 1025 is 5
9999 mem: storing 1 in location 1026
 105 run: break-if eof?, 
9999 mem: location 1026 is 1
9999 run: jumping to instruction 13
 105 run: reply idx
9999 mem: location 1024 is 5
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 5
9999 mem: storing 5 in location 1018
 104 run: dest:address:address:array:character <- index-address *result, curr-result
9999 mem: location 1012 is 1029
9999 mem: location 1016 is 2
9999 mem: storing 1032 in location 1019
 104 run: *dest <- string-copy s, start, end
9999 mem: location 1008 is 1000
9999 mem: location 1017 is 4
9999 mem: location 1018 is 5
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
 105 run: buf:address:array:character <- next-ingredient 
9999 mem: storing 1000 in location 1035
 105 run: start:number <- next-ingredient 
9999 mem: storing 4 in location 1036
 105 run: end:number <- next-ingredient 
9999 mem: storing 5 in location 1037
 105 run: len:number <- length *buf
9999 mem: location 1035 is 1000
9999 mem: storing 5 in location 1038
 105 run: end:number <- min len, end
9999 mem: location 1038 is 5
9999 mem: location 1037 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 4
 106 run: x:number <- next-ingredient 
9999 mem: storing 5 in location 1047
 106 run: y:number <- next-ingredient 
9999 mem: storing 5 in location 1048
 106 run: return-x?:boolean <- lesser-than x, y
9999 mem: location 1047 is 5
9999 mem: location 1048 is 5
9999 mem: storing 0 in location 1049
 106 run: break-if return-x?, 
9999 mem: location 1049 is 0
9999 run: jump-if fell through
 106 run: reply y
9999 mem: location 1048 is 5
9999 trace: reply: decrementing callstack depth from 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1037
 105 run: len <- subtract end, start
9999 mem: location 1037 is 5
9999 mem: location 1036 is 4
9999 mem: storing 1 in location 1038
 105 run: result:address:array:character <- new character:type, len
9999 mem: location 1038 is 1
9999 mem: array size is 1
9999 mem: new alloc: 1054
9999 mem: storing 1054 in location 1039
 105 run: src-idx:number <- copy start
9999 mem: location 1036 is 4
9999 mem: storing 4 in location 1040
 105 run: dest-idx:number <- copy 0
9999 mem: storing 0 in location 1041
 105 run: done?:boolean <- greater-or-equal src-idx, end
9999 mem: location 1040 is 4
9999 mem: location 1037 is 5
9999 mem: storing 0 in location 1042
 105 run: break-if done?, 
9999 mem: location 1042 is 0
9999 run: jump-if fell through
 105 run: src:character <- index *buf, src-idx
9999 mem: location 1035 is 1000
9999 mem: location 1040 is 4
9999 run: address to copy is 1005
9999 run: its type is character
9999 mem: location 1005 is 99
9999 mem: storing 99 in location 1043
 105 run: dest:address:character <- index-address *result, dest-idx
9999 mem: location 1039 is 1054
9999 mem: location 1041 is 0
9999 mem: storing 1055 in location 1044
 105 run: *dest <- copy src
9999 mem: location 1043 is 99
9999 mem: location 1044 is 1055
9999 mem: storing 99 in location 1055
 105 run: src-idx <- add src-idx, 1
9999 mem: location 1040 is 4
9999 mem: storing 5 in location 1040
 105 run: dest-idx <- add dest-idx, 1
9999 mem: location 1041 is 0
9999 mem: storing 1 in location 1041
 105 run: loop 
9999 run: jumping to instruction 11
 105 run: done?:boolean <- greater-or-equal src-idx, end
9999 mem: location 1040 is 5
9999 mem: location 1037 is 5
9999 mem: storing 1 in location 1042
 105 run: break-if done?, 
9999 mem: location 1042 is 1
9999 run: jumping to instruction 19
 105 run: reply result
9999 mem: location 1039 is 1054
9999 trace: reply: decrementing callstack depth from 4
9999 run: result 0 is 1054
9999 mem: location 1019 is 1032
9999 mem: storing 1054 in location 1032
 104 run: start <- add end, 1
9999 mem: location 1018 is 5
9999 mem: storing 6 in location 1017
 104 run: curr-result <- add curr-result, 1
9999 mem: location 1016 is 2
9999 mem: storing 3 in location 1016
 104 run: loop 
9999 run: jumping to instruction 24
 104 run: done?:boolean <- greater-or-equal start, len
9999 mem: location 1017 is 6
9999 mem: location 1010 is 5
9999 mem: storing 1 in location 1015
 104 run: break-if done?, 
9999 mem: location 1015 is 1
9999 run: jumping to instruction 32
 104 run: reply result
9999 mem: location 1012 is 1029
9999 trace: reply: decrementing callstack depth from 3
9999 run: result 0 is 1029
9999 mem: storing 1029 in location 2
 103 run: 3:number <- length *2:address:array:address:array:character
9999 mem: location 2 is 1029
9999 mem: storing 3 in location 3
 103 run: 4:address:array:character <- index *2:address:array:address:array:character, 0
9999 mem: location 2 is 1029
9999 run: address to copy is 1030
9999 run: its type is address
9999 mem: location 1030 is 1050
9999 mem: storing 1050 in location 4
 103 run: 5:address:array:character <- index *2:address:array:address:array:character, 1
9999 mem: location 2 is 1029
9999 run: address to copy is 1031
9999 run: its type is address
9999 mem: location 1031 is 1052
9999 mem: storing 1052 in location 5
 103 run: 6:address:array:character <- index *2:address:array:address:array:character, 2
9999 mem: location 2 is 1029
9999 run: address to copy is 1032
9999 run: its type is address
9999 mem: location 1032 is 1054
9999 mem: storing 1054 in location 6
 103 run: 10:array:character <- copy *4:address:array:character
9999 mem: location 4 is 1050
9999 mem: location 1050 is 1
9999 mem: location 1051 is 97
9999 mem: storing 1 in location 10
9999 mem: storing 97 in location 11
 103 run: 20:array:character <- copy *5:address:array:character
9999 mem: location 5 is 1052
9999 mem: location 1052 is 1
9999 mem: location 1053 is 98
9999 mem: storing 1 in location 20
9999 mem: storing 98 in location 21
 103 run: 30:array:character <- copy *6:address:array:character
9999 mem: location 6 is 1054
9999 mem: location 1054 is 1
9999 mem: location 1055 is 99
9999 mem: storing 1 in location 30
9999 mem: storing 99 in location 31
9999 trace: fall-through: exiting run1001; decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 3  # length of result
    10:string <- [a]
    20:string <- [b]
    30:string <- [c]
  ]
9999 run: checking location 3
9999 run: checking string length at 10
9999 run: checking location 11
9999 run: checking string length at 20
9999 run: checking location 21
9999 run: checking string length at 30
9999 run: checking location 31
9999 trace: fall-through: exiting scenario-string-split-2; decrementing callstack depth from 1
