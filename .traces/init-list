schedule: main
run: 1 main 0: (((1 integer)) <- ((init-list)) ((3 literal)) ((4 literal)) ((5 literal)))
run: 2 init-list 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3 init-list 1: (((1 list-address)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1031 => ((1 list-address))
setm: ((1 list-address)) <= 1031
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1002 to 1031
run: 4 init-list 2: (((2 list-address)) <- ((copy)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 1031 => ((2 list-address))
setm: ((2 list-address)) <= 1031
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1003 to 1031
run: 5 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 0 (3 4 5)
run: 3 => ((3 integer))
setm: ((3 integer)) <= 3
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1004 to 3
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1005 to t
run: 6 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 7 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1033 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1033
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1006 to 1033
run: 8 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1034 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1034
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1033 to 1034
run: 9 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 10 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1037 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 11 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1031)
run: 1031 => ((1 list-address))
setm: ((1 list-address)) <= 1031
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1039 to 1031
run: 12 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1033 list-address) (raw))
sizeof: ((1033 list-address) (raw))
run: 1034 => ((2 list-address))
setm: ((2 list-address)) <= 1034
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1040 to 1034
run: 13 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1034 => ((2 list-address))
setm: ((2 list-address)) <= 1034
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1003 to 1034
run: 14 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 15 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1068 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 16 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1034)
run: 1034 => ((1 list-address))
setm: ((1 list-address)) <= 1034
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1070 to 1034
run: 17 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1034 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1034
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1071 to 1034
run: 18 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1034 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1034
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1007 to 1034
run: 19 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer 3)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer 3))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1034 to integer
setm: ((6 tagged-value-address) (deref)): setting 1035 to 3
run: 20 init-list 10: (((jump)) ((-8 offset)))
run: 21 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 1 (3 4 5)
run: 4 => ((3 integer))
setm: ((3 integer)) <= 4
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1004 to 4
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1005 to t
run: 22 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 23 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1036 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1036
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1006 to 1036
run: 24 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1099 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1099
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1036 to 1099
run: 25 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 26 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1102 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 27 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1034)
run: 1034 => ((1 list-address))
setm: ((1 list-address)) <= 1034
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1104 to 1034
run: 28 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1036 list-address) (raw))
sizeof: ((1036 list-address) (raw))
run: 1099 => ((2 list-address))
setm: ((2 list-address)) <= 1099
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1105 to 1099
run: 29 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1099 => ((2 list-address))
setm: ((2 list-address)) <= 1099
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1003 to 1099
run: 30 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 31 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1133 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 32 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1099)
run: 1099 => ((1 list-address))
setm: ((1 list-address)) <= 1099
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1135 to 1099
run: 33 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1099 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1099
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1136 to 1099
run: 34 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1099 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1099
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1007 to 1099
run: 35 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer 4)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer 4))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1099 to integer
setm: ((6 tagged-value-address) (deref)): setting 1100 to 4
run: 36 init-list 10: (((jump)) ((-8 offset)))
run: 37 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 2 (3 4 5)
run: 5 => ((3 integer))
setm: ((3 integer)) <= 5
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1004 to 5
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1005 to t
run: 38 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 39 init-list 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1101 => ((5 list-address-address))
setm: ((5 list-address-address)) <= 1101
setm: size of ((5 list-address-address)) is 1
setm: ((5 list-address-address)): setting 1006 to 1101
run: 40 init-list 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
sizeof: ((_ list))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
sizeof: ((_ list-address))
run: 1164 => ((5 list-address-address) (deref))
setm: ((5 list-address-address) (deref)) <= 1164
setm: size of ((5 list-address-address) (deref)) is 1
setm: ((5 list-address-address) (deref)): setting 1101 to 1164
run: 41 init-list 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 42 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1167 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 43 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1099)
run: 1099 => ((1 list-address))
setm: ((1 list-address)) <= 1099
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1169 to 1099
run: 44 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1101 list-address) (raw))
sizeof: ((1101 list-address) (raw))
run: 1164 => ((2 list-address))
setm: ((2 list-address)) <= 1164
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1170 to 1164
run: 45 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((2 list-address)))
reply: 1164 => ((2 list-address))
setm: ((2 list-address)) <= 1164
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1003 to 1164
run: 46 init-list 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
run: 47 list-value-address 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1198 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 48 list-value-address 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1164)
run: 1164 => ((1 list-address))
setm: ((1 list-address)) <= 1164
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1200 to 1164
run: 49 list-value-address 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: 1164 => ((2 tagged-value-address))
setm: ((2 tagged-value-address)) <= 1164
setm: size of ((2 tagged-value-address)) is 1
setm: ((2 tagged-value-address)): setting 1201 to 1164
run: 50 list-value-address 3: (((reply)) ((2 tagged-value-address)))
m: ((2 tagged-value-address))
sizeof: ((2 tagged-value-address))
reply: (((2 tagged-value-address))) (((6 tagged-value-address)))
reply: 1164 => ((6 tagged-value-address))
setm: ((6 tagged-value-address)) <= 1164
setm: size of ((6 tagged-value-address)) is 1
setm: ((6 tagged-value-address)): setting 1007 to 1164
run: 51 init-list 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
m: ((3 integer))
sizeof: ((3 integer))
run: #(tagged record (integer 5)) => ((6 tagged-value-address) (deref))
setm: ((6 tagged-value-address) (deref)) <= #(tagged record (integer 5))
setm: size of ((6 tagged-value-address) (deref)) is 2
sizeof: ((6 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value-address) (deref)): setting 1164 to integer
setm: ((6 tagged-value-address) (deref)): setting 1165 to 5
run: 52 init-list 10: (((jump)) ((-8 offset)))
run: 53 init-list 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 3 (3 4 5)
run: nil => ((3 integer))
setm: ((3 integer)) <= nil
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1004 to nil
run: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1005 to nil
run: 54 init-list 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 55 init-list 11: (((1 list-address)) <- ((list-next)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
run: 56 list-next 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1229 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 57 list-next 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1031)
run: 1031 => ((1 list-address))
setm: ((1 list-address)) <= 1031
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1231 to 1031
run: 58 list-next 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1033 list-address) (raw))
sizeof: ((1033 list-address) (raw))
run: 1034 => ((2 list-address))
setm: ((2 list-address)) <= 1034
setm: size of ((2 list-address)) is 1
setm: ((2 list-address)): setting 1232 to 1034
run: 59 list-next 3: (((reply)) ((2 list-address)))
m: ((2 list-address))
sizeof: ((2 list-address))
reply: (((2 list-address))) (((1 list-address)))
reply: 1034 => ((1 list-address))
setm: ((1 list-address)) <= 1034
setm: size of ((1 list-address)) is 1
setm: ((1 list-address)): setting 1002 to 1034
run: 60 init-list 12: (((reply)) ((1 list-address)))
m: ((1 list-address))
sizeof: ((1 list-address))
reply: (((1 list-address))) (((1 integer)))
reply: 1034 => ((1 integer))
setm: ((1 integer)) <= 1034
setm: size of ((1 integer)) is 1
setm: ((1 integer)): setting 1 to 1034
schedule: done with routine
