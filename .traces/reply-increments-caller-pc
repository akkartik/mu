c{0: 0 (((reply))) -- nil
c{1: 0 reply nil
cn0: (((reply))) nil nil
c{0: 0 (((1 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 1 (((2 integer)) <- ((copy)) ((0 literal))) -- nil
c{1: 0 copy (((1 integer)))
c{1: 1 copy (((2 integer)))
cn0: (((1 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((1 integer))
maybe-add: ((1 integer))
cn0: (((2 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((2 integer))
maybe-add: ((2 integer))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 channel)) <- ((next-input))) -- nil
c{0: 2 (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset))) -- nil
c{0: 3 (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref))) -- nil
c{0: 4 (((reply)) ((5 integer))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 channel)))
c{1: 2 get (((4 tagged-value-array-address)))
c{1: 3 length (((5 integer)))
c{1: 4 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 channel)) <- ((next-input))) nil nil
cn0: checking ((1 channel))
maybe-add: ((1 channel))
cn0: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset))) nil nil
cn0: field-access 2 in 1channel of type channel
cn0: checking ((4 tagged-value-array-address))
maybe-add: ((4 tagged-value-array-address))
cn0: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref))) nil nil
maybe-add: ((4 tagged-value-array-address) (deref))
cn0: checking ((5 integer))
maybe-add: ((5 integer))
cn0: (((reply)) ((5 integer))) nil nil
maybe-add: ((5 integer))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 channel)) <- ((next-input))) -- nil
c{0: 2 (((4 integer)) <- ((get)) ((1 channel)) ((0 offset))) -- nil
c{0: 3 (((5 integer)) <- ((get)) ((1 channel)) ((1 offset))) -- nil
c{0: 4 (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer))) -- nil
c{0: 5 (((reply)) ((6 boolean))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 channel)))
c{1: 2 get (((4 integer)))
c{1: 3 get (((5 integer)))
c{1: 4 equal (((6 boolean)))
c{1: 5 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 channel)) <- ((next-input))) nil nil
cn0: checking ((1 channel))
maybe-add: ((1 channel))
cn0: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset))) nil nil
cn0: field-access 0 in 1channel of type channel
cn0: checking ((4 integer))
maybe-add: ((4 integer))
cn0: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset))) nil nil
cn0: field-access 1 in 1channel of type channel
cn0: checking ((5 integer))
maybe-add: ((5 integer))
cn0: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer))) nil nil
maybe-add: ((4 integer))
maybe-add: ((5 integer))
cn0: checking ((6 boolean))
maybe-add: ((6 boolean))
cn0: (((reply)) ((6 boolean))) nil nil
maybe-add: ((6 boolean))
c{0: 0 (((1 string-address)) <- ((next-input))) -- nil
c{0: 1 (((2 character)) <- ((next-input))) -- nil
c{0: 2 (((3 integer)) <- ((next-input))) -- nil
c{0: 3 (((4 integer)) <- ((length)) ((1 string-address) (deref))) -- nil
c{0: 4 (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer))) -- nil
c{0: 5 (((jump-if)) ((5 boolean)) ((5 offset))) -- nil
c{0: 6 (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer))) -- nil
c{0: 7 (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character))) -- nil
c{0: 8 (((jump-if)) ((7 boolean)) ((2 offset))) -- nil
c{0: 9 (((3 integer)) <- ((add)) ((3 integer)) ((1 literal))) -- nil
c{0: 10 (((jump)) ((-7 offset))) -- nil
c{0: 11 (((reply)) ((3 integer))) -- nil
c{1: 0 next-input (((1 string-address)))
c{1: 1 next-input (((2 character)))
c{1: 2 next-input (((3 integer)))
c{1: 3 length (((4 integer)))
c{1: 4 greater-or-equal (((5 boolean)))
c{1: 5 jump-if nil
c{1: 6 index (((6 byte)))
c{1: 7 equal (((7 boolean)))
c{1: 8 jump-if nil
c{1: 9 add (((3 integer)))
c{1: 10 jump nil
c{1: 11 reply nil
cn0: (((1 string-address)) <- ((next-input))) nil nil
cn0: checking ((1 string-address))
maybe-add: ((1 string-address))
cn0: (((2 character)) <- ((next-input))) nil nil
cn0: checking ((2 character))
maybe-add: ((2 character))
cn0: (((3 integer)) <- ((next-input))) nil nil
cn0: checking ((3 integer))
maybe-add: ((3 integer))
cn0: (((4 integer)) <- ((length)) ((1 string-address) (deref))) nil nil
maybe-add: ((1 string-address) (deref))
cn0: checking ((4 integer))
maybe-add: ((4 integer))
cn0: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer))) nil nil
maybe-add: ((3 integer))
maybe-add: ((4 integer))
cn0: checking ((5 boolean))
maybe-add: ((5 boolean))
cn0: (((jump-if)) ((5 boolean)) ((5 offset))) nil nil
maybe-add: ((5 boolean))
maybe-add: ((5 offset))
cn0: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer))) nil nil
maybe-add: ((1 string-address) (deref))
maybe-add: ((3 integer))
cn0: checking ((6 byte))
maybe-add: ((6 byte))
cn0: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character))) nil nil
maybe-add: ((6 byte))
maybe-add: ((2 character))
cn0: checking ((7 boolean))
maybe-add: ((7 boolean))
cn0: (((jump-if)) ((7 boolean)) ((2 offset))) nil nil
maybe-add: ((7 boolean))
maybe-add: ((2 offset))
cn0: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal))) nil nil
maybe-add: ((3 integer))
maybe-add: ((1 literal))
cn0: checking ((3 integer))
maybe-add: ((3 integer))
cn0: (((jump)) ((-7 offset))) nil nil
maybe-add: ((-7 offset))
cn0: (((reply)) ((3 integer))) nil nil
maybe-add: ((3 integer))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 channel)) <- ((next-input))) -- nil
c{0: 2 (((4 integer)) <- ((get)) ((1 channel)) ((1 offset))) -- nil
c{0: 3 (((4 integer)) <- ((add)) ((4 integer)) ((1 literal))) -- nil
c{0: 4 (((5 integer)) <- ((capacity)) ((1 channel))) -- nil
c{0: 5 (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer))) -- nil
c{0: 6 (((jump-if)) ((6 boolean)) ((1 offset))) -- nil
c{0: 7 (((4 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 8 (((7 integer)) <- ((get)) ((1 channel)) ((0 offset))) -- nil
c{0: 9 (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer))) -- nil
c{0: 10 (((reply)) ((8 boolean))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 channel)))
c{1: 2 get (((4 integer)))
c{1: 3 add (((4 integer)))
c{1: 4 capacity (((5 integer)))
c{1: 5 less-than (((6 boolean)))
c{1: 6 jump-if nil
c{1: 7 copy (((4 integer)))
c{1: 8 get (((7 integer)))
c{1: 9 equal (((8 boolean)))
c{1: 10 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 channel)) <- ((next-input))) nil nil
cn0: checking ((1 channel))
maybe-add: ((1 channel))
cn0: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset))) nil nil
cn0: field-access 1 in 1channel of type channel
cn0: checking ((4 integer))
maybe-add: ((4 integer))
cn0: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal))) nil nil
maybe-add: ((4 integer))
maybe-add: ((1 literal))
cn0: checking ((4 integer))
maybe-add: ((4 integer))
cn0: (((5 integer)) <- ((capacity)) ((1 channel))) nil nil
maybe-add: ((1 channel))
cn0: checking ((5 integer))
maybe-add: ((5 integer))
cn0: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer))) nil nil
maybe-add: ((4 integer))
maybe-add: ((5 integer))
cn0: checking ((6 boolean))
maybe-add: ((6 boolean))
cn0: (((jump-if)) ((6 boolean)) ((1 offset))) nil nil
maybe-add: ((6 boolean))
maybe-add: ((1 offset))
cn0: (((4 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((4 integer))
maybe-add: ((4 integer))
cn0: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset))) nil nil
cn0: field-access 0 in 1channel of type channel
cn0: checking ((7 integer))
maybe-add: ((7 integer))
cn0: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer))) nil nil
maybe-add: ((7 integer))
maybe-add: ((4 integer))
cn0: checking ((8 boolean))
maybe-add: ((8 boolean))
cn0: (((reply)) ((8 boolean))) nil nil
maybe-add: ((8 boolean))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 channel-address)) <- ((new)) ((channel literal))) -- nil
c{0: 2 (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset))) -- nil
c{0: 3 (((2 integer-address) (deref)) <- ((copy)) ((0 literal))) -- nil
c{0: 4 (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset))) -- nil
c{0: 5 (((3 integer-address) (deref)) <- ((copy)) ((0 literal))) -- nil
c{0: 6 (((4 integer)) <- ((next-input))) -- nil
c{0: 7 (((4 integer)) <- ((add)) ((4 integer)) ((1 literal))) -- nil
c{0: 8 (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset))) -- nil
c{0: 9 (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer))) -- nil
c{0: 10 (((reply)) ((1 channel-address))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 new (((1 channel-address)))
c{1: 2 get-address (((2 integer-address)))
c{1: 3 copy (((2 integer-address) (deref)))
c{1: 4 get-address (((3 integer-address)))
c{1: 5 copy (((3 integer-address) (deref)))
c{1: 6 next-input (((4 integer)))
c{1: 7 add (((4 integer)))
c{1: 8 get-address (((5 tagged-value-array-address-address)))
c{1: 9 new (((5 tagged-value-array-address-address) (deref)))
c{1: 10 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 channel-address)) <- ((new)) ((channel literal))) nil nil
maybe-add: ((channel literal))
cn0: checking ((1 channel-address))
maybe-add: ((1 channel-address))
cn0: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset))) nil nil
cn0: field-access 0 in 1channel-addressderef of type channel
cn0: checking ((2 integer-address))
maybe-add: ((2 integer-address))
cn0: (((2 integer-address) (deref)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((2 integer-address) (deref))
maybe-add: ((2 integer-address) (deref))
cn0: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset))) nil nil
cn0: field-access 1 in 1channel-addressderef of type channel
cn0: checking ((3 integer-address))
maybe-add: ((3 integer-address))
cn0: (((3 integer-address) (deref)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((3 integer-address) (deref))
maybe-add: ((3 integer-address) (deref))
cn0: (((4 integer)) <- ((next-input))) nil nil
cn0: checking ((4 integer))
maybe-add: ((4 integer))
cn0: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal))) nil nil
maybe-add: ((4 integer))
maybe-add: ((1 literal))
cn0: checking ((4 integer))
maybe-add: ((4 integer))
cn0: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset))) nil nil
cn0: field-access 2 in 1channel-addressderef of type channel
cn0: checking ((5 tagged-value-array-address-address))
maybe-add: ((5 tagged-value-array-address-address))
cn0: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer))) nil nil
maybe-add: ((tagged-value-array literal))
maybe-add: ((4 integer))
cn0: checking ((5 tagged-value-array-address-address) (deref))
maybe-add: ((5 tagged-value-array-address-address) (deref))
cn0: (((reply)) ((1 channel-address))) nil nil
maybe-add: ((1 channel-address))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 list-address)) <- ((new)) ((list literal))) -- nil
c{0: 2 (((2 list-address)) <- ((copy)) ((1 list-address))) -- nil
c{0: 3 (((3 integer)) ((4 boolean)) <- ((next-input))) -- nil
c{0: 4 (((jump-unless)) ((4 boolean)) ((6 offset))) -- nil
c{0: 5 (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset))) -- nil
c{0: 6 (((5 list-address-address) (deref)) <- ((new)) ((list literal))) -- nil
c{0: 7 (((2 list-address)) <- ((list-next)) ((2 list-address))) -- nil
c{0: 8 (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address))) -- nil
c{0: 9 (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer))) -- nil
c{0: 10 (((jump)) ((-8 offset))) -- nil
c{0: 11 (((1 list-address)) <- ((list-next)) ((1 list-address))) -- nil
c{0: 12 (((reply)) ((1 list-address))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 new (((1 list-address)))
c{1: 2 copy (((2 list-address)))
c{1: 3 next-input (((3 integer)) ((4 boolean)))
c{1: 4 jump-unless nil
c{1: 5 get-address (((5 list-address-address)))
c{1: 6 new (((5 list-address-address) (deref)))
c{1: 7 list-next (((2 list-address)))
c{1: 8 list-value-address (((6 tagged-value-address)))
c{1: 9 save-type (((6 tagged-value-address) (deref)))
c{1: 10 jump nil
c{1: 11 list-next (((1 list-address)))
c{1: 12 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 list-address)) <- ((new)) ((list literal))) nil nil
maybe-add: ((list literal))
cn0: checking ((1 list-address))
maybe-add: ((1 list-address))
cn0: (((2 list-address)) <- ((copy)) ((1 list-address))) nil nil
maybe-add: ((1 list-address))
cn0: checking ((2 list-address))
maybe-add: ((2 list-address))
cn0: (((3 integer)) ((4 boolean)) <- ((next-input))) nil nil
cn0: checking ((3 integer))
maybe-add: ((3 integer))
cn0: checking ((4 boolean))
maybe-add: ((4 boolean))
cn0: (((jump-unless)) ((4 boolean)) ((6 offset))) nil nil
maybe-add: ((4 boolean))
maybe-add: ((6 offset))
cn0: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset))) nil nil
cn0: field-access 1 in 2list-addressderef of type list
cn0: checking ((5 list-address-address))
maybe-add: ((5 list-address-address))
cn0: (((5 list-address-address) (deref)) <- ((new)) ((list literal))) nil nil
maybe-add: ((list literal))
cn0: checking ((5 list-address-address) (deref))
maybe-add: ((5 list-address-address) (deref))
cn0: (((2 list-address)) <- ((list-next)) ((2 list-address))) nil nil
maybe-add: ((2 list-address))
cn0: checking ((2 list-address))
maybe-add: ((2 list-address))
cn0: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address))) nil nil
maybe-add: ((2 list-address))
cn0: checking ((6 tagged-value-address))
maybe-add: ((6 tagged-value-address))
cn0: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer))) nil nil
maybe-add: ((3 integer))
cn0: checking ((6 tagged-value-address) (deref))
maybe-add: ((6 tagged-value-address) (deref))
cn0: (((jump)) ((-8 offset))) nil nil
maybe-add: ((-8 offset))
cn0: (((1 list-address)) <- ((list-next)) ((1 list-address))) nil nil
maybe-add: ((1 list-address))
cn0: checking ((1 list-address))
maybe-add: ((1 list-address))
cn0: (((reply)) ((1 list-address))) nil nil
maybe-add: ((1 list-address))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 type)) <- ((next-input))) -- nil
c{0: 2 (((2 integer)) <- ((sizeof)) ((1 type))) -- nil
c{0: 3 (((3 boolean)) <- ((equal)) ((2 integer)) ((1 literal))) -- nil
c{0: 4 (((assert)) ((3 boolean))) -- nil
c{0: 5 (((4 tagged-value-address)) <- ((new)) ((tagged-value literal))) -- nil
c{0: 6 (((5 location)) <- ((get-address)) ((4 tagged-value-address) (deref)) ((0 offset))) -- nil
c{0: 7 (((5 location) (deref)) <- ((copy)) ((1 type))) -- nil
c{0: 8 (((6 location)) <- ((get-address)) ((4 tagged-value-address) (deref)) ((1 offset))) -- nil
c{0: 9 (((6 location) (deref)) <- ((next-input))) -- nil
c{0: 10 (((reply)) ((4 tagged-value-address))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 type)))
c{1: 2 sizeof (((2 integer)))
c{1: 3 equal (((3 boolean)))
c{1: 4 assert nil
c{1: 5 new (((4 tagged-value-address)))
c{1: 6 get-address (((5 location)))
c{1: 7 copy (((5 location) (deref)))
c{1: 8 get-address (((6 location)))
c{1: 9 next-input (((6 location) (deref)))
c{1: 10 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 type)) <- ((next-input))) nil nil
cn0: checking ((1 type))
maybe-add: ((1 type))
cn0: (((2 integer)) <- ((sizeof)) ((1 type))) nil nil
maybe-add: ((1 type))
cn0: checking ((2 integer))
maybe-add: ((2 integer))
cn0: (((3 boolean)) <- ((equal)) ((2 integer)) ((1 literal))) nil nil
maybe-add: ((2 integer))
maybe-add: ((1 literal))
cn0: checking ((3 boolean))
maybe-add: ((3 boolean))
cn0: (((assert)) ((3 boolean))) nil nil
maybe-add: ((3 boolean))
cn0: (((4 tagged-value-address)) <- ((new)) ((tagged-value literal))) nil nil
maybe-add: ((tagged-value literal))
cn0: checking ((4 tagged-value-address))
maybe-add: ((4 tagged-value-address))
cn0: (((5 location)) <- ((get-address)) ((4 tagged-value-address) (deref)) ((0 offset))) nil nil
cn0: field-access 0 in 4tagged-value-addressderef of type tagged-value
cn0: checking ((5 location))
maybe-add: ((5 location))
cn0: (((5 location) (deref)) <- ((copy)) ((1 type))) nil nil
maybe-add: ((1 type))
cn0: checking ((5 location) (deref))
maybe-add: ((5 location) (deref))
cn0: (((6 location)) <- ((get-address)) ((4 tagged-value-address) (deref)) ((1 offset))) nil nil
cn0: field-access 1 in 4tagged-value-addressderef of type tagged-value
cn0: checking ((6 location))
maybe-add: ((6 location))
cn0: (((6 location) (deref)) <- ((next-input))) nil nil
cn0: checking ((6 location) (deref))
maybe-add: ((6 location) (deref))
cn0: (((reply)) ((4 tagged-value-address))) nil nil
maybe-add: ((4 tagged-value-address))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((60 literal))) -- nil
c{0: 1 (((1 string-address)) <- ((next-input))) -- nil
c{0: 2 (((2 integer)) <- ((length)) ((1 string-address) (deref))) -- nil
c{0: 3 (((3 integer)) <- ((copy)) ((2 integer))) -- nil
c{0: 4 (((4 string-address)) ((5 boolean)) <- ((next-input))) -- nil
c{0: 5 (((jump-unless)) ((5 boolean)) ((4 offset))) -- nil
c{0: 6 (((6 integer)) <- ((length)) ((4 string-address) (deref))) -- nil
c{0: 7 (((3 integer)) <- ((add)) ((3 integer)) ((6 integer))) -- nil
c{0: 8 (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal))) -- nil
c{0: 9 (((jump)) ((-6 offset))) -- nil
c{0: 10 (_ <- ((input)) ((0 literal))) -- nil
c{0: 11 (((7 string-address)) <- ((new)) ((string literal)) ((3 integer))) -- nil
c{0: 12 (((8 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 13 (((9 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 14 (((4 string-address)) ((5 boolean)) <- ((next-input))) -- nil
c{0: 15 (((jump-unless)) ((5 boolean)) ((21 offset))) -- nil
c{0: 16 (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer))) -- nil
c{0: 17 (((jump-unless)) ((10 boolean)) ((19 offset))) -- nil
c{0: 18 (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer))) -- nil
c{0: 19 (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal))) -- nil
c{0: 20 (((jump-if)) ((12 boolean)) ((5 offset))) -- nil
c{0: 21 (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer))) -- nil
c{0: 22 (((13 byte-address) (deref)) <- ((copy)) ((11 byte))) -- nil
c{0: 23 (((9 integer)) <- ((add)) ((9 integer)) ((1 literal))) -- nil
c{0: 24 (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) -- nil
c{0: 25 (((jump)) ((-10 offset))) -- nil
c{0: 26 (((14 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 27 (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer))) -- nil
c{0: 28 (((jump-unless)) ((15 boolean)) ((6 offset))) -- nil
c{0: 29 (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer))) -- nil
c{0: 30 (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer))) -- nil
c{0: 31 (((13 byte-address) (deref)) <- ((copy)) ((11 byte))) -- nil
c{0: 32 (((14 integer)) <- ((add)) ((14 integer)) ((1 literal))) -- nil
c{0: 33 (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) -- nil
c{0: 34 (((jump)) ((-8 offset))) -- nil
c{0: 35 (((9 integer)) <- ((add)) ((9 integer)) ((1 literal))) -- nil
c{0: 36 (((jump)) ((-23 offset))) -- nil
c{0: 37 (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer))) -- nil
c{0: 38 (((jump-unless)) ((10 boolean)) ((6 offset))) -- nil
c{0: 39 (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer))) -- nil
c{0: 40 (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer))) -- nil
c{0: 41 (((13 byte-address) (deref)) <- ((copy)) ((11 byte))) -- nil
c{0: 42 (((9 integer)) <- ((add)) ((9 integer)) ((1 literal))) -- nil
c{0: 43 (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) -- nil
c{0: 44 (((jump)) ((-8 offset))) -- nil
c{0: 45 (((reply)) ((7 string-address))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 string-address)))
c{1: 2 length (((2 integer)))
c{1: 3 copy (((3 integer)))
c{1: 4 next-input (((4 string-address)) ((5 boolean)))
c{1: 5 jump-unless nil
c{1: 6 length (((6 integer)))
c{1: 7 add (((3 integer)))
c{1: 8 subtract (((3 integer)))
c{1: 9 jump nil
c{1: 10 input (_)
c{1: 11 new (((7 string-address)))
c{1: 12 copy (((8 integer)))
c{1: 13 copy (((9 integer)))
c{1: 14 next-input (((4 string-address)) ((5 boolean)))
c{1: 15 jump-unless nil
c{1: 16 less-than (((10 boolean)))
c{1: 17 jump-unless nil
c{1: 18 index (((11 byte)))
c{1: 19 equal (((12 boolean)))
c{1: 20 jump-if nil
c{1: 21 index-address (((13 byte-address)))
c{1: 22 copy (((13 byte-address) (deref)))
c{1: 23 add (((9 integer)))
c{1: 24 add (((8 integer)))
c{1: 25 jump nil
c{1: 26 copy (((14 integer)))
c{1: 27 less-than (((15 boolean)))
c{1: 28 jump-unless nil
c{1: 29 index (((11 byte)))
c{1: 30 index-address (((13 byte-address)))
c{1: 31 copy (((13 byte-address) (deref)))
c{1: 32 add (((14 integer)))
c{1: 33 add (((8 integer)))
c{1: 34 jump nil
c{1: 35 add (((9 integer)))
c{1: 36 jump nil
c{1: 37 less-than (((10 boolean)))
c{1: 38 jump-unless nil
c{1: 39 index (((11 byte)))
c{1: 40 index-address (((13 byte-address)))
c{1: 41 copy (((13 byte-address) (deref)))
c{1: 42 add (((9 integer)))
c{1: 43 add (((8 integer)))
c{1: 44 jump nil
c{1: 45 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((60 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((60 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 string-address)) <- ((next-input))) nil nil
cn0: checking ((1 string-address))
maybe-add: ((1 string-address))
cn0: (((2 integer)) <- ((length)) ((1 string-address) (deref))) nil nil
maybe-add: ((1 string-address) (deref))
cn0: checking ((2 integer))
maybe-add: ((2 integer))
cn0: (((3 integer)) <- ((copy)) ((2 integer))) nil nil
maybe-add: ((2 integer))
cn0: checking ((3 integer))
maybe-add: ((3 integer))
cn0: (((4 string-address)) ((5 boolean)) <- ((next-input))) nil nil
cn0: checking ((4 string-address))
maybe-add: ((4 string-address))
cn0: checking ((5 boolean))
maybe-add: ((5 boolean))
cn0: (((jump-unless)) ((5 boolean)) ((4 offset))) nil nil
maybe-add: ((5 boolean))
maybe-add: ((4 offset))
cn0: (((6 integer)) <- ((length)) ((4 string-address) (deref))) nil nil
maybe-add: ((4 string-address) (deref))
cn0: checking ((6 integer))
maybe-add: ((6 integer))
cn0: (((3 integer)) <- ((add)) ((3 integer)) ((6 integer))) nil nil
maybe-add: ((3 integer))
maybe-add: ((6 integer))
cn0: checking ((3 integer))
maybe-add: ((3 integer))
cn0: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal))) nil nil
maybe-add: ((3 integer))
maybe-add: ((1 literal))
cn0: checking ((3 integer))
maybe-add: ((3 integer))
cn0: (((jump)) ((-6 offset))) nil nil
maybe-add: ((-6 offset))
cn0: (_ <- ((input)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking _
cn0: (((7 string-address)) <- ((new)) ((string literal)) ((3 integer))) nil nil
maybe-add: ((string literal))
maybe-add: ((3 integer))
cn0: checking ((7 string-address))
maybe-add: ((7 string-address))
cn0: (((8 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((8 integer))
maybe-add: ((8 integer))
cn0: (((9 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((9 integer))
maybe-add: ((9 integer))
cn0: (((4 string-address)) ((5 boolean)) <- ((next-input))) nil nil
cn0: checking ((4 string-address))
maybe-add: ((4 string-address))
cn0: checking ((5 boolean))
maybe-add: ((5 boolean))
cn0: (((jump-unless)) ((5 boolean)) ((21 offset))) nil nil
maybe-add: ((5 boolean))
maybe-add: ((21 offset))
cn0: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer))) nil nil
maybe-add: ((9 integer))
maybe-add: ((2 integer))
cn0: checking ((10 boolean))
maybe-add: ((10 boolean))
cn0: (((jump-unless)) ((10 boolean)) ((19 offset))) nil nil
maybe-add: ((10 boolean))
maybe-add: ((19 offset))
cn0: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer))) nil nil
maybe-add: ((1 string-address) (deref))
maybe-add: ((9 integer))
cn0: checking ((11 byte))
maybe-add: ((11 byte))
cn0: (((12 boolean)) <- ((equal)) ((11 byte)) ((_ literal))) nil nil
maybe-add: ((11 byte))
maybe-add: ((_ literal))
cn0: checking ((12 boolean))
maybe-add: ((12 boolean))
cn0: (((jump-if)) ((12 boolean)) ((5 offset))) nil nil
maybe-add: ((12 boolean))
maybe-add: ((5 offset))
cn0: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer))) nil nil
maybe-add: ((7 string-address) (deref))
maybe-add: ((8 integer))
cn0: checking ((13 byte-address))
maybe-add: ((13 byte-address))
cn0: (((13 byte-address) (deref)) <- ((copy)) ((11 byte))) nil nil
maybe-add: ((11 byte))
cn0: checking ((13 byte-address) (deref))
maybe-add: ((13 byte-address) (deref))
cn0: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal))) nil nil
maybe-add: ((9 integer))
maybe-add: ((1 literal))
cn0: checking ((9 integer))
maybe-add: ((9 integer))
cn0: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) nil nil
maybe-add: ((8 integer))
maybe-add: ((1 literal))
cn0: checking ((8 integer))
maybe-add: ((8 integer))
cn0: (((jump)) ((-10 offset))) nil nil
maybe-add: ((-10 offset))
cn0: (((14 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((14 integer))
maybe-add: ((14 integer))
cn0: (((15 boolean)) <- ((less-than)) ((14 integer)) ((6 integer))) nil nil
maybe-add: ((14 integer))
maybe-add: ((6 integer))
cn0: checking ((15 boolean))
maybe-add: ((15 boolean))
cn0: (((jump-unless)) ((15 boolean)) ((6 offset))) nil nil
maybe-add: ((15 boolean))
maybe-add: ((6 offset))
cn0: (((11 byte)) <- ((index)) ((4 string-address) (deref)) ((14 integer))) nil nil
maybe-add: ((4 string-address) (deref))
maybe-add: ((14 integer))
cn0: checking ((11 byte))
maybe-add: ((11 byte))
cn0: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer))) nil nil
maybe-add: ((7 string-address) (deref))
maybe-add: ((8 integer))
cn0: checking ((13 byte-address))
maybe-add: ((13 byte-address))
cn0: (((13 byte-address) (deref)) <- ((copy)) ((11 byte))) nil nil
maybe-add: ((11 byte))
cn0: checking ((13 byte-address) (deref))
maybe-add: ((13 byte-address) (deref))
cn0: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal))) nil nil
maybe-add: ((14 integer))
maybe-add: ((1 literal))
cn0: checking ((14 integer))
maybe-add: ((14 integer))
cn0: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) nil nil
maybe-add: ((8 integer))
maybe-add: ((1 literal))
cn0: checking ((8 integer))
maybe-add: ((8 integer))
cn0: (((jump)) ((-8 offset))) nil nil
maybe-add: ((-8 offset))
cn0: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal))) nil nil
maybe-add: ((9 integer))
maybe-add: ((1 literal))
cn0: checking ((9 integer))
maybe-add: ((9 integer))
cn0: (((jump)) ((-23 offset))) nil nil
maybe-add: ((-23 offset))
cn0: (((10 boolean)) <- ((less-than)) ((9 integer)) ((2 integer))) nil nil
maybe-add: ((9 integer))
maybe-add: ((2 integer))
cn0: checking ((10 boolean))
maybe-add: ((10 boolean))
cn0: (((jump-unless)) ((10 boolean)) ((6 offset))) nil nil
maybe-add: ((10 boolean))
maybe-add: ((6 offset))
cn0: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((9 integer))) nil nil
maybe-add: ((1 string-address) (deref))
maybe-add: ((9 integer))
cn0: checking ((11 byte))
maybe-add: ((11 byte))
cn0: (((13 byte-address)) <- ((index-address)) ((7 string-address) (deref)) ((8 integer))) nil nil
maybe-add: ((7 string-address) (deref))
maybe-add: ((8 integer))
cn0: checking ((13 byte-address))
maybe-add: ((13 byte-address))
cn0: (((13 byte-address) (deref)) <- ((copy)) ((11 byte))) nil nil
maybe-add: ((11 byte))
cn0: checking ((13 byte-address) (deref))
maybe-add: ((13 byte-address) (deref))
cn0: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal))) nil nil
maybe-add: ((9 integer))
maybe-add: ((1 literal))
cn0: checking ((9 integer))
maybe-add: ((9 integer))
cn0: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) nil nil
maybe-add: ((8 integer))
maybe-add: ((1 literal))
cn0: checking ((8 integer))
maybe-add: ((8 integer))
cn0: (((jump)) ((-8 offset))) nil nil
maybe-add: ((-8 offset))
cn0: (((reply)) ((7 string-address))) nil nil
maybe-add: ((7 string-address))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 list-address)) <- ((next-input))) -- nil
c{0: 2 (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset))) -- nil
c{0: 3 (((reply)) ((2 list-address))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 list-address)))
c{1: 2 get (((2 list-address)))
c{1: 3 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 list-address)) <- ((next-input))) nil nil
cn0: checking ((1 list-address))
maybe-add: ((1 list-address))
cn0: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset))) nil nil
cn0: field-access 1 in 1list-addressderef of type list
cn0: checking ((2 list-address))
maybe-add: ((2 list-address))
cn0: (((reply)) ((2 list-address))) nil nil
maybe-add: ((2 list-address))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 list-address)) <- ((next-input))) -- nil
c{0: 2 (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset))) -- nil
c{0: 3 (((reply)) ((2 tagged-value-address))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 list-address)))
c{1: 2 get-address (((2 tagged-value-address)))
c{1: 3 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 list-address)) <- ((next-input))) nil nil
cn0: checking ((1 list-address))
maybe-add: ((1 list-address))
cn0: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset))) nil nil
cn0: field-access 0 in 1list-addressderef of type list
cn0: checking ((2 tagged-value-address))
maybe-add: ((2 tagged-value-address))
cn0: (((reply)) ((2 tagged-value-address))) nil nil
maybe-add: ((2 tagged-value-address))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 tagged-value-address)) <- ((new)) ((tagged-value literal))) -- nil
c{0: 2 (((1 tagged-value-address) (deref)) <- ((next-input))) -- nil
c{0: 3 (((2 type)) <- ((next-input))) -- nil
c{0: 4 (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset))) -- nil
c{0: 5 (((4 boolean)) <- ((equal)) ((3 type)) ((2 type))) -- nil
c{0: 6 (((jump-if)) ((4 boolean)) ((1 offset))) -- nil
c{0: 7 (((reply)) ((0 literal)) ((nil literal))) -- nil
c{0: 8 (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset))) -- nil
c{0: 9 (((reply)) ((5 location)) ((4 boolean))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 new (((1 tagged-value-address)))
c{1: 2 next-input (((1 tagged-value-address) (deref)))
c{1: 3 next-input (((2 type)))
c{1: 4 get (((3 type)))
c{1: 5 equal (((4 boolean)))
c{1: 6 jump-if nil
c{1: 7 reply nil
c{1: 8 get (((5 location)))
c{1: 9 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal))) nil nil
maybe-add: ((tagged-value literal))
cn0: checking ((1 tagged-value-address))
maybe-add: ((1 tagged-value-address))
cn0: (((1 tagged-value-address) (deref)) <- ((next-input))) nil nil
cn0: checking ((1 tagged-value-address) (deref))
maybe-add: ((1 tagged-value-address) (deref))
cn0: (((2 type)) <- ((next-input))) nil nil
cn0: checking ((2 type))
maybe-add: ((2 type))
cn0: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset))) nil nil
cn0: field-access 0 in 1tagged-value-addressderef of type tagged-value
cn0: checking ((3 type))
maybe-add: ((3 type))
cn0: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type))) nil nil
maybe-add: ((3 type))
maybe-add: ((2 type))
cn0: checking ((4 boolean))
maybe-add: ((4 boolean))
cn0: (((jump-if)) ((4 boolean)) ((1 offset))) nil nil
maybe-add: ((4 boolean))
maybe-add: ((1 offset))
cn0: (((reply)) ((0 literal)) ((nil literal))) nil nil
maybe-add: ((0 literal))
maybe-add: ((nil literal))
cn0: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset))) nil nil
cn0: field-access 1 in 1tagged-value-addressderef of type tagged-value
cn0: checking ((5 location))
maybe-add: ((5 location))
cn0: (((reply)) ((5 location)) ((4 boolean))) nil nil
maybe-add: ((5 location))
maybe-add: ((4 boolean))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 channel-address)) <- ((next-input))) -- nil
c{0: 2 (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref))) -- nil
c{0: 3 (((jump-unless)) ((2 boolean)) ((2 offset))) -- nil
c{0: 4 (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset))) -- nil
c{0: 5 (((sleep)) ((3 integer-address) (deref))) -- nil
c{0: 6 (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset))) -- nil
c{0: 7 (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset))) -- nil
c{0: 8 (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref))) -- nil
c{0: 9 (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal))) -- nil
c{0: 10 (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref))) -- nil
c{0: 11 (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer))) -- nil
c{0: 12 (((jump-if)) ((9 boolean)) ((1 offset))) -- nil
c{0: 13 (((4 integer-address) (deref)) <- ((copy)) ((0 literal))) -- nil
c{0: 14 (((reply)) ((6 tagged-value)) ((1 channel-address) (deref))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 channel-address)))
c{1: 2 empty? (((2 boolean)))
c{1: 3 jump-unless nil
c{1: 4 get-address (((3 integer-address)))
c{1: 5 sleep nil
c{1: 6 get-address (((4 integer-address)))
c{1: 7 get (((5 tagged-value-array-address)))
c{1: 8 index (((6 tagged-value)))
c{1: 9 add (((4 integer-address) (deref)))
c{1: 10 length (((8 integer)))
c{1: 11 less-than (((9 boolean)))
c{1: 12 jump-if nil
c{1: 13 copy (((4 integer-address) (deref)))
c{1: 14 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 channel-address)) <- ((next-input))) nil nil
cn0: checking ((1 channel-address))
maybe-add: ((1 channel-address))
cn0: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref))) nil nil
maybe-add: ((1 channel-address) (deref))
cn0: checking ((2 boolean))
maybe-add: ((2 boolean))
cn0: (((jump-unless)) ((2 boolean)) ((2 offset))) nil nil
maybe-add: ((2 boolean))
maybe-add: ((2 offset))
cn0: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset))) nil nil
cn0: field-access 1 in 1channel-addressderef of type channel
cn0: checking ((3 integer-address))
maybe-add: ((3 integer-address))
cn0: (((sleep)) ((3 integer-address) (deref))) nil nil
maybe-add: ((3 integer-address) (deref))
cn0: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset))) nil nil
cn0: field-access 0 in 1channel-addressderef of type channel
cn0: checking ((4 integer-address))
maybe-add: ((4 integer-address))
cn0: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset))) nil nil
cn0: field-access 2 in 1channel-addressderef of type channel
cn0: checking ((5 tagged-value-array-address))
maybe-add: ((5 tagged-value-array-address))
cn0: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref))) nil nil
maybe-add: ((5 tagged-value-array-address) (deref))
maybe-add: ((4 integer-address) (deref))
cn0: checking ((6 tagged-value))
maybe-add: ((6 tagged-value))
cn0: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal))) nil nil
maybe-add: ((4 integer-address) (deref))
maybe-add: ((1 literal))
cn0: checking ((4 integer-address) (deref))
maybe-add: ((4 integer-address) (deref))
cn0: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref))) nil nil
maybe-add: ((5 tagged-value-array-address) (deref))
cn0: checking ((8 integer))
maybe-add: ((8 integer))
cn0: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer))) nil nil
maybe-add: ((4 integer-address) (deref))
maybe-add: ((8 integer))
cn0: checking ((9 boolean))
maybe-add: ((9 boolean))
cn0: (((jump-if)) ((9 boolean)) ((1 offset))) nil nil
maybe-add: ((9 boolean))
maybe-add: ((1 offset))
cn0: (((4 integer-address) (deref)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((4 integer-address) (deref))
maybe-add: ((4 integer-address) (deref))
cn0: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref))) nil nil
maybe-add: ((6 tagged-value))
maybe-add: ((1 channel-address) (deref))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 string-address)) <- ((next-input))) -- nil
c{0: 2 (((2 character)) <- ((next-input))) -- nil
c{0: 3 (((3 integer)) <- ((length)) ((1 string-address) (deref))) -- nil
c{0: 4 (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal))) -- nil
c{0: 5 (((jump-unless)) ((4 boolean)) ((2 offset))) -- nil
c{0: 6 (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((0 literal))) -- nil
c{0: 7 (((reply)) ((5 string-address-array-address))) -- nil
c{0: 8 (((6 integer)) <- ((copy)) ((1 literal))) -- nil
c{0: 9 (((7 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 10 (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((7 integer))) -- nil
c{0: 11 (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((3 integer))) -- nil
c{0: 12 (((jump-if)) ((8 boolean)) ((3 offset))) -- nil
c{0: 13 (((7 integer)) <- ((add)) ((7 integer)) ((1 literal))) -- nil
c{0: 14 (((6 integer)) <- ((add)) ((6 integer)) ((1 literal))) -- nil
c{0: 15 (((jump)) ((-6 offset))) -- nil
c{0: 16 (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((6 integer))) -- nil
c{0: 17 (((9 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 18 (((10 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 19 (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer))) -- nil
c{0: 20 (((jump-if)) ((8 boolean)) ((17 offset))) -- nil
c{0: 21 (((11 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((10 integer))) -- nil
c{0: 22 (((12 integer)) <- ((subtract)) ((11 integer)) ((10 integer))) -- nil
c{0: 23 (((13 string-address-address)) <- ((index-address)) ((5 string-address-array-address) (deref)) ((9 integer))) -- nil
c{0: 24 (((13 string-address-address) (deref)) <- ((new)) ((string literal)) ((12 integer))) -- nil
c{0: 25 (((14 integer)) <- ((copy)) ((10 integer))) -- nil
c{0: 26 (((15 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 27 (((16 boolean)) <- ((greater-or-equal)) ((14 integer)) ((11 integer))) -- nil
c{0: 28 (((jump-if)) ((16 boolean)) ((6 offset))) -- nil
c{0: 29 (((17 character)) <- ((index)) ((1 string-address) (deref)) ((14 integer))) -- nil
c{0: 30 (((18 character-address)) <- ((index-address)) ((13 string-address-address) (deref) (deref)) ((15 integer))) -- nil
c{0: 31 (((18 character-address) (deref)) <- ((copy)) ((17 character))) -- nil
c{0: 32 (((14 integer)) <- ((add)) ((14 integer)) ((1 literal))) -- nil
c{0: 33 (((15 integer)) <- ((add)) ((15 integer)) ((1 literal))) -- nil
c{0: 34 (((jump)) ((-8 offset))) -- nil
c{0: 35 (((10 integer)) <- ((add)) ((11 integer)) ((1 literal))) -- nil
c{0: 36 (((9 integer)) <- ((add)) ((9 integer)) ((1 literal))) -- nil
c{0: 37 (((jump)) ((-19 offset))) -- nil
c{0: 38 (((reply)) ((5 string-address-array-address))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 string-address)))
c{1: 2 next-input (((2 character)))
c{1: 3 length (((3 integer)))
c{1: 4 equal (((4 boolean)))
c{1: 5 jump-unless nil
c{1: 6 new (((5 string-address-array-address)))
c{1: 7 reply nil
c{1: 8 copy (((6 integer)))
c{1: 9 copy (((7 integer)))
c{1: 10 find-next (((7 integer)))
c{1: 11 greater-or-equal (((8 boolean)))
c{1: 12 jump-if nil
c{1: 13 add (((7 integer)))
c{1: 14 add (((6 integer)))
c{1: 15 jump nil
c{1: 16 new (((5 string-address-array-address)))
c{1: 17 copy (((9 integer)))
c{1: 18 copy (((10 integer)))
c{1: 19 greater-or-equal (((8 boolean)))
c{1: 20 jump-if nil
c{1: 21 find-next (((11 integer)))
c{1: 22 subtract (((12 integer)))
c{1: 23 index-address (((13 string-address-address)))
c{1: 24 new (((13 string-address-address) (deref)))
c{1: 25 copy (((14 integer)))
c{1: 26 copy (((15 integer)))
c{1: 27 greater-or-equal (((16 boolean)))
c{1: 28 jump-if nil
c{1: 29 index (((17 character)))
c{1: 30 index-address (((18 character-address)))
c{1: 31 copy (((18 character-address) (deref)))
c{1: 32 add (((14 integer)))
c{1: 33 add (((15 integer)))
c{1: 34 jump nil
c{1: 35 add (((10 integer)))
c{1: 36 add (((9 integer)))
c{1: 37 jump nil
c{1: 38 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 string-address)) <- ((next-input))) nil nil
cn0: checking ((1 string-address))
maybe-add: ((1 string-address))
cn0: (((2 character)) <- ((next-input))) nil nil
cn0: checking ((2 character))
maybe-add: ((2 character))
cn0: (((3 integer)) <- ((length)) ((1 string-address) (deref))) nil nil
maybe-add: ((1 string-address) (deref))
cn0: checking ((3 integer))
maybe-add: ((3 integer))
cn0: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal))) nil nil
maybe-add: ((3 integer))
maybe-add: ((0 literal))
cn0: checking ((4 boolean))
maybe-add: ((4 boolean))
cn0: (((jump-unless)) ((4 boolean)) ((2 offset))) nil nil
maybe-add: ((4 boolean))
maybe-add: ((2 offset))
cn0: (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((0 literal))) nil nil
maybe-add: ((string-address-array literal))
maybe-add: ((0 literal))
cn0: checking ((5 string-address-array-address))
maybe-add: ((5 string-address-array-address))
cn0: (((reply)) ((5 string-address-array-address))) nil nil
maybe-add: ((5 string-address-array-address))
cn0: (((6 integer)) <- ((copy)) ((1 literal))) nil nil
maybe-add: ((1 literal))
cn0: checking ((6 integer))
maybe-add: ((6 integer))
cn0: (((7 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((7 integer))
maybe-add: ((7 integer))
cn0: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((7 integer))) nil nil
maybe-add: ((1 string-address))
maybe-add: ((2 character))
maybe-add: ((7 integer))
cn0: checking ((7 integer))
maybe-add: ((7 integer))
cn0: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((3 integer))) nil nil
maybe-add: ((7 integer))
maybe-add: ((3 integer))
cn0: checking ((8 boolean))
maybe-add: ((8 boolean))
cn0: (((jump-if)) ((8 boolean)) ((3 offset))) nil nil
maybe-add: ((8 boolean))
maybe-add: ((3 offset))
cn0: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal))) nil nil
maybe-add: ((7 integer))
maybe-add: ((1 literal))
cn0: checking ((7 integer))
maybe-add: ((7 integer))
cn0: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal))) nil nil
maybe-add: ((6 integer))
maybe-add: ((1 literal))
cn0: checking ((6 integer))
maybe-add: ((6 integer))
cn0: (((jump)) ((-6 offset))) nil nil
maybe-add: ((-6 offset))
cn0: (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((6 integer))) nil nil
maybe-add: ((string-address-array literal))
maybe-add: ((6 integer))
cn0: checking ((5 string-address-array-address))
maybe-add: ((5 string-address-array-address))
cn0: (((9 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((9 integer))
maybe-add: ((9 integer))
cn0: (((10 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((10 integer))
maybe-add: ((10 integer))
cn0: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer))) nil nil
maybe-add: ((10 integer))
maybe-add: ((3 integer))
cn0: checking ((8 boolean))
maybe-add: ((8 boolean))
cn0: (((jump-if)) ((8 boolean)) ((17 offset))) nil nil
maybe-add: ((8 boolean))
maybe-add: ((17 offset))
cn0: (((11 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((10 integer))) nil nil
maybe-add: ((1 string-address))
maybe-add: ((2 character))
maybe-add: ((10 integer))
cn0: checking ((11 integer))
maybe-add: ((11 integer))
cn0: (((12 integer)) <- ((subtract)) ((11 integer)) ((10 integer))) nil nil
maybe-add: ((11 integer))
maybe-add: ((10 integer))
cn0: checking ((12 integer))
maybe-add: ((12 integer))
cn0: (((13 string-address-address)) <- ((index-address)) ((5 string-address-array-address) (deref)) ((9 integer))) nil nil
maybe-add: ((5 string-address-array-address) (deref))
maybe-add: ((9 integer))
cn0: checking ((13 string-address-address))
maybe-add: ((13 string-address-address))
cn0: (((13 string-address-address) (deref)) <- ((new)) ((string literal)) ((12 integer))) nil nil
maybe-add: ((string literal))
maybe-add: ((12 integer))
cn0: checking ((13 string-address-address) (deref))
maybe-add: ((13 string-address-address) (deref))
cn0: (((14 integer)) <- ((copy)) ((10 integer))) nil nil
maybe-add: ((10 integer))
cn0: checking ((14 integer))
maybe-add: ((14 integer))
cn0: (((15 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((15 integer))
maybe-add: ((15 integer))
cn0: (((16 boolean)) <- ((greater-or-equal)) ((14 integer)) ((11 integer))) nil nil
maybe-add: ((14 integer))
maybe-add: ((11 integer))
cn0: checking ((16 boolean))
maybe-add: ((16 boolean))
cn0: (((jump-if)) ((16 boolean)) ((6 offset))) nil nil
maybe-add: ((16 boolean))
maybe-add: ((6 offset))
cn0: (((17 character)) <- ((index)) ((1 string-address) (deref)) ((14 integer))) nil nil
maybe-add: ((1 string-address) (deref))
maybe-add: ((14 integer))
cn0: checking ((17 character))
maybe-add: ((17 character))
cn0: (((18 character-address)) <- ((index-address)) ((13 string-address-address) (deref) (deref)) ((15 integer))) nil nil
maybe-add: ((13 string-address-address) (deref) (deref))
maybe-add: ((15 integer))
cn0: checking ((18 character-address))
maybe-add: ((18 character-address))
cn0: (((18 character-address) (deref)) <- ((copy)) ((17 character))) nil nil
maybe-add: ((17 character))
cn0: checking ((18 character-address) (deref))
maybe-add: ((18 character-address) (deref))
cn0: (((14 integer)) <- ((add)) ((14 integer)) ((1 literal))) nil nil
maybe-add: ((14 integer))
maybe-add: ((1 literal))
cn0: checking ((14 integer))
maybe-add: ((14 integer))
cn0: (((15 integer)) <- ((add)) ((15 integer)) ((1 literal))) nil nil
maybe-add: ((15 integer))
maybe-add: ((1 literal))
cn0: checking ((15 integer))
maybe-add: ((15 integer))
cn0: (((jump)) ((-8 offset))) nil nil
maybe-add: ((-8 offset))
cn0: (((10 integer)) <- ((add)) ((11 integer)) ((1 literal))) nil nil
maybe-add: ((11 integer))
maybe-add: ((1 literal))
cn0: checking ((10 integer))
maybe-add: ((10 integer))
cn0: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal))) nil nil
maybe-add: ((9 integer))
maybe-add: ((1 literal))
cn0: checking ((9 integer))
maybe-add: ((9 integer))
cn0: (((jump)) ((-19 offset))) nil nil
maybe-add: ((-19 offset))
cn0: (((reply)) ((5 string-address-array-address))) nil nil
maybe-add: ((5 string-address-array-address))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 string-address)) <- ((next-input))) -- nil
c{0: 2 (((2 integer)) <- ((length)) ((1 string-address) (deref))) -- nil
c{0: 3 (((3 string-address)) <- ((next-input))) -- nil
c{0: 4 (((4 integer)) <- ((length)) ((3 string-address) (deref))) -- nil
c{0: 5 (((5 integer)) <- ((add)) ((2 integer)) ((4 integer))) -- nil
c{0: 6 (((6 string-address)) <- ((new)) ((string literal)) ((5 integer))) -- nil
c{0: 7 (((7 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 8 (((8 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 9 (((9 boolean)) <- ((less-than)) ((8 integer)) ((2 integer))) -- nil
c{0: 10 (((jump-unless)) ((9 boolean)) ((6 offset))) -- nil
c{0: 11 (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer))) -- nil
c{0: 12 (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((8 integer))) -- nil
c{0: 13 (((10 byte-address) (deref)) <- ((copy)) ((11 byte))) -- nil
c{0: 14 (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) -- nil
c{0: 15 (((7 integer)) <- ((add)) ((7 integer)) ((1 literal))) -- nil
c{0: 16 (((jump)) ((-8 offset))) -- nil
c{0: 17 (((8 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 18 (((12 boolean)) <- ((less-than)) ((8 integer)) ((4 integer))) -- nil
c{0: 19 (((jump-unless)) ((12 boolean)) ((6 offset))) -- nil
c{0: 20 (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer))) -- nil
c{0: 21 (((11 byte)) <- ((index)) ((3 string-address) (deref)) ((8 integer))) -- nil
c{0: 22 (((10 byte-address) (deref)) <- ((copy)) ((11 byte))) -- nil
c{0: 23 (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) -- nil
c{0: 24 (((7 integer)) <- ((add)) ((7 integer)) ((1 literal))) -- nil
c{0: 25 (((jump)) ((-8 offset))) -- nil
c{0: 26 (((reply)) ((6 string-address))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 string-address)))
c{1: 2 length (((2 integer)))
c{1: 3 next-input (((3 string-address)))
c{1: 4 length (((4 integer)))
c{1: 5 add (((5 integer)))
c{1: 6 new (((6 string-address)))
c{1: 7 copy (((7 integer)))
c{1: 8 copy (((8 integer)))
c{1: 9 less-than (((9 boolean)))
c{1: 10 jump-unless nil
c{1: 11 index-address (((10 byte-address)))
c{1: 12 index (((11 byte)))
c{1: 13 copy (((10 byte-address) (deref)))
c{1: 14 add (((8 integer)))
c{1: 15 add (((7 integer)))
c{1: 16 jump nil
c{1: 17 copy (((8 integer)))
c{1: 18 less-than (((12 boolean)))
c{1: 19 jump-unless nil
c{1: 20 index-address (((10 byte-address)))
c{1: 21 index (((11 byte)))
c{1: 22 copy (((10 byte-address) (deref)))
c{1: 23 add (((8 integer)))
c{1: 24 add (((7 integer)))
c{1: 25 jump nil
c{1: 26 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 string-address)) <- ((next-input))) nil nil
cn0: checking ((1 string-address))
maybe-add: ((1 string-address))
cn0: (((2 integer)) <- ((length)) ((1 string-address) (deref))) nil nil
maybe-add: ((1 string-address) (deref))
cn0: checking ((2 integer))
maybe-add: ((2 integer))
cn0: (((3 string-address)) <- ((next-input))) nil nil
cn0: checking ((3 string-address))
maybe-add: ((3 string-address))
cn0: (((4 integer)) <- ((length)) ((3 string-address) (deref))) nil nil
maybe-add: ((3 string-address) (deref))
cn0: checking ((4 integer))
maybe-add: ((4 integer))
cn0: (((5 integer)) <- ((add)) ((2 integer)) ((4 integer))) nil nil
maybe-add: ((2 integer))
maybe-add: ((4 integer))
cn0: checking ((5 integer))
maybe-add: ((5 integer))
cn0: (((6 string-address)) <- ((new)) ((string literal)) ((5 integer))) nil nil
maybe-add: ((string literal))
maybe-add: ((5 integer))
cn0: checking ((6 string-address))
maybe-add: ((6 string-address))
cn0: (((7 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((7 integer))
maybe-add: ((7 integer))
cn0: (((8 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((8 integer))
maybe-add: ((8 integer))
cn0: (((9 boolean)) <- ((less-than)) ((8 integer)) ((2 integer))) nil nil
maybe-add: ((8 integer))
maybe-add: ((2 integer))
cn0: checking ((9 boolean))
maybe-add: ((9 boolean))
cn0: (((jump-unless)) ((9 boolean)) ((6 offset))) nil nil
maybe-add: ((9 boolean))
maybe-add: ((6 offset))
cn0: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer))) nil nil
maybe-add: ((6 string-address) (deref))
maybe-add: ((7 integer))
cn0: checking ((10 byte-address))
maybe-add: ((10 byte-address))
cn0: (((11 byte)) <- ((index)) ((1 string-address) (deref)) ((8 integer))) nil nil
maybe-add: ((1 string-address) (deref))
maybe-add: ((8 integer))
cn0: checking ((11 byte))
maybe-add: ((11 byte))
cn0: (((10 byte-address) (deref)) <- ((copy)) ((11 byte))) nil nil
maybe-add: ((11 byte))
cn0: checking ((10 byte-address) (deref))
maybe-add: ((10 byte-address) (deref))
cn0: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) nil nil
maybe-add: ((8 integer))
maybe-add: ((1 literal))
cn0: checking ((8 integer))
maybe-add: ((8 integer))
cn0: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal))) nil nil
maybe-add: ((7 integer))
maybe-add: ((1 literal))
cn0: checking ((7 integer))
maybe-add: ((7 integer))
cn0: (((jump)) ((-8 offset))) nil nil
maybe-add: ((-8 offset))
cn0: (((8 integer)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((8 integer))
maybe-add: ((8 integer))
cn0: (((12 boolean)) <- ((less-than)) ((8 integer)) ((4 integer))) nil nil
maybe-add: ((8 integer))
maybe-add: ((4 integer))
cn0: checking ((12 boolean))
maybe-add: ((12 boolean))
cn0: (((jump-unless)) ((12 boolean)) ((6 offset))) nil nil
maybe-add: ((12 boolean))
maybe-add: ((6 offset))
cn0: (((10 byte-address)) <- ((index-address)) ((6 string-address) (deref)) ((7 integer))) nil nil
maybe-add: ((6 string-address) (deref))
maybe-add: ((7 integer))
cn0: checking ((10 byte-address))
maybe-add: ((10 byte-address))
cn0: (((11 byte)) <- ((index)) ((3 string-address) (deref)) ((8 integer))) nil nil
maybe-add: ((3 string-address) (deref))
maybe-add: ((8 integer))
cn0: checking ((11 byte))
maybe-add: ((11 byte))
cn0: (((10 byte-address) (deref)) <- ((copy)) ((11 byte))) nil nil
maybe-add: ((11 byte))
cn0: checking ((10 byte-address) (deref))
maybe-add: ((10 byte-address) (deref))
cn0: (((8 integer)) <- ((add)) ((8 integer)) ((1 literal))) nil nil
maybe-add: ((8 integer))
maybe-add: ((1 literal))
cn0: checking ((8 integer))
maybe-add: ((8 integer))
cn0: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal))) nil nil
maybe-add: ((7 integer))
maybe-add: ((1 literal))
cn0: checking ((7 integer))
maybe-add: ((7 integer))
cn0: (((jump)) ((-8 offset))) nil nil
maybe-add: ((-8 offset))
cn0: (((reply)) ((6 string-address))) nil nil
maybe-add: ((6 string-address))
c{0: 0 (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) -- nil
c{0: 1 (((1 channel-address)) <- ((next-input))) -- nil
c{0: 2 (((2 tagged-value)) <- ((next-input))) -- nil
c{0: 3 (((4 boolean)) <- ((full?)) ((1 channel-address) (deref))) -- nil
c{0: 4 (((jump-unless)) ((4 boolean)) ((2 offset))) -- nil
c{0: 5 (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset))) -- nil
c{0: 6 (((sleep)) ((5 integer-address) (deref))) -- nil
c{0: 7 (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset))) -- nil
c{0: 8 (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset))) -- nil
c{0: 9 (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref))) -- nil
c{0: 10 (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value))) -- nil
c{0: 11 (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal))) -- nil
c{0: 12 (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref))) -- nil
c{0: 13 (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer))) -- nil
c{0: 14 (((jump-if)) ((10 boolean)) ((1 offset))) -- nil
c{0: 15 (((7 integer-address) (deref)) <- ((copy)) ((0 literal))) -- nil
c{0: 16 (((reply)) ((1 channel-address) (deref))) -- nil
c{1: 0 new (((default-scope scope-address)))
c{1: 1 next-input (((1 channel-address)))
c{1: 2 next-input (((2 tagged-value)))
c{1: 3 full? (((4 boolean)))
c{1: 4 jump-unless nil
c{1: 5 get-address (((5 integer-address)))
c{1: 6 sleep nil
c{1: 7 get (((6 tagged-value-array-address)))
c{1: 8 get-address (((7 integer-address)))
c{1: 9 index-address (((8 tagged-value-address)))
c{1: 10 copy (((8 tagged-value-address) (deref)))
c{1: 11 add (((7 integer-address) (deref)))
c{1: 12 length (((9 integer)))
c{1: 13 less-than (((10 boolean)))
c{1: 14 jump-if nil
c{1: 15 copy (((7 integer-address) (deref)))
c{1: 16 reply nil
cn0: (((default-scope scope-address)) <- ((new)) ((scope literal)) ((30 literal))) nil nil
maybe-add: ((scope literal))
maybe-add: ((30 literal))
cn0: checking ((default-scope scope-address))
maybe-add: ((default-scope scope-address))
cn0: (((1 channel-address)) <- ((next-input))) nil nil
cn0: checking ((1 channel-address))
maybe-add: ((1 channel-address))
cn0: (((2 tagged-value)) <- ((next-input))) nil nil
cn0: checking ((2 tagged-value))
maybe-add: ((2 tagged-value))
cn0: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref))) nil nil
maybe-add: ((1 channel-address) (deref))
cn0: checking ((4 boolean))
maybe-add: ((4 boolean))
cn0: (((jump-unless)) ((4 boolean)) ((2 offset))) nil nil
maybe-add: ((4 boolean))
maybe-add: ((2 offset))
cn0: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset))) nil nil
cn0: field-access 0 in 1channel-addressderef of type channel
cn0: checking ((5 integer-address))
maybe-add: ((5 integer-address))
cn0: (((sleep)) ((5 integer-address) (deref))) nil nil
maybe-add: ((5 integer-address) (deref))
cn0: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset))) nil nil
cn0: field-access 2 in 1channel-addressderef of type channel
cn0: checking ((6 tagged-value-array-address))
maybe-add: ((6 tagged-value-array-address))
cn0: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset))) nil nil
cn0: field-access 1 in 1channel-addressderef of type channel
cn0: checking ((7 integer-address))
maybe-add: ((7 integer-address))
cn0: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref))) nil nil
maybe-add: ((6 tagged-value-array-address) (deref))
maybe-add: ((7 integer-address) (deref))
cn0: checking ((8 tagged-value-address))
maybe-add: ((8 tagged-value-address))
cn0: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value))) nil nil
maybe-add: ((2 tagged-value))
cn0: checking ((8 tagged-value-address) (deref))
maybe-add: ((8 tagged-value-address) (deref))
cn0: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal))) nil nil
maybe-add: ((7 integer-address) (deref))
maybe-add: ((1 literal))
cn0: checking ((7 integer-address) (deref))
maybe-add: ((7 integer-address) (deref))
cn0: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref))) nil nil
maybe-add: ((6 tagged-value-array-address) (deref))
cn0: checking ((9 integer))
maybe-add: ((9 integer))
cn0: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer))) nil nil
maybe-add: ((7 integer-address) (deref))
maybe-add: ((9 integer))
cn0: checking ((10 boolean))
maybe-add: ((10 boolean))
cn0: (((jump-if)) ((10 boolean)) ((1 offset))) nil nil
maybe-add: ((10 boolean))
maybe-add: ((1 offset))
cn0: (((7 integer-address) (deref)) <- ((copy)) ((0 literal))) nil nil
maybe-add: ((0 literal))
cn0: checking ((7 integer-address) (deref))
maybe-add: ((7 integer-address) (deref))
cn0: (((reply)) ((1 channel-address) (deref))) nil nil
maybe-add: ((1 channel-address) (deref))
run: -- nil
run: 1 callee 0: (((reply)))
reply: nil (((1 integer)))
