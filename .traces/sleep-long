schedule: f1
run: f1 0: (((sleep)) ((for-some-cycles literal)) ((20 literal)))
run: f1 0: sleeping until 21
schedule: pushing f1 to sleep queue
schedule: f2
run: f2 0: (((2 integer)) <- ((copy)) ((0 literal)))
run: f2 0: 0 => ((2 integer))
mem: ((2 integer)): 2 <= 0
run: f2 1: (((2 integer)) <- ((copy)) ((0 literal)))
run: f2 1: 0 => ((2 integer))
mem: ((2 integer)): 2 <= 0
schedule: done with routine 
schedule: skipping to cycle 22
schedule: waking up f1
schedule: f1
run: f1 1: (((1 integer)) <- ((copy)) ((0 literal)))
run: f1 1: 0 => ((1 integer))
mem: ((1 integer)): 1 <= 0
run: f1 2: (((1 integer)) <- ((copy)) ((0 literal)))
run: f1 2: 0 => ((1 integer))
mem: ((1 integer)): 1 <= 0
schedule: done with routine 
