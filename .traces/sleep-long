schedule: f1
run: -- nil
run: 1 f1 0: (sleep (20 literal))
run: sleeping until 21
schedule: pushing f1 to sleep queue
schedule: f2
run: -- nil
run: 2 f2 0: ((2 integer) <- copy (4 literal))
run: 4 => (2 integer)
setm: (2 integer) <= 4
sz: (2 integer)
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 4
run: -- ((2 4))
run: 3 f2 1: ((2 integer) <- copy (4 literal))
run: 4 => (2 integer)
setm: (2 integer) <= 4
sz: (2 integer)
setm: size of (2 integer) is 1
setm: (2 integer): setting 2 to 4
schedule: done with routine
schedule: skipping to cycle 22
schedule: waking up f1
schedule: f1
run: -- ((2 4))
run: 23 f1 1: ((1 integer) <- copy (3 literal))
run: 3 => (1 integer)
setm: (1 integer) <= 3
sz: (1 integer)
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 3
run: -- ((1 3) (2 4))
run: 24 f1 2: ((1 integer) <- copy (3 literal))
run: 3 => (1 integer)
setm: (1 integer) <= 3
sz: (1 integer)
setm: size of (1 integer) is 1
setm: (1 integer): setting 1 to 3
schedule: done with routine
