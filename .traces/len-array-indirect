schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((2 literal)))
run: main 0: 2 => ((1 integer))
mem: ((1 integer)): 1 <= 2
run: main 1: (((2 integer)) <- ((copy)) ((23 literal)))
run: main 1: 23 => ((2 integer))
mem: ((2 integer)): 2 <= 23
run: main 2: (((3 boolean)) <- ((copy)) ((nil literal)))
run: main 2: nil => ((3 boolean))
mem: ((3 boolean)): 3 <= nil
run: main 3: (((4 integer)) <- ((copy)) ((24 literal)))
run: main 3: 24 => ((4 integer))
mem: ((4 integer)): 4 <= 24
run: main 4: (((5 boolean)) <- ((copy)) ((t literal)))
run: main 4: t => ((5 boolean))
mem: ((5 boolean)): 5 <= t
run: main 5: (((6 integer-address)) <- ((copy)) ((1 literal)))
run: main 5: 1 => ((6 integer-address))
mem: ((6 integer-address)): 6 <= 1
run: main 6: (((7 integer)) <- ((length)) ((6 integer-boolean-pair-array-address) (deref)))
array-len: ((6 integer-boolean-pair-array-address) (deref))
mem: ((1 integer)) => 2
run: main 6: 2 => ((7 integer))
mem: ((7 integer)): 7 <= 2
schedule: done with routine 
