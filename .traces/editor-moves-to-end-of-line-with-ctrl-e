 102 run: assume-console [
    left-click 1, 1
    press ctrl-e
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"1": "literal"}
9992 load: after rewriting: left-click 1, 1
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-e": <>}
9992 load: after rewriting: press ctrl-e
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    4:number <- get *2:address:editor-data, cursor-row:offset
    5:number <- get *2:address:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"5": "number"}
9992 load: after rewriting: 5:number <- get *2:address:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- perform checks for recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1294
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1296
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1298
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1294 in location 1299
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1300
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1301
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1302
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1298 is 1009
9999 mem: location 1301 is 1
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1220
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1221
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1222
 105 run: jump-unless sc, 
9999 mem: location 1220 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1223
 105 run: *row <- copy new-row
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1224
 105 run: *column <- copy new-column
9999 mem: location 1222 is 0
9999 mem: location 1224 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1220 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1298
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1299 is 1294
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1294 in location 1259
 105 run: jump-unless x, 
9999 mem: location 1259 is 1294
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1259 is 1294
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1285
9999 mem: location 1259 is 1294
9998 run: address to copy is 1294
9999 mem: storing 1294 in location 1260
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1259 is 1294
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1285
9999 mem: location 1259 is 1294
9998 run: address to copy is 1295
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1295 is 1285
9999 mem: storing 1285 in location 1261
 105 run: max:number <- length *buf
9999 mem: location 1261 is 1285
9999 mem: storing 2 in location 1262
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1260 is 1294
9999 mem: location 1294 is 0
9999 mem: location 1262 is 2
9999 mem: storing 0 in location 1263
 105 run: jump-unless done?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1261 is 1285
9999 mem: location 1260 is 1294
9999 mem: location 1294 is 0
9998 run: address to copy is 1286
9998 run: its type is event
9999 mem: location 1286 is 2
9999 mem: location 1287 is 65513
9999 mem: location 1288 is 1
9999 mem: location 1289 is 1
9999 mem: storing 2 in location 1265
9999 mem: storing 65513 in location 1266
9999 mem: storing 1 in location 1267
9999 mem: storing 1 in location 1268
 105 run: *idx <- add *idx, 1
9999 mem: location 1260 is 1294
9999 mem: location 1294 is 0
9999 mem: location 1260 is 1294
9999 mem: storing 1 in location 1294
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1265 is 2
9999 mem: location 1266 is 65513
9999 mem: location 1267 is 1
9999 mem: location 1268 is 1
9999 mem: location 1259 is 1294
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 1]
9998 run: result 1 is 1294
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1303
9999 mem: storing 65513 in location 1304
9999 mem: storing 1 in location 1305
9999 mem: storing 1 in location 1306
9999 mem: storing 1294 in location 1299
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 104 run: jump-unless found?, 
9999 mem: location 1307 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 2
9999 mem: location 1304 is 65513
9999 mem: location 1305 is 1
9999 mem: location 1306 is 1
9999 mem: storing 1304 in location 1309
 104 run: jump-unless t, 
9999 mem: location 1309 is 1304
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1298 is 1009
9999 mem: location 1300 is 1000
9999 mem: location 1309 is 1304
9999 mem: location 1304 is 65513
9999 mem: location 1305 is 1
9999 mem: location 1306 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1311
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1313
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1314
 105 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1315
9999 mem: storing 1 in location 1316
9999 mem: storing 1 in location 1317
 105 run: jump-if editor, 1:offset
9999 mem: location 1314 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1315 is 65513
9999 mem: location 1316 is 1
9999 mem: location 1317 is 1
9998 run: address to copy is 1316
9998 run: its type is number
9999 mem: location 1316 is 1
9999 mem: storing 1 in location 1318
 105 run: jump-if click-row, 1:offset
9999 mem: location 1318 is 1
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1315 is 65513
9999 mem: location 1316 is 1
9999 mem: location 1317 is 1
9998 run: address to copy is 1317
9998 run: its type is number
9999 mem: location 1317 is 1
9999 mem: storing 1 in location 1319
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1314 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1314 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1320
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1319 is 1
9999 mem: location 1320 is 0
9999 mem: storing 0 in location 1321
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1321 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1314 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1314 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1322
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1319 is 1
9999 mem: location 1322 is 9
9999 mem: storing 0 in location 1323
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1323 is 0
9998 run: jumping to instruction 18
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1313 is 1009
9999 mem: location 1314 is 1000
9999 mem: location 1318 is 1
9999 mem: location 1319 is 1
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1193
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1194
 106 run: target-row:number <- next-ingredient 
9999 mem: storing 1 in location 1195
 106 run: target-column:number <- next-ingredient 
9999 mem: storing 1 in location 1196
 106 run: jump-if editor, 1:offset
9999 mem: location 1194 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1197
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1198
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1193 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 107 run: jump-unless sc, 
9999 mem: location 1171 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1172
 107 run: reply height
9999 mem: location 1172 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1199
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1154
9999 mem: storing 1154 in location 1200
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1200 is 1154
9999 mem: storing 1154 in location 1201
 106 run: curr <- next_2 curr
9999 mem: location 1200 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1154
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1166
9999 mem: location 1156 is 0
9999 mem: location 1171 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1155 is 1166
9999 mem: storing 1166 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1166
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1166
9999 mem: storing 1166 in location 1200
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1202
 106 run: column:number <- copy left
9999 mem: location 1197 is 0
9999 mem: storing 0 in location 1203
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1204
 106 run: *cursor-row <- copy target-row
9999 mem: location 1195 is 1
9999 mem: location 1204 is 1006
9999 mem: storing 1 in location 1006
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1205
 106 run: *cursor-column <- copy target-column
9999 mem: location 1196 is 1
9999 mem: location 1205 is 1007
9999 mem: storing 1 in location 1007
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1194 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1154
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1194 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1206
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1166
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1203 is 0
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1209
 106 run: jump-unless at-cursor?, 
9999 mem: location 1209 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 49
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1200 is 1166
9998 run: address to copy is 1166
9998 run: its type is character
9999 mem: location 1166 is 49
9999 mem: storing 49 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 49
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 0
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1200 is 1166
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1166 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 49
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1200
 106 run: prev <- next_2 prev
9999 mem: location 1201 is 1154
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1154 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1154
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1154
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1166
9999 mem: location 1156 is 0
9999 mem: location 1171 is 1154
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1155 is 1166
9999 mem: storing 1166 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1166
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1166
9999 mem: storing 1166 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 0
9999 mem: storing 1 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1173
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1203 is 1
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1209
 106 run: jump-unless at-cursor?, 
9999 mem: location 1209 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1201 is 1166
9999 mem: location 1206 is 1003
9999 mem: storing 1166 in location 1003
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 50
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1200 is 1173
9998 run: address to copy is 1173
9998 run: its type is character
9999 mem: location 1173 is 50
9999 mem: storing 50 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 50
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 1
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1200 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 50
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1200
 106 run: prev <- next_2 prev
9999 mem: location 1201 is 1166
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1166 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 49
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 1
9999 mem: storing 2 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1176
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1203 is 2
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1209
 106 run: jump-unless at-cursor?, 
9999 mem: location 1209 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1200 is 1176
9998 run: address to copy is 1176
9998 run: its type is character
9999 mem: location 1176 is 51
9999 mem: storing 51 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 51
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 2
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1200 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1200
 106 run: prev <- next_2 prev
9999 mem: location 1201 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 50
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 2
9999 mem: storing 3 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1179
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 1
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1203 is 3
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1209
 106 run: jump-unless at-cursor?, 
9999 mem: location 1209 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1200 is 1179
9998 run: address to copy is 1179
9998 run: its type is character
9999 mem: location 1179 is 10
9999 mem: storing 10 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 10
9999 mem: storing 1 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 1
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1203 is 3
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1212
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1212 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 106 run: column <- copy left
9999 mem: location 1197 is 0
9999 mem: storing 0 in location 1203
 106 run: curr <- next_2 curr
9999 mem: location 1200 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1179 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1180
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1182
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1182
9999 mem: storing 1182 in location 1200
 106 run: prev <- next_2 prev
9999 mem: location 1201 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1201
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1182
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 2
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1182 is 52
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1200 is 1182
9998 run: address to copy is 1182
9998 run: its type is character
9999 mem: location 1182 is 52
9999 mem: storing 52 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 52
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 0
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1200 is 1182
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-end-of-line-with-ctrl-e
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1182 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1182 is 52
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1183
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1185
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: storing 1185 in location 1200
 106 run: prev <- next_2 prev
9999 mem: location 1201 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1179 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1179
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1171 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1180
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1180 is 1182
9999 mem: storing 1182 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1182
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1182
9999 mem: storing 1182 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 0
9999 mem: storing 1 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1185
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 2
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1185
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1185 is 53
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1200 is 1185
9998 run: address to copy is 1185
9998 run: its type is character
9999 mem: location 1185 is 53
9999 mem: storing 53 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 53
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 1
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1200 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1185 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1185
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1185 is 53
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 type: type deduced to be character$
9998 run: address to copy is 1186
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1188
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: storing 1188 in location 1200
 106 run: prev <- next_2 prev
9999 mem: location 1201 is 1182
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1182 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1182
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1182
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1182 is 52
9999 mem: location 1183 is 1185
9999 mem: location 1184 is 1179
9999 mem: location 1171 is 1182
9999 type: type deduced to be character$
9998 run: address to copy is 1183
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1183 is 1185
9999 mem: storing 1185 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1185
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: storing 1185 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 1
9999 mem: storing 2 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 1188
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1202 is 2
9999 mem: location 1199 is 5
9999 mem: storing 0 in location 1207
 106 run: jump-if off-screen?, 
9999 mem: location 1207 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1208
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1208 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1200 is 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1188 is 54
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1200 is 1188
9998 run: address to copy is 1188
9998 run: its type is character
9999 mem: location 1188 is 54
9999 mem: storing 54 in location 1210
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1210 is 54
9999 mem: storing 0 in location 1211
 106 run: jump-unless newline?, 
9999 mem: location 1211 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1203 is 2
9999 mem: location 1198 is 9
9999 mem: storing 0 in location 1213
 106 run: jump-unless at-right?, 
9999 mem: location 1213 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1200 is 1188
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1188 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1188
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1188
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1188 is 54
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1185
9999 mem: location 1171 is 1188
9999 type: type deduced to be character$
9998 run: address to copy is 1189
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1189 is 0
9999 mem: storing 0 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1200
 106 run: prev <- next_2 prev
9999 mem: location 1201 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1185 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1185
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1185
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1185 is 53
9999 mem: location 1186 is 1188
9999 mem: location 1187 is 1182
9999 mem: location 1171 is 1185
9999 type: type deduced to be character$
9998 run: address to copy is 1186
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1186 is 1188
9999 mem: storing 1188 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1188
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1188
9999 mem: storing 1188 in location 1201
 106 run: column <- add column, 1
9999 mem: location 1203 is 2
9999 mem: storing 3 in location 1203
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1200 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1208
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1203 is 3
9999 mem: location 1205 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1214
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1208 is 0
9999 mem: location 1214 is 0
9999 mem: storing 0 in location 1215
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1202 is 2
9999 mem: location 1204 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1216
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: storing 0 in location 1217
 106 run: jump-unless before-cursor?, 
9999 mem: location 1217 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:editor-data
9999 mem: location 1194 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1314
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1324
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1166
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1301
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1166
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1302
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1298 is 1009
9999 mem: location 1301 is 1
9999 mem: location 1302 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1220
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1221
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1222
 105 run: jump-unless sc, 
9999 mem: location 1220 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1223
 105 run: *row <- copy new-row
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1224
 105 run: *column <- copy new-column
9999 mem: location 1222 is 1
9999 mem: location 1224 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1220 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1298
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1299 is 1294
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1294 in location 1259
 105 run: jump-unless x, 
9999 mem: location 1259 is 1294
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1259 is 1294
9999 mem: location 1294 is 1
9999 mem: location 1295 is 1285
9999 mem: location 1259 is 1294
9998 run: address to copy is 1294
9999 mem: storing 1294 in location 1260
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1259 is 1294
9999 mem: location 1294 is 1
9999 mem: location 1295 is 1285
9999 mem: location 1259 is 1294
9998 run: address to copy is 1295
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1295 is 1285
9999 mem: storing 1285 in location 1261
 105 run: max:number <- length *buf
9999 mem: location 1261 is 1285
9999 mem: storing 2 in location 1262
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1260 is 1294
9999 mem: location 1294 is 1
9999 mem: location 1262 is 2
9999 mem: storing 0 in location 1263
 105 run: jump-unless done?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1261 is 1285
9999 mem: location 1260 is 1294
9999 mem: location 1294 is 1
9998 run: address to copy is 1290
9998 run: its type is event
9999 mem: location 1290 is 0
9999 mem: location 1291 is 5
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: storing 0 in location 1265
9999 mem: storing 5 in location 1266
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: *idx <- add *idx, 1
9999 mem: location 1260 is 1294
9999 mem: location 1294 is 1
9999 mem: location 1260 is 1294
9999 mem: storing 2 in location 1294
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1265 is 0
9999 mem: location 1266 is 5
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1259 is 1294
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 5, 0, 0]
9998 run: result 1 is 1294
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1303
9999 mem: storing 5 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1294 in location 1299
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 104 run: jump-unless found?, 
9999 mem: location 1307 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 0
9999 mem: location 1304 is 5
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 104 run: jump-unless t, 
9999 mem: location 1309 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1309 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1298 is 1009
9999 mem: location 1300 is 1000
9999 mem: location 1303 is 0
9999 mem: location 1304 is 5
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 46
9999 mem: new alloc: 1325
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1327
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1328
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1329
9999 mem: storing 5 in location 1330
9999 mem: storing 0 in location 1331
9999 mem: storing 0 in location 1332
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1333
 105 run: jump-if editor, 1:offset
9999 mem: location 1328 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1327 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 106 run: jump-unless sc, 
9999 mem: location 1171 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1172
 106 run: reply width
9999 mem: location 1172 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1334
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1327 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1171
 106 run: jump-unless sc, 
9999 mem: location 1171 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1171 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1171 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1172
 106 run: reply height
9999 mem: location 1172 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1335
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1166
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1336
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1166
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1337
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1166
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1338
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1166
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1339
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1166
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1340
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1339 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1341
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1340 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1342
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1329 is 0
9999 mem: location 1330 is 5
9999 mem: location 1331 is 0
9999 mem: location 1332 is 0
9999 mem: storing 1330 in location 1343
 105 run: jump-unless c, 
9999 mem: location 1343 is 1330
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 5
9999 mem: storing 0 in location 1344
 105 run: jump-unless page-up?, 
9999 mem: location 1344 is 0
9998 run: jumping to instruction 33
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 5
9999 mem: storing 0 in location 1349
 105 run: jump-unless page-down?, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 46
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 5
9999 mem: storing 0 in location 1350
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 55
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 5
9999 mem: storing 0 in location 1352
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 64
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 5
9999 mem: storing 1 in location 1353
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 105 run: move-to-end-of-line editor
9999 mem: location 1328 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1148
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1166
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1148 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1149
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1166
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1148 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1150
 106 run: next:address:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1149 is 1003
9999 mem: location 1003 is 1166
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1166 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1166
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1166
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 49
9999 mem: location 1167 is 1173
9999 mem: location 1168 is 1154
9999 mem: location 1171 is 1166
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1167 is 1173
9999 mem: storing 1173 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1173
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1173
9999 mem: storing 1173 in location 1151
 106 run: jump-unless next, 
9999 mem: location 1151 is 1173
9998 run: jump-unless fell through
 106 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 50
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1151 is 1173
9998 run: address to copy is 1173
9998 run: its type is character
9999 mem: location 1173 is 50
9999 mem: storing 50 in location 1152
 106 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 50
9999 mem: storing 0 in location 1153
 106 run: jump-if at-end-of-line?, 
9999 mem: location 1153 is 0
9998 run: jump-if fell through
 106 run: *before-cursor <- copy next
9999 mem: location 1151 is 1173
9999 mem: location 1149 is 1003
9999 mem: storing 1173 in location 1003
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1150 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1150 is 1007
9999 mem: storing 2 in location 1007
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: next:address:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1149 is 1003
9999 mem: location 1003 is 1173
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1173 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1173
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1173
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1173 is 50
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1166
9999 mem: location 1171 is 1173
9999 type: type deduced to be character$
9998 run: address to copy is 1174
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1176
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1151
 106 run: jump-unless next, 
9999 mem: location 1151 is 1176
9998 run: jump-unless fell through
 106 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1151 is 1176
9998 run: address to copy is 1176
9998 run: its type is character
9999 mem: location 1176 is 51
9999 mem: storing 51 in location 1152
 106 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 51
9999 mem: storing 0 in location 1153
 106 run: jump-if at-end-of-line?, 
9999 mem: location 1153 is 0
9998 run: jump-if fell through
 106 run: *before-cursor <- copy next
9999 mem: location 1151 is 1176
9999 mem: location 1149 is 1003
9999 mem: storing 1176 in location 1003
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1150 is 1007
9999 mem: location 1007 is 2
9999 mem: location 1150 is 1007
9999 mem: storing 3 in location 1007
 106 run: jump 
9998 run: jumping to instruction 5
 106 run: next:address:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1149 is 1003
9999 mem: location 1003 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1171
 107 run: jump-if in, 1:offset
9999 mem: location 1171 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1171 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1172
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1172 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1151
 106 run: jump-unless next, 
9999 mem: location 1151 is 1179
9998 run: jump-unless fell through
 106 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1151 is 1179
9998 run: address to copy is 1179
9998 run: its type is character
9999 mem: location 1179 is 10
9999 mem: storing 10 in location 1152
 106 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 10
9999 mem: storing 1 in location 1153
 106 run: jump-if at-end-of-line?, 
9999 mem: location 1153 is 1
9998 run: jumping to instruction 13
 106 run: reply 
9999 trace: reply: decrementing callstack depth from 5
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1347
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1333
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1327 is 1009
9999 mem: location 1328 is 1000
9999 mem: location 1333 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1009 in location 1298
9999 mem: storing 1000 in location 1300
9999 mem: storing 0 in location 1310
 104 run: jump-unless go-render?, 
9999 mem: location 1310 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1301
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1302
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1298 is 1009
9999 mem: location 1301 is 1
9999 mem: location 1302 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1220
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1221
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1222
 105 run: jump-unless sc, 
9999 mem: location 1220 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1223
 105 run: *row <- copy new-row
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1224
 105 run: *column <- copy new-column
9999 mem: location 1222 is 3
9999 mem: location 1224 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1220 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1298
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1299 is 1294
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1294 in location 1259
 105 run: jump-unless x, 
9999 mem: location 1259 is 1294
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1259 is 1294
9999 mem: location 1294 is 2
9999 mem: location 1295 is 1285
9999 mem: location 1259 is 1294
9998 run: address to copy is 1294
9999 mem: storing 1294 in location 1260
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1259 is 1294
9999 mem: location 1294 is 2
9999 mem: location 1295 is 1285
9999 mem: location 1259 is 1294
9998 run: address to copy is 1295
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1295 is 1285
9999 mem: storing 1285 in location 1261
 105 run: max:number <- length *buf
9999 mem: location 1261 is 1285
9999 mem: storing 2 in location 1262
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1260 is 1294
9999 mem: location 1294 is 2
9999 mem: location 1262 is 2
9999 mem: storing 1 in location 1263
 105 run: jump-unless done?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1169 in location 1264
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1264 is 1169
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1259 is 1294
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1294
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1294 in location 1299
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 104 run: jump-unless found?, 
9999 mem: location 1307 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1308 is 1
9998 run: jumping to instruction 28
 104 run: reply 
9999 trace: reply: decrementing callstack depth from 3
 103 run: 4:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 4
 103 run: 5:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 5
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    4 <- 1
    5 <- 3
  ]
9999 run: checking location 4
9999 run: checking location 5
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: assume-console [
    type [z]
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"z": "literal-string"}
9992 load: after rewriting: type [z]
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    4:number <- get *2:address:editor-data, cursor-row:offset
    5:number <- get *2:address:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"5": "number"}
9992 load: after rewriting: 5:number <- get *2:address:editor-data, cursor-column:offset
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9992 transform: checking variant 0: 100
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- perform checks for recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1377
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
 104 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1298
 104 run: console:address:console <- next-ingredient 
9999 mem: storing 1377 in location 1299
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1300
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1301
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1302
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1298 is 1009
9999 mem: location 1301 is 1
9999 mem: location 1302 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1220
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1221
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1222
 105 run: jump-unless sc, 
9999 mem: location 1220 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1223
 105 run: *row <- copy new-row
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1224
 105 run: *column <- copy new-column
9999 mem: location 1222 is 3
9999 mem: location 1224 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1220 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1298
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1299 is 1377
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1377 in location 1259
 105 run: jump-unless x, 
9999 mem: location 1259 is 1377
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1259 is 1377
9999 mem: location 1377 is 0
9999 mem: location 1378 is 1372
9999 mem: location 1259 is 1377
9998 run: address to copy is 1377
9999 mem: storing 1377 in location 1260
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1259 is 1377
9999 mem: location 1377 is 0
9999 mem: location 1378 is 1372
9999 mem: location 1259 is 1377
9998 run: address to copy is 1378
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1378 is 1372
9999 mem: storing 1372 in location 1261
 105 run: max:number <- length *buf
9999 mem: location 1261 is 1372
9999 mem: storing 1 in location 1262
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1260 is 1377
9999 mem: location 1377 is 0
9999 mem: location 1262 is 1
9999 mem: storing 0 in location 1263
 105 run: jump-unless done?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 12
 105 run: result:event <- index *buf, *idx
9999 mem: location 1261 is 1372
9999 mem: location 1260 is 1377
9999 mem: location 1377 is 0
9998 run: address to copy is 1373
9998 run: its type is event
9999 mem: location 1373 is 0
9999 mem: location 1374 is 122
9999 mem: location 1375 is 0
9999 mem: location 1376 is 0
9999 mem: storing 0 in location 1265
9999 mem: storing 122 in location 1266
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 105 run: *idx <- add *idx, 1
9999 mem: location 1260 is 1377
9999 mem: location 1377 is 0
9999 mem: location 1260 is 1377
9999 mem: storing 1 in location 1377
 105 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1265 is 0
9999 mem: location 1266 is 122
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1259 is 1377
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 122, 0, 0]
9998 run: result 1 is 1377
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1303
9999 mem: storing 122 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1377 in location 1299
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 104 run: jump-unless found?, 
9999 mem: location 1307 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 0
9999 mem: location 1304 is 122
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 104 run: jump-unless t, 
9999 mem: location 1309 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1309 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1298 is 1009
9999 mem: location 1300 is 1000
9999 mem: location 1303 is 0
9999 mem: location 1304 is 122
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 46
 105 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1327
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1328
 105 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1329
9999 mem: storing 122 in location 1330
9999 mem: storing 0 in location 1331
9999 mem: storing 0 in location 1332
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1333
 105 run: jump-if editor, 1:offset
9999 mem: location 1328 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1327 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1379
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1381
 106 run: jump-unless sc, 
9999 mem: location 1381 is 1009
9998 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1381 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1381 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1382
 106 run: reply width
9999 mem: location 1382 is 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1334
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1327 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1381
 106 run: jump-unless sc, 
9999 mem: location 1381 is 1009
9998 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1381 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1381 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1382
 106 run: reply height
9999 mem: location 1382 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1335
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1336
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1337
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1338
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1339
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1328 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1328 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1340
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1339 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1341
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1340 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1342
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1329 is 0
9999 mem: location 1330 is 122
9999 mem: location 1331 is 0
9999 mem: location 1332 is 0
9999 mem: storing 1330 in location 1343
 105 run: jump-unless c, 
9999 mem: location 1343 is 1330
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 0 in location 1344
 105 run: jump-unless page-up?, 
9999 mem: location 1344 is 0
9998 run: jumping to instruction 33
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 0 in location 1349
 105 run: jump-unless page-down?, 
9999 mem: location 1349 is 0
9998 run: jumping to instruction 46
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 0 in location 1350
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 55
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 0 in location 1352
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 64
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 0 in location 1353
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1353 is 0
9998 run: jumping to instruction 74
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 0 in location 1354
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1354 is 0
9998 run: jumping to instruction 84
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 0 in location 1355
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 92
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 0 in location 1357
 105 run: jump-unless tab?, 
9999 mem: location 1357 is 0
9998 run: jumping to instruction 102
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 0 in location 1358
 105 run: jump-unless newline?, 
9999 mem: location 1358 is 0
9998 run: jumping to instruction 111
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: storing 1 in location 1359
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1333
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1359 is 1
9998 run: jumping to instruction 116
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1328 is 1000
9999 mem: location 1343 is 1330
9999 mem: location 1330 is 122
9999 mem: location 1327 is 1009
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: new alloc: 1383
 106 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1385
 106 run: c:character <- next-ingredient 
9999 mem: storing 122 in location 1386
 106 run: screen:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1387
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1385 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1176
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1385 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1388
 106 run: insert_2 c, *before-cursor
9999 mem: location 1386 is 122
9999 mem: location 1388 is 1003
9999 mem: location 1003 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 107 run: x:_elem <- next-ingredient 
9999 mem: storing 122 in location 1148
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1149
 107 run: new-node <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1415
9999 mem: storing 1415 in location 1150
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1150 is 1415
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: location 1417 is 0
9999 mem: location 1150 is 1415
9998 run: address to copy is 1415
9999 mem: storing 1415 in location 1151
 107 run: *val <- copy x
9999 mem: location 1148 is 122
9999 mem: location 1151 is 1415
9999 mem: storing 122 in location 1415
 107 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1149 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1149 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1152
 107 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1149 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1149 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9999 mem: storing 1177 in location 1153
 107 run: *y <- copy new-node
9999 mem: location 1150 is 1415
9999 mem: location 1153 is 1177
9999 mem: storing 1415 in location 1177
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1150 is 1415
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1415 is 122
9999 mem: location 1416 is 0
9999 mem: location 1417 is 0
9999 mem: location 1150 is 1415
9999 type: type deduced to be character$
9998 run: address to copy is 1417
9999 mem: storing 1417 in location 1153
 107 run: *y <- copy in
9999 mem: location 1149 is 1176
9999 mem: location 1153 is 1417
9999 mem: storing 1176 in location 1417
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1150 is 1415
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1415 is 122
9999 mem: location 1416 is 0
9999 mem: location 1417 is 1176
9999 mem: location 1150 is 1415
9999 type: type deduced to be character$
9998 run: address to copy is 1416
9999 mem: storing 1416 in location 1153
 107 run: *y <- copy next-node
9999 mem: location 1152 is 1179
9999 mem: location 1153 is 1416
9999 mem: storing 1179 in location 1416
 107 run: jump-if next-node, 1:offset
9999 mem: location 1152 is 1179
9998 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1152 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1176
9999 mem: location 1152 is 1179
9999 type: type deduced to be character$
9998 run: address to copy is 1181
9999 mem: storing 1181 in location 1153
 107 run: *y <- copy new-node
9999 mem: location 1150 is 1415
9999 mem: location 1153 is 1181
9999 mem: storing 1415 in location 1181
 107 run: reply new-node
9999 mem: location 1150 is 1415
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1388 is 1003
9999 mem: location 1003 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1176 in location 1381
 107 run: jump-if in, 1:offset
9999 mem: location 1381 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1381 is 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1176 is 51
9999 mem: location 1177 is 1415
9999 mem: location 1178 is 1173
9999 mem: location 1381 is 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1177
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1177 is 1415
9999 mem: storing 1415 in location 1382
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1382 is 1415
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1415
9999 mem: location 1388 is 1003
9999 mem: storing 1415 in location 1003
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1385 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1415
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1385 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1389
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1385 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1415
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1385 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1390
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1385 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1415
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1385 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1391
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1385 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1415
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1385 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 9
9999 mem: storing 9 in location 1392
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1389 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1393
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1390 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1394
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1387 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1381
 107 run: jump-unless sc, 
9999 mem: location 1381 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1381 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1381 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1382
 107 run: reply width
9999 mem: location 1382 is 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1395
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1387 is 1009
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1381
 107 run: jump-unless sc, 
9999 mem: location 1381 is 1009
9998 run: jump-unless fell through
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1381 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1381 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1382
 107 run: reply height
9999 mem: location 1382 is 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1396
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1392 is 9
9999 mem: storing 8 in location 1397
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1390 is 1007
9999 mem: location 1007 is 3
9999 mem: location 1397 is 8
9999 mem: storing 0 in location 1398
 106 run: jump-unless at-wrap?, 
9999 mem: location 1398 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1390 is 1007
9999 mem: location 1007 is 3
9999 mem: location 1390 is 1007
9999 mem: storing 4 in location 1007
 106 run: next:address:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1388 is 1003
9999 mem: location 1003 is 1415
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1415 in location 1381
 107 run: jump-if in, 1:offset
9999 mem: location 1381 is 1415
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1381 is 1415
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1415 is 122
9999 mem: location 1416 is 1179
9999 mem: location 1417 is 1176
9999 mem: location 1381 is 1415
9999 type: type deduced to be character$
9998 run: address to copy is 1416
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1416 is 1179
9999 mem: storing 1179 in location 1382
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1382 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1405
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1405 is 1179
9999 mem: storing 0 in location 1406
 106 run: jump-unless at-end?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless next, 
9999 mem: location 1405 is 1179
9998 run: jump-unless fell through
 106 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1390 is 1007
9999 mem: location 1007 is 4
9999 mem: location 1395 is 10
9999 mem: storing 0 in location 1409
 106 run: jump-if at-right?, 
9999 mem: location 1409 is 0
9998 run: jump-if fell through
 106 run: curr:address:duplex-list:character <- copy *before-cursor
9999 mem: location 1388 is 1003
9999 mem: location 1003 is 1415
9999 mem: storing 1415 in location 1411
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1387 is 1009
9999 mem: location 1393 is 1
9999 mem: location 1394 is 3
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1220
 107 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1221
 107 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1222
 107 run: jump-unless sc, 
9999 mem: location 1220 is 1009
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1223
 107 run: *row <- copy new-row
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1011
9999 mem: storing 1 in location 1011
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1224
 107 run: *column <- copy new-column
9999 mem: location 1222 is 3
9999 mem: location 1224 is 1012
9999 mem: storing 3 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1220 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column:number <- copy save-column
9999 mem: location 1394 is 3
9999 mem: storing 3 in location 1412
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1404
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1412 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1409
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1409 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1411 is 1415
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1411 is 1415
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1415 is 122
9999 mem: location 1416 is 1179
9999 mem: location 1417 is 1176
9999 mem: location 1411 is 1415
9998 run: address to copy is 1415
9998 run: its type is character
9999 mem: location 1415 is 122
9999 mem: storing 122 in location 1413
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1413 is 122
9999 mem: storing 0 in location 1414
 106 run: jump-if at-newline?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: print-character screen, currc
9999 mem: location 1387 is 1009
9999 mem: location 1413 is 122
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 107 run: c:character <- next-ingredient 
9999 mem: storing 122 in location 1228
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
 107 run: jump-if color-found?, 
9999 mem: location 1230 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1229
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 107 run: jump-if bg-color-found?, 
9999 mem: location 1232 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1231
 107 run: trace 90, [print-character], c
9999 mem: location 1228 is 122
  90 print-character: 122 
9990 schedule: print-character/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1002/scenario-editor-moves-to-end-of-line-with-ctrl-e
 107 run: jump-unless sc, 
9999 mem: location 1227 is 1009
9998 run: jump-unless fell through
 107 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9998 run: address to copy is 1010
9998 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1233
 107 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9998 run: address to copy is 1009
9998 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1234
 107 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1235
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1235 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1236
 107 run: jump-if legal?, 1:offset
9999 mem: location 1236 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1235 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1234 is 5
9999 mem: storing 1 in location 1236
 107 run: jump-if legal?, 1:offset
9999 mem: location 1236 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1237
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1237 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1236
 107 run: jump-if legal?, 1:offset
9999 mem: location 1236 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1237 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 10
9999 mem: storing 1 in location 1236
 107 run: jump-if legal?, 1:offset
9999 mem: location 1236 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1228 is 122
9999 mem: storing 0 in location 1238
 107 run: jump-unless newline?, 
9999 mem: location 1238 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1235 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1233 is 10
9999 mem: storing 10 in location 1241
 107 run: index <- add index, *column
9999 mem: location 1241 is 10
9999 mem: location 1237 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1241
 107 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9998 run: address to copy is 1013
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1242
 107 run: len:number <- length *buf
9999 mem: location 1242 is 1014
9999 mem: storing 50 in location 1243
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1228 is 122
9999 mem: storing 0 in location 1244
 107 run: jump-unless backspace?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1242 is 1014
9999 mem: location 1241 is 13
9999 mem: storing 1041 in location 1246
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1246 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1246 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1247
 107 run: *cursor-contents <- copy c
9999 mem: location 1228 is 122
9999 mem: location 1247 is 1041
9999 mem: storing 122 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1246 is 1041
9999 mem: location 1041 is 122
9999 mem: location 1042 is 7
9999 mem: location 1246 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1248
 107 run: *cursor-color <- copy color
9999 mem: location 1229 is 7
9999 mem: location 1248 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1233 is 10
9999 mem: storing 9 in location 1249
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1237 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1249 is 9
9999 mem: storing 0 in location 1250
 107 run: jump-if at-right?, 
9999 mem: location 1250 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1237 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1237 is 1012
9999 mem: storing 4 in location 1012
 107 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1412 is 3
9999 mem: storing 4 in location 1412
 106 run: curr <- next_2 curr
9999 mem: location 1411 is 1415
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient 
9999 mem: storing 1415 in location 1381
 107 run: jump-if in, 1:offset
9999 mem: location 1381 is 1415
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1381 is 1415
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1415 is 122
9999 mem: location 1416 is 1179
9999 mem: location 1417 is 1176
9999 mem: location 1381 is 1415
9999 type: type deduced to be character$
9998 run: address to copy is 1416
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1416 is 1179
9999 mem: storing 1179 in location 1382
 107 run: reply result:address:duplex-list:_elem
9999 mem: location 1382 is 1179
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: storing 1179 in location 1411
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1404
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1412 is 4
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1409
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1409 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1411 is 1179
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1411 is 1179
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1179 is 10
9999 mem: location 1180 is 1182
9999 mem: location 1181 is 1415
9999 mem: location 1411 is 1179
9998 run: address to copy is 1179
9998 run: its type is character
9999 mem: location 1179 is 10
9999 mem: storing 10 in location 1413
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1413 is 10
9999 mem: storing 1 in location 1414
 106 run: jump-if at-newline?, 
9999 mem: location 1414 is 1
9998 run: jumping to instruction 77
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1404
 106 run: reply editor:address:editor-data, screen:address:screen, go-render?:boolean
9999 mem: location 1385 is 1000
9999 mem: location 1387 is 1009
9999 mem: location 1404 is 0
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1009
9998 run: result 2 is 0
9999 mem: storing 1000 in location 1328
9999 mem: storing 1009 in location 1327
9999 mem: storing 0 in location 1333
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1327 is 1009
9999 mem: location 1328 is 1000
9999 mem: location 1333 is 0
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1009 in location 1298
9999 mem: storing 1000 in location 1300
9999 mem: storing 0 in location 1310
 104 run: jump-unless go-render?, 
9999 mem: location 1310 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1415
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1301
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1300 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1415
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 1300 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 4
9999 mem: storing 4 in location 1302
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1298 is 1009
9999 mem: location 1301 is 1
9999 mem: location 1302 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1220
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1221
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 4 in location 1222
 105 run: jump-unless sc, 
9999 mem: location 1220 is 1009
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1223
 105 run: *row <- copy new-row
9999 mem: location 1221 is 1
9999 mem: location 1223 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1220 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1009
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1224
 105 run: *column <- copy new-column
9999 mem: location 1222 is 4
9999 mem: location 1224 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1220 is 1009
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1009
9999 mem: storing 1009 in location 1298
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1299 is 1377
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: x:address:console <- next-ingredient 
9999 mem: storing 1377 in location 1259
 105 run: jump-unless x, 
9999 mem: location 1259 is 1377
9998 run: jump-unless fell through
 105 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1259 is 1377
9999 mem: location 1377 is 1
9999 mem: location 1378 is 1372
9999 mem: location 1259 is 1377
9998 run: address to copy is 1377
9999 mem: storing 1377 in location 1260
 105 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1259 is 1377
9999 mem: location 1377 is 1
9999 mem: location 1378 is 1372
9999 mem: location 1259 is 1377
9998 run: address to copy is 1378
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1378 is 1372
9999 mem: storing 1372 in location 1261
 105 run: max:number <- length *buf
9999 mem: location 1261 is 1372
9999 mem: storing 1 in location 1262
 105 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1260 is 1377
9999 mem: location 1377 is 1
9999 mem: location 1262 is 1
9999 mem: storing 1 in location 1263
 105 run: jump-unless done?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1379 in location 1264
 105 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1264 is 1379
9999 mem: location 1379 is 0
9999 mem: location 1380 is 0
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: location 1259 is 1377
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1377
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1377 in location 1299
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 104 run: jump-unless found?, 
9999 mem: location 1307 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1308 is 1
9998 run: jumping to instruction 28
 104 run: reply 
9999 trace: reply: decrementing callstack depth from 3
 103 run: 4:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1415
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 4
 103 run: 5:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1154
9999 mem: location 1001 is 1154
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1415
9999 mem: location 1004 is 0
9999 mem: location 1005 is 9
9999 mem: location 1006 is 1
9999 mem: location 1007 is 4
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 4
9999 mem: storing 4 in location 5
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    4 <- 1
    5 <- 4
  ]
9999 run: checking location 4
9999 run: checking location 5
 102 run: screen-should-contain [
    .          .
    .123z      .
    .456       .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: check-trace-count-for-label 1, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
