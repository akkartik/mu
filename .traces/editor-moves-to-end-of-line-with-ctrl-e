 101 run: assume-console [
    left-click 1, 1
    press ctrl-e
  ]
parse: instruction: left-click
parse:   ingredient: {name: "1", properties: ["1": "literal"]}
parse:   ingredient: {name: "1", properties: ["1": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "ctrl-e", properties: ["ctrl-e": ]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    4:number <- get *2:address:editor-data, cursor-row:offset
    5:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "5", properties: ["5": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1296
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
9999 mem: new alloc: 1298
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
 102 run: console:address <- next-ingredient 
9999 mem: storing 1296 in location 1301
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1302
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1261
 103 run: break-unless x, 
9999 mem: location 1261 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1262
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1287
9999 mem: storing 1287 in location 1263
 103 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 2 in location 1264
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1264 is 2
9999 mem: storing 0 in location 1265
 103 run: break-unless done?, 
9999 mem: location 1265 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1263 is 1287
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 0
9999 run: address to copy is 1288
9999 run: its type is event
9999 mem: location 1288 is 2
9999 mem: location 1289 is 65513
9999 mem: location 1290 is 1
9999 mem: location 1291 is 1
9999 mem: storing 2 in location 1267
9999 mem: storing 65513 in location 1268
9999 mem: storing 1 in location 1269
9999 mem: storing 1 in location 1270
 103 run: *idx <- add *idx, 1
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 0
9999 mem: location 1262 is 1296
9999 mem: storing 1 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1267 is 2
9999 mem: location 1268 is 65513
9999 mem: location 1269 is 1
9999 mem: location 1270 is 1
9999 mem: location 1261 is 1296
9999 run: result 0 is [2, 65513, 1, 1]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1303
9999 mem: storing 65513 in location 1304
9999 mem: storing 1 in location 1305
9999 mem: storing 1 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 2
9999 mem: location 1304 is 65513
9999 mem: location 1305 is 1
9999 mem: location 1306 is 1
9999 mem: storing 1304 in location 1309
 102 run: break-unless t, 
9999 mem: location 1309 is 1304
9999 run: jump-unless fell through
 102 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1310
 102 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1311
 102 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1312
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1309 is 1304
9999 mem: location 1304 is 65513
9999 mem: location 1305 is 1
9999 mem: location 1306 is 1
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1261
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1262
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1263
9999 mem: storing 1 in location 1264
9999 mem: storing 1 in location 1265
 103 run: jump-if editor, 1:offset
9999 mem: location 1262 is 1115
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1263 is 65513
9999 mem: location 1264 is 1
9999 mem: location 1265 is 1
9999 run: address to copy is 1265
9999 run: its type is number
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1266
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1262 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1262 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1267
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1266 is 1
9999 mem: location 1267 is 0
9999 mem: storing 0 in location 1268
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1268 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1262 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1262 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1269
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1266 is 1
9999 mem: location 1269 is 9
9999 mem: storing 0 in location 1270
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1270 is 0
9999 run: jumping to instruction 15
 103 run: click-row:number <- get t, row:offset
9999 mem: location 1263 is 65513
9999 mem: location 1264 is 1
9999 mem: location 1265 is 1
9999 run: address to copy is 1264
9999 run: its type is number
9999 mem: location 1264 is 1
9999 mem: storing 1 in location 1271
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1263 is 65513
9999 mem: location 1264 is 1
9999 mem: location 1265 is 1
9999 run: address to copy is 1265
9999 run: its type is number
9999 mem: location 1265 is 1
9999 mem: storing 1 in location 1266
 103 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1261 is 1009
9999 mem: location 1262 is 1115
9999 mem: location 1271 is 1
9999 mem: location 1266 is 1
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1184
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1185
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 1 in location 1186
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 1 in location 1187
 104 run: jump-if editor, 1:offset
9999 mem: location 1185 is 1115
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1188
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1189
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1184 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 105 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1163
 105 run: reply height
9999 mem: location 1163 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1190
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1191
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1191 is 1154
9999 mem: storing 1154 in location 1192
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1154
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1154
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1162 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1157
9999 run: result 0 is 1157
9999 mem: storing 1157 in location 1191
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1193
 104 run: column:number <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1194
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1195
 104 run: *cursor-row <- copy target-row
9999 mem: location 1186 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1195 is 1121
9999 mem: storing 1 in location 1121
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1196
 104 run: *cursor-column <- copy target-column
9999 mem: location 1187 is 1
9999 mem: location 1196 is 1122
9999 mem: location 1196 is 1122
9999 mem: storing 1 in location 1122
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1185 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1154
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1185 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1197
 104 run: break-unless curr, 
9999 mem: location 1191 is 1157
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 0
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1191 is 1157
9999 run: address to copy is 1157
9999 run: its type is number
9999 mem: location 1157 is 49
9999 mem: storing 49 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 49
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1157
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1154
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1154 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1154
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1154
9999 mem: location 1154 is 167
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 0
9999 mem: location 1162 is 1154
9999 run: address to copy is 1155
9999 run: its type is address
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1157
9999 run: result 0 is 1157
9999 mem: storing 1157 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 0
9999 mem: storing 1 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1164
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 1
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1192 is 1157
9999 mem: location 1197 is 1118
9999 mem: location 1197 is 1118
9999 mem: storing 1157 in location 1118
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1191 is 1164
9999 run: address to copy is 1164
9999 run: its type is number
9999 mem: location 1164 is 50
9999 mem: storing 50 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 50
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1164
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1157
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 1
9999 mem: storing 2 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1167
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 2
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1191 is 1167
9999 run: address to copy is 1167
9999 run: its type is number
9999 mem: location 1167 is 51
9999 mem: storing 51 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 51
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1167
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1164
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 2
9999 mem: storing 3 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1170
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 1
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1194 is 3
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1200
 104 run: break-unless at-cursor?, 
9999 mem: location 1200 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1191 is 1170
9999 run: address to copy is 1170
9999 run: its type is number
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 10
9999 mem: storing 1 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 1
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 1
9999 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1194 is 3
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1203
 104 run: break-unless left-of-cursor?, 
9999 mem: location 1203 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1193 is 1
9999 mem: storing 2 in location 1193
 104 run: column <- copy left
9999 mem: location 1188 is 0
9999 mem: storing 0 in location 1194
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1170
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1170
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1162 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1167
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1192
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1191 is 1173
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1191 is 1173
9999 run: address to copy is 1173
9999 run: its type is number
9999 mem: location 1173 is 52
9999 mem: storing 52 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 52
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 0
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1170
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1170 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1170
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1162 is 1170
9999 run: address to copy is 1171
9999 run: its type is address
9999 mem: location 1171 is 1173
9999 mem: storing 1173 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1173
9999 run: result 0 is 1173
9999 mem: storing 1173 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 0
9999 mem: storing 1 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1176
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1199
schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-end-of-line-with-ctrl-e
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1191 is 1176
9999 run: address to copy is 1176
9999 run: its type is number
9999 mem: location 1176 is 53
9999 mem: storing 53 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 53
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 1
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1173
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1173 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1173
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1173
9999 mem: location 1173 is 52
9999 mem: location 1174 is 1176
9999 mem: location 1175 is 1170
9999 mem: location 1162 is 1173
9999 run: address to copy is 1174
9999 run: its type is address
9999 mem: location 1174 is 1176
9999 mem: storing 1176 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1176
9999 run: result 0 is 1176
9999 mem: storing 1176 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 1
9999 mem: storing 2 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 1179
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1193 is 2
9999 mem: location 1190 is 5
9999 mem: storing 0 in location 1198
 104 run: break-if off-screen?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1199
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1199 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1191 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1191 is 1179
9999 run: address to copy is 1179
9999 run: its type is number
9999 mem: location 1179 is 54
9999 mem: storing 54 in location 1201
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1201 is 54
9999 mem: storing 0 in location 1202
 104 run: break-unless newline?, 
9999 mem: location 1202 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1194 is 2
9999 mem: location 1189 is 9
9999 mem: storing 0 in location 1204
 104 run: break-unless at-right?, 
9999 mem: location 1204 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1191 is 1179
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1179
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1179
9999 mem: location 1179 is 54
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1176
9999 mem: location 1162 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1163
 105 run: reply result
9999 mem: location 1163 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1191
 104 run: prev <- next-duplex prev
9999 mem: location 1192 is 1176
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1176 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1176
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1176
9999 mem: location 1176 is 53
9999 mem: location 1177 is 1179
9999 mem: location 1178 is 1173
9999 mem: location 1162 is 1176
9999 run: address to copy is 1177
9999 run: its type is address
9999 mem: location 1177 is 1179
9999 mem: storing 1179 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1179
9999 run: result 0 is 1179
9999 mem: storing 1179 in location 1192
 104 run: column <- add column, 1
9999 mem: location 1194 is 2
9999 mem: storing 3 in location 1194
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1191 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1199
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1194 is 3
9999 mem: location 1196 is 1122
9999 mem: location 1122 is 1
9999 mem: storing 0 in location 1205
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1199 is 0
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1206
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1193 is 2
9999 mem: location 1195 is 1121
9999 mem: location 1121 is 1
9999 mem: storing 0 in location 1207
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1208
 104 run: break-unless before-cursor?, 
9999 mem: location 1208 is 0
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1185 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1262
 103 run: reply 1/true
 102 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1313
 102 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1314
 102 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1302 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1302 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1315
 102 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1318
9999 mem: storing 1318 in location 1316
 102 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty, 0/empty
9999 mem: location 1310 is 1
9999 mem: location 1311 is 0
9999 mem: location 1312 is 1154
9999 mem: location 1313 is 1
9999 mem: location 1314 is 1
9999 mem: location 1315 is 1154
9999 mem: location 1316 is 1318
9999 mem: storing 1 in location 1318
9999 mem: storing 1 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 1154 in location 1321
9999 mem: storing 1 in location 1322
9999 mem: storing 1 in location 1323
9999 mem: storing 1154 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
 102 run: editor <- add-operation editor, op
9999 mem: location 1302 is 1115
9999 mem: location 1316 is 1318
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1255
 103 run: op:address:operation <- next-ingredient 
9999 mem: storing 1318 in location 1256
 103 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1257
 103 run: *undo <- push op, *undo
9999 mem: location 1256 is 1318
9999 mem: location 1257 is 1124
9999 mem: location 1124 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: x:location <- next-ingredient 
9999 mem: storing 1318 in location 1211
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1212
 104 run: result:address:list <- new list:type
9999 mem: new alloc: 1328
9999 mem: storing 1328 in location 1213
 104 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1328
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: location 1213 is 1328
9999 run: address to copy is 1328
9999 mem: storing 1328 in location 1214
 104 run: *val <- copy x
9999 mem: location 1211 is 1318
9999 mem: location 1214 is 1328
9999 mem: location 1214 is 1328
9999 mem: storing 1318 in location 1328
 104 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1328
9999 mem: location 1328 is 1318
9999 mem: location 1329 is 0
9999 mem: location 1213 is 1328
9999 run: address to copy is 1329
9999 mem: storing 1329 in location 1215
 104 run: *next <- copy in
9999 mem: location 1212 is 0
9999 mem: location 1215 is 1329
9999 mem: location 1215 is 1329
9999 mem: storing 0 in location 1329
 104 run: reply result
9999 mem: location 1213 is 1328
9999 run: result 0 is 1328
9999 mem: location 1257 is 1124
9999 mem: storing 1328 in location 1124
 103 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1258
 103 run: *redo <- copy 0
9999 mem: location 1258 is 1125
9999 mem: location 1258 is 1125
9999 mem: storing 0 in location 1125
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1302
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1261
 103 run: break-unless x, 
9999 mem: location 1261 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1262
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1287
9999 mem: storing 1287 in location 1263
 103 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 2 in location 1264
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1264 is 2
9999 mem: storing 0 in location 1265
 103 run: break-unless done?, 
9999 mem: location 1265 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1263 is 1287
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 1
9999 run: address to copy is 1292
9999 run: its type is event
9999 mem: location 1292 is 0
9999 mem: location 1293 is 5
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 0 in location 1267
9999 mem: storing 5 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 103 run: *idx <- add *idx, 1
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 1
9999 mem: location 1262 is 1296
9999 mem: storing 2 in location 1296
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1267 is 0
9999 mem: location 1268 is 5
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1261 is 1296
9999 run: result 0 is [0, 5, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1303
9999 mem: storing 5 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 0
9999 mem: location 1304 is 5
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 102 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 26
 102 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1303 is 0
9999 mem: location 1304 is 5
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 73
9999 mem: new alloc: 1330
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1332
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1333
 103 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1334
9999 mem: storing 5 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
 103 run: jump-if editor, 1:offset
9999 mem: location 1333 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1332 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 104 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1163
 104 run: reply width
9999 mem: location 1163 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1338
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1332 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1162
 104 run: break-unless sc, 
9999 mem: location 1162 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1162 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1162 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1163
 104 run: reply height
9999 mem: location 1163 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1339
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1340
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1341
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1342
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1343
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1344
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1343 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1343 is 1121
9999 mem: location 1343 is 1121
9999 mem: storing 1 in location 1345
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1344 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1344 is 1122
9999 mem: location 1344 is 1122
9999 mem: storing 1 in location 1346
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1334 is 0
9999 mem: location 1335 is 5
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 1335 in location 1347
 103 run: break-unless c, 
9999 mem: location 1347 is 1335
9999 run: jump-unless fell through
 103 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 103 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 5
9999 mem: storing 0 in location 1348
 103 run: break-unless redo?, 
9999 mem: location 1348 is 0
9999 run: jumping to instruction 49
 103 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 5
9999 mem: storing 0 in location 1356
 103 run: break-unless undo?, 
9999 mem: location 1356 is 0
9999 run: jumping to instruction 81
 103 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 5
9999 mem: storing 0 in location 1359
 103 run: break-unless page-up?, 
9999 mem: location 1359 is 0
9999 run: jumping to instruction 98
 103 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 5
9999 mem: storing 0 in location 1366
 103 run: break-unless page-down?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 115
 103 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 5
9999 mem: storing 0 in location 1367
 103 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 121
 103 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 5
9999 mem: storing 0 in location 1368
 103 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 127
 103 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 5
9999 mem: storing 1 in location 1369
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1369 is 1
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1360
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 1
9999 mem: storing 1 in location 1361
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1362
 103 run: move-to-end-of-line editor
9999 mem: location 1333 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1148
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1148 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1148 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1149
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1148 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1157
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1148 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1150
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1149 is 1118
9999 mem: location 1118 is 1157
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1157 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1157
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1157
9999 mem: location 1157 is 49
9999 mem: location 1158 is 1164
9999 mem: location 1159 is 1154
9999 mem: location 1162 is 1157
9999 run: address to copy is 1158
9999 run: its type is address
9999 mem: location 1158 is 1164
9999 mem: storing 1164 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1164
9999 run: result 0 is 1164
9999 mem: storing 1164 in location 1151
 104 run: break-unless next, 
9999 mem: location 1151 is 1164
9999 run: jump-unless fell through
 104 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1151 is 1164
9999 run: address to copy is 1164
9999 run: its type is number
9999 mem: location 1164 is 50
9999 mem: storing 50 in location 1152
 104 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 50
9999 mem: storing 0 in location 1153
 104 run: break-if at-end-of-line?, 
9999 mem: location 1153 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- copy next
9999 mem: location 1151 is 1164
9999 mem: location 1149 is 1118
9999 mem: location 1149 is 1118
9999 mem: storing 1164 in location 1118
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1150 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1150 is 1122
9999 mem: storing 2 in location 1122
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1149 is 1118
9999 mem: location 1118 is 1164
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1164 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1164
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1164
9999 mem: location 1164 is 50
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1157
9999 mem: location 1162 is 1164
9999 run: address to copy is 1165
9999 run: its type is address
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1167
9999 run: result 0 is 1167
9999 mem: storing 1167 in location 1151
 104 run: break-unless next, 
9999 mem: location 1151 is 1167
9999 run: jump-unless fell through
 104 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1151 is 1167
9999 run: address to copy is 1167
9999 run: its type is number
9999 mem: location 1167 is 51
9999 mem: storing 51 in location 1152
 104 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 51
9999 mem: storing 0 in location 1153
 104 run: break-if at-end-of-line?, 
9999 mem: location 1153 is 0
9999 run: jump-if fell through
 104 run: *before-cursor <- copy next
9999 mem: location 1151 is 1167
9999 mem: location 1149 is 1118
9999 mem: location 1149 is 1118
9999 mem: storing 1167 in location 1118
 104 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1150 is 1122
9999 mem: location 1122 is 2
9999 mem: location 1150 is 1122
9999 mem: storing 3 in location 1122
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1149 is 1118
9999 mem: location 1118 is 1167
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1162
 105 run: jump-if in, 1:offset
9999 mem: location 1162 is 1167
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1162 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1162 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1163
 105 run: reply result
9999 mem: location 1163 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1151
 104 run: break-unless next, 
9999 mem: location 1151 is 1170
9999 run: jump-unless fell through
 104 run: nextc:character <- get *next, value:offset
9999 mem: location 1151 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1151 is 1170
9999 run: address to copy is 1170
9999 run: its type is number
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1152
 104 run: at-end-of-line?:boolean <- equal nextc, 10/newline
9999 mem: location 1152 is 10
9999 mem: storing 1 in location 1153
 104 run: break-if at-end-of-line?, 
9999 mem: location 1153 is 1
9999 run: jumping to instruction 13
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1363
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 1364
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1365
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1404
9999 mem: storing 1404 in location 1350
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty, 0/empty
9999 mem: location 1360 is 1
9999 mem: location 1361 is 1
9999 mem: location 1362 is 1154
9999 mem: location 1363 is 1
9999 mem: location 1364 is 3
9999 mem: location 1365 is 1154
9999 mem: location 1350 is 1404
9999 mem: storing 1 in location 1404
9999 mem: storing 1 in location 1405
9999 mem: storing 1 in location 1406
9999 mem: storing 1154 in location 1407
9999 mem: storing 1 in location 1408
9999 mem: storing 3 in location 1409
9999 mem: storing 1154 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
 103 run: editor <- add-operation editor, op
9999 mem: location 1333 is 1115
9999 mem: location 1350 is 1404
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1255
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1404 in location 1256
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1328
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1257
 104 run: *undo <- push op, *undo
9999 mem: location 1256 is 1404
9999 mem: location 1257 is 1124
9999 mem: location 1124 is 1328
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1404 in location 1211
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1328 in location 1212
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1414
9999 mem: storing 1414 in location 1213
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1414
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: location 1213 is 1414
9999 run: address to copy is 1414
9999 mem: storing 1414 in location 1214
 105 run: *val <- copy x
9999 mem: location 1211 is 1404
9999 mem: location 1214 is 1414
9999 mem: location 1214 is 1414
9999 mem: storing 1404 in location 1414
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1414
9999 mem: location 1414 is 1404
9999 mem: location 1415 is 0
9999 mem: location 1213 is 1414
9999 run: address to copy is 1415
9999 mem: storing 1415 in location 1215
 105 run: *next <- copy in
9999 mem: location 1212 is 1328
9999 mem: location 1215 is 1415
9999 mem: location 1215 is 1415
9999 mem: storing 1328 in location 1415
 105 run: reply result
9999 mem: location 1213 is 1414
9999 run: result 0 is 1414
9999 mem: location 1257 is 1124
9999 mem: storing 1414 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1258
 104 run: *redo <- copy 0
9999 mem: location 1258 is 1125
9999 mem: location 1258 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1333
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 0/no-more-render
9999 mem: location 1332 is 1009
9999 mem: location 1333 is 1115
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1300
9999 mem: storing 1115 in location 1302
9999 mem: storing 0 in location 1317
 102 run: break-unless go-render?, 
9999 mem: location 1317 is 0
9999 run: jumping to instruction 33
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1296
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1296 in location 1261
 103 run: break-unless x, 
9999 mem: location 1261 is 1296
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1262
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1297 is 1287
9999 mem: location 1261 is 1296
9999 run: address to copy is 1297
9999 run: its type is address
9999 mem: location 1297 is 1287
9999 mem: storing 1287 in location 1263
 103 run: max:number <- length *buf
9999 mem: location 1263 is 1287
9999 mem: storing 2 in location 1264
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1296
9999 mem: location 1296 is 2
9999 mem: location 1264 is 2
9999 mem: storing 1 in location 1265
 103 run: break-unless done?, 
9999 mem: location 1265 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1160 in location 1266
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1266 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1261 is 1296
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1296
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1296 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 102 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 36
 101 run: 4:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 4
 101 run: 5:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 3
9999 mem: storing 3 in location 5
 100 run: memory-should-contain [
    4 <- 1
    5 <- 3
  ]
9999 run: checking location 4
9999 run: checking location 5
 100 run: check-trace-count-for-label 0, [print-character]
 100 run: assume-console [
    type [z]
  ]
parse: instruction: type
parse:   ingredient: {name: "z", properties: [_: "literal-string"]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    4:number <- get *2:address:editor-data, cursor-row:offset
    5:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "5", properties: ["5": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1002
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1421
9999 mem: location 2 is 1115
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1300
 101 run: console:address <- next-ingredient 
9999 mem: storing 1421 in location 1301
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1302
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1421
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1421 in location 1261
 102 run: break-unless x, 
9999 mem: location 1261 is 1421
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1421
9999 mem: location 1421 is 0
9999 mem: location 1422 is 1416
9999 mem: location 1261 is 1421
9999 run: address to copy is 1421
9999 mem: storing 1421 in location 1262
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1421
9999 mem: location 1421 is 0
9999 mem: location 1422 is 1416
9999 mem: location 1261 is 1421
9999 run: address to copy is 1422
9999 run: its type is address
9999 mem: location 1422 is 1416
9999 mem: storing 1416 in location 1263
 102 run: max:number <- length *buf
9999 mem: location 1263 is 1416
9999 mem: storing 1 in location 1264
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1421
9999 mem: location 1421 is 0
9999 mem: location 1264 is 1
9999 mem: storing 0 in location 1265
 102 run: break-unless done?, 
9999 mem: location 1265 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index *buf, *idx
9999 mem: location 1263 is 1416
9999 mem: location 1262 is 1421
9999 mem: location 1421 is 0
9999 run: address to copy is 1417
9999 run: its type is event
9999 mem: location 1417 is 0
9999 mem: location 1418 is 122
9999 mem: location 1419 is 0
9999 mem: location 1420 is 0
9999 mem: storing 0 in location 1267
9999 mem: storing 122 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 102 run: *idx <- add *idx, 1
9999 mem: location 1262 is 1421
9999 mem: location 1421 is 0
9999 mem: location 1262 is 1421
9999 mem: storing 1 in location 1421
 102 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1267 is 0
9999 mem: location 1268 is 122
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1261 is 1421
9999 run: result 0 is [0, 122, 0, 0]
9999 run: result 1 is 1421
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1303
9999 mem: storing 122 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1421 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 0 in location 1308
 101 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1308 is 0
9999 run: jump-if fell through
 101 run: trace 10, [app], [next-event]
  10 app: next-event 
 101 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1303 is 0
9999 mem: location 1304 is 122
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1309
 101 run: break-unless t, 
9999 mem: location 1309 is 0
9999 run: jumping to instruction 26
 101 run: break-if t, 
9999 mem: location 1309 is 0
9999 run: jump-if fell through
 101 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1300 is 1009
9999 mem: location 1302 is 1115
9999 mem: location 1303 is 0
9999 mem: location 1304 is 122
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 73
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1332
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1333
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1334
9999 mem: storing 122 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
 102 run: jump-if editor, 1:offset
9999 mem: location 1333 is 1115
9999 run: jumping to instruction 6
 102 run: screen-width:number <- screen-width screen
9999 mem: location 1332 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1423
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1425
 103 run: break-unless sc, 
9999 mem: location 1425 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1425 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1425 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1426
 103 run: reply width
9999 mem: location 1426 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1338
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1332 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1425
 103 run: break-unless sc, 
9999 mem: location 1425 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1425 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1425 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1426
 103 run: reply height
9999 mem: location 1426 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1339
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1340
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1341
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1342
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1343
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1344
 102 run: save-row:number <- copy *cursor-row
9999 mem: location 1343 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1343 is 1121
9999 mem: location 1343 is 1121
9999 mem: storing 1 in location 1345
 102 run: save-column:number <- copy *cursor-column
9999 mem: location 1344 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1344 is 1122
9999 mem: location 1344 is 1122
9999 mem: storing 3 in location 1346
 102 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1334 is 0
9999 mem: location 1335 is 122
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 1335 in location 1347
 102 run: break-unless c, 
9999 mem: location 1347 is 1335
9999 run: jump-unless fell through
 102 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 102 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1348
 102 run: break-unless redo?, 
9999 mem: location 1348 is 0
9999 run: jumping to instruction 49
 102 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1356
 102 run: break-unless undo?, 
9999 mem: location 1356 is 0
9999 run: jumping to instruction 81
 102 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1359
 102 run: break-unless page-up?, 
9999 mem: location 1359 is 0
9999 run: jumping to instruction 98
 102 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1366
 102 run: break-unless page-down?, 
9999 mem: location 1366 is 0
9999 run: jumping to instruction 115
 102 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1367
 102 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 121
 102 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1368
 102 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1368 is 0
9999 run: jumping to instruction 127
 102 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1369
 102 run: break-unless move-to-end-of-line?, 
9999 mem: location 1369 is 0
9999 run: jumping to instruction 144
 102 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1370
 102 run: break-unless move-to-start-of-line?, 
9999 mem: location 1370 is 0
9999 run: jumping to instruction 161
 102 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1371
 102 run: break-unless delete-previous-character?, 
9999 mem: location 1371 is 0
9999 run: jumping to instruction 167
 102 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1373
 102 run: break-unless tab?, 
9999 mem: location 1373 is 0
9999 run: jumping to instruction 174
 102 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 0 in location 1374
 102 run: break-unless newline?, 
9999 mem: location 1374 is 0
9999 run: jumping to instruction 192
 102 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: storing 1 in location 1381
 102 run: jump-if regular-character?, 1:offset
9999 mem: location 1381 is 1
9999 run: jumping to instruction 196
 102 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1377
 102 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1333 is 1115
9999 mem: location 1347 is 1335
9999 mem: location 1335 is 122
9999 mem: location 1332 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: new alloc: 1427
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1429
 103 run: c:character <- next-ingredient 
9999 mem: storing 122 in location 1430
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1431
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1167
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1432
 103 run: insert-duplex c, *before-cursor
9999 mem: location 1430 is 122
9999 mem: location 1432 is 1118
9999 mem: location 1118 is 1167
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 122 in location 1148
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1149
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1456
9999 mem: storing 1456 in location 1150
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1150 is 1456
9999 mem: location 1456 is 0
9999 mem: location 1457 is 0
9999 mem: location 1458 is 0
9999 mem: location 1150 is 1456
9999 run: address to copy is 1456
9999 mem: storing 1456 in location 1151
 104 run: *val <- copy x
9999 mem: location 1148 is 122
9999 mem: location 1151 is 1456
9999 mem: location 1151 is 1456
9999 mem: storing 122 in location 1456
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1149 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1149 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1170
9999 mem: storing 1170 in location 1152
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1149 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1170
9999 mem: location 1169 is 1164
9999 mem: location 1149 is 1167
9999 run: address to copy is 1168
9999 mem: storing 1168 in location 1153
 104 run: *y <- copy new-node
9999 mem: location 1150 is 1456
9999 mem: location 1153 is 1168
9999 mem: location 1153 is 1168
9999 mem: storing 1456 in location 1168
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1150 is 1456
9999 mem: location 1456 is 122
9999 mem: location 1457 is 0
9999 mem: location 1458 is 0
9999 mem: location 1150 is 1456
9999 run: address to copy is 1458
9999 mem: storing 1458 in location 1153
 104 run: *y <- copy in
9999 mem: location 1149 is 1167
9999 mem: location 1153 is 1458
9999 mem: location 1153 is 1458
9999 mem: storing 1167 in location 1458
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1150 is 1456
9999 mem: location 1456 is 122
9999 mem: location 1457 is 0
9999 mem: location 1458 is 1167
9999 mem: location 1150 is 1456
9999 run: address to copy is 1457
9999 mem: storing 1457 in location 1153
 104 run: *y <- copy next-node
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1457
9999 mem: location 1153 is 1457
9999 mem: storing 1170 in location 1457
 104 run: jump-if next-node, 1:offset
9999 mem: location 1152 is 1170
9999 run: jumping to instruction 15
 104 run: y <- get-address *next-node, prev:offset
9999 mem: location 1152 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1167
9999 mem: location 1152 is 1170
9999 run: address to copy is 1172
9999 mem: storing 1172 in location 1153
 104 run: *y <- copy new-node
9999 mem: location 1150 is 1456
9999 mem: location 1153 is 1172
9999 mem: location 1153 is 1172
9999 mem: storing 1456 in location 1172
 104 run: reply new-node
9999 mem: location 1150 is 1456
 103 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1432 is 1118
9999 mem: location 1118 is 1167
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1167 in location 1425
 104 run: jump-if in, 1:offset
9999 mem: location 1425 is 1167
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1425 is 1167
9999 mem: location 1167 is 51
9999 mem: location 1168 is 1456
9999 mem: location 1169 is 1164
9999 mem: location 1425 is 1167
9999 run: address to copy is 1168
9999 run: its type is address
9999 mem: location 1168 is 1456
9999 mem: storing 1456 in location 1426
 104 run: reply result
9999 mem: location 1426 is 1456
9999 run: result 0 is 1456
9999 mem: location 1432 is 1118
9999 mem: storing 1456 in location 1118
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1433
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1434
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1435
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1429 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1429 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1436
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1433 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1433 is 1121
9999 mem: location 1433 is 1121
9999 mem: storing 1 in location 1437
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1434 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1434 is 1122
9999 mem: location 1434 is 1122
9999 mem: storing 3 in location 1438
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1431 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1425
 104 run: break-unless sc, 
9999 mem: location 1425 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1425 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1425 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1426
 104 run: reply width
9999 mem: location 1426 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1439
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1431 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1425
 104 run: break-unless sc, 
9999 mem: location 1425 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1425 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1425 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1426
 104 run: reply height
9999 mem: location 1426 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1440
 103 run: wrap-column:number <- subtract right, 1
9999 mem: location 1436 is 9
9999 mem: storing 8 in location 1441
 103 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1434 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1441 is 8
9999 mem: storing 0 in location 1442
 103 run: break-unless at-wrap?, 
9999 mem: location 1442 is 0
9999 run: jumping to instruction 34
 103 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1434 is 1122
9999 mem: location 1122 is 3
9999 mem: location 1434 is 1122
9999 mem: storing 4 in location 1122
 103 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1432 is 1118
9999 mem: location 1118 is 1456
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1456 in location 1425
 104 run: jump-if in, 1:offset
9999 mem: location 1425 is 1456
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1425 is 1456
9999 mem: location 1456 is 122
9999 mem: location 1457 is 1170
9999 mem: location 1458 is 1167
9999 mem: location 1425 is 1456
9999 run: address to copy is 1457
9999 run: its type is address
9999 mem: location 1457 is 1170
9999 mem: storing 1170 in location 1426
 104 run: reply result
9999 mem: location 1426 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1446
 103 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1446 is 1170
9999 mem: storing 0 in location 1447
 103 run: break-unless at-end?, 
9999 mem: location 1447 is 0
9999 run: jumping to instruction 48
 103 run: break-unless next, 
9999 mem: location 1446 is 1170
9999 run: jump-unless fell through
 103 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1434 is 1122
9999 mem: location 1122 is 4
9999 mem: location 1439 is 10
9999 mem: storing 0 in location 1450
 103 run: break-if at-right?, 
9999 mem: location 1450 is 0
9999 run: jump-if fell through
 103 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1432 is 1118
9999 mem: location 1118 is 1456
9999 mem: location 1432 is 1118
9999 mem: location 1432 is 1118
9999 mem: storing 1456 in location 1452
 103 run: move-cursor screen, save-row, save-column
9999 mem: location 1431 is 1009
9999 mem: location 1437 is 1
9999 mem: location 1438 is 3
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1211
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1212
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 3 in location 1213
 104 run: break-unless sc, 
9999 mem: location 1211 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1214
 104 run: *row <- copy new-row
9999 mem: location 1212 is 1
9999 mem: location 1214 is 1011
9999 mem: location 1214 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1211 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1215
 104 run: *column <- copy new-column
9999 mem: location 1213 is 3
9999 mem: location 1215 is 1012
9999 mem: location 1215 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1211 is 1009
 103 run: curr-column:number <- copy save-column
9999 mem: location 1438 is 3
9999 mem: storing 3 in location 1453
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1453 is 3
9999 mem: location 1439 is 10
9999 mem: storing 0 in location 1450
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1450 is 0
9999 run: jumping to instruction 60
 103 run: break-unless curr, 
9999 mem: location 1452 is 1456
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1452 is 1456
9999 mem: location 1456 is 122
9999 mem: location 1457 is 1170
9999 mem: location 1458 is 1167
9999 mem: location 1452 is 1456
9999 run: address to copy is 1456
9999 run: its type is number
9999 mem: location 1456 is 122
9999 mem: storing 122 in location 1454
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1454 is 122
9999 mem: storing 0 in location 1455
 103 run: break-if at-newline?, 
9999 mem: location 1455 is 0
9999 run: jump-if fell through
 103 run: print-character screen, currc
9999 mem: location 1431 is 1009
9999 mem: location 1454 is 122
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1229
 104 run: c:character <- next-ingredient 
9999 mem: storing 122 in location 1230
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
 104 run: break-if color-found?, 
9999 mem: location 1232 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1231
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 104 run: break-if bg-color-found?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1233
 104 run: trace 90, [print-character], c
9999 mem: location 1230 is 122
  90 print-character: 122 
 104 run: break-unless sc, 
9999 mem: location 1229 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1235
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1236
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1237
schedule: print-character/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1002/scenario-editor-moves-to-end-of-line-with-ctrl-e
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 104 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1236 is 5
9999 mem: storing 1 in location 1238
 104 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1239
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1238
 104 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1235 is 10
9999 mem: storing 1 in location 1238
 104 run: jump-if legal?, 1:offset
9999 mem: location 1238 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1230 is 122
9999 mem: storing 0 in location 1240
 104 run: break-unless newline?, 
9999 mem: location 1240 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1237 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1235 is 10
9999 mem: storing 10 in location 1243
 104 run: index <- add index, *column
9999 mem: location 1243 is 10
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1243
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1229 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1229 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1244
 104 run: len:number <- length *buf
9999 mem: location 1244 is 1014
9999 mem: storing 50 in location 1245
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1230 is 122
9999 mem: storing 0 in location 1246
 104 run: break-unless backspace?, 
9999 mem: location 1246 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1244 is 1014
9999 mem: location 1243 is 13
9999 mem: storing 1041 in location 1248
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1248 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1248 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1249
 104 run: *cursor-contents <- copy c
9999 mem: location 1230 is 122
9999 mem: location 1249 is 1041
9999 mem: location 1249 is 1041
9999 mem: storing 122 in location 1041
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1248 is 1041
9999 mem: location 1041 is 122
9999 mem: location 1042 is 7
9999 mem: location 1248 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1250
 104 run: *cursor-color <- copy color
9999 mem: location 1231 is 7
9999 mem: location 1250 is 1042
9999 mem: location 1250 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width, 1
9999 mem: location 1235 is 10
9999 mem: storing 9 in location 1251
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 104 run: break-if at-right?, 
9999 mem: location 1252 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1239 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1239 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1229 is 1009
 103 run: curr-column <- add curr-column, 1
9999 mem: location 1453 is 3
9999 mem: storing 4 in location 1453
 103 run: curr <- next-duplex curr
9999 mem: location 1452 is 1456
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1456 in location 1425
 104 run: jump-if in, 1:offset
9999 mem: location 1425 is 1456
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1425 is 1456
9999 mem: location 1456 is 122
9999 mem: location 1457 is 1170
9999 mem: location 1458 is 1167
9999 mem: location 1425 is 1456
9999 run: address to copy is 1457
9999 run: its type is address
9999 mem: location 1457 is 1170
9999 mem: storing 1170 in location 1426
 104 run: reply result
9999 mem: location 1426 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1452
 103 run: loop 
9999 run: jumping to instruction 57
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1453 is 4
9999 mem: location 1439 is 10
9999 mem: storing 0 in location 1450
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1450 is 0
9999 run: jumping to instruction 60
 103 run: break-unless curr, 
9999 mem: location 1452 is 1170
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1452 is 1170
9999 mem: location 1170 is 10
9999 mem: location 1171 is 1173
9999 mem: location 1172 is 1456
9999 mem: location 1452 is 1170
9999 run: address to copy is 1170
9999 run: its type is number
9999 mem: location 1170 is 10
9999 mem: storing 10 in location 1454
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1454 is 10
9999 mem: storing 1 in location 1455
 103 run: break-if at-newline?, 
9999 mem: location 1455 is 1
9999 run: jumping to instruction 68
 103 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1429 is 1115
9999 mem: location 1431 is 1009
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1333
9999 mem: storing 1009 in location 1332
9999 mem: storing 0 in location 1372
 102 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1154
9999 mem: storing 1154 in location 1379
 102 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1333 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1333 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1351
 102 run: break-unless *undo, 
9999 mem: location 1351 is 1124
9999 mem: location 1124 is 1414
9999 run: jump-unless fell through
 102 run: op:address:operation <- first *undo
9999 mem: location 1351 is 1124
9999 mem: location 1124 is 1414
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1414 in location 1425
 103 run: result:location <- get *in, value:offset
9999 mem: location 1425 is 1414
9999 mem: location 1414 is 1404
9999 mem: location 1415 is 1328
9999 mem: location 1425 is 1414
9999 run: address to copy is 1414
9999 run: its type is number
9999 mem: location 1414 is 1404
9999 mem: storing 1404 in location 1426
 103 run: reply result
9999 mem: location 1426 is 1404
9999 run: result 0 is 1404
9999 mem: storing 1404 in location 1350
 102 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1350 is 1404
9999 mem: location 1404 is 1
9999 mem: location 1405 is 1
9999 mem: location 1406 is 1
9999 mem: location 1407 is 1154
9999 mem: location 1408 is 1
9999 mem: location 1409 is 3
9999 mem: location 1410 is 1154
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: location 1413 is 0
9999 mem: location 1350 is 1404
9999 mem: storing 0 in location 1354
 102 run: break-unless typing, 
9999 mem: location 1354 is 0
9999 run: jumping to instruction 217
 102 run: insert-from:address:duplex-list <- copy *before-cursor
9999 mem: location 1342 is 1118
9999 mem: location 1118 is 1456
9999 mem: location 1342 is 1118
9999 mem: location 1342 is 1118
9999 mem: storing 1456 in location 1355
 102 run: insert-to:address:duplex-list <- next-duplex insert-from
9999 mem: location 1355 is 1456
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1456 in location 1425
 103 run: jump-if in, 1:offset
9999 mem: location 1425 is 1456
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1425 is 1456
9999 mem: location 1456 is 122
9999 mem: location 1457 is 1170
9999 mem: location 1458 is 1167
9999 mem: location 1425 is 1456
9999 run: address to copy is 1457
9999 run: its type is address
9999 mem: location 1457 is 1170
9999 mem: storing 1170 in location 1426
 103 run: reply result
9999 mem: location 1426 is 1170
9999 run: result 0 is 1170
9999 mem: storing 1170 in location 1380
 102 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1459
9999 mem: storing 1459 in location 1350
 102 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1345 is 1
9999 mem: location 1346 is 3
9999 mem: location 1377 is 1154
9999 mem: location 1343 is 1121
9999 mem: location 1121 is 1
9999 mem: location 1344 is 1122
9999 mem: location 1122 is 4
9999 mem: location 1379 is 1154
9999 mem: location 1355 is 1456
9999 mem: location 1380 is 1170
9999 mem: location 1350 is 1459
9999 mem: storing 0 in location 1459
9999 mem: storing 1 in location 1460
9999 mem: storing 3 in location 1461
9999 mem: storing 1154 in location 1462
9999 mem: storing 1 in location 1463
9999 mem: storing 4 in location 1464
9999 mem: storing 1154 in location 1465
9999 mem: storing 1456 in location 1466
9999 mem: storing 1170 in location 1467
9999 mem: storing 1 in location 1468
 102 run: editor <- add-operation editor, op
9999 mem: location 1333 is 1115
9999 mem: location 1350 is 1459
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1255
 103 run: op:address:operation <- next-ingredient 
9999 mem: storing 1459 in location 1256
 103 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1414
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1257
 103 run: *undo <- push op, *undo
9999 mem: location 1256 is 1459
9999 mem: location 1257 is 1124
9999 mem: location 1124 is 1414
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: x:location <- next-ingredient 
9999 mem: storing 1459 in location 1211
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1414 in location 1212
 104 run: result:address:list <- new list:type
9999 mem: new alloc: 1469
9999 mem: storing 1469 in location 1213
 104 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1213 is 1469
9999 mem: location 1469 is 0
9999 mem: location 1470 is 0
9999 mem: location 1213 is 1469
9999 run: address to copy is 1469
9999 mem: storing 1469 in location 1214
 104 run: *val <- copy x
9999 mem: location 1211 is 1459
9999 mem: location 1214 is 1469
9999 mem: location 1214 is 1469
9999 mem: storing 1459 in location 1469
 104 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1213 is 1469
9999 mem: location 1469 is 1459
9999 mem: location 1470 is 0
9999 mem: location 1213 is 1469
9999 run: address to copy is 1470
9999 mem: storing 1470 in location 1215
 104 run: *next <- copy in
9999 mem: location 1212 is 1414
9999 mem: location 1215 is 1470
9999 mem: location 1215 is 1470
9999 mem: storing 1414 in location 1470
 104 run: reply result
9999 mem: location 1213 is 1469
9999 run: result 0 is 1469
9999 mem: location 1257 is 1124
9999 mem: storing 1469 in location 1124
 103 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1255 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1469
9999 mem: location 1125 is 0
9999 mem: location 1255 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1258
 103 run: *redo <- copy 0
9999 mem: location 1258 is 1125
9999 mem: location 1258 is 1125
9999 mem: storing 0 in location 1125
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1255 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1333
 102 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1332 is 1009
9999 mem: location 1333 is 1115
9999 mem: location 1372 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1300
9999 mem: storing 1115 in location 1302
9999 mem: storing 0 in location 1317
 101 run: break-unless go-render?, 
9999 mem: location 1317 is 0
9999 run: jumping to instruction 33
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1301 is 1421
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1421 in location 1261
 102 run: break-unless x, 
9999 mem: location 1261 is 1421
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1261 is 1421
9999 mem: location 1421 is 1
9999 mem: location 1422 is 1416
9999 mem: location 1261 is 1421
9999 run: address to copy is 1421
9999 mem: storing 1421 in location 1262
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1261 is 1421
9999 mem: location 1421 is 1
9999 mem: location 1422 is 1416
9999 mem: location 1261 is 1421
9999 run: address to copy is 1422
9999 run: its type is address
9999 mem: location 1422 is 1416
9999 mem: storing 1416 in location 1263
 102 run: max:number <- length *buf
9999 mem: location 1263 is 1416
9999 mem: storing 1 in location 1264
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1262 is 1421
9999 mem: location 1421 is 1
9999 mem: location 1264 is 1
9999 mem: storing 1 in location 1265
 102 run: break-unless done?, 
9999 mem: location 1265 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: storing 1423 in location 1266
 102 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1266 is 1423
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: location 1261 is 1421
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1421
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 1421 in location 1301
9999 mem: storing 1 in location 1307
9999 mem: storing 1 in location 1308
 101 run: loop-unless found?, 
9999 mem: location 1307 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1308 is 1
9999 run: jumping to instruction 36
 100 run: 4:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1469
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 4
 100 run: 5:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1154
9999 mem: location 1116 is 1154
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1456
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 4
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1469
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 4
9999 mem: storing 4 in location 5
  99 run: memory-should-contain [
    4 <- 1
    5 <- 4
  ]
9999 run: checking location 4
9999 run: checking location 5
  99 run: screen-should-contain [
    .          .
    .123z      .
    .456       .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
  99 run: check-trace-count-for-label 1, [print-character]
