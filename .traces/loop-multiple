c{0: 0 (((1 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 1 (((2 integer)) <- ((copy)) ((0 literal))) -- ((open 1))
c{0: 2 (((3 integer)) <- ((copy)) ((0 literal))) -- ((open 1))
c{0: 3 (((loop)) ((2 blocks))) -- ((open 3) (open 1))
c{1: 0 ✓ (((1 integer)) <- ((copy)) ((0 literal)))
c{1: 1 ✓ (((2 integer)) <- ((copy)) ((0 literal)))
c{1: 2 ✓ (((3 integer)) <- ((copy)) ((0 literal)))
c{1: 3 X (((loop)) ((2 blocks))) => (((jump)) ((-3 offset)))
