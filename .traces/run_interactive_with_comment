9991 parse: --- defining main
9993 parse: instruction: new
9993 parse:   ingredient: {"a:number <- copy 0  # abc\nb:number <- copy 0\n": "literal-string"}
9993 parse:   product: {"1": <"address" : <"array" : <"number" : <>>>>}
9992 load: after rewriting: 1:address:array:number <- new [a:number <- copy 0  # abc
b:number <- copy 0
]
9993 parse: instruction: run-interactive
9993 parse:   ingredient: {"1": <"address" : <"array" : <"character" : <>>>>}
9993 parse:   product: {"2": <"address" : <"array" : <"character" : <>>>>}
9993 parse:   product: {"3": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 2:address:array:character, 3:address:array:character <- run-interactive 1:address:array:character
9990 transform: === transform_all()
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- transform braces for recipe main
9991 transform: new ...
9991 transform: run-interactive ...
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: 1:address:array:number <- new [a:number <- copy 0  # abc
b:number <- copy 0
]
9999 mem: storing 1000 in location 1
 102 run: 2:address:array:character, 3:address:array:character <- run-interactive 1:address:array:character
9999 mem: location 1 is 1000
 103 run: reply output, warnings, screen, stashes, completed?
9999 mem: location 1052 is 1381
9999 mem: location 1053 is 0
9999 mem: location 1048 is 1064
9999 mem: location 1054 is 0
9999 mem: location 1051 is 1
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1381
9998 run: result 1 is 0
9999 mem: storing 1381 in location 2
9999 mem: storing 0 in location 3
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
