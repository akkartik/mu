9991 load: --- defining main
9993 parse: instruction: copy
9993 parse:   ingredient: {"27": "literal"}
9993 parse:   product: {"1": "number"}
9992 load: after rewriting: 1:number <- copy 27
9993 parse: instruction: copy
9993 parse:   ingredient: {"11": "literal"}
9993 parse:   product: {"2": "number"}
9992 load: after rewriting: 2:number <- copy 11
9993 parse: instruction: divide-with-remainder
9993 parse:   ingredient: {"1": "number"}
9993 parse:   ingredient: {"2": "number"}
9993 parse:   product: {"3": "number"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 3:number, 4:number <- divide-with-remainder 1:number, 2:number
9999 after-brace: recipe main
9999 after-brace: copy ...
9999 after-brace: copy ...
9999 after-brace: divide-with-remainder ...
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9999 schedule: main
 102 run: 1:number <- copy 27
9999 mem: storing 27 in location 1
 102 run: 2:number <- copy 11
9999 mem: storing 11 in location 2
 102 run: 3:number, 4:number <- divide-with-remainder 1:number, 2:number
9999 mem: location 1 is 27
9999 mem: location 2 is 11
9999 mem: storing 2 in location 3
9999 mem: storing 5 in location 4
9999 trace: fall-through: exiting main; decrementing callstack depth from 1
