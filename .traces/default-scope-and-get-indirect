schedule: main
run: -- nil
run: 1 main 0: ((default-scope scope-address) <- new (scope literal) (5 literal))
sizeof: location
run: 1000 => (default-scope scope-address)
sizeof: (default-scope scope-address)
run: -- ((1000 5))
run: 2 main 1: ((1 integer-boolean-pair-address) <- new (integer-boolean-pair literal))
sizeof: integer-boolean-pair
sizeof: integer
sizeof: boolean
run: 1006 => (1 integer-boolean-pair-address)
setm: (1 integer-boolean-pair-address) <= 1006
sizeof: (1 integer-boolean-pair-address)
setm: size of (1 integer-boolean-pair-address) is 1
setm: (1 integer-boolean-pair-address): setting 1001 to 1006
run: -- ((1000 5) (1001 1006))
run: 3 main 2: ((2 integer-address) <- get-address (1 integer-boolean-pair-address deref) (0 offset))
record-info: (1 integer-boolean-pair-address deref) (0 offset)
record-info: initial base 1006 type ((address t) (elem integer-boolean-pair) (size 1))
record-info: (1 integer-boolean-pair-address deref) requests deref => ((elems (integer boolean)) (fields (int bool)) (record t) (size 2))
get-address: (1 integer-boolean-pair-address deref) (0 offset) => 1006
run: 1006 => (2 integer-address)
setm: (2 integer-address) <= 1006
sizeof: (2 integer-address)
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 1002 to 1006
run: -- ((1000 5) (1001 1006) (1002 1006))
run: 4 main 3: ((2 integer-address deref) <- copy (34 literal))
run: 34 => (2 integer-address deref)
setm: (2 integer-address deref) <= 34
sizeof: (2 integer-address deref)
sizeof: (nil integer)
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1006 to 34
run: -- ((1000 5) (1001 1006) (1002 1006) (1006 34))
run: 5 main 4: ((3 integer global) <- get (1 integer-boolean-pair-address deref) (0 offset))
record-info: (1 integer-boolean-pair-address deref) (0 offset)
record-info: initial base 1006 type ((address t) (elem integer-boolean-pair) (size 1))
record-info: (1 integer-boolean-pair-address deref) requests deref => ((elems (integer boolean)) (fields (int bool)) (record t) (size 2))
get: (1 integer-boolean-pair-address deref) (0 offset) => 1006 integer
m: (1006 integer global)
sizeof: (1006 integer global)
run: 34 => (3 integer global)
setm: (3 integer global) <= 34
sizeof: (3 integer global)
setm: size of (3 integer global) is 1
setm: (3 integer global): setting 3 to 34
schedule: done with routine
