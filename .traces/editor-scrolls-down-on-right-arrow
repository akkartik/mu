9991 parse: --- defining scenario-editor-scrolls-down-on-right-arrow
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"5": "literal", "width": <>}
9993 parse:   ingredient: {"4": "literal", "height": <>}
9992 load: after rewriting: screen:address:screen <- new-fake-screen 5/width, 4/height
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a\nb\ncdefgh": "literal-string"}
9993 parse:   product: {"1": <"address" : <"array" : <"character" : <>>>>}
9992 load: after rewriting: 1:address:array:character <- new [a
b
cdefgh]
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"array" : <"character" : <>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"5": "literal", "right": <>}
9993 parse:   product: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: 2:address:editor-data <- new-editor 1:address:array:character, screen:address:screen, 0/left, 5/right
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 3, 3\n    press right-arrow\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    left-click 3, 3
    press right-arrow
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .     .\n    .b    .\n    .cdef↩.\n    .gh   .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .     .
    .b    .
    .cdef↩.
    .gh   .
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 3\n    4 <- 0\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 3
    4 <- 0
  ]
9999 parse: recipe scenario-editor-scrolls-down-on-right-arrow has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario-editor-scrolls-down-on-right-arrow
9991 transform: --- deduce types for recipe scenario-editor-scrolls-down-on-right-arrow
9992 transform: screen => <address : <screen : <>>>
9991 transform: --- collect surrounding spaces for recipe scenario-editor-scrolls-down-on-right-arrow
9991 transform: --- transform names for recipe scenario-editor-scrolls-down-on-right-arrow
9991 transform: --- resolve ambiguous calls for recipe scenario-editor-scrolls-down-on-right-arrow
9992 transform: instruction new-fake-screen
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for base: 1000
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for variant 0: 1000
9992 transform: instruction new-editor
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for base: 999
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for variant 0: 999
9991 transform: --- compute instruction operations for recipe scenario-editor-scrolls-down-on-right-arrow
9991 transform: --- transform braces for recipe scenario-editor-scrolls-down-on-right-arrow
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario-editor-scrolls-down-on-right-arrow
9991 transform: --- type-check 'call' instructions inside recipe scenario-editor-scrolls-down-on-right-arrow
9991 transform: --- type-check calls inside recipe scenario-editor-scrolls-down-on-right-arrow
9991 transform: --- convert 'new' to 'allocate' for recipe scenario-editor-scrolls-down-on-right-arrow
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario-editor-scrolls-down-on-right-arrow
 102 run: screen:address:screen <- new-fake-screen 5/width, 4/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1000
 103 run: w:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1002
 103 run: h:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1003
 103 run: result <- new screen:type
9999 mem: new alloc: 1011
9999 mem: storing 1011 in location 1004
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1004 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1004 is 1011
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1005
 103 run: *width <- copy w
9999 mem: location 1002 is 5
9999 mem: location 1005 is 1012
9999 mem: storing 5 in location 1012
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1004 is 1011
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1004 is 1011
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 103 run: *height <- copy h
9999 mem: location 1003 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1004 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1004 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: *row <- copy 0
9999 mem: location 1007 is 1013
9999 mem: storing 0 in location 1013
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1004 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1004 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1008
 103 run: *column <- copy 0
9999 mem: location 1008 is 1014
9999 mem: storing 0 in location 1014
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1005 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1006 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 20 in location 1009
 103 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1004 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1004 is 1011
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1010
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1009 is 20
9999 mem: array size is 20
9999 mem: new alloc: 1016
9999 mem: location 1010 is 1015
9999 mem: storing 1016 in location 1015
 103 run: result <- clear-screen result
9999 mem: location 1004 is 1011
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1057
 104 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1059
 104 run: jump-unless screen, 
9999 mem: location 1059 is 1011
9998 run: jump-unless fell through
 104 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1059 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1059 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1060
 104 run: max:number <- length *buf
9999 mem: location 1060 is 1016
9999 mem: storing 20 in location 1061
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1062
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 0
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 0
9999 mem: storing 1017 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1064 is 1017
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1017
9999 mem: storing 0 in location 1017
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1064 is 1017
9998 run: address to copy is 1018
9999 mem: storing 1018 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1018
9999 mem: storing 7 in location 1018
 104 run: i <- add i, 1
9999 mem: location 1062 is 0
9999 mem: storing 1 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 1
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 1
9999 mem: storing 1019 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1064 is 1019
9998 run: address to copy is 1019
9999 mem: storing 1019 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1019
9999 mem: storing 0 in location 1019
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1064 is 1019
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1020
9999 mem: storing 7 in location 1020
 104 run: i <- add i, 1
9999 mem: location 1062 is 1
9999 mem: storing 2 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 2
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 2
9999 mem: storing 1021 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1064 is 1021
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1021
9999 mem: storing 0 in location 1021
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1064 is 1021
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1022
9999 mem: storing 7 in location 1022
 104 run: i <- add i, 1
9999 mem: location 1062 is 2
9999 mem: storing 3 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 3
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 3
9999 mem: storing 1023 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1064 is 1023
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1023
9999 mem: storing 0 in location 1023
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1064 is 1023
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1024
9999 mem: storing 7 in location 1024
 104 run: i <- add i, 1
9999 mem: location 1062 is 3
9999 mem: storing 4 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 4
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 4
9999 mem: storing 1025 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1064 is 1025
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1025
9999 mem: storing 0 in location 1025
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1064 is 1025
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1026
9999 mem: storing 7 in location 1026
 104 run: i <- add i, 1
9999 mem: location 1062 is 4
9999 mem: storing 5 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 5
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 5
9999 mem: storing 1027 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1064 is 1027
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1027
9999 mem: storing 0 in location 1027
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1064 is 1027
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1028
9999 mem: storing 7 in location 1028
 104 run: i <- add i, 1
9999 mem: location 1062 is 5
9999 mem: storing 6 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 6
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 6
9999 mem: storing 1029 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1064 is 1029
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1029
9999 mem: storing 0 in location 1029
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1064 is 1029
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1030
9999 mem: storing 7 in location 1030
 104 run: i <- add i, 1
9999 mem: location 1062 is 6
9999 mem: storing 7 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 7
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 7
9999 mem: storing 1031 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1064 is 1031
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1031
9999 mem: storing 0 in location 1031
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1064 is 1031
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1032
9999 mem: storing 7 in location 1032
 104 run: i <- add i, 1
9999 mem: location 1062 is 7
9999 mem: storing 8 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 8
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 8
9999 mem: storing 1033 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1064 is 1033
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1033
9999 mem: storing 0 in location 1033
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1064 is 1033
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1034
9999 mem: storing 7 in location 1034
 104 run: i <- add i, 1
9999 mem: location 1062 is 8
9999 mem: storing 9 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 9
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 9
9999 mem: storing 1035 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1064 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1035
9999 mem: storing 0 in location 1035
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1064 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1036
9999 mem: storing 7 in location 1036
 104 run: i <- add i, 1
9999 mem: location 1062 is 9
9999 mem: storing 10 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 10
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 10
9999 mem: storing 1037 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1064 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1037
9999 mem: storing 0 in location 1037
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1064 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1038
9999 mem: storing 7 in location 1038
 104 run: i <- add i, 1
9999 mem: location 1062 is 10
9999 mem: storing 11 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 11
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 11
9999 mem: storing 1039 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1064 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1039
9999 mem: storing 0 in location 1039
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1064 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1040
9999 mem: storing 7 in location 1040
 104 run: i <- add i, 1
9999 mem: location 1062 is 11
9999 mem: storing 12 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 12
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 12
9999 mem: storing 1041 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1064 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1041
9999 mem: storing 0 in location 1041
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1064 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1042
9999 mem: storing 7 in location 1042
 104 run: i <- add i, 1
9999 mem: location 1062 is 12
9999 mem: storing 13 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 13
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 13
9999 mem: storing 1043 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1064 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1043
9999 mem: storing 0 in location 1043
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1064 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1044
9999 mem: storing 7 in location 1044
 104 run: i <- add i, 1
9999 mem: location 1062 is 13
9999 mem: storing 14 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 14
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 14
9999 mem: storing 1045 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1064 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1045
9999 mem: storing 0 in location 1045
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1064 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1046
9999 mem: storing 7 in location 1046
 104 run: i <- add i, 1
9999 mem: location 1062 is 14
9999 mem: storing 15 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 15
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 15
9999 mem: storing 1047 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1064 is 1047
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1047
9999 mem: storing 0 in location 1047
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1064 is 1047
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1048
9999 mem: storing 7 in location 1048
 104 run: i <- add i, 1
9999 mem: location 1062 is 15
9999 mem: storing 16 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 16
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 16
9999 mem: storing 1049 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1064 is 1049
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1049
9999 mem: storing 0 in location 1049
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1064 is 1049
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1050
9999 mem: storing 7 in location 1050
 104 run: i <- add i, 1
9999 mem: location 1062 is 16
9999 mem: storing 17 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 17
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 17
9999 mem: storing 1051 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1064 is 1051
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1051
9999 mem: storing 0 in location 1051
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1064 is 1051
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1052
9999 mem: storing 7 in location 1052
 104 run: i <- add i, 1
9999 mem: location 1062 is 17
9999 mem: storing 18 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 18
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 18
9999 mem: storing 1053 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1064 is 1053
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1053
9999 mem: storing 0 in location 1053
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1064 is 1053
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1054
9999 mem: storing 7 in location 1054
 104 run: i <- add i, 1
9999 mem: location 1062 is 18
9999 mem: storing 19 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 19
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1060 is 1016
9999 mem: location 1062 is 19
9999 mem: storing 1055 in location 1064
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1064 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1064 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1065
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1065 is 1055
9999 mem: storing 0 in location 1055
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1064 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1064 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1066
 104 run: *curr-color <- copy 7/white
9999 mem: location 1066 is 1056
9999 mem: storing 7 in location 1056
 104 run: i <- add i, 1
9999 mem: location 1062 is 19
9999 mem: storing 20 in location 1062
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1062 is 20
9999 mem: location 1061 is 20
9999 mem: storing 1 in location 1063
 104 run: jump-if done?, 
9999 mem: location 1063 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1059 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1059 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1067
 104 run: *x <- copy 0
9999 mem: location 1067 is 1013
9999 mem: storing 0 in location 1013
 104 run: x <- get-address *screen, cursor-column:offset
9999 mem: location 1059 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1059 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1067
 104 run: *x <- copy 0
9999 mem: location 1067 is 1014
9999 mem: storing 0 in location 1014
 104 run: reply screen:address:screen
9999 mem: location 1059 is 1011
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1004
 103 run: reply result:address:screen
9999 mem: location 1004 is 1011
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 900
 102 run: 1:address:array:character <- new [a
b
cdefgh]
9999 mem: storing 1068 in location 1
 102 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address:screen, 0/left, 5/right
9999 mem: location 1 is 1068
9999 mem: location 900 is 1011
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1079
 103 run: s:address:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1068 in location 1081
 103 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1082
 103 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1083
 103 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1084
 103 run: right <- subtract right, 1
9999 mem: location 1084 is 5
9999 mem: storing 4 in location 1084
 103 run: result <- new editor-data:type
9999 mem: storing 1000 in location 1085
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1085 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 0
9999 mem: location 1006 is 0
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1085 is 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1086
 103 run: *x <- copy left
9999 mem: location 1083 is 0
9999 mem: location 1086 is 1004
9999 mem: storing 0 in location 1004
 103 run: x <- get-address *result, right:offset
9999 mem: location 1085 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 0
9999 mem: location 1006 is 0
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1085 is 1000
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1086
 103 run: *x <- copy right
9999 mem: location 1084 is 4
9999 mem: location 1086 is 1005
9999 mem: storing 4 in location 1005
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1085 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 0
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1085 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1086
 103 run: *x <- copy 1/top
9999 mem: location 1086 is 1006
9999 mem: storing 1 in location 1006
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1085 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1085 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1086
 103 run: *x <- copy left
9999 mem: location 1083 is 0
9999 mem: location 1086 is 1007
9999 mem: storing 0 in location 1007
 103 run: init:address:address:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1085 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1085 is 1000
9998 run: address to copy is 1000
9999 mem: storing 1000 in location 1087
 103 run: *init <- push_3 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1091
 104 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1093
 104 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1094
 104 run: result:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1099
9999 mem: storing 1099 in location 1095
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1095 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1095 is 1099
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1096
 104 run: *val <- copy x
9999 mem: location 1093 is 167
9999 mem: location 1096 is 1099
9999 mem: storing 167 in location 1099
 104 run: next:address:address:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1095 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1095 is 1099
9999 type: type deduced to be character$
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1097
 104 run: *next <- copy in
9999 mem: location 1094 is 0
9999 mem: location 1097 is 1100
9999 mem: storing 0 in location 1100
 104 run: jump-unless in, 
9999 mem: location 1094 is 0
9998 run: jumping to instruction 12
 104 run: reply result
9999 mem: location 1095 is 1099
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1099
9999 mem: location 1087 is 1000
9999 mem: storing 1099 in location 1000
 103 run: top-of-screen:address:address:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1085 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1085 is 1000
9998 run: address to copy is 1001
9999 mem: storing 1001 in location 1088
 103 run: *top-of-screen <- copy *init
9999 mem: location 1087 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1088 is 1001
9999 mem: storing 1099 in location 1001
 103 run: y:address:address:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1085 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1085 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1089
 103 run: *y <- copy *init
9999 mem: location 1087 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1089 is 1003
9999 mem: storing 1099 in location 1003
 103 run: result <- insert-text result, s
9999 mem: location 1085 is 1000
9999 mem: location 1081 is 1068
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1102
 104 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1104
 104 run: text:address:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1068 in location 1105
 104 run: jump-if text, 1:offset
9999 mem: location 1105 is 1068
9998 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1105 is 1068
9999 mem: storing 10 in location 1106
 104 run: jump-if len, 1:offset
9999 mem: location 1106 is 10
9998 run: jumping to instruction 8
 104 run: idx:number <- copy 0
9999 mem: storing 0 in location 1107
 104 run: curr:address:duplex-list:character <- get *editor, data:offset
9999 mem: location 1104 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1104 is 1000
9998 run: address to copy is 1000
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1000 is 1099
9999 mem: storing 1099 in location 1108
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 0
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 0
9998 run: address to copy is 1069
9998 run: its type is character
9999 mem: location 1069 is 97
9999 mem: storing 97 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 97
9999 mem: location 1108 is 1099
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1099 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1111
9999 mem: storing 1111 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1095 is 1111
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 97
9999 mem: location 1096 is 1111
9999 mem: storing 97 in location 1111
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1094 is 1099
9999 type: type deduced to be character$
9998 run: address to copy is 1100
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1100 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1094 is 1099
9999 type: type deduced to be character$
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1111
9999 mem: location 1098 is 1100
9999 mem: storing 1111 in location 1100
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1095 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1099
9999 mem: location 1098 is 1113
9999 mem: storing 1099 in location 1113
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1099
9999 mem: location 1095 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1112
9999 mem: storing 0 in location 1112
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1099
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1099
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1114
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1099 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1099
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 1111
9999 mem: location 1101 is 0
9999 mem: location 1116 is 1099
9999 type: type deduced to be character$
9998 run: address to copy is 1100
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1100 is 1111
9999 mem: storing 1111 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1111
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1108
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 0
9999 mem: storing 1 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 1
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 1
9998 run: address to copy is 1070
9998 run: its type is character
9999 mem: location 1070 is 10
9999 mem: storing 10 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 10
9999 mem: location 1108 is 1111
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1111 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1118
9999 mem: storing 1118 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1095 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 10
9999 mem: location 1096 is 1118
9999 mem: storing 10 in location 1118
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1099
9999 mem: location 1094 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 0
9999 mem: location 1113 is 1099
9999 mem: location 1094 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1118
9999 mem: location 1098 is 1112
9999 mem: storing 1118 in location 1112
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1095 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1120
9999 mem: storing 1120 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1111
9999 mem: location 1098 is 1120
9999 mem: storing 1111 in location 1120
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1111
9999 mem: location 1095 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1119
9999 mem: storing 0 in location 1119
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1111
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1111
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1111 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1111
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 1118
9999 mem: location 1113 is 1099
9999 mem: location 1116 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1118
9999 mem: storing 1118 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1118
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1118
9999 mem: storing 1118 in location 1108
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 1
9999 mem: storing 2 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 2
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 2
9998 run: address to copy is 1071
9998 run: its type is character
9999 mem: location 1071 is 98
9999 mem: storing 98 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 98
9999 mem: location 1108 is 1118
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1121
9999 mem: storing 1121 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1095 is 1121
9998 run: address to copy is 1121
9999 mem: storing 1121 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 98
9999 mem: location 1096 is 1121
9999 mem: storing 98 in location 1121
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1111
9999 mem: location 1094 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1111
9999 mem: location 1094 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1121
9999 mem: location 1098 is 1119
9999 mem: storing 1121 in location 1119
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1095 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1123
9999 mem: storing 1123 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1118
9999 mem: location 1098 is 1123
9999 mem: storing 1118 in location 1123
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1118
9999 mem: location 1095 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1122
9999 mem: storing 0 in location 1122
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1118
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1118
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1118
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1116 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1121
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1121
9999 mem: storing 1121 in location 1108
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 2
9999 mem: storing 3 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 3
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 3
9998 run: address to copy is 1072
9998 run: its type is character
9999 mem: location 1072 is 10
9999 mem: storing 10 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 10
9999 mem: location 1108 is 1121
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1121 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1124
9999 mem: storing 1124 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1095 is 1124
9998 run: address to copy is 1124
9999 mem: storing 1124 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 10
9999 mem: location 1096 is 1124
9999 mem: storing 10 in location 1124
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1118
9999 mem: location 1094 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1118
9999 mem: location 1094 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9999 mem: storing 1122 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1124
9999 mem: location 1098 is 1122
9999 mem: storing 1124 in location 1122
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1095 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1126
9999 mem: storing 1126 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1121
9999 mem: location 1098 is 1126
9999 mem: storing 1121 in location 1126
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 0
9999 mem: location 1126 is 1121
9999 mem: location 1095 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1125
9999 mem: storing 0 in location 1125
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1121
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1121
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1121 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1121
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1116 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1124
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1124
9999 mem: storing 1124 in location 1108
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 3
9999 mem: storing 4 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 4
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 4
9998 run: address to copy is 1073
9998 run: its type is character
9999 mem: location 1073 is 99
9999 mem: storing 99 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 99
9999 mem: location 1108 is 1124
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1124 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1127
9999 mem: storing 1127 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 0
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1095 is 1127
9998 run: address to copy is 1127
9999 mem: storing 1127 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 99
9999 mem: location 1096 is 1127
9999 mem: storing 99 in location 1127
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 0
9999 mem: location 1126 is 1121
9999 mem: location 1094 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 0
9999 mem: location 1126 is 1121
9999 mem: location 1094 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9999 mem: storing 1125 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1127
9999 mem: location 1098 is 1125
9999 mem: storing 1127 in location 1125
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1095 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1129
9999 mem: storing 1129 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1124
9999 mem: location 1098 is 1129
9999 mem: storing 1124 in location 1129
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 0
9999 mem: location 1129 is 1124
9999 mem: location 1095 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9999 mem: storing 1128 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1128
9999 mem: storing 0 in location 1128
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1124
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1124
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1124 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1124
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1116 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1127
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1127
9999 mem: storing 1127 in location 1108
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 4
9999 mem: storing 5 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 5
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 5
9998 run: address to copy is 1074
9998 run: its type is character
9999 mem: location 1074 is 100
9999 mem: storing 100 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 100
9999 mem: location 1108 is 1127
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1130
9999 mem: storing 1130 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1095 is 1130
9998 run: address to copy is 1130
9999 mem: storing 1130 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 100
9999 mem: location 1096 is 1130
9999 mem: storing 100 in location 1130
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 0
9999 mem: location 1129 is 1124
9999 mem: location 1094 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1128 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 0
9999 mem: location 1129 is 1124
9999 mem: location 1094 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9999 mem: storing 1128 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1130
9999 mem: location 1098 is 1128
9999 mem: storing 1130 in location 1128
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1095 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1132
9999 mem: storing 1132 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1127
9999 mem: location 1098 is 1132
9999 mem: storing 1127 in location 1132
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 0
9999 mem: location 1132 is 1127
9999 mem: location 1095 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9999 mem: storing 1131 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1131
9999 mem: storing 0 in location 1131
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1127
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1127
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1127
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1116 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1130
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1130
9999 mem: storing 1130 in location 1108
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 5
9999 mem: storing 6 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 6
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 6
9998 run: address to copy is 1075
9998 run: its type is character
9999 mem: location 1075 is 101
9999 mem: storing 101 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 101
9999 mem: location 1108 is 1130
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1133
9999 mem: storing 1133 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1095 is 1133
9998 run: address to copy is 1133
9999 mem: storing 1133 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 101
9999 mem: location 1096 is 1133
9999 mem: storing 101 in location 1133
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 0
9999 mem: location 1132 is 1127
9999 mem: location 1094 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1131 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 0
9999 mem: location 1132 is 1127
9999 mem: location 1094 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9999 mem: storing 1131 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1133
9999 mem: location 1098 is 1131
9999 mem: storing 1133 in location 1131
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1095 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1135
9999 mem: storing 1135 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1130
9999 mem: location 1098 is 1135
9999 mem: storing 1130 in location 1135
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1130
9999 mem: location 1095 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9999 mem: storing 1134 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1134
9999 mem: storing 0 in location 1134
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1130
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1130
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1130
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1116 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1133
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1133
9999 mem: storing 1133 in location 1108
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 6
9999 mem: storing 7 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 7
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 7
9998 run: address to copy is 1076
9998 run: its type is character
9999 mem: location 1076 is 102
9999 mem: storing 102 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 102
9999 mem: location 1108 is 1133
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1136
9999 mem: storing 1136 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1095 is 1136
9998 run: address to copy is 1136
9999 mem: storing 1136 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 102
9999 mem: location 1096 is 1136
9999 mem: storing 102 in location 1136
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1130
9999 mem: location 1094 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1134 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1130
9999 mem: location 1094 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9999 mem: storing 1134 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1136
9999 mem: location 1098 is 1134
9999 mem: storing 1136 in location 1134
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1095 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1138
9999 mem: storing 1138 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1133
9999 mem: location 1098 is 1138
9999 mem: storing 1133 in location 1138
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1133
9999 mem: location 1095 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1137
9999 mem: storing 1137 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1137
9999 mem: storing 0 in location 1137
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1133
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1133
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1133
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1116 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1136
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1136
9999 mem: storing 1136 in location 1108
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 7
9999 mem: storing 8 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 8
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 8
9998 run: address to copy is 1077
9998 run: its type is character
9999 mem: location 1077 is 103
9999 mem: storing 103 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 103
9999 mem: location 1108 is 1136
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1136 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1139
9999 mem: storing 1139 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1095 is 1139
9998 run: address to copy is 1139
9999 mem: storing 1139 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 103
9999 mem: location 1096 is 1139
9999 mem: storing 103 in location 1139
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1133
9999 mem: location 1094 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1137
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1133
9999 mem: location 1094 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1137
9999 mem: storing 1137 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1139
9999 mem: location 1098 is 1137
9999 mem: storing 1139 in location 1137
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1095 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1141
9999 mem: storing 1141 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1136
9999 mem: location 1098 is 1141
9999 mem: storing 1136 in location 1141
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1136
9999 mem: location 1095 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9999 mem: storing 1140 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1140
9999 mem: storing 0 in location 1140
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1136
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1136
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1136 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1136
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1116 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1137
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1137 is 1139
9999 mem: storing 1139 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1139
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1139
9999 mem: storing 1139 in location 1108
9990 schedule: insert-text/new-editor/scenario-editor-scrolls-down-on-right-arrow
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 8
9999 mem: storing 9 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 9
9999 mem: location 1106 is 10
9999 mem: storing 0 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1105 is 1068
9999 mem: location 1107 is 9
9998 run: address to copy is 1078
9998 run: its type is character
9999 mem: location 1078 is 104
9999 mem: storing 104 in location 1110
 104 run: insert_2 c, curr
9999 mem: location 1110 is 104
9999 mem: location 1108 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1093
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1094
 105 run: new-node:address:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: new alloc: 1142
9999 mem: storing 1142 in location 1095
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1095 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1095 is 1142
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1096
 105 run: *val <- copy x
9999 mem: location 1093 is 104
9999 mem: location 1096 is 1142
9999 mem: storing 104 in location 1142
 105 run: next-node:address:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1094 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1136
9999 mem: location 1094 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1140 is 0
9999 mem: storing 0 in location 1097
 105 run: y:address:address:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1094 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1136
9999 mem: location 1094 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9999 mem: storing 1140 in location 1098
 105 run: *y <- copy new-node
9999 mem: location 1095 is 1142
9999 mem: location 1098 is 1140
9999 mem: storing 1142 in location 1140
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1095 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 104
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1095 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1098
 105 run: *y <- copy in
9999 mem: location 1094 is 1139
9999 mem: location 1098 is 1144
9999 mem: storing 1139 in location 1144
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1095 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 104
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1139
9999 mem: location 1095 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1098
 105 run: *y <- copy next-node
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1143
9999 mem: storing 0 in location 1143
 105 run: jump-if next-node, 1:offset
9999 mem: location 1097 is 0
9998 run: jump-if fell through
 105 run: reply in:address:duplex-list:_elem
9999 mem: location 1094 is 1139
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1108 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1139
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 1136
9999 mem: location 1116 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1140 is 1142
9999 mem: storing 1142 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1142
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1142
9999 mem: storing 1142 in location 1108
 104 run: idx <- add idx, 1
9999 mem: location 1107 is 9
9999 mem: storing 10 in location 1107
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1107 is 10
9999 mem: location 1106 is 10
9999 mem: storing 1 in location 1109
 104 run: jump-if done?, 
9999 mem: location 1109 is 1
9998 run: jumping to instruction 18
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1104 is 1000
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1085
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1085 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1085 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1089
 103 run: *y <- copy *init
9999 mem: location 1087 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1089 is 1003
9999 mem: storing 1099 in location 1003
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1082 is 1011
9999 mem: location 1085 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: new alloc: 1145
 104 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1147
 104 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1148
 104 run: jump-if editor, 1:offset
9999 mem: location 1148 is 1000
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1149
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1147 is 1011
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1116
 105 run: jump-unless screen, 
9999 mem: location 1116 is 1011
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1116 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1116 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1117
 105 run: reply height:number
9999 mem: location 1117 is 4
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 4
9999 mem: storing 4 in location 1150
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1151
 104 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1099
9999 mem: storing 1099 in location 1152
 104 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1152 is 1099
9999 mem: storing 1099 in location 1153
 104 run: curr <- next_2 curr
9999 mem: location 1152 is 1099
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1099 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1099
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 1111
9999 mem: location 1101 is 0
9999 mem: location 1116 is 1099
9999 type: type deduced to be character$
9998 run: address to copy is 1100
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1100 is 1111
9999 mem: storing 1111 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1111
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1152
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1154
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1155
 104 run: column:number <- copy left
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1156
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1157
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1158
 104 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1159
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1147 is 1011
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1173
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1176
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 105 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 105 run: *row <- copy new-row
9999 mem: location 1176 is 1
9999 mem: location 1178 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 105 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1147
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1111
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 1
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 1
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1156 is 0
9999 mem: location 1158 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1162
 104 run: jump-unless at-cursor?, 
9999 mem: location 1162 is 1
9998 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1153 is 1099
9999 mem: location 1159 is 1003
9999 mem: storing 1099 in location 1003
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 1118
9999 mem: location 1113 is 1099
9999 mem: location 1152 is 1111
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 97
9999 mem: storing 97 in location 1163
 104 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 97
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1059
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1060
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1059 is 7
9999 mem: storing 1 in location 1061
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1060 is 97
9999 mem: storing 0 in location 1062
 105 run: jump-unless starting-comment?, 
9999 mem: location 1062 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1063
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1063 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1060 is 97
9999 mem: storing 0 in location 1065
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1065 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1066
 105 run: jump-unless color-is-red?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1059 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 97
9999 mem: storing 0 in location 1164
 104 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 0
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 104 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 97
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1180
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1183
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 105 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 105 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 105 run: trace 90, [print-character], c
9999 mem: location 1183 is 97
  90 print-character: 97 
 105 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 97
9999 mem: storing 0 in location 1193
 105 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 105 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 5 in location 1196
 105 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 105 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 97
9999 mem: storing 0 in location 1199
 105 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 5
9999 mem: storing 1027 in location 1201
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1201 is 1027
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1202
 105 run: *cursor-contents <- copy c
9999 mem: location 1183 is 97
9999 mem: location 1202 is 1027
9999 mem: storing 97 in location 1027
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1027
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1201 is 1027
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1203
 105 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1028
9999 mem: storing 7 in location 1028
 105 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 105 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1192 is 1014
9999 mem: storing 1 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1152 is 1111
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1111 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1111
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 1118
9999 mem: location 1113 is 1099
9999 mem: location 1116 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1118
9999 mem: storing 1118 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1118
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1118
9999 mem: storing 1118 in location 1152
 104 run: prev <- next_2 prev
9999 mem: location 1153 is 1099
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1099 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1099
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 1111
9999 mem: location 1101 is 0
9999 mem: location 1116 is 1099
9999 type: type deduced to be character$
9998 run: address to copy is 1100
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1100 is 1111
9999 mem: storing 1111 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1111
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1153
 104 run: column <- add column, 1
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1156
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1118
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 1
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 1
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1156 is 1
9999 mem: location 1158 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1162
 104 run: jump-unless at-cursor?, 
9999 mem: location 1162 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1152 is 1118
9998 run: address to copy is 1118
9998 run: its type is character
9999 mem: location 1118 is 10
9999 mem: storing 10 in location 1163
 104 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1059
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1060
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1059 is 7
9999 mem: storing 1 in location 1061
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1060 is 10
9999 mem: storing 0 in location 1062
 105 run: jump-unless starting-comment?, 
9999 mem: location 1062 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1063
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1063 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1060 is 10
9999 mem: storing 0 in location 1065
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1065 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1066
 105 run: jump-unless color-is-red?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1059 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 10
9999 mem: storing 1 in location 1164
 104 run: jump-unless newline?, 
9999 mem: location 1164 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 1
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 1
9998 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1156 is 1
9999 mem: location 1158 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1165
 104 run: jump-unless left-of-cursor?, 
9999 mem: location 1165 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1147 is 1011
9999 mem: location 1156 is 1
9999 mem: location 1151 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1176
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1177
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1178
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 1
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 106 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 106 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 106 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 106 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 6 in location 1196
 106 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 106 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 106 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 6
9999 mem: storing 1029 in location 1201
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1201 is 1029
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1202
 106 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1029
9999 mem: storing 32 in location 1029
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1201 is 1029
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1203
 106 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1030
9999 mem: storing 7 in location 1030
 106 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 106 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1192 is 1014
9999 mem: storing 2 in location 1014
 106 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 105 run: column <- add column, 1
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 2
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 106 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 106 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 106 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 106 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 7 in location 1196
 106 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 106 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 106 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 7
9999 mem: storing 1031 in location 1201
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1201 is 1031
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1202
 106 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1031
9999 mem: storing 32 in location 1031
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1201 is 1031
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1203
 106 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1032
9999 mem: storing 7 in location 1032
 106 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 106 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1192 is 1014
9999 mem: storing 3 in location 1014
 106 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 105 run: column <- add column, 1
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 3
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 106 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 106 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 106 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 106 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 8 in location 1196
 106 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 106 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 106 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 8
9999 mem: storing 1033 in location 1201
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1201 is 1033
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1202
 106 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1033
9999 mem: storing 32 in location 1033
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1201 is 1033
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1203
 106 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1034
9999 mem: storing 7 in location 1034
 106 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 106 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1192 is 1014
9999 mem: storing 4 in location 1014
 106 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 105 run: column <- add column, 1
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 4
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 106 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 106 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 106 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 106 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 9 in location 1196
 106 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 106 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 106 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 9
9999 mem: storing 1035 in location 1201
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1201 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1202
 106 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1035
9999 mem: storing 32 in location 1035
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1201 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1203
 106 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1036
9999 mem: storing 7 in location 1036
 106 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1204 is 4
9999 mem: storing 1 in location 1205
 106 run: jump-if at-right?, 
9999 mem: location 1205 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 105 run: column <- add column, 1
9999 mem: location 1176 is 4
9999 mem: storing 5 in location 1176
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 5
9999 mem: location 1177 is 4
9999 mem: storing 1 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 1
9998 run: jumping to instruction 11
 105 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1155 is 1
9999 mem: storing 2 in location 1155
 104 run: column <- copy left
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1156
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1147 is 1011
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1176
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 105 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 105 run: *row <- copy new-row
9999 mem: location 1176 is 2
9999 mem: location 1178 is 1013
9999 mem: storing 2 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 105 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1147
 104 run: curr <- next_2 curr
9999 mem: location 1152 is 1118
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1118
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1116 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1121
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1121
9999 mem: storing 1121 in location 1152
 104 run: prev <- next_2 prev
9999 mem: location 1153 is 1111
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1111 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1111
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 1118
9999 mem: location 1113 is 1099
9999 mem: location 1116 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1118
9999 mem: storing 1118 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1118
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1118
9999 mem: storing 1118 in location 1153
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
9990 schedule: render/new-editor/scenario-editor-scrolls-down-on-right-arrow
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1121
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 2
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 2
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1152 is 1121
9998 run: address to copy is 1121
9998 run: its type is character
9999 mem: location 1121 is 98
9999 mem: storing 98 in location 1163
 104 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 98
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1059
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1060
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1059 is 7
9999 mem: storing 1 in location 1061
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1060 is 98
9999 mem: storing 0 in location 1062
 105 run: jump-unless starting-comment?, 
9999 mem: location 1062 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1063
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1063 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1060 is 98
9999 mem: storing 0 in location 1065
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1065 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1066
 105 run: jump-unless color-is-red?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1059 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 98
9999 mem: storing 0 in location 1164
 104 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 0
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 104 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 98
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1183
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 105 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 105 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 105 run: trace 90, [print-character], c
9999 mem: location 1183 is 98
  90 print-character: 98 
 105 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 98
9999 mem: storing 0 in location 1193
 105 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 105 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 10 in location 1196
 105 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 105 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 98
9999 mem: storing 0 in location 1199
 105 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 10
9999 mem: storing 1037 in location 1201
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1201 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1202
 105 run: *cursor-contents <- copy c
9999 mem: location 1183 is 98
9999 mem: location 1202 is 1037
9999 mem: storing 98 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1201 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1203
 105 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 105 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1192 is 1014
9999 mem: storing 1 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1152 is 1121
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1121 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1121
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1116 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1124
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1124
9999 mem: storing 1124 in location 1152
 104 run: prev <- next_2 prev
9999 mem: location 1153 is 1118
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1118
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1116 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1121
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1121
9999 mem: storing 1121 in location 1153
 104 run: column <- add column, 1
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1156
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1124
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 2
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 2
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1152 is 1124
9998 run: address to copy is 1124
9998 run: its type is character
9999 mem: location 1124 is 10
9999 mem: storing 10 in location 1163
 104 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1059
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1060
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1059 is 7
9999 mem: storing 1 in location 1061
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1060 is 10
9999 mem: storing 0 in location 1062
 105 run: jump-unless starting-comment?, 
9999 mem: location 1062 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1063
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1063 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1060 is 10
9999 mem: storing 0 in location 1065
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1065 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1066
 105 run: jump-unless color-is-red?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1059 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 10
9999 mem: storing 1 in location 1164
 104 run: jump-unless newline?, 
9999 mem: location 1164 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 2
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1147 is 1011
9999 mem: location 1156 is 1
9999 mem: location 1151 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1176
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1177
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1178
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 1
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 106 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 106 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 106 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 106 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 11 in location 1196
 106 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 106 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 106 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 11
9999 mem: storing 1039 in location 1201
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1201 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1202
 106 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1039
9999 mem: storing 32 in location 1039
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1201 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1203
 106 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 106 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1192 is 1014
9999 mem: storing 2 in location 1014
 106 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 105 run: column <- add column, 1
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 2
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 106 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 106 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 106 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 106 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 12 in location 1196
 106 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 106 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 106 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 12
9999 mem: storing 1041 in location 1201
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1201 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1202
 106 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1041
9999 mem: storing 32 in location 1041
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1201 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1203
 106 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 106 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1192 is 1014
9999 mem: storing 3 in location 1014
 106 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 105 run: column <- add column, 1
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 3
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 106 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 106 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 106 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 106 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 13 in location 1196
 106 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 106 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 106 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 13
9999 mem: storing 1043 in location 1201
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1201 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1202
 106 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1043
9999 mem: storing 32 in location 1043
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1201 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1203
 106 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1044
9999 mem: storing 7 in location 1044
 106 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 106 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1192 is 1014
9999 mem: storing 4 in location 1014
 106 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 105 run: column <- add column, 1
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 4
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 106 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 106 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 106 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 106 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 106 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 14 in location 1196
 106 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 106 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 106 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 14
9999 mem: storing 1045 in location 1201
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1201 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1202
 106 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1045
9999 mem: storing 32 in location 1045
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1201 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1203
 106 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1046
9999 mem: storing 7 in location 1046
 106 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1204 is 4
9999 mem: storing 1 in location 1205
 106 run: jump-if at-right?, 
9999 mem: location 1205 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 105 run: column <- add column, 1
9999 mem: location 1176 is 4
9999 mem: storing 5 in location 1176
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 5
9999 mem: location 1177 is 4
9999 mem: storing 1 in location 1179
 105 run: jump-if done?, 
9999 mem: location 1179 is 1
9998 run: jumping to instruction 11
 105 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1155 is 2
9999 mem: storing 3 in location 1155
 104 run: column <- copy left
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1156
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1147 is 1011
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 105 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 105 run: *row <- copy new-row
9999 mem: location 1176 is 3
9999 mem: location 1178 is 1013
9999 mem: storing 3 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 105 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1147
 104 run: curr <- next_2 curr
9999 mem: location 1152 is 1124
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1124 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1124
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1116 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1127
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1127
9999 mem: storing 1127 in location 1152
 104 run: prev <- next_2 prev
9999 mem: location 1153 is 1121
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1121 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1121
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1116 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1124
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1124
9999 mem: storing 1124 in location 1153
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1127
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 3
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 3
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1152 is 1127
9998 run: address to copy is 1127
9998 run: its type is character
9999 mem: location 1127 is 99
9999 mem: storing 99 in location 1163
 104 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 99
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1059
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1060
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1059 is 7
9999 mem: storing 1 in location 1061
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1060 is 99
9999 mem: storing 0 in location 1062
 105 run: jump-unless starting-comment?, 
9999 mem: location 1062 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1063
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1063 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1060 is 99
9999 mem: storing 0 in location 1065
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1065 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1066
 105 run: jump-unless color-is-red?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1059 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 99
9999 mem: storing 0 in location 1164
 104 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 0
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 104 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 99
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1183
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 105 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 105 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 105 run: trace 90, [print-character], c
9999 mem: location 1183 is 99
  90 print-character: 99 
 105 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 99
9999 mem: storing 0 in location 1193
 105 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 105 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 15 in location 1196
 105 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 105 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 99
9999 mem: storing 0 in location 1199
 105 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 15
9999 mem: storing 1047 in location 1201
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1201 is 1047
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1202
 105 run: *cursor-contents <- copy c
9999 mem: location 1183 is 99
9999 mem: location 1202 is 1047
9999 mem: storing 99 in location 1047
9990 schedule: print/render/new-editor/scenario-editor-scrolls-down-on-right-arrow
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1047
9999 mem: location 1047 is 99
9999 mem: location 1048 is 7
9999 mem: location 1201 is 1047
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1203
 105 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 105 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1192 is 1014
9999 mem: storing 1 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1152 is 1127
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1127
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1116 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1130
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1130
9999 mem: storing 1130 in location 1152
 104 run: prev <- next_2 prev
9999 mem: location 1153 is 1124
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1124 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1124
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1116 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1127
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1127
9999 mem: storing 1127 in location 1153
 104 run: column <- add column, 1
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1156
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1130
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 3
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 3
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1152 is 1130
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 100
9999 mem: storing 100 in location 1163
 104 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 100
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1059
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1060
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1059 is 7
9999 mem: storing 1 in location 1061
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1060 is 100
9999 mem: storing 0 in location 1062
 105 run: jump-unless starting-comment?, 
9999 mem: location 1062 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1063
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1063 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1060 is 100
9999 mem: storing 0 in location 1065
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1065 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1066
 105 run: jump-unless color-is-red?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1059 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 100
9999 mem: storing 0 in location 1164
 104 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 1
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 104 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 100
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1183
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 105 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 105 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 105 run: trace 90, [print-character], c
9999 mem: location 1183 is 100
  90 print-character: 100 
 105 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 100
9999 mem: storing 0 in location 1193
 105 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 105 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 16 in location 1196
 105 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 105 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 100
9999 mem: storing 0 in location 1199
 105 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 16
9999 mem: storing 1049 in location 1201
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1201 is 1049
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1202
 105 run: *cursor-contents <- copy c
9999 mem: location 1183 is 100
9999 mem: location 1202 is 1049
9999 mem: storing 100 in location 1049
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1049
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1201 is 1049
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1203
 105 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 105 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1192 is 1014
9999 mem: storing 2 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1152 is 1130
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1130
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1116 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1133
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1133
9999 mem: storing 1133 in location 1152
 104 run: prev <- next_2 prev
9999 mem: location 1153 is 1127
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1127
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1116 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1130
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1130
9999 mem: storing 1130 in location 1153
 104 run: column <- add column, 1
9999 mem: location 1156 is 1
9999 mem: storing 2 in location 1156
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1133
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 3
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 3
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1152 is 1133
9998 run: address to copy is 1133
9998 run: its type is character
9999 mem: location 1133 is 101
9999 mem: storing 101 in location 1163
 104 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 101
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1059
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1060
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1059 is 7
9999 mem: storing 1 in location 1061
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1060 is 101
9999 mem: storing 0 in location 1062
 105 run: jump-unless starting-comment?, 
9999 mem: location 1062 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1063
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1063 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1060 is 101
9999 mem: storing 0 in location 1065
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1065 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1066
 105 run: jump-unless color-is-red?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1059 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 101
9999 mem: storing 0 in location 1164
 104 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 2
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 104 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 101
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1183
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 105 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 105 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 105 run: trace 90, [print-character], c
9999 mem: location 1183 is 101
  90 print-character: 101 
 105 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 101
9999 mem: storing 0 in location 1193
 105 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 105 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 17 in location 1196
 105 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 105 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 101
9999 mem: storing 0 in location 1199
 105 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 17
9999 mem: storing 1051 in location 1201
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1201 is 1051
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1202
 105 run: *cursor-contents <- copy c
9999 mem: location 1183 is 101
9999 mem: location 1202 is 1051
9999 mem: storing 101 in location 1051
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1051
9999 mem: location 1051 is 101
9999 mem: location 1052 is 7
9999 mem: location 1201 is 1051
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1203
 105 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 105 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1192 is 1014
9999 mem: storing 3 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1152 is 1133
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1133
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1116 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1136
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1136
9999 mem: storing 1136 in location 1152
 104 run: prev <- next_2 prev
9999 mem: location 1153 is 1130
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1130
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1116 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1133
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1133
9999 mem: storing 1133 in location 1153
 104 run: column <- add column, 1
9999 mem: location 1156 is 2
9999 mem: storing 3 in location 1156
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1136
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 3
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 3
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1152 is 1136
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 102
9999 mem: storing 102 in location 1163
 104 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 102
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1059
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1060
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1059 is 7
9999 mem: storing 1 in location 1061
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1060 is 102
9999 mem: storing 0 in location 1062
 105 run: jump-unless starting-comment?, 
9999 mem: location 1062 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1063
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1063 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1060 is 102
9999 mem: storing 0 in location 1065
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1065 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1066
 105 run: jump-unless color-is-red?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1059 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 102
9999 mem: storing 0 in location 1164
 104 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 3
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 104 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 102
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1183
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 105 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 105 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 105 run: trace 90, [print-character], c
9999 mem: location 1183 is 102
  90 print-character: 102 
 105 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 102
9999 mem: storing 0 in location 1193
 105 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 105 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 18 in location 1196
 105 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 105 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 102
9999 mem: storing 0 in location 1199
 105 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 18
9999 mem: storing 1053 in location 1201
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1201 is 1053
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1202
 105 run: *cursor-contents <- copy c
9999 mem: location 1183 is 102
9999 mem: location 1202 is 1053
9999 mem: storing 102 in location 1053
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1053
9999 mem: location 1053 is 102
9999 mem: location 1054 is 7
9999 mem: location 1201 is 1053
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1203
 105 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 105 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1192 is 1014
9999 mem: storing 4 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1152 is 1136
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1136 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1136
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1116 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1137
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1137 is 1139
9999 mem: storing 1139 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1139
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1139
9999 mem: storing 1139 in location 1152
 104 run: prev <- next_2 prev
9999 mem: location 1153 is 1133
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1116
 105 run: jump-if in, 1:offset
9999 mem: location 1116 is 1133
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1116 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1116 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1117
 105 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1136
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1136
9999 mem: storing 1136 in location 1153
 104 run: column <- add column, 1
9999 mem: location 1156 is 3
9999 mem: storing 4 in location 1156
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1139
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 3
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 3
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1161
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 1136
9999 mem: location 1152 is 1139
9998 run: address to copy is 1139
9998 run: its type is character
9999 mem: location 1139 is 103
9999 mem: storing 103 in location 1163
 104 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 103
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1059
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1060
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1059 is 7
9999 mem: storing 1 in location 1061
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1060 is 103
9999 mem: storing 0 in location 1062
 105 run: jump-unless starting-comment?, 
9999 mem: location 1062 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1063
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1063 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1061 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1060 is 103
9999 mem: storing 0 in location 1065
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1065 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1059 is 7
9999 mem: storing 0 in location 1066
 105 run: jump-unless color-is-red?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1059 is 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 103
9999 mem: storing 0 in location 1164
 104 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 4
9999 mem: location 1151 is 4
9999 mem: storing 1 in location 1166
 104 run: jump-unless at-right?, 
9999 mem: location 1166 is 1
9998 run: jump-unless fell through
 104 run: wrap-icon:character <- copy 8617/loop-back-to-left
9999 mem: storing 8617 in location 1167
 104 run: print screen, wrap-icon, 245/grey
9999 mem: location 1147 is 1011
9999 mem: location 1167 is 8617
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1183
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1184
9999 mem: storing 1 in location 1185
 105 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 105 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 105 run: trace 90, [print-character], c
9999 mem: location 1183 is 8617
  90 print-character: 8617 
 105 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 105 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 8617
9999 mem: storing 0 in location 1193
 105 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 105 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 19 in location 1196
 105 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 105 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 8617
9999 mem: storing 0 in location 1199
 105 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 19
9999 mem: storing 1055 in location 1201
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1201 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1202
 105 run: *cursor-contents <- copy c
9999 mem: location 1183 is 8617
9999 mem: location 1202 is 1055
9999 mem: storing 8617 in location 1055
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1055
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 7
9999 mem: location 1201 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1203
 105 run: *cursor-color <- copy color
9999 mem: location 1184 is 245
9999 mem: location 1203 is 1056
9999 mem: storing 245 in location 1056
 105 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1204 is 4
9999 mem: storing 1 in location 1205
 105 run: jump-if at-right?, 
9999 mem: location 1205 is 1
9998 run: jumping to instruction 74
 105 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 4
 104 run: column <- copy left
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1156
 104 run: row <- add row, 1
9999 mem: location 1155 is 3
9999 mem: storing 4 in location 1155
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1147 is 1011
9999 mem: location 1155 is 4
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1176
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 105 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 105 run: *row <- copy new-row
9999 mem: location 1176 is 4
9999 mem: location 1178 is 1013
9999 mem: storing 4 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 105 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1147
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1152 is 1139
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 4
9999 mem: location 1150 is 4
9999 mem: storing 1 in location 1160
 104 run: jump-if off-screen?, 
9999 mem: location 1160 is 1
9998 run: jumping to instruction 68
 104 run: bottom-of-screen:address:address:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1002
9999 mem: storing 1002 in location 1168
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1152 is 1139
9999 mem: location 1168 is 1002
9999 mem: storing 1139 in location 1002
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 4
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1161
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1156 is 0
9999 mem: location 1158 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1169
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1161 is 0
9999 mem: location 1169 is 1
9999 mem: storing 0 in location 1170
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1155 is 4
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1171
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1172
 104 run: jump-unless before-cursor?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 81
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1155 is 4
9999 mem: location 1156 is 0
9999 mem: location 1147 is 1011
9999 mem: location 1148 is 1000
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 4
9998 run: result 1 is 0
9998 run: result 2 is 1011
9998 run: result 3 is 1000
9999 mem: storing 1011 in location 1082
9999 mem: storing 1000 in location 1085
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1085 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1085 is 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1090
 103 run: *indent? <- copy 1/true
9999 mem: location 1090 is 1008
9999 mem: storing 1 in location 1008
 103 run: reply result:address:editor-data, screen:address:screen
9999 mem: location 1085 is 1000
9999 mem: location 1082 is 1011
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 2
 102 run: assume-console [
    left-click 3, 3
    press right-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"3": "literal"}
9992 load: after rewriting: left-click 3, 3
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"right-arrow": <>}
9992 load: after rewriting: press right-arrow
 102 run: run [
    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"screen" : <>>>}
9993 parse:   ingredient: {"console": <"address" : <"console" : <>>>}
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>}
9992 load: after rewriting: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"editor-data" : <>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <screen : <>>>
9992 transform: console => <address : <console : <>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data
9999 mem: location 900 is 1011
9999 mem: location 901 is 1215
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: new alloc: 1217
 104 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1219
 104 run: console:address:console <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1220
 104 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1221
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1221 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1221 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1222
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1221 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1221 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1223
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1219 is 1011
9999 mem: location 1222 is 1
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1176
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 105 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 105 run: *row <- copy new-row
9999 mem: location 1176 is 1
9999 mem: location 1178 is 1013
9999 mem: storing 1 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 105 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
9990 schedule: move-cursor/editor-event-loop/run1001/scenario-editor-scrolls-down-on-right-arrow
 105 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1219
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1220 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1232
 105 run: console:address:console <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1234
 105 run: jump-unless console, 
9999 mem: location 1234 is 1215
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1234 is 1215
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1206
9999 mem: location 1234 is 1215
9998 run: address to copy is 1215
9999 mem: storing 1215 in location 1235
 105 run: buf:address:array:event <- get *console, events:offset
9999 mem: location 1234 is 1215
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1206
9999 mem: location 1234 is 1215
9998 run: address to copy is 1216
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1216 is 1206
9999 mem: storing 1206 in location 1236
 105 run: max:number <- length *buf
9999 mem: location 1236 is 1206
9999 mem: storing 2 in location 1237
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1235 is 1215
9999 mem: location 1215 is 0
9999 mem: location 1237 is 2
9999 mem: storing 0 in location 1238
 105 run: jump-unless done?, 
9999 mem: location 1238 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1236 is 1206
9999 mem: location 1235 is 1215
9999 mem: location 1215 is 0
9998 run: address to copy is 1207
9998 run: its type is event
9999 mem: location 1207 is 2
9999 mem: location 1208 is 65513
9999 mem: location 1209 is 3
9999 mem: location 1210 is 3
9999 mem: storing 2 in location 1240
9999 mem: storing 65513 in location 1241
9999 mem: storing 3 in location 1242
9999 mem: storing 3 in location 1243
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1235 is 1215
9999 mem: location 1215 is 0
9999 mem: location 1235 is 1215
9999 mem: storing 1 in location 1215
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1240 is 2
9999 mem: location 1241 is 65513
9999 mem: location 1242 is 3
9999 mem: location 1243 is 3
9999 mem: location 1234 is 1215
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 3]
9998 run: result 1 is 1215
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1224
9999 mem: storing 65513 in location 1225
9999 mem: storing 3 in location 1226
9999 mem: storing 3 in location 1227
9999 mem: storing 1215 in location 1220
9999 mem: storing 1 in location 1228
9999 mem: storing 0 in location 1229
 104 run: jump-unless found?, 
9999 mem: location 1228 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1224 is 2
9999 mem: location 1225 is 65513
9999 mem: location 1226 is 3
9999 mem: location 1227 is 3
9999 mem: storing 1225 in location 1230
 104 run: jump-unless t, 
9999 mem: location 1230 is 1225
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1219 is 1011
9999 mem: location 1221 is 1000
9999 mem: location 1230 is 1225
9999 mem: location 1225 is 65513
9999 mem: location 1226 is 3
9999 mem: location 1227 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1147
 105 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1148
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1149
9999 mem: storing 3 in location 1150
9999 mem: storing 3 in location 1151
 105 run: jump-if editor, 1:offset
9999 mem: location 1148 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1149 is 65513
9999 mem: location 1150 is 3
9999 mem: location 1151 is 3
9998 run: address to copy is 1150
9998 run: its type is number
9999 mem: location 1150 is 3
9999 mem: storing 3 in location 1152
 105 run: jump-if click-row, 1:offset
9999 mem: location 1152 is 3
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1149 is 65513
9999 mem: location 1150 is 3
9999 mem: location 1151 is 3
9998 run: address to copy is 1151
9998 run: its type is number
9999 mem: location 1151 is 3
9999 mem: storing 3 in location 1153
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1154
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1153 is 3
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1155
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1155 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1156
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1153 is 3
9999 mem: location 1156 is 4
9999 mem: storing 0 in location 1157
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1157 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1158
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1159
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1099
9999 mem: storing 1099 in location 1160
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1147 is 1011
9999 mem: location 1148 is 1000
9999 mem: location 1152 is 3
9999 mem: location 1153 is 3
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1245
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1247
 106 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1248
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1249
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1250
 106 run: jump-if editor, 1:offset
9999 mem: location 1248 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1248 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1248 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1251
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1248 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1248 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1252
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1247 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1116
 107 run: jump-unless screen, 
9999 mem: location 1116 is 1011
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1116 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1116 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1117
 107 run: reply height:number
9999 mem: location 1117 is 4
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1253
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1248 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1248 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1099
9999 mem: storing 1099 in location 1254
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1254 is 1099
9999 mem: storing 1099 in location 1255
 106 run: curr <- next_2 curr
9999 mem: location 1254 is 1099
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1099 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1099
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 1111
9999 mem: location 1101 is 0
9999 mem: location 1116 is 1099
9999 type: type deduced to be character$
9998 run: address to copy is 1100
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1100 is 1111
9999 mem: storing 1111 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1111
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1254
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1256
 106 run: column:number <- copy left
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1257
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1248 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1248 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1258
 106 run: *cursor-row <- copy target-row
9999 mem: location 1249 is 3
9999 mem: location 1258 is 1006
9999 mem: storing 3 in location 1006
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1248 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1248 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1259
 106 run: *cursor-column <- copy target-column
9999 mem: location 1250 is 3
9999 mem: location 1259 is 1007
9999 mem: storing 3 in location 1007
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1248 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1099
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1248 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1260
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1111
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 1
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1254 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 1118
9999 mem: location 1113 is 1099
9999 mem: location 1254 is 1111
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 97
9999 mem: storing 97 in location 1264
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1264 is 97
9999 mem: storing 0 in location 1265
 106 run: jump-unless newline?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless at-right?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1254 is 1111
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1111 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1111
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 1118
9999 mem: location 1113 is 1099
9999 mem: location 1116 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1118
9999 mem: storing 1118 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1118
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1118
9999 mem: storing 1118 in location 1254
 106 run: prev <- next_2 prev
9999 mem: location 1255 is 1099
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1099 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1099
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 1111
9999 mem: location 1101 is 0
9999 mem: location 1116 is 1099
9999 type: type deduced to be character$
9998 run: address to copy is 1100
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1100 is 1111
9999 mem: storing 1111 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1111
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1118
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 1
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1254 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1254 is 1118
9998 run: address to copy is 1118
9998 run: its type is character
9999 mem: location 1118 is 10
9999 mem: storing 10 in location 1264
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1264 is 10
9999 mem: storing 1 in location 1265
 106 run: jump-unless newline?, 
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 1
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1256 is 1
9999 mem: storing 2 in location 1256
 106 run: column <- copy left
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1257
 106 run: curr <- next_2 curr
9999 mem: location 1254 is 1118
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1118
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1116 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1121
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1121
9999 mem: storing 1121 in location 1254
 106 run: prev <- next_2 prev
9999 mem: location 1255 is 1111
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1111 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1111
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 1118
9999 mem: location 1113 is 1099
9999 mem: location 1116 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1118
9999 mem: storing 1118 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1118
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1118
9999 mem: storing 1118 in location 1255
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1121
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 2
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1254 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1254 is 1121
9998 run: address to copy is 1121
9998 run: its type is character
9999 mem: location 1121 is 98
9999 mem: storing 98 in location 1264
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1264 is 98
9999 mem: storing 0 in location 1265
 106 run: jump-unless newline?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless at-right?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1254 is 1121
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1121 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1121
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1116 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1124
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1124
9999 mem: storing 1124 in location 1254
 106 run: prev <- next_2 prev
9999 mem: location 1255 is 1118
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1118
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1116 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1121
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1121
9999 mem: storing 1121 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1124
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 2
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1254 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1254 is 1124
9998 run: address to copy is 1124
9998 run: its type is character
9999 mem: location 1124 is 10
9999 mem: storing 10 in location 1264
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1264 is 10
9999 mem: storing 1 in location 1265
 106 run: jump-unless newline?, 
9999 mem: location 1265 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 2
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1256 is 2
9999 mem: storing 3 in location 1256
 106 run: column <- copy left
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1257
 106 run: curr <- next_2 curr
9999 mem: location 1254 is 1124
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1124 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1124
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1116 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1127
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1127
9999 mem: storing 1127 in location 1254
 106 run: prev <- next_2 prev
9999 mem: location 1255 is 1121
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1121 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1121
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1116 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1124
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1124
9999 mem: storing 1124 in location 1255
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1127
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 3
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless at-cursor?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1254 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1254 is 1127
9998 run: address to copy is 1127
9998 run: its type is character
9999 mem: location 1127 is 99
9999 mem: storing 99 in location 1264
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1264 is 99
9999 mem: storing 0 in location 1265
 106 run: jump-unless newline?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1257 is 0
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless at-right?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1254 is 1127
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1127
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1116 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1130
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1130
9999 mem: storing 1130 in location 1254
 106 run: prev <- next_2 prev
9999 mem: location 1255 is 1124
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1124 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1124
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1116 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1127
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1127
9999 mem: storing 1127 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1257 is 0
9999 mem: storing 1 in location 1257
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1130
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 3
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless at-cursor?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1254 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1254 is 1130
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 100
9999 mem: storing 100 in location 1264
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1264 is 100
9999 mem: storing 0 in location 1265
 106 run: jump-unless newline?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1257 is 1
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless at-right?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1254 is 1130
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1130
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1116 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1133
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1133
9999 mem: storing 1133 in location 1254
 106 run: prev <- next_2 prev
9999 mem: location 1255 is 1127
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1127
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1116 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1130
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1130
9999 mem: storing 1130 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1257 is 1
9999 mem: storing 2 in location 1257
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1133
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 3
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless at-cursor?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1254 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1254 is 1133
9998 run: address to copy is 1133
9998 run: its type is character
9999 mem: location 1133 is 101
9999 mem: storing 101 in location 1264
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1264 is 101
9999 mem: storing 0 in location 1265
 106 run: jump-unless newline?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1257 is 2
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless at-right?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1254 is 1133
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1133
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1116 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1136
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1136
9999 mem: storing 1136 in location 1254
 106 run: prev <- next_2 prev
9999 mem: location 1255 is 1130
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1130
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1116 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1133
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1133
9999 mem: storing 1133 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1257 is 2
9999 mem: storing 3 in location 1257
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1136
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 3
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1257 is 3
9999 mem: location 1259 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 1 in location 1263
 106 run: jump-unless at-cursor?, 
9999 mem: location 1263 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1255 is 1133
9999 mem: location 1260 is 1003
9999 mem: storing 1133 in location 1003
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1254 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1254 is 1136
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 102
9999 mem: storing 102 in location 1264
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1264 is 102
9999 mem: storing 0 in location 1265
 106 run: jump-unless newline?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1257 is 3
9999 mem: location 1252 is 4
9999 mem: storing 0 in location 1267
 106 run: jump-unless at-right?, 
9999 mem: location 1267 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1254 is 1136
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1136 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1136
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1116 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1137
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1137 is 1139
9999 mem: storing 1139 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1139
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1139
9999 mem: storing 1139 in location 1254
 106 run: prev <- next_2 prev
9999 mem: location 1255 is 1133
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1133
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1116 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1136
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1136
9999 mem: storing 1136 in location 1255
 106 run: column <- add column, 1
9999 mem: location 1257 is 3
9999 mem: storing 4 in location 1257
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1139
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 3
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 3
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 1 in location 1262
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1257 is 4
9999 mem: location 1259 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1263
 106 run: jump-unless at-cursor?, 
9999 mem: location 1263 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1254 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 1136
9999 mem: location 1254 is 1139
9998 run: address to copy is 1139
9998 run: its type is character
9999 mem: location 1139 is 103
9999 mem: storing 103 in location 1264
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1264 is 103
9999 mem: storing 0 in location 1265
 106 run: jump-unless newline?, 
9999 mem: location 1265 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1257 is 4
9999 mem: location 1252 is 4
9999 mem: storing 1 in location 1267
 106 run: jump-unless at-right?, 
9999 mem: location 1267 is 1
9998 run: jump-unless fell through
 106 run: column <- copy left
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1257
 106 run: row <- add row, 1
9999 mem: location 1256 is 3
9999 mem: storing 4 in location 1256
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1254 is 1139
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1256 is 4
9999 mem: location 1253 is 4
9999 mem: storing 1 in location 1261
 106 run: jump-if off-screen?, 
9999 mem: location 1261 is 1
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1262
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1257 is 0
9999 mem: location 1259 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 1 in location 1268
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1262 is 0
9999 mem: location 1268 is 1
9999 mem: storing 0 in location 1269
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1256 is 4
9999 mem: location 1258 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1270
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1271
 106 run: jump-unless before-cursor?, 
9999 mem: location 1271 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:editor-data
9999 mem: location 1248 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1148
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1161
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 3
9999 mem: storing 3 in location 1162
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1163
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1099
9999 mem: storing 1099 in location 1164
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 44
 105 run: op:address:operation <- new operation:type
9999 mem: storing 1057 in location 1166
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1099
9999 mem: location 1162 is 3
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1099
9999 mem: location 1161 is 0
9999 mem: location 1166 is 1057
9999 mem: location 1166 is 1057
9999 mem: storing 1 in location 1057
9999 mem: storing 1 in location 1058
9999 mem: storing 0 in location 1059
9999 mem: storing 1099 in location 1060
9999 mem: storing 3 in location 1061
9999 mem: storing 3 in location 1062
9999 mem: storing 1099 in location 1063
9999 mem: storing 0 in location 1064
 105 run: editor <- add-operation editor, op
9999 mem: location 1148 is 1000
9999 mem: location 1166 is 1057
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1272
 106 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1274
 106 run: op:address:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1057 in location 1275
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1274 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1274 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1276
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1275 is 1057
9999 mem: location 1276 is 1009
9999 mem: location 1009 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1057 in location 1175
 107 run: in:address:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1176
 107 run: result:address:list:_elem <- new {(list _elem): type}
9999 mem: new alloc: 1278
9999 mem: storing 1278 in location 1177
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1177 is 1278
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1177 is 1278
9998 run: address to copy is 1278
9999 mem: storing 1278 in location 1178
 107 run: *val <- copy x
9999 mem: location 1175 is 1057
9999 mem: location 1178 is 1278
9999 mem: storing 1057 in location 1278
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1177 is 1278
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1278 is 1057
9999 mem: location 1279 is 0
9999 mem: location 1177 is 1278
9999 type: type deduced to be address$
9998 run: address to copy is 1279
9999 mem: storing 1279 in location 1179
 107 run: *next <- copy in
9999 mem: location 1176 is 0
9999 mem: location 1179 is 1279
9999 mem: storing 0 in location 1279
 107 run: reply result
9999 mem: location 1177 is 1278
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1278
9999 mem: location 1276 is 1009
9999 mem: storing 1278 in location 1009
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1274 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1274 is 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1277
 106 run: *redo <- copy 0
9999 mem: location 1277 is 1010
9999 mem: storing 0 in location 1010
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1274 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1148
 105 run: reply 1/true
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1221 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1221 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 3
9999 mem: storing 3 in location 1222
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1221 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1221 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1223
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1219 is 1011
9999 mem: location 1222 is 3
9999 mem: location 1223 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 105 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 105 run: *row <- copy new-row
9999 mem: location 1176 is 3
9999 mem: location 1178 is 1013
9999 mem: storing 3 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 105 run: *column <- copy new-column
9999 mem: location 1177 is 3
9999 mem: location 1179 is 1014
9999 mem: storing 3 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1219
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1220 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:console <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1234
 105 run: jump-unless console, 
9999 mem: location 1234 is 1215
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1234 is 1215
9999 mem: location 1215 is 1
9999 mem: location 1216 is 1206
9999 mem: location 1234 is 1215
9998 run: address to copy is 1215
9999 mem: storing 1215 in location 1235
 105 run: buf:address:array:event <- get *console, events:offset
9999 mem: location 1234 is 1215
9999 mem: location 1215 is 1
9999 mem: location 1216 is 1206
9999 mem: location 1234 is 1215
9998 run: address to copy is 1216
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1216 is 1206
9999 mem: storing 1206 in location 1236
 105 run: max:number <- length *buf
9999 mem: location 1236 is 1206
9999 mem: storing 2 in location 1237
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1235 is 1215
9999 mem: location 1215 is 1
9999 mem: location 1237 is 2
9999 mem: storing 0 in location 1238
 105 run: jump-unless done?, 
9999 mem: location 1238 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1236 is 1206
9999 mem: location 1235 is 1215
9999 mem: location 1215 is 1
9998 run: address to copy is 1211
9998 run: its type is event
9999 mem: location 1211 is 1
9999 mem: location 1212 is 65514
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: storing 1 in location 1240
9999 mem: storing 65514 in location 1241
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1235 is 1215
9999 mem: location 1215 is 1
9999 mem: location 1235 is 1215
9999 mem: storing 2 in location 1215
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1240 is 1
9999 mem: location 1241 is 65514
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: location 1234 is 1215
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1215
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1224
9999 mem: storing 65514 in location 1225
9999 mem: storing 0 in location 1226
9999 mem: storing 0 in location 1227
9999 mem: storing 1215 in location 1220
9999 mem: storing 1 in location 1228
9999 mem: storing 0 in location 1229
 104 run: jump-unless found?, 
9999 mem: location 1228 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1224 is 1
9999 mem: location 1225 is 65514
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: storing 0 in location 1230
 104 run: jump-unless t, 
9999 mem: location 1230 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1230 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1219 is 1011
9999 mem: location 1221 is 1000
9999 mem: location 1224 is 1
9999 mem: location 1225 is 65514
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: new alloc: 1280
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1282
 105 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1283
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1284
9999 mem: storing 65514 in location 1285
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1288
 105 run: jump-if editor, 1:offset
9999 mem: location 1283 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1282 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1116
 106 run: jump-unless screen, 
9999 mem: location 1116 is 1011
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1116 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1116 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1117
 106 run: reply width:number
9999 mem: location 1117 is 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1289
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1282 is 1011
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1116
 106 run: jump-unless screen, 
9999 mem: location 1116 is 1011
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1116 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1116 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1117
 106 run: reply height:number
9999 mem: location 1117 is 4
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1290
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1291
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1292
 105 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1293
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1294
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1295
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1294 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 3 in location 1296
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1295 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1297
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1284 is 1
9999 mem: location 1285 is 65514
9999 mem: location 1286 is 0
9999 mem: location 1287 is 0
9999 mem: storing 0 in location 1298
 105 run: jump-unless c, 
9999 mem: location 1298 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1284 is 1
9999 mem: location 1285 is 65514
9999 mem: location 1286 is 0
9999 mem: location 1287 is 0
9999 mem: storing 1285 in location 1352
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1352 is 1285
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1352 is 1285
9999 mem: location 1285 is 65514
9999 mem: storing 0 in location 1315
 105 run: jump-unless page-up?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1352 is 1285
9999 mem: location 1285 is 65514
9999 mem: storing 0 in location 1331
 105 run: jump-unless page-down?, 
9999 mem: location 1331 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1352 is 1285
9999 mem: location 1285 is 65514
9999 mem: storing 0 in location 1338
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1338 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1352 is 1285
9999 mem: location 1285 is 65514
9999 mem: storing 0 in location 1339
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1339 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1352 is 1285
9999 mem: location 1285 is 65514
9999 mem: storing 0 in location 1353
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1353 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1352 is 1285
9999 mem: location 1285 is 65514
9999 mem: storing 0 in location 1354
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1354 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1352 is 1285
9999 mem: location 1285 is 65514
9999 mem: storing 0 in location 1355
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1355 is 0
9998 run: jumping to instruction 716
 105 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1352 is 1285
9999 mem: location 1285 is 65514
9999 mem: storing 1 in location 1357
 105 run: jump-unless move-to-next-character?, 
9999 mem: location 1357 is 1
9998 run: jump-unless fell through
 105 run: next-cursor:address:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1293 is 1003
9999 mem: location 1003 is 1133
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1116
9990 schedule: next_2/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-scrolls-down-on-right-arrow
 106 run: jump-if in, 1:offset
9999 mem: location 1116 is 1133
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1116 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1116 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1117
 106 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1136
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1136
9999 mem: storing 1136 in location 1358
 105 run: jump-unless next-cursor, 
9999 mem: location 1358 is 1136
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 3
9999 mem: storing 3 in location 1318
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1319
 105 run: before-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1133
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1099
9999 mem: storing 1099 in location 1320
 105 run: *before-cursor <- copy next-cursor
9999 mem: location 1358 is 1136
9999 mem: location 1293 is 1003
9999 mem: storing 1136 in location 1003
 105 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1283 is 1000
9999 mem: location 1290 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 21
9999 mem: new alloc: 1366
 106 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1368
 106 run: screen-height:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1369
 106 run: before-cursor:address:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1368 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1368 is 1000
9998 run: address to copy is 1003
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1003 is 1136
9999 mem: storing 1136 in location 1370
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1368 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1368 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1371
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1368 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1368 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1372
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1368 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1368 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1373
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1368 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 3
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1368 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1374
 106 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1370 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1370 is 1136
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 102
9999 mem: storing 102 in location 1375
 106 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1375 is 102
9999 mem: storing 0 in location 1376
 106 run: jump-unless was-at-newline?, 
9999 mem: location 1376 is 0
9998 run: jumping to instruction 33
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1374 is 4
9999 mem: storing 3 in location 1383
 106 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1372 is 1007
9999 mem: location 1007 is 3
9999 mem: location 1383 is 3
9999 mem: storing 1 in location 1384
 106 run: jump-unless at-wrap?, 
9999 mem: location 1384 is 1
9998 run: jump-unless fell through
 106 run: next:address:duplex-list:character <- next_2 before-cursor
9999 mem: location 1370 is 1136
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1136 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1136
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1116 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1137
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1137 is 1139
9999 mem: storing 1139 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1139
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1139
9999 mem: storing 1139 in location 1385
 106 run: jump-unless next, 
9999 mem: location 1385 is 1139
9998 run: jump-unless fell through
 106 run: next-character:character <- get *next, value:offset
9999 mem: location 1385 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 1136
9999 mem: location 1385 is 1139
9998 run: address to copy is 1139
9998 run: its type is character
9999 mem: location 1139 is 103
9999 mem: storing 103 in location 1386
 106 run: newline?:boolean <- equal next-character, 10/newline
9999 mem: location 1386 is 103
9999 mem: storing 0 in location 1387
 106 run: jump-if newline?, 
9999 mem: location 1387 is 0
9998 run: jump-if fell through
 106 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1371 is 1006
9999 mem: location 1006 is 3
9999 mem: location 1371 is 1006
9999 mem: storing 4 in location 1006
 106 run: *cursor-column <- copy left
9999 mem: location 1373 is 0
9999 mem: location 1372 is 1007
9999 mem: storing 0 in location 1007
 106 run: below-screen?:boolean <- greater-or-equal *cursor-row, screen-height
9999 mem: location 1371 is 1006
9999 mem: location 1006 is 4
9999 mem: location 1369 is 4
9999 mem: storing 1 in location 1377
 106 run: jump-if below-screen?, 1:offset
9999 mem: location 1377 is 1
9998 run: jumping to instruction 48
 106 run: trace 10, [app], [scroll down]
  10 app: scroll down 
 106 run: top-of-screen:address:address:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1368 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 4
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1368 is 1000
9998 run: address to copy is 1001
9999 mem: storing 1001 in location 1379
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1368 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 4
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1368 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1373
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1368 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1099
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 4
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1368 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1374
 106 run: max:number <- subtract right, left
9999 mem: location 1374 is 4
9999 mem: location 1373 is 0
9999 mem: storing 4 in location 1380
 106 run: old-top:address:duplex-list:character <- copy *top-of-screen
9999 mem: location 1379 is 1001
9999 mem: location 1001 is 1099
9999 mem: storing 1099 in location 1381
 106 run: *top-of-screen <- before-start-of-next-line *top-of-screen, max
9999 mem: location 1379 is 1001
9999 mem: location 1001 is 1099
9999 mem: location 1380 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
 107 run: original:address:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1099 in location 1104
 107 run: max:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1105
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1106
 107 run: curr:address:duplex-list:character <- copy original
9999 mem: location 1104 is 1099
9999 mem: storing 1099 in location 1107
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1107 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 1111
9999 mem: location 1101 is 0
9999 mem: location 1107 is 1099
9998 run: address to copy is 1099
9998 run: its type is character
9999 mem: location 1099 is 167
9999 mem: storing 167 in location 1108
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1108 is 167
9999 mem: storing 0 in location 1109
 107 run: jump-unless at-newline?, 
9999 mem: location 1109 is 0
9998 run: jumping to instruction 11
 107 run: jump-if curr, 1:offset
9999 mem: location 1107 is 1099
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1106 is 0
9999 mem: location 1105 is 4
9999 mem: storing 0 in location 1110
 107 run: jump-if done?, 
9999 mem: location 1110 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1107 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 1111
9999 mem: location 1101 is 0
9999 mem: location 1107 is 1099
9998 run: address to copy is 1099
9998 run: its type is character
9999 mem: location 1099 is 167
9999 mem: storing 167 in location 1108
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1108 is 167
9999 mem: storing 0 in location 1109
 107 run: jump-if at-newline?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1107 is 1099
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1099 in location 1116
 108 run: jump-if in, 1:offset
9999 mem: location 1116 is 1099
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1116 is 1099
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1099 is 167
9999 mem: location 1100 is 1111
9999 mem: location 1101 is 0
9999 mem: location 1116 is 1099
9999 type: type deduced to be character$
9998 run: address to copy is 1100
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1100 is 1111
9999 mem: storing 1111 in location 1117
 108 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1111
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1111
9999 mem: storing 1111 in location 1107
 107 run: count <- add count, 1
9999 mem: location 1106 is 0
9999 mem: storing 1 in location 1106
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1107 is 1111
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1106 is 1
9999 mem: location 1105 is 4
9999 mem: storing 0 in location 1110
 107 run: jump-if done?, 
9999 mem: location 1110 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1107 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 1118
9999 mem: location 1113 is 1099
9999 mem: location 1107 is 1111
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 97
9999 mem: storing 97 in location 1108
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1108 is 97
9999 mem: storing 0 in location 1109
 107 run: jump-if at-newline?, 
9999 mem: location 1109 is 0
9998 run: jump-if fell through
 107 run: curr <- next_2 curr
9999 mem: location 1107 is 1111
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1111 in location 1116
 108 run: jump-if in, 1:offset
9999 mem: location 1116 is 1111
9998 run: jumping to instruction 4
 108 run: result <- get *in, next:offset
9999 mem: location 1116 is 1111
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1111 is 97
9999 mem: location 1112 is 1118
9999 mem: location 1113 is 1099
9999 mem: location 1116 is 1111
9999 type: type deduced to be character$
9998 run: address to copy is 1112
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1112 is 1118
9999 mem: storing 1118 in location 1117
 108 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1118
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1118
9999 mem: storing 1118 in location 1107
 107 run: count <- add count, 1
9999 mem: location 1106 is 1
9999 mem: storing 2 in location 1106
 107 run: jump 
9998 run: jumping to instruction 13
 107 run: jump-if curr, 1:offset
9999 mem: location 1107 is 1118
9998 run: jumping to instruction 15
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1106 is 2
9999 mem: location 1105 is 4
9999 mem: storing 0 in location 1110
 107 run: jump-if done?, 
9999 mem: location 1110 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1107 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1107 is 1118
9998 run: address to copy is 1118
9998 run: its type is character
9999 mem: location 1118 is 10
9999 mem: storing 10 in location 1108
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1108 is 10
9999 mem: storing 1 in location 1109
 107 run: jump-if at-newline?, 
9999 mem: location 1109 is 1
9998 run: jumping to instruction 23
 107 run: jump-if curr, 1:offset
9999 mem: location 1107 is 1118
9998 run: jumping to instruction 26
 107 run: reply curr
9999 mem: location 1107 is 1118
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1118
9999 mem: location 1379 is 1001
9999 mem: storing 1118 in location 1001
 106 run: no-movement?:boolean <- equal old-top, *top-of-screen
9999 mem: location 1381 is 1099
9999 mem: location 1379 is 1001
9999 mem: location 1001 is 1118
9999 mem: storing 0 in location 1382
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1378
 106 run: jump-unless no-movement?, 1:offset
9999 mem: location 1382 is 0
9998 run: jumping to instruction 60
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1371 is 1006
9999 mem: location 1006 is 4
9999 mem: location 1371 is 1006
9999 mem: storing 3 in location 1006
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1378
 106 run: reply editor:address:editor-data, go-render?:boolean
9999 mem: location 1368 is 1000
9999 mem: location 1378 is 1
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1
9999 mem: storing 1000 in location 1283
9999 mem: storing 1 in location 1288
 105 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1282 is 1011
9999 mem: location 1294 is 1006
9999 mem: location 1006 is 3
9999 mem: location 1295 is 1007
9999 mem: location 1007 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 106 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 106 run: *row <- copy new-row
9999 mem: location 1176 is 3
9999 mem: location 1178 is 1013
9999 mem: storing 3 in location 1013
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 106 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 106 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1282
 105 run: undo-coalesce-tag:number <- copy 2/right-arrow
9999 mem: storing 2 in location 1321
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 3
9999 mem: storing 3 in location 1322
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1323
 105 run: after-top-of-screen:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1118
9999 mem: storing 1118 in location 1324
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1321 is 2
9998 run: jump-unless fell through
 105 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1283 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1283 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1302
 105 run: jump-unless *undo, 
9999 mem: location 1302 is 1009
9999 mem: location 1009 is 1278
9998 run: jump-unless fell through
 105 run: op:address:operation <- first_3 *undo
9999 mem: location 1302 is 1009
9999 mem: location 1009 is 1278
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1278 in location 1116
 106 run: result <- get *in, value:offset
9999 mem: location 1116 is 1278
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1278 is 1057
9999 mem: location 1279 is 0
9999 mem: location 1116 is 1278
9998 run: address to copy is 1278
9998 run: its type is <address : <operation : <>>>
9999 mem: location 1278 is 1057
9999 mem: storing 1057 in location 1117
 106 run: reply result:_elem
9999 mem: location 1117 is 1057
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1057
9999 mem: storing 1057 in location 1301
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1301 is 1057
9999 mem: location 1057 is 1
9999 mem: location 1058 is 1
9999 mem: location 1059 is 0
9999 mem: location 1060 is 1099
9999 mem: location 1061 is 3
9999 mem: location 1062 is 3
9999 mem: location 1063 is 1099
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1301 is 1057
9999 mem: storing 1058 in location 1307
 105 run: jump-unless move, 
9999 mem: location 1307 is 1058
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1307 is 1058
9999 mem: location 1058 is 1
9999 mem: location 1059 is 0
9999 mem: location 1060 is 1099
9999 mem: location 1061 is 3
9999 mem: location 1062 is 3
9999 mem: location 1063 is 1099
9999 mem: location 1064 is 0
9999 mem: location 1307 is 1058
9998 run: address to copy is 1064
9998 run: its type is number
9999 mem: location 1064 is 0
9999 mem: storing 0 in location 1325
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1321 is 2
9999 mem: location 1325 is 0
9999 mem: storing 0 in location 1326
 105 run: jump-unless coalesce?, 
9999 mem: location 1326 is 0
9998 run: jumping to instruction 750
 105 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1388
9999 mem: storing 1388 in location 1301
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1318 is 3
9999 mem: location 1319 is 3
9999 mem: location 1320 is 1099
9999 mem: location 1322 is 3
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1118
9999 mem: location 1321 is 2
9999 mem: location 1301 is 1388
9999 mem: location 1301 is 1388
9999 mem: storing 1 in location 1388
9999 mem: storing 3 in location 1389
9999 mem: storing 3 in location 1390
9999 mem: storing 1099 in location 1391
9999 mem: storing 3 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 1118 in location 1394
9999 mem: storing 2 in location 1395
 105 run: editor <- add-operation editor, op
9999 mem: location 1283 is 1000
9999 mem: location 1301 is 1388
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
 106 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1274
 106 run: op:address:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1388 in location 1275
 106 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1274 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1278
9999 mem: location 1010 is 0
9999 mem: location 1274 is 1000
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1276
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1275 is 1388
9999 mem: location 1276 is 1009
9999 mem: location 1009 is 1278
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1388 in location 1175
 107 run: in:address:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1278 in location 1176
 107 run: result:address:list:_elem <- new {(list _elem): type}
9999 mem: new alloc: 1399
9999 mem: storing 1399 in location 1177
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1177 is 1399
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: location 1177 is 1399
9998 run: address to copy is 1399
9999 mem: storing 1399 in location 1178
 107 run: *val <- copy x
9999 mem: location 1175 is 1388
9999 mem: location 1178 is 1399
9999 mem: storing 1388 in location 1399
 107 run: next:address:address:list:_elem <- get-address *result, next:offset
9999 mem: location 1177 is 1399
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1399 is 1388
9999 mem: location 1400 is 0
9999 mem: location 1177 is 1399
9999 type: type deduced to be address$
9998 run: address to copy is 1400
9999 mem: storing 1400 in location 1179
 107 run: *next <- copy in
9999 mem: location 1176 is 1278
9999 mem: location 1179 is 1400
9999 mem: storing 1278 in location 1400
 107 run: reply result
9999 mem: location 1177 is 1399
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1399
9999 mem: location 1276 is 1009
9999 mem: storing 1399 in location 1009
 106 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1274 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1274 is 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1277
 106 run: *redo <- copy 0
9999 mem: location 1277 is 1010
9999 mem: storing 0 in location 1010
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1274 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1283
 105 run: reply screen:address:screen, editor:address:editor-data, go-render?:boolean
9999 mem: location 1282 is 1011
9999 mem: location 1283 is 1000
9999 mem: location 1288 is 1
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9998 run: result 1 is 1000
9998 run: result 2 is 1
9999 mem: storing 1011 in location 1219
9999 mem: storing 1000 in location 1221
9999 mem: storing 1 in location 1231
 104 run: jump-unless go-render?, 
9999 mem: location 1231 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1219 is 1011
9999 mem: location 1221 is 1000
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1093
 105 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1094
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1094 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1094 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1095
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1094 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1094 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1096
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1093 is 1011
9999 mem: location 1094 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1147
 106 run: editor:address:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1148
 106 run: jump-if editor, 1:offset
9999 mem: location 1148 is 1000
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1004
9998 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1149
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1147 is 1011
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1116
 107 run: jump-unless screen, 
9999 mem: location 1116 is 1011
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1116 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1116 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1117
 107 run: reply height:number
9999 mem: location 1117 is 4
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1150
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1151
 106 run: curr:address:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1001 is 1118
9999 mem: storing 1118 in location 1152
 106 run: prev:address:duplex-list:character <- copy curr
9999 mem: location 1152 is 1118
9999 mem: storing 1118 in location 1153
 106 run: curr <- next_2 curr
9999 mem: location 1152 is 1118
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1118
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1116 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1121
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1121
9999 mem: storing 1121 in location 1152
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1154
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1155
 106 run: column:number <- copy left
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1156
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1157
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1158
 106 run: before-cursor:address:address:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1003
9999 mem: storing 1003 in location 1159
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1147 is 1011
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1176
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 107 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 107 run: *row <- copy new-row
9999 mem: location 1176 is 1
9999 mem: location 1178 is 1013
9999 mem: storing 1 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 107 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1147
 106 run: jump-unless curr, 
9999 mem: location 1152 is 1121
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 1
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 106 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 1
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1152 is 1121
9998 run: address to copy is 1121
9998 run: its type is character
9999 mem: location 1121 is 98
9999 mem: storing 98 in location 1163
 106 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1401
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1403
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1404
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1403 is 7
9999 mem: storing 1 in location 1405
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1404 is 98
9999 mem: storing 0 in location 1406
 107 run: jump-unless starting-comment?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1407
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1404 is 98
9999 mem: storing 0 in location 1409
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1410
 107 run: jump-unless color-is-red?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1403 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 98
9999 mem: storing 0 in location 1164
 106 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 0
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 106 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 98
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 98
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 5 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 98
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 5
9999 mem: storing 1027 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1027
9999 mem: location 1027 is 97
9999 mem: location 1028 is 7
9999 mem: location 1201 is 1027
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 98
9999 mem: location 1202 is 1027
9999 mem: storing 98 in location 1027
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1027
9999 mem: location 1027 is 98
9999 mem: location 1028 is 7
9999 mem: location 1201 is 1027
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1028
9999 mem: storing 7 in location 1028
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1192 is 1014
9999 mem: storing 1 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1152 is 1121
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1121 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1121
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1116 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1124
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1124
9999 mem: storing 1124 in location 1152
 106 run: prev <- next_2 prev
9999 mem: location 1153 is 1118
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1118
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1118 is 10
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1111
9999 mem: location 1116 is 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1119
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1121
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1121
9999 mem: storing 1121 in location 1153
 106 run: column <- add column, 1
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1156
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1152 is 1124
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 1
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 106 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 1
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1152 is 1124
9998 run: address to copy is 1124
9998 run: its type is character
9999 mem: location 1124 is 10
9999 mem: storing 10 in location 1163
 106 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1403
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1404
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1403 is 7
9999 mem: storing 1 in location 1405
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1404 is 10
9999 mem: storing 0 in location 1406
 107 run: jump-unless starting-comment?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1407
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1404 is 10
9999 mem: storing 0 in location 1409
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1410
 107 run: jump-unless color-is-red?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1403 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 10
9999 mem: storing 1 in location 1164
 106 run: jump-unless newline?, 
9999 mem: location 1164 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 1
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1147 is 1011
9999 mem: location 1156 is 1
9999 mem: location 1151 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1176
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1177
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1178
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 1
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 107 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 108 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 108 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 108 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 108 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 108 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 6 in location 1196
 108 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 108 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 108 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 6
9999 mem: storing 1029 in location 1201
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1201 is 1029
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1202
 108 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1029
9999 mem: storing 32 in location 1029
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1201 is 1029
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1203
 108 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1030
9999 mem: storing 7 in location 1030
 108 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 108 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1192 is 1014
9999 mem: storing 2 in location 1014
 108 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 107 run: column <- add column, 1
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 2
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 107 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 108 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 108 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 108 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 108 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 108 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 7 in location 1196
 108 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 108 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 108 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 7
9999 mem: storing 1031 in location 1201
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1201 is 1031
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1202
 108 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1031
9999 mem: storing 32 in location 1031
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1201 is 1031
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1203
 108 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1032
9999 mem: storing 7 in location 1032
 108 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 108 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1192 is 1014
9999 mem: storing 3 in location 1014
 108 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 107 run: column <- add column, 1
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 3
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 107 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 108 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 108 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 108 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-on-right-arrow
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 108 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 108 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 8 in location 1196
 108 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 108 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 108 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 8
9999 mem: storing 1033 in location 1201
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1201 is 1033
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1202
 108 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1033
9999 mem: storing 32 in location 1033
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1201 is 1033
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1203
 108 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1034
9999 mem: storing 7 in location 1034
 108 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 108 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1192 is 1014
9999 mem: storing 4 in location 1014
 108 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 107 run: column <- add column, 1
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 4
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 107 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 108 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 108 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 108 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 108 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 1
9999 mem: location 1188 is 5
9999 mem: storing 5 in location 1196
 108 run: index <- add index, *column
9999 mem: location 1196 is 5
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 9 in location 1196
 108 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 108 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 108 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 9
9999 mem: storing 1035 in location 1201
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1201 is 1035
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1202
 108 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1035
9999 mem: storing 32 in location 1035
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1035
9999 mem: location 1035 is 32
9999 mem: location 1036 is 7
9999 mem: location 1201 is 1035
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1203
 108 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1036
9999 mem: storing 7 in location 1036
 108 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1204 is 4
9999 mem: storing 1 in location 1205
 108 run: jump-if at-right?, 
9999 mem: location 1205 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 107 run: column <- add column, 1
9999 mem: location 1176 is 4
9999 mem: storing 5 in location 1176
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 5
9999 mem: location 1177 is 4
9999 mem: storing 1 in location 1179
 107 run: jump-if done?, 
9999 mem: location 1179 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1155 is 1
9999 mem: storing 2 in location 1155
 106 run: column <- copy left
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1156
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1147 is 1011
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1176
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 107 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 107 run: *row <- copy new-row
9999 mem: location 1176 is 2
9999 mem: location 1178 is 1013
9999 mem: storing 2 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 107 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1147
 106 run: curr <- next_2 curr
9999 mem: location 1152 is 1124
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1124 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1124
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1116 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1127
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1127
9999 mem: storing 1127 in location 1152
 106 run: prev <- next_2 prev
9999 mem: location 1153 is 1121
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1121 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1121
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1121
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1121 is 98
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1116 is 1121
9999 type: type deduced to be character$
9998 run: address to copy is 1122
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1124
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1124
9999 mem: storing 1124 in location 1153
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1152 is 1127
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 2
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 106 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 2
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1152 is 1127
9998 run: address to copy is 1127
9998 run: its type is character
9999 mem: location 1127 is 99
9999 mem: storing 99 in location 1163
 106 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1403
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1404
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1403 is 7
9999 mem: storing 1 in location 1405
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1404 is 99
9999 mem: storing 0 in location 1406
 107 run: jump-unless starting-comment?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1407
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1404 is 99
9999 mem: storing 0 in location 1409
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1410
 107 run: jump-unless color-is-red?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1403 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 99
9999 mem: storing 0 in location 1164
 106 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 0
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 106 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 99
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 99
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 10 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 99
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 10
9999 mem: storing 1037 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1037
9999 mem: location 1037 is 98
9999 mem: location 1038 is 7
9999 mem: location 1201 is 1037
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 99
9999 mem: location 1202 is 1037
9999 mem: storing 99 in location 1037
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1037
9999 mem: location 1037 is 99
9999 mem: location 1038 is 7
9999 mem: location 1201 is 1037
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1038
9999 mem: storing 7 in location 1038
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1192 is 1014
9999 mem: storing 1 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1152 is 1127
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1127
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1116 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1130
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1130
9999 mem: storing 1130 in location 1152
 106 run: prev <- next_2 prev
9999 mem: location 1153 is 1124
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1124 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1124
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1124
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1124 is 10
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1116 is 1124
9999 type: type deduced to be character$
9998 run: address to copy is 1125
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1127
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1127
9999 mem: storing 1127 in location 1153
 106 run: column <- add column, 1
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1156
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1152 is 1130
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 2
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 106 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 2
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1152 is 1130
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 100
9999 mem: storing 100 in location 1163
 106 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1403
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1404
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1403 is 7
9999 mem: storing 1 in location 1405
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1404 is 100
9999 mem: storing 0 in location 1406
 107 run: jump-unless starting-comment?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1407
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1404 is 100
9999 mem: storing 0 in location 1409
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1410
 107 run: jump-unless color-is-red?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1403 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 100
9999 mem: storing 0 in location 1164
 106 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 1
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 106 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 100
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 100
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 11 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 100
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 11
9999 mem: storing 1039 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1201 is 1039
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 100
9999 mem: location 1202 is 1039
9999 mem: storing 100 in location 1039
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1039
9999 mem: location 1039 is 100
9999 mem: location 1040 is 7
9999 mem: location 1201 is 1039
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1040
9999 mem: storing 7 in location 1040
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1192 is 1014
9999 mem: storing 2 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1152 is 1130
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1130
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1116 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1133
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1133
9999 mem: storing 1133 in location 1152
 106 run: prev <- next_2 prev
9999 mem: location 1153 is 1127
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1127 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1127
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1127
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1127 is 99
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1116 is 1127
9999 type: type deduced to be character$
9998 run: address to copy is 1128
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1130
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1130
9999 mem: storing 1130 in location 1153
 106 run: column <- add column, 1
9999 mem: location 1156 is 1
9999 mem: storing 2 in location 1156
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1152 is 1133
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 2
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 106 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 2
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1152 is 1133
9998 run: address to copy is 1133
9998 run: its type is character
9999 mem: location 1133 is 101
9999 mem: storing 101 in location 1163
 106 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1403
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1404
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1403 is 7
9999 mem: storing 1 in location 1405
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1404 is 101
9999 mem: storing 0 in location 1406
 107 run: jump-unless starting-comment?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1407
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1404 is 101
9999 mem: storing 0 in location 1409
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1410
 107 run: jump-unless color-is-red?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1403 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 101
9999 mem: storing 0 in location 1164
 106 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 2
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 106 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 101
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 101
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 12 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 101
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 12
9999 mem: storing 1041 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1201 is 1041
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 101
9999 mem: location 1202 is 1041
9999 mem: storing 101 in location 1041
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1041
9999 mem: location 1041 is 101
9999 mem: location 1042 is 7
9999 mem: location 1201 is 1041
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1042
9999 mem: storing 7 in location 1042
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1192 is 1014
9999 mem: storing 3 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1152 is 1133
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1133
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1116 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1136
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1136
9999 mem: storing 1136 in location 1152
 106 run: prev <- next_2 prev
9999 mem: location 1153 is 1130
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1130
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1130
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1116 is 1130
9999 type: type deduced to be character$
9998 run: address to copy is 1131
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1133
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1133
9999 mem: storing 1133 in location 1153
 106 run: column <- add column, 1
9999 mem: location 1156 is 2
9999 mem: storing 3 in location 1156
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1152 is 1136
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 2
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 106 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 2
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1152 is 1136
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 102
9999 mem: storing 102 in location 1163
 106 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1403
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1404
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1403 is 7
9999 mem: storing 1 in location 1405
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1404 is 102
9999 mem: storing 0 in location 1406
 107 run: jump-unless starting-comment?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1407
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1404 is 102
9999 mem: storing 0 in location 1409
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1410
 107 run: jump-unless color-is-red?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1403 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 102
9999 mem: storing 0 in location 1164
 106 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 3
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 106 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 102
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
9990 schedule: print/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-on-right-arrow
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 102
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 13 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 102
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 13
9999 mem: storing 1043 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1201 is 1043
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 102
9999 mem: location 1202 is 1043
9999 mem: storing 102 in location 1043
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1043
9999 mem: location 1043 is 102
9999 mem: location 1044 is 7
9999 mem: location 1201 is 1043
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1044
9999 mem: storing 7 in location 1044
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1192 is 1014
9999 mem: storing 4 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1152 is 1136
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1136 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1136
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1116 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1137
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1137 is 1139
9999 mem: storing 1139 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1139
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1139
9999 mem: storing 1139 in location 1152
 106 run: prev <- next_2 prev
9999 mem: location 1153 is 1133
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1133 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1133
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1133
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 101
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1116 is 1133
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1136
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1136
9999 mem: storing 1136 in location 1153
 106 run: column <- add column, 1
9999 mem: location 1156 is 3
9999 mem: storing 4 in location 1156
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1152 is 1139
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 2
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 106 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 2
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 1136
9999 mem: location 1152 is 1139
9998 run: address to copy is 1139
9998 run: its type is character
9999 mem: location 1139 is 103
9999 mem: storing 103 in location 1163
 106 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 103
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1403
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1404
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1403 is 7
9999 mem: storing 1 in location 1405
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1404 is 103
9999 mem: storing 0 in location 1406
 107 run: jump-unless starting-comment?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1407
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1404 is 103
9999 mem: storing 0 in location 1409
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1410
 107 run: jump-unless color-is-red?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1403 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 103
9999 mem: storing 0 in location 1164
 106 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 4
9999 mem: location 1151 is 4
9999 mem: storing 1 in location 1166
 106 run: jump-unless at-right?, 
9999 mem: location 1166 is 1
9998 run: jump-unless fell through
 106 run: wrap-icon:character <- copy 8617/loop-back-to-left
9999 mem: storing 8617 in location 1167
 106 run: print screen, wrap-icon, 245/grey
9999 mem: location 1147 is 1011
9999 mem: location 1167 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 8617
  90 print-character: 8617 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 8617
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 2
9999 mem: location 1188 is 5
9999 mem: storing 10 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 10
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 14 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 8617
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 14
9999 mem: storing 1045 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1045
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1201 is 1045
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 8617
9999 mem: location 1202 is 1045
9999 mem: storing 8617 in location 1045
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1045
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 7
9999 mem: location 1201 is 1045
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 245
9999 mem: location 1203 is 1046
9999 mem: storing 245 in location 1046
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1204 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: column <- copy left
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1156
 106 run: row <- add row, 1
9999 mem: location 1155 is 2
9999 mem: storing 3 in location 1155
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1147 is 1011
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 107 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 2
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 107 run: *row <- copy new-row
9999 mem: location 1176 is 3
9999 mem: location 1178 is 1013
9999 mem: storing 3 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 107 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1147
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1152 is 1139
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 3
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 106 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 3
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 1 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1156 is 0
9999 mem: location 1158 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1162
 106 run: jump-unless at-cursor?, 
9999 mem: location 1162 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1153 is 1136
9999 mem: location 1159 is 1003
9999 mem: storing 1136 in location 1003
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 1136
9999 mem: location 1152 is 1139
9998 run: address to copy is 1139
9998 run: its type is character
9999 mem: location 1139 is 103
9999 mem: storing 103 in location 1163
 106 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 103
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1403
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1404
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1403 is 7
9999 mem: storing 1 in location 1405
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1404 is 103
9999 mem: storing 0 in location 1406
 107 run: jump-unless starting-comment?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1407
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1404 is 103
9999 mem: storing 0 in location 1409
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1410
 107 run: jump-unless color-is-red?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1403 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 103
9999 mem: storing 0 in location 1164
 106 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 0
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 106 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 103
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 103
  90 print-character: 103 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 103
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: storing 15 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 103
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 15
9999 mem: storing 1047 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1047
9999 mem: location 1047 is 99
9999 mem: location 1048 is 7
9999 mem: location 1201 is 1047
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 103
9999 mem: location 1202 is 1047
9999 mem: storing 103 in location 1047
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1047
9999 mem: location 1047 is 103
9999 mem: location 1048 is 7
9999 mem: location 1201 is 1047
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1048
9999 mem: storing 7 in location 1048
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 0
9999 mem: location 1192 is 1014
9999 mem: storing 1 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1152 is 1139
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1139
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 1136
9999 mem: location 1116 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1140 is 1142
9999 mem: storing 1142 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1142
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1142
9999 mem: storing 1142 in location 1152
 106 run: prev <- next_2 prev
9999 mem: location 1153 is 1136
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1136 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1136
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1136
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1136 is 102
9999 mem: location 1137 is 1139
9999 mem: location 1138 is 1133
9999 mem: location 1116 is 1136
9999 type: type deduced to be character$
9998 run: address to copy is 1137
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1137 is 1139
9999 mem: storing 1139 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1139
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1139
9999 mem: storing 1139 in location 1153
 106 run: column <- add column, 1
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1156
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1152 is 1142
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1155 is 3
9999 mem: location 1150 is 4
9999 mem: storing 0 in location 1160
 106 run: jump-if off-screen?, 
9999 mem: location 1160 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 3
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 1 in location 1161
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1161 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1156 is 1
9999 mem: location 1158 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1162
 106 run: jump-unless at-cursor?, 
9999 mem: location 1162 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 104
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1139
9999 mem: location 1152 is 1142
9998 run: address to copy is 1142
9998 run: its type is character
9999 mem: location 1142 is 104
9999 mem: storing 104 in location 1163
 106 run: color <- get-color color, c
9999 mem: location 1154 is 7
9999 mem: location 1163 is 104
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1403
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1404
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1403 is 7
9999 mem: storing 1 in location 1405
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1404 is 104
9999 mem: storing 0 in location 1406
 107 run: jump-unless starting-comment?, 
9999 mem: location 1406 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1407
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1405 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1404 is 104
9999 mem: storing 0 in location 1409
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1409 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1403 is 7
9999 mem: storing 0 in location 1410
 107 run: jump-unless color-is-red?, 
9999 mem: location 1410 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1403 is 7
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1154
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1163 is 104
9999 mem: storing 0 in location 1164
 106 run: jump-unless newline?, 
9999 mem: location 1164 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1156 is 1
9999 mem: location 1151 is 4
9999 mem: storing 0 in location 1166
 106 run: jump-unless at-right?, 
9999 mem: location 1166 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1147 is 1011
9999 mem: location 1163 is 104
9999 mem: location 1154 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 104
  90 print-character: 104 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 104
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: storing 16 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 1
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 104
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 16
9999 mem: storing 1049 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1049
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1201 is 1049
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 104
9999 mem: location 1202 is 1049
9999 mem: storing 104 in location 1049
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1049
9999 mem: location 1049 is 104
9999 mem: location 1050 is 7
9999 mem: location 1201 is 1049
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1050
9999 mem: storing 7 in location 1050
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 1
9999 mem: location 1192 is 1014
9999 mem: storing 2 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1152 is 1142
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1142 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1142
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1142
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 104
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1139
9999 mem: location 1116 is 1142
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 0
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1152
 106 run: prev <- next_2 prev
9999 mem: location 1153 is 1139
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1116
 107 run: jump-if in, 1:offset
9999 mem: location 1116 is 1139
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1116 is 1139
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1139 is 103
9999 mem: location 1140 is 1142
9999 mem: location 1141 is 1136
9999 mem: location 1116 is 1139
9999 type: type deduced to be character$
9998 run: address to copy is 1140
9998 run: its type is <address : <duplex-list : <character : <>>>>
9999 mem: location 1140 is 1142
9999 mem: storing 1142 in location 1117
 107 run: reply result:address:duplex-list:_elem/contained-in:in
9999 mem: location 1117 is 1142
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1142
9999 mem: storing 1142 in location 1153
 106 run: column <- add column, 1
9999 mem: location 1156 is 1
9999 mem: storing 2 in location 1156
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1152 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1148 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 1139
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1148 is 1000
9998 run: address to copy is 1002
9999 mem: storing 1002 in location 1168
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1152 is 0
9999 mem: location 1168 is 1002
9999 mem: storing 0 in location 1002
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1155 is 3
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 1 in location 1161
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1156 is 2
9999 mem: location 1158 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1169
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1161 is 1
9999 mem: location 1169 is 0
9999 mem: storing 0 in location 1170
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1155 is 3
9999 mem: location 1157 is 1006
9999 mem: location 1006 is 3
9999 mem: storing 0 in location 1171
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1172
 106 run: jump-unless before-cursor?, 
9999 mem: location 1172 is 0
9998 run: jumping to instruction 81
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1147 is 1011
9999 mem: location 1148 is 1000
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 2
9999 mem: storing 3 in location 1097
9999 mem: storing 2 in location 1098
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1093 is 1011
9999 mem: location 1098 is 2
9999 mem: location 1096 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1176
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1177
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1178
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 2
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 106 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: storing 17 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 2
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 17
9999 mem: storing 1051 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1051
9999 mem: location 1051 is 101
9999 mem: location 1052 is 7
9999 mem: location 1201 is 1051
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1051
9999 mem: storing 32 in location 1051
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1201 is 1051
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1052
9999 mem: storing 7 in location 1052
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 2
9999 mem: location 1192 is 1014
9999 mem: storing 3 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 106 run: column <- add column, 1
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 3
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 106 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-down-on-right-arrow
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: storing 18 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 3
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 18
9999 mem: storing 1053 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1053
9999 mem: location 1053 is 102
9999 mem: location 1054 is 7
9999 mem: location 1201 is 1053
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1053
9999 mem: storing 32 in location 1053
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1201 is 1053
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1054
9999 mem: storing 7 in location 1054
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1204 is 4
9999 mem: storing 0 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 3
9999 mem: location 1192 is 1014
9999 mem: storing 4 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 106 run: column <- add column, 1
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 4
9999 mem: location 1177 is 4
9999 mem: storing 0 in location 1179
 106 run: jump-if done?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1175 is 1011
9999 mem: location 1178 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1189 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1192
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1188 is 5
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1193
 107 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 3
9999 mem: location 1188 is 5
9999 mem: storing 15 in location 1196
 107 run: index <- add index, *column
9999 mem: location 1196 is 15
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: storing 19 in location 1196
 107 run: buf:address:array:screen-cell <- get *screen, data:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1015
9998 run: its type is <address : <array : <screen-cell : <>>>>
9999 mem: location 1015 is 1016
9999 mem: storing 1016 in location 1197
 107 run: len:number <- length *buf
9999 mem: location 1197 is 1016
9999 mem: storing 20 in location 1198
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1183 is 32
9999 mem: storing 0 in location 1199
 107 run: jump-unless backspace?, 
9999 mem: location 1199 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1197 is 1016
9999 mem: location 1196 is 19
9999 mem: storing 1055 in location 1201
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1201 is 1055
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1201 is 1055
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1202
 107 run: *cursor-contents <- copy c
9999 mem: location 1183 is 32
9999 mem: location 1202 is 1055
9999 mem: storing 32 in location 1055
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1201 is 1055
9999 mem: location 1055 is 32
9999 mem: location 1056 is 245
9999 mem: location 1201 is 1055
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1203
 107 run: *cursor-color <- copy color
9999 mem: location 1184 is 7
9999 mem: location 1203 is 1056
9999 mem: storing 7 in location 1056
 107 run: right:number <- subtract width, 1
9999 mem: location 1188 is 5
9999 mem: storing 4 in location 1204
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1192 is 1014
9999 mem: location 1014 is 4
9999 mem: location 1204 is 4
9999 mem: storing 1 in location 1205
 107 run: jump-if at-right?, 
9999 mem: location 1205 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 106 run: column <- add column, 1
9999 mem: location 1176 is 4
9999 mem: storing 5 in location 1176
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1176 is 5
9999 mem: location 1177 is 4
9999 mem: storing 1 in location 1179
 106 run: jump-if done?, 
9999 mem: location 1179 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1097 is 3
9999 mem: storing 4 in location 1097
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1093 is 1011
9999 mem: location 1097 is 4
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1234
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1235
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1236
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1237
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1238
9999 mem: storing 1 in location 1239
 106 run: jump-if style-found?, 
9999 mem: location 1239 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1240
9999 mem: storing 0 in location 1241
 106 run: jump-if color-found?, 
9999 mem: location 1241 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1240
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
 106 run: jump-if bg-color-found?, 
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1242
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1234 is 1011
9999 mem: location 1235 is 4
9999 mem: location 1236 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1176
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 107 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 107 run: *row <- copy new-row
9999 mem: location 1176 is 4
9999 mem: location 1178 is 1013
9999 mem: storing 4 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 4
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 107 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1234
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1236 is 0
9999 mem: location 1237 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-unless continue?, 
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1234 is 1011
9999 mem: location 1238 is 9480
9999 mem: location 1240 is 245
9999 mem: location 1242 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 1 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1236 is 0
9999 mem: storing 1 in location 1236
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1236 is 1
9999 mem: location 1237 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-unless continue?, 
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1234 is 1011
9999 mem: location 1238 is 9480
9999 mem: location 1240 is 245
9999 mem: location 1242 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 1 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1236 is 1
9999 mem: storing 2 in location 1236
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1236 is 2
9999 mem: location 1237 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-unless continue?, 
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1234 is 1011
9999 mem: location 1238 is 9480
9999 mem: location 1240 is 245
9999 mem: location 1242 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 1 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1236 is 2
9999 mem: storing 3 in location 1236
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1236 is 3
9999 mem: location 1237 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-unless continue?, 
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1234 is 1011
9999 mem: location 1238 is 9480
9999 mem: location 1240 is 245
9999 mem: location 1242 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 1 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1236 is 3
9999 mem: storing 4 in location 1236
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1236 is 4
9999 mem: location 1237 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-unless continue?, 
9999 mem: location 1244 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1234 is 1011
9999 mem: location 1238 is 9480
9999 mem: location 1240 is 245
9999 mem: location 1242 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1183
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1184
9999 mem: storing 1 in location 1185
 107 run: jump-if color-found?, 
9999 mem: location 1185 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 1 in location 1187
 107 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1183 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 1 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 4
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 107 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1236 is 4
9999 mem: storing 5 in location 1236
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1236 is 5
9999 mem: location 1237 is 4
9999 mem: storing 0 in location 1244
 106 run: jump-unless continue?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:screen
9999 mem: location 1234 is 1011
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1097 is 4
9999 mem: storing 5 in location 1097
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1093 is 1011
9999 mem: location 1097 is 5
9999 mem: location 1095 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1176
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1178
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1179
 106 run: jump-if screen, 
9999 mem: location 1175 is 1011
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1175 is 1011
9999 mem: location 1176 is 5
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1412
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1414
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1415
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1416
 107 run: jump-unless screen, 
9999 mem: location 1414 is 1011
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1414 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 4
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1414 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1417
 107 run: *row <- copy new-row
9999 mem: location 1415 is 5
9999 mem: location 1417 is 1013
9999 mem: storing 5 in location 1013
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1414 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1414 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1418
 107 run: *column <- copy new-column
9999 mem: location 1416 is 0
9999 mem: location 1418 is 1014
9999 mem: storing 0 in location 1014
 107 run: reply screen:address:screen
9999 mem: location 1414 is 1011
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1175
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1175 is 1011
9999 mem: location 1177 is 0
9999 mem: location 1179 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1414
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1415
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1416
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1417
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1415 is 0
9999 mem: location 1416 is 4
9999 mem: storing 0 in location 1418
 107 run: jump-if done?, 
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1414 is 1011
9999 mem: location 1417 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 108 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 108 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 108 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1414
 107 run: column <- add column, 1
9999 mem: location 1415 is 0
9999 mem: storing 1 in location 1415
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1415 is 1
9999 mem: location 1416 is 4
9999 mem: storing 0 in location 1418
 107 run: jump-if done?, 
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1414 is 1011
9999 mem: location 1417 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 108 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 108 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 108 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1414
 107 run: column <- add column, 1
9999 mem: location 1415 is 1
9999 mem: storing 2 in location 1415
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1415 is 2
9999 mem: location 1416 is 4
9999 mem: storing 0 in location 1418
 107 run: jump-if done?, 
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1414 is 1011
9999 mem: location 1417 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 108 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 108 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 108 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1414
 107 run: column <- add column, 1
9999 mem: location 1415 is 2
9999 mem: storing 3 in location 1415
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1415 is 3
9999 mem: location 1416 is 4
9999 mem: storing 0 in location 1418
 107 run: jump-if done?, 
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1414 is 1011
9999 mem: location 1417 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 108 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 108 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 108 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1414
 107 run: column <- add column, 1
9999 mem: location 1415 is 3
9999 mem: storing 4 in location 1415
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1415 is 4
9999 mem: location 1416 is 4
9999 mem: storing 0 in location 1418
 107 run: jump-if done?, 
9999 mem: location 1418 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1414 is 1011
9999 mem: location 1417 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1182
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1183
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
 108 run: jump-if color-found?, 
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1184
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
 108 run: jump-if bg-color-found?, 
9999 mem: location 1187 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1186
 108 run: trace 90, [print-character], c
9999 mem: location 1183 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1182 is 1011
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1012
9998 run: its type is number
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1188
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1189
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1182 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1182 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1190
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 1 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1190 is 1013
9999 mem: location 1013 is 5
9999 mem: location 1189 is 4
9999 mem: storing 0 in location 1191
 108 run: jump-if legal?, 1:offset
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:screen
9999 mem: location 1182 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1414
 107 run: column <- add column, 1
9999 mem: location 1415 is 4
9999 mem: storing 5 in location 1415
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1415 is 5
9999 mem: location 1416 is 4
9999 mem: storing 1 in location 1418
 107 run: jump-if done?, 
9999 mem: location 1418 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:screen
9999 mem: location 1414 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1175 is 1011
9999 mem: location 1176 is 5
9999 mem: location 1178 is 0
9999 mem: location 1179 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1419
 107 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1421
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1422
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1423
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1424
 107 run: row <- add row, 1
9999 mem: location 1422 is 5
9999 mem: storing 6 in location 1422
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1421 is 1011
9999 mem: location 1422 is 6
9999 mem: location 1423 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1414
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1415
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1416
 108 run: jump-unless screen, 
9999 mem: location 1414 is 1011
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1414 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 5
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1414 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1417
 108 run: *row <- copy new-row
9999 mem: location 1415 is 6
9999 mem: location 1417 is 1013
9999 mem: storing 6 in location 1013
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1414 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 6
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1414 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1418
 108 run: *column <- copy new-column
9999 mem: location 1416 is 0
9999 mem: location 1418 is 1014
9999 mem: storing 0 in location 1014
 108 run: reply screen:address:screen
9999 mem: location 1414 is 1011
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1421
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1421 is 1011
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
 108 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1116
 108 run: jump-unless screen, 
9999 mem: location 1116 is 1011
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1116 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 6
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1116 is 1011
9998 run: address to copy is 1011
9998 run: its type is number
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1117
 108 run: reply height:number
9999 mem: location 1117 is 4
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1425
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1422 is 6
9999 mem: location 1425 is 4
9999 mem: storing 1 in location 1426
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1426 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:screen
9999 mem: location 1421 is 1011
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:screen, editor:address:editor-data
9999 mem: location 1093 is 1011
9999 mem: location 1094 is 1000
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1219
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1221 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1221 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 3
9999 mem: storing 3 in location 1222
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1221 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 1221 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1223
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1219 is 1011
9999 mem: location 1222 is 3
9999 mem: location 1223 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: screen:address:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1011 in location 1175
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1177
 105 run: jump-unless screen, 
9999 mem: location 1175 is 1011
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 6
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1178
 105 run: *row <- copy new-row
9999 mem: location 1176 is 3
9999 mem: location 1178 is 1013
9999 mem: storing 3 in location 1013
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1175 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 3
9999 mem: location 1014 is 0
9999 mem: location 1015 is 1016
9999 mem: location 1175 is 1011
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1179
 105 run: *column <- copy new-column
9999 mem: location 1177 is 0
9999 mem: location 1179 is 1014
9999 mem: storing 0 in location 1014
 105 run: reply screen:address:screen
9999 mem: location 1175 is 1011
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1011
9999 mem: storing 1011 in location 1219
 104 run: e:event, console:address:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1220 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
 105 run: console:address:console <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1234
 105 run: jump-unless console, 
9999 mem: location 1234 is 1215
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1234 is 1215
9999 mem: location 1215 is 2
9999 mem: location 1216 is 1206
9999 mem: location 1234 is 1215
9998 run: address to copy is 1215
9999 mem: storing 1215 in location 1235
 105 run: buf:address:array:event <- get *console, events:offset
9999 mem: location 1234 is 1215
9999 mem: location 1215 is 2
9999 mem: location 1216 is 1206
9999 mem: location 1234 is 1215
9998 run: address to copy is 1216
9998 run: its type is <address : <array : <event : <>>>>
9999 mem: location 1216 is 1206
9999 mem: storing 1206 in location 1236
 105 run: max:number <- length *buf
9999 mem: location 1236 is 1206
9999 mem: storing 2 in location 1237
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1235 is 1215
9999 mem: location 1215 is 2
9999 mem: location 1237 is 2
9999 mem: storing 1 in location 1238
 105 run: jump-unless done?, 
9999 mem: location 1238 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:event <- new event:type
9999 mem: storing 1114 in location 1239
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1239 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1234 is 1215
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1215
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
9999 mem: storing 0 in location 1226
9999 mem: storing 0 in location 1227
9999 mem: storing 1215 in location 1220
9999 mem: storing 1 in location 1228
9999 mem: storing 1 in location 1229
9990 schedule: editor-event-loop/run1001/scenario-editor-scrolls-down-on-right-arrow
 104 run: jump-unless found?, 
9999 mem: location 1228 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1229 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:screen, console:address:console, editor:address:editor-data
9999 mem: location 1219 is 1011
9999 mem: location 1220 is 1215
9999 mem: location 1221 is 1000
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 2 is 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 3
9999 mem: storing 3 in location 3
 103 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1099
9999 mem: location 1001 is 1118
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1136
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 3
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1399
9999 mem: location 1010 is 0
9999 mem: location 2 is 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .     .
    .b    .
    .cdef↩.
    .gh   .
  ]
 102 run: memory-should-contain [
    3 <- 3
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
