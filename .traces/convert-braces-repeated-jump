c{0: 0 (((1 integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 1 (((break))) -- ((open 1))
c{0: 2 (((2 integer)) <- ((copy)) ((0 literal))) -- ((open 1))
c{0: 3 (((break))) -- ((open 3) (close 3) (open 1))
c{0: 4 (((3 integer)) <- ((copy)) ((0 literal))) -- ((open 3) (close 3) (open 1))
c{0: 5 (((4 integer)) <- ((copy)) ((0 literal))) -- ((close 5) (open 3) (close 3) (open 1))
c{1: 0 ✓ (((1 integer)) <- ((copy)) ((0 literal)))
c{1: 1 X (((break))) => (((jump)) ((1 offset)))
c{1: 2 ✓ (((2 integer)) <- ((copy)) ((0 literal)))
c{1: 3 X (((break))) => (((jump)) ((1 offset)))
c{1: 4 ✓ (((3 integer)) <- ((copy)) ((0 literal)))
c{1: 5 ✓ (((4 integer)) <- ((copy)) ((0 literal)))
