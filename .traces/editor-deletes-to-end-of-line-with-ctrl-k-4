9991 parse: --- defining scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"10": "literal", "width": <>}
9993 parse:   ingredient: {"5": "literal", "height": <>}
9992 load: after rewriting: screen:address:shared:screen <- new-fake-screen 10/width, 5/height
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"123\n456": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new [123
456]
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"10": "literal", "right": <>}
9993 parse:   product: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 1, 3\n    press ctrl-k\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    left-click 1, 3
    press ctrl-k
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .123       .\n    .456       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .          .
    .123       .
    .456       .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
9999 parse: recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9991 transform: --- deduce types for recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9992 transform: screen => <address : <shared : <screen : <>>>>
9991 transform: --- collect surrounding spaces for recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9991 transform: --- transform names for recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9992 transform: instruction new-fake-screen
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for base: 100
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for variant 0: 100
9992 transform: instruction new-editor
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for base: 99
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for variant 0: 99
9991 transform: --- compute instruction operations for recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9991 transform: --- transform braces for recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9991 transform: --- type-check calls inside recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 102 run: screen:address:shared:screen <- new-fake-screen 10/width, 5/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1000
9999 mem: storing 10 in location 1001
 103 run: w:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: h:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: result <- new screen:type
9999 mem: allocating size 6
9999 mem: new alloc: 1012
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 0 -> 1
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1006
 103 run: *width <- copy w
9999 mem: location 1003 is 10
9999 mem: location 1006 is 1014
9999 mem: storing 10 in location 1014
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: *height <- copy h
9999 mem: location 1004 is 5
9999 mem: location 1007 is 1013
9999 mem: storing 5 in location 1013
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1008
 103 run: *row <- copy 0
9999 mem: location 1008 is 1015
9999 mem: storing 0 in location 1015
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1009
 103 run: *column <- copy 0
9999 mem: location 1009 is 1016
9999 mem: storing 0 in location 1016
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1006 is 1014
9999 mem: location 1014 is 10
9999 mem: location 1007 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 50 in location 1010
 103 run: buf:address:address:shared:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1011
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1010 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1018
9999 mem: storing 50 in location 1019
9999 mem: location 1011 is 1017
9999 mem: storing 1018 in location 1017
9999 mem: incrementing refcount of 1018: 0 -> 1
 103 run: result <- clear-screen result
9999 mem: location 1005 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1120
9999 mem: storing 10 in location 1121
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1123
9999 mem: incrementing refcount of 1012: 1 -> 2
 104 run: jump-unless screen, 
9999 mem: location 1123 is 1012
9998 run: jump-unless fell through
 104 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1124
9999 mem: incrementing refcount of 1018: 1 -> 2
 104 run: max:number <- length *buf
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1125
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1126
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 0
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 0
9999 mem: storing 1020 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1020
9999 mem: storing 0 in location 1020
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1021
9999 mem: storing 7 in location 1021
 104 run: i <- add i, 1
9999 mem: location 1126 is 0
9999 mem: storing 1 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 1
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 1
9999 mem: storing 1022 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1022
9999 mem: storing 0 in location 1022
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1023
9999 mem: storing 7 in location 1023
 104 run: i <- add i, 1
9999 mem: location 1126 is 1
9999 mem: storing 2 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 2
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 2
9999 mem: storing 1024 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1024
9999 mem: storing 0 in location 1024
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1025
9999 mem: storing 7 in location 1025
 104 run: i <- add i, 1
9999 mem: location 1126 is 2
9999 mem: storing 3 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 3
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 3
9999 mem: storing 1026 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1026
9999 mem: storing 0 in location 1026
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1027
9999 mem: storing 7 in location 1027
 104 run: i <- add i, 1
9999 mem: location 1126 is 3
9999 mem: storing 4 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 4
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 4
9999 mem: storing 1028 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1028
9999 mem: storing 0 in location 1028
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1029
9999 mem: storing 7 in location 1029
 104 run: i <- add i, 1
9999 mem: location 1126 is 4
9999 mem: storing 5 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 5
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 5
9999 mem: storing 1030 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1030
9999 mem: storing 0 in location 1030
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1031
9999 mem: storing 7 in location 1031
 104 run: i <- add i, 1
9999 mem: location 1126 is 5
9999 mem: storing 6 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 6
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 6
9999 mem: storing 1032 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1032
9999 mem: storing 0 in location 1032
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1033
9999 mem: storing 7 in location 1033
 104 run: i <- add i, 1
9999 mem: location 1126 is 6
9999 mem: storing 7 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 7
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 7
9999 mem: storing 1034 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1034
9999 mem: storing 0 in location 1034
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1035
9999 mem: storing 7 in location 1035
 104 run: i <- add i, 1
9999 mem: location 1126 is 7
9999 mem: storing 8 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 8
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 8
9999 mem: storing 1036 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1036
9999 mem: storing 0 in location 1036
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1037
9999 mem: storing 7 in location 1037
 104 run: i <- add i, 1
9999 mem: location 1126 is 8
9999 mem: storing 9 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 9
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 9
9999 mem: storing 1038 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1038
9999 mem: storing 0 in location 1038
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1039
9999 mem: storing 7 in location 1039
 104 run: i <- add i, 1
9999 mem: location 1126 is 9
9999 mem: storing 10 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 10
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 10
9999 mem: storing 1040 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1040
9999 mem: storing 0 in location 1040
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1041
9999 mem: storing 7 in location 1041
 104 run: i <- add i, 1
9999 mem: location 1126 is 10
9999 mem: storing 11 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 11
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 11
9999 mem: storing 1042 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1042
9999 mem: storing 0 in location 1042
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1043
9999 mem: storing 7 in location 1043
 104 run: i <- add i, 1
9999 mem: location 1126 is 11
9999 mem: storing 12 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 12
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 12
9999 mem: storing 1044 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1044
9999 mem: storing 0 in location 1044
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1045
9999 mem: storing 7 in location 1045
 104 run: i <- add i, 1
9999 mem: location 1126 is 12
9999 mem: storing 13 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 13
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 13
9999 mem: storing 1046 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1046
9999 mem: storing 0 in location 1046
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1047
9999 mem: storing 7 in location 1047
 104 run: i <- add i, 1
9999 mem: location 1126 is 13
9999 mem: storing 14 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 14
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 14
9999 mem: storing 1048 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1048
9999 mem: storing 0 in location 1048
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1049
9999 mem: storing 7 in location 1049
 104 run: i <- add i, 1
9999 mem: location 1126 is 14
9999 mem: storing 15 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 15
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 15
9999 mem: storing 1050 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1050
9999 mem: storing 0 in location 1050
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1051
9999 mem: storing 7 in location 1051
 104 run: i <- add i, 1
9999 mem: location 1126 is 15
9999 mem: storing 16 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 16
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 16
9999 mem: storing 1052 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1052
9999 mem: storing 0 in location 1052
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1053
9999 mem: storing 7 in location 1053
 104 run: i <- add i, 1
9999 mem: location 1126 is 16
9999 mem: storing 17 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 17
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 17
9999 mem: storing 1054 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1054
9999 mem: storing 0 in location 1054
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1055
9999 mem: storing 7 in location 1055
 104 run: i <- add i, 1
9999 mem: location 1126 is 17
9999 mem: storing 18 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 18
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 18
9999 mem: storing 1056 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1056
9999 mem: storing 0 in location 1056
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1057
9999 mem: storing 7 in location 1057
 104 run: i <- add i, 1
9999 mem: location 1126 is 18
9999 mem: storing 19 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 19
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 19
9999 mem: storing 1058 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1058
9999 mem: storing 0 in location 1058
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1059
9999 mem: storing 7 in location 1059
 104 run: i <- add i, 1
9999 mem: location 1126 is 19
9999 mem: storing 20 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 20
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 20
9999 mem: storing 1060 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1060
9999 mem: storing 0 in location 1060
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1061
9999 mem: storing 7 in location 1061
 104 run: i <- add i, 1
9999 mem: location 1126 is 20
9999 mem: storing 21 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 21
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 21
9999 mem: storing 1062 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1062
9999 mem: storing 0 in location 1062
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1063
9999 mem: storing 7 in location 1063
 104 run: i <- add i, 1
9999 mem: location 1126 is 21
9999 mem: storing 22 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 22
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 22
9999 mem: storing 1064 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1064
9999 mem: storing 0 in location 1064
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1065
9999 mem: storing 7 in location 1065
 104 run: i <- add i, 1
9999 mem: location 1126 is 22
9999 mem: storing 23 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 23
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 23
9999 mem: storing 1066 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1066
9999 mem: storing 0 in location 1066
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1067
9999 mem: storing 7 in location 1067
 104 run: i <- add i, 1
9999 mem: location 1126 is 23
9999 mem: storing 24 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 24
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 24
9999 mem: storing 1068 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1068
9999 mem: storing 0 in location 1068
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1069
9999 mem: storing 7 in location 1069
 104 run: i <- add i, 1
9999 mem: location 1126 is 24
9999 mem: storing 25 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 25
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 25
9999 mem: storing 1070 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1070
9999 mem: storing 0 in location 1070
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1071
9999 mem: storing 7 in location 1071
 104 run: i <- add i, 1
9999 mem: location 1126 is 25
9999 mem: storing 26 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 26
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 26
9999 mem: storing 1072 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1072
9999 mem: storing 0 in location 1072
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1073
9999 mem: storing 7 in location 1073
 104 run: i <- add i, 1
9999 mem: location 1126 is 26
9999 mem: storing 27 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 27
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 27
9999 mem: storing 1074 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1074
9999 mem: storing 0 in location 1074
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1075
9999 mem: storing 7 in location 1075
 104 run: i <- add i, 1
9999 mem: location 1126 is 27
9999 mem: storing 28 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 28
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 28
9999 mem: storing 1076 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1076
9999 mem: storing 0 in location 1076
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1077
9999 mem: storing 7 in location 1077
 104 run: i <- add i, 1
9999 mem: location 1126 is 28
9999 mem: storing 29 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 29
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 29
9999 mem: storing 1078 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1078
9999 mem: storing 0 in location 1078
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1079
9999 mem: storing 7 in location 1079
 104 run: i <- add i, 1
9999 mem: location 1126 is 29
9999 mem: storing 30 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 30
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 30
9999 mem: storing 1080 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1080
9999 mem: storing 0 in location 1080
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1081
9999 mem: storing 7 in location 1081
 104 run: i <- add i, 1
9999 mem: location 1126 is 30
9999 mem: storing 31 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 31
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 31
9999 mem: storing 1082 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1082
9999 mem: storing 0 in location 1082
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1083
9999 mem: storing 7 in location 1083
 104 run: i <- add i, 1
9999 mem: location 1126 is 31
9999 mem: storing 32 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 32
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 32
9999 mem: storing 1084 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1084
9999 mem: storing 0 in location 1084
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1085
9999 mem: storing 7 in location 1085
 104 run: i <- add i, 1
9999 mem: location 1126 is 32
9999 mem: storing 33 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 33
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 33
9999 mem: storing 1086 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1086
9999 mem: storing 0 in location 1086
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1087
9999 mem: storing 7 in location 1087
 104 run: i <- add i, 1
9999 mem: location 1126 is 33
9999 mem: storing 34 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 34
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 34
9999 mem: storing 1088 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1088
9999 mem: storing 0 in location 1088
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1089
9999 mem: storing 7 in location 1089
 104 run: i <- add i, 1
9999 mem: location 1126 is 34
9999 mem: storing 35 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 35
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 35
9999 mem: storing 1090 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1090
9999 mem: storing 0 in location 1090
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1091
9999 mem: storing 7 in location 1091
 104 run: i <- add i, 1
9999 mem: location 1126 is 35
9999 mem: storing 36 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 36
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 36
9999 mem: storing 1092 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1092
9999 mem: storing 0 in location 1092
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1093
9999 mem: storing 7 in location 1093
 104 run: i <- add i, 1
9999 mem: location 1126 is 36
9999 mem: storing 37 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 37
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 37
9999 mem: storing 1094 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1094
9999 mem: storing 0 in location 1094
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1095
9999 mem: storing 7 in location 1095
 104 run: i <- add i, 1
9999 mem: location 1126 is 37
9999 mem: storing 38 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 38
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 38
9999 mem: storing 1096 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1096
9999 mem: storing 0 in location 1096
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1097
9999 mem: storing 7 in location 1097
 104 run: i <- add i, 1
9999 mem: location 1126 is 38
9999 mem: storing 39 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 39
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 39
9999 mem: storing 1098 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1098
9999 mem: storing 0 in location 1098
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1099
9999 mem: storing 7 in location 1099
 104 run: i <- add i, 1
9999 mem: location 1126 is 39
9999 mem: storing 40 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 40
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 40
9999 mem: storing 1100 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1100
9999 mem: storing 0 in location 1100
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1101
9999 mem: storing 7 in location 1101
 104 run: i <- add i, 1
9999 mem: location 1126 is 40
9999 mem: storing 41 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 41
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 41
9999 mem: storing 1102 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1102
9999 mem: storing 0 in location 1102
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1103
9999 mem: storing 7 in location 1103
 104 run: i <- add i, 1
9999 mem: location 1126 is 41
9999 mem: storing 42 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 42
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 42
9999 mem: storing 1104 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1104
9999 mem: storing 0 in location 1104
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1105
9999 mem: storing 7 in location 1105
 104 run: i <- add i, 1
9999 mem: location 1126 is 42
9999 mem: storing 43 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 43
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 43
9999 mem: storing 1106 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1106
9999 mem: storing 0 in location 1106
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1107
9999 mem: storing 7 in location 1107
 104 run: i <- add i, 1
9999 mem: location 1126 is 43
9999 mem: storing 44 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 44
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 44
9999 mem: storing 1108 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1108
9999 mem: storing 0 in location 1108
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1109
9999 mem: storing 7 in location 1109
 104 run: i <- add i, 1
9999 mem: location 1126 is 44
9999 mem: storing 45 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 45
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 45
9999 mem: storing 1110 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1110
9999 mem: storing 0 in location 1110
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1111
9999 mem: storing 7 in location 1111
 104 run: i <- add i, 1
9999 mem: location 1126 is 45
9999 mem: storing 46 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 46
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 46
9999 mem: storing 1112 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1112
9999 mem: storing 0 in location 1112
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1113
9999 mem: storing 7 in location 1113
 104 run: i <- add i, 1
9999 mem: location 1126 is 46
9999 mem: storing 47 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 47
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 47
9999 mem: storing 1114 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1114
9999 mem: storing 0 in location 1114
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1115
9999 mem: storing 7 in location 1115
 104 run: i <- add i, 1
9999 mem: location 1126 is 47
9999 mem: storing 48 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 48
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 48
9999 mem: storing 1116 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1116
9999 mem: storing 0 in location 1116
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1117
9999 mem: storing 7 in location 1117
 104 run: i <- add i, 1
9999 mem: location 1126 is 48
9999 mem: storing 49 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 49
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 49
9999 mem: storing 1118 in location 1128
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1129
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1129 is 1118
9999 mem: storing 0 in location 1118
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1130
 104 run: *curr-color <- copy 7/white
9999 mem: location 1130 is 1119
9999 mem: storing 7 in location 1119
 104 run: i <- add i, 1
9999 mem: location 1126 is 49
9999 mem: storing 50 in location 1126
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1126 is 50
9999 mem: location 1125 is 50
9999 mem: storing 1 in location 1127
 104 run: jump-if done?, 
9999 mem: location 1127 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1131
 104 run: *x <- copy 0
9999 mem: location 1131 is 1015
9999 mem: storing 0 in location 1015
 104 run: x <- get-address *screen, cursor-column:offset
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1131
 104 run: *x <- copy 0
9999 mem: location 1131 is 1016
9999 mem: storing 0 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1123 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 2 -> 1
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 1 -> 2
 103 run: reply result:address:shared:screen
9999 mem: location 1005 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 900
9999 mem: incrementing refcount of 1012: 2 -> 3
 102 run: 1:address:shared:array:character <- new [123
456]
9999 mem: storing 1132 in location 1
9999 mem: incrementing refcount of 1132: 0 -> 1
 102 run: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 10/right
9999 mem: location 1 is 1132
9999 mem: location 900 is 1012
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1141
9999 mem: storing 11 in location 1142
 103 run: s:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1144
9999 mem: incrementing refcount of 1132: 1 -> 2
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1145
9999 mem: incrementing refcount of 1012: 3 -> 4
 103 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1146
 103 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1147
 103 run: right <- subtract right, 1
9999 mem: location 1147 is 10
9999 mem: storing 9 in location 1147
 103 run: result <- new editor-data:type
9999 mem: allocating size 13
9999 mem: new alloc: 1154
9999 mem: storing 1154 in location 1148
9999 mem: incrementing refcount of 1154: 0 -> 1
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1149
 103 run: *x <- copy left
9999 mem: location 1146 is 0
9999 mem: location 1149 is 1159
9999 mem: storing 0 in location 1159
 103 run: x <- get-address *result, right:offset
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1149
 103 run: *x <- copy right
9999 mem: location 1147 is 9
9999 mem: location 1149 is 1160
9999 mem: storing 9 in location 1160
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1149
 103 run: *x <- copy 1/top
9999 mem: location 1149 is 1162
9999 mem: storing 1 in location 1162
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1149
9990 schedule: new-editor/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 103 run: *x <- copy left
9999 mem: location 1146 is 0
9999 mem: location 1149 is 1163
9999 mem: storing 0 in location 1163
 103 run: init:address:address:shared:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1150
 103 run: *init <- push_3 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1167
9999 mem: storing 7 in location 1168
 104 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1170
 104 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1171
 104 run: result:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1176
9999 mem: storing 1176 in location 1172
9999 mem: incrementing refcount of 1176: 0 -> 1
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1172 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1172 is 1176
9999 mem: skipping refcount at 1176
9998 run: address to copy is 1177
9999 mem: storing 1177 in location 1173
 104 run: *val <- copy x
9999 mem: location 1170 is 167
9999 mem: location 1173 is 1177
9999 mem: storing 167 in location 1177
 104 run: next:address:address:shared:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1172 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1172 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9999 mem: storing 1178 in location 1174
 104 run: *next <- copy in
9999 mem: location 1171 is 0
9999 mem: location 1174 is 1178
9999 mem: storing 0 in location 1178
 104 run: jump-unless in, 
9999 mem: location 1171 is 0
9998 run: jumping to instruction 12
 104 run: reply result
9999 mem: location 1172 is 1176
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1176
9999 mem: location 1150 is 1155
9999 mem: storing 1176 in location 1155
9999 mem: incrementing refcount of 1176: 1 -> 2
 103 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1151
 103 run: *top-of-screen <- copy *init
9999 mem: location 1150 is 1155
9999 mem: location 1155 is 1176
9999 mem: location 1151 is 1156
9999 mem: storing 1176 in location 1156
9999 mem: incrementing refcount of 1176: 2 -> 3
 103 run: y:address:address:shared:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1152
 103 run: *y <- copy *init
9999 mem: location 1150 is 1155
9999 mem: location 1155 is 1176
9999 mem: location 1152 is 1158
9999 mem: storing 1176 in location 1158
9999 mem: incrementing refcount of 1176: 3 -> 4
 103 run: result <- insert-text result, s
9999 mem: location 1148 is 1154
9999 mem: location 1144 is 1132
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1180
9999 mem: storing 8 in location 1181
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1183
9999 mem: incrementing refcount of 1154: 1 -> 2
 104 run: text:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1184
9999 mem: incrementing refcount of 1132: 2 -> 3
 104 run: jump-if text, 1:offset
9999 mem: location 1184 is 1132
9998 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1184 is 1132
9999 mem: skipping refcount at 1132
9999 mem: storing 7 in location 1185
 104 run: jump-if len, 1:offset
9999 mem: location 1185 is 7
9998 run: jumping to instruction 8
 104 run: idx:number <- copy 0
9999 mem: storing 0 in location 1186
 104 run: curr:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1183 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1183 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1176
9999 mem: storing 1176 in location 1187
9999 mem: incrementing refcount of 1176: 4 -> 5
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1186 is 0
9999 mem: location 1185 is 7
9999 mem: storing 0 in location 1188
 104 run: jump-if done?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1184 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1186 is 0
9998 run: address to copy is 1134
9998 run: its type is character
9999 mem: location 1134 is 49
9999 mem: storing 49 in location 1189
 104 run: insert_2 c, curr
9999 mem: location 1189 is 49
9999 mem: location 1187 is 1176
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1170
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1171
9999 mem: incrementing refcount of 1176: 5 -> 6
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1190
9999 mem: storing 1190 in location 1172
9999 mem: incrementing refcount of 1190: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1172 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1172 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9999 mem: storing 1191 in location 1173
 105 run: *val <- copy x
9999 mem: location 1170 is 49
9999 mem: location 1173 is 1191
9999 mem: storing 49 in location 1191
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1171 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1171 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1174
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1171 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1171 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9999 mem: storing 1178 in location 1175
 105 run: *y <- copy new-node
9999 mem: location 1172 is 1190
9999 mem: location 1175 is 1178
9999 mem: storing 1190 in location 1178
9999 mem: incrementing refcount of 1190: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1172 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1172 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1193
9999 mem: storing 1193 in location 1175
 105 run: *y <- copy in
9999 mem: location 1171 is 1176
9999 mem: location 1175 is 1193
9999 mem: storing 1176 in location 1193
9999 mem: incrementing refcount of 1176: 6 -> 7
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1172 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1176
9999 mem: location 1172 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9999 mem: storing 1192 in location 1175
 105 run: *y <- copy next-node
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1192
9999 mem: storing 0 in location 1192
 105 run: jump-if next-node, 1:offset
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1171 is 1176
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1187 is 1176
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1194
9999 mem: storing 3 in location 1195
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 7 -> 8
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 8 -> 7
9999 mem: storing 1190 in location 1187
9999 mem: incrementing refcount of 1190: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1186 is 0
9999 mem: storing 1 in location 1186
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1186 is 1
9999 mem: location 1185 is 7
9999 mem: storing 0 in location 1188
 104 run: jump-if done?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1184 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1186 is 1
9998 run: address to copy is 1135
9998 run: its type is character
9999 mem: location 1135 is 50
9999 mem: storing 50 in location 1189
 104 run: insert_2 c, curr
9999 mem: location 1189 is 50
9999 mem: location 1187 is 1190
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1170
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1171
9999 mem: incrementing refcount of 1190: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1199
9999 mem: storing 1199 in location 1172
9999 mem: incrementing refcount of 1199: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1172 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1172 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1173
 105 run: *val <- copy x
9999 mem: location 1170 is 50
9999 mem: location 1173 is 1200
9999 mem: storing 50 in location 1200
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1171 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1176
9999 mem: location 1171 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 0
9999 mem: storing 0 in location 1174
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1171 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1176
9999 mem: location 1171 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9999 mem: storing 1192 in location 1175
 105 run: *y <- copy new-node
9999 mem: location 1172 is 1199
9999 mem: location 1175 is 1192
9999 mem: storing 1199 in location 1192
9999 mem: incrementing refcount of 1199: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1172 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1172 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1202
9999 mem: storing 1202 in location 1175
 105 run: *y <- copy in
9999 mem: location 1171 is 1190
9999 mem: location 1175 is 1202
9999 mem: storing 1190 in location 1202
9999 mem: incrementing refcount of 1190: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1172 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1190
9999 mem: location 1172 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9999 mem: storing 1201 in location 1175
 105 run: *y <- copy next-node
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1201
9999 mem: storing 0 in location 1201
 105 run: jump-if next-node, 1:offset
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1171 is 1190
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1187 is 1190
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 7 -> 6
9999 mem: storing 1199 in location 1187
9999 mem: incrementing refcount of 1199: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1186 is 1
9999 mem: storing 2 in location 1186
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1186 is 2
9999 mem: location 1185 is 7
9999 mem: storing 0 in location 1188
 104 run: jump-if done?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1184 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1186 is 2
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 51
9999 mem: storing 51 in location 1189
 104 run: insert_2 c, curr
9999 mem: location 1189 is 51
9999 mem: location 1187 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1170
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1171
9999 mem: incrementing refcount of 1199: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1203
9999 mem: storing 1203 in location 1172
9999 mem: incrementing refcount of 1203: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1172 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1172 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9999 mem: storing 1204 in location 1173
 105 run: *val <- copy x
9999 mem: location 1170 is 51
9999 mem: location 1173 is 1204
9999 mem: storing 51 in location 1204
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1171 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1190
9999 mem: location 1171 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1174
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1171 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 0
9999 mem: location 1202 is 1190
9999 mem: location 1171 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9999 mem: storing 1201 in location 1175
 105 run: *y <- copy new-node
9999 mem: location 1172 is 1203
9999 mem: location 1175 is 1201
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1172 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1172 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1206
9999 mem: storing 1206 in location 1175
 105 run: *y <- copy in
9999 mem: location 1171 is 1199
9999 mem: location 1175 is 1206
9999 mem: storing 1199 in location 1206
9999 mem: incrementing refcount of 1199: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1172 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1172 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1175
 105 run: *y <- copy next-node
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1205
9999 mem: storing 0 in location 1205
 105 run: jump-if next-node, 1:offset
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1171 is 1199
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1187 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 7 -> 6
9999 mem: storing 1203 in location 1187
9999 mem: incrementing refcount of 1203: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1186 is 2
9999 mem: storing 3 in location 1186
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1186 is 3
9999 mem: location 1185 is 7
9999 mem: storing 0 in location 1188
 104 run: jump-if done?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1184 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1186 is 3
9998 run: address to copy is 1137
9998 run: its type is character
9999 mem: location 1137 is 10
9999 mem: storing 10 in location 1189
 104 run: insert_2 c, curr
9999 mem: location 1189 is 10
9999 mem: location 1187 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1170
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1171
9999 mem: incrementing refcount of 1203: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1207
9999 mem: storing 1207 in location 1172
9999 mem: incrementing refcount of 1207: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1172 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1172 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9999 mem: storing 1208 in location 1173
 105 run: *val <- copy x
9999 mem: location 1170 is 10
9999 mem: location 1173 is 1208
9999 mem: storing 10 in location 1208
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1171 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1171 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 0
9999 mem: storing 0 in location 1174
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1171 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1199
9999 mem: location 1171 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1175
 105 run: *y <- copy new-node
9999 mem: location 1172 is 1207
9999 mem: location 1175 is 1205
9999 mem: storing 1207 in location 1205
9999 mem: incrementing refcount of 1207: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1172 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 0
9999 mem: location 1210 is 0
9999 mem: location 1172 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1210
9999 mem: storing 1210 in location 1175
 105 run: *y <- copy in
9999 mem: location 1171 is 1203
9999 mem: location 1175 is 1210
9999 mem: storing 1203 in location 1210
9999 mem: incrementing refcount of 1203: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1172 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1203
9999 mem: location 1172 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9999 mem: storing 1209 in location 1175
 105 run: *y <- copy next-node
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1209
9999 mem: storing 0 in location 1209
 105 run: jump-if next-node, 1:offset
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1171 is 1203
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1187 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 7 -> 6
9999 mem: storing 1207 in location 1187
9999 mem: incrementing refcount of 1207: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1186 is 3
9999 mem: storing 4 in location 1186
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1186 is 4
9999 mem: location 1185 is 7
9999 mem: storing 0 in location 1188
 104 run: jump-if done?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1184 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1186 is 4
9998 run: address to copy is 1138
9998 run: its type is character
9999 mem: location 1138 is 52
9999 mem: storing 52 in location 1189
 104 run: insert_2 c, curr
9999 mem: location 1189 is 52
9999 mem: location 1187 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1170
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1171
9999 mem: incrementing refcount of 1207: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1211
9999 mem: storing 1211 in location 1172
9999 mem: incrementing refcount of 1211: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1172 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1172 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9999 mem: storing 1212 in location 1173
 105 run: *val <- copy x
9999 mem: location 1170 is 52
9999 mem: location 1173 is 1212
9999 mem: storing 52 in location 1212
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1171 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1203
9999 mem: location 1171 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 0
9999 mem: storing 0 in location 1174
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1171 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 0
9999 mem: location 1210 is 1203
9999 mem: location 1171 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9999 mem: storing 1209 in location 1175
 105 run: *y <- copy new-node
9999 mem: location 1172 is 1211
9999 mem: location 1175 is 1209
9999 mem: storing 1211 in location 1209
9999 mem: incrementing refcount of 1211: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1172 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1172 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1214
9999 mem: storing 1214 in location 1175
 105 run: *y <- copy in
9999 mem: location 1171 is 1207
9999 mem: location 1175 is 1214
9999 mem: storing 1207 in location 1214
9999 mem: incrementing refcount of 1207: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1172 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1172 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9999 mem: storing 1213 in location 1175
 105 run: *y <- copy next-node
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1213
9999 mem: storing 0 in location 1213
 105 run: jump-if next-node, 1:offset
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1171 is 1207
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1187 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 7 -> 6
9999 mem: storing 1211 in location 1187
9999 mem: incrementing refcount of 1211: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1186 is 4
9999 mem: storing 5 in location 1186
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1186 is 5
9999 mem: location 1185 is 7
9999 mem: storing 0 in location 1188
 104 run: jump-if done?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1184 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1186 is 5
9998 run: address to copy is 1139
9998 run: its type is character
9999 mem: location 1139 is 53
9999 mem: storing 53 in location 1189
 104 run: insert_2 c, curr
9999 mem: location 1189 is 53
9999 mem: location 1187 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 53 in location 1170
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1171
9999 mem: incrementing refcount of 1211: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1215
9999 mem: storing 1215 in location 1172
9999 mem: incrementing refcount of 1215: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1172 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1172 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9999 mem: storing 1216 in location 1173
 105 run: *val <- copy x
9999 mem: location 1170 is 53
9999 mem: location 1173 is 1216
9999 mem: storing 53 in location 1216
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1171 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1171 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1174
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1171 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1171 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9999 mem: storing 1213 in location 1175
 105 run: *y <- copy new-node
9999 mem: location 1172 is 1215
9999 mem: location 1175 is 1213
9999 mem: storing 1215 in location 1213
9999 mem: incrementing refcount of 1215: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1172 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1172 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9999 mem: storing 1218 in location 1175
 105 run: *y <- copy in
9999 mem: location 1171 is 1211
9999 mem: location 1175 is 1218
9999 mem: storing 1211 in location 1218
9999 mem: incrementing refcount of 1211: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1172 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1172 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9999 mem: storing 1217 in location 1175
 105 run: *y <- copy next-node
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1217
9999 mem: storing 0 in location 1217
 105 run: jump-if next-node, 1:offset
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1171 is 1211
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1187 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 7 -> 6
9999 mem: storing 1215 in location 1187
9999 mem: incrementing refcount of 1215: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1186 is 5
9999 mem: storing 6 in location 1186
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1186 is 6
9999 mem: location 1185 is 7
9999 mem: storing 0 in location 1188
 104 run: jump-if done?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1184 is 1132
9999 mem: skipping refcount at 1132
9998 run: base address is 1133
9999 mem: location 1186 is 6
9998 run: address to copy is 1140
9998 run: its type is character
9999 mem: location 1140 is 54
9999 mem: storing 54 in location 1189
 104 run: insert_2 c, curr
9999 mem: location 1189 is 54
9999 mem: location 1187 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 54 in location 1170
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1171
9999 mem: incrementing refcount of 1215: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1219
9999 mem: storing 1219 in location 1172
9999 mem: incrementing refcount of 1219: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1172 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 0
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1172 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9999 mem: storing 1220 in location 1173
 105 run: *val <- copy x
9999 mem: location 1170 is 54
9999 mem: location 1173 is 1220
9999 mem: storing 54 in location 1220
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1171 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1171 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 0
9999 mem: storing 0 in location 1174
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1171 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 0
9999 mem: location 1218 is 1211
9999 mem: location 1171 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9999 mem: storing 1217 in location 1175
 105 run: *y <- copy new-node
9999 mem: location 1172 is 1219
9999 mem: location 1175 is 1217
9999 mem: storing 1219 in location 1217
9999 mem: incrementing refcount of 1219: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1172 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1172 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1222
9999 mem: storing 1222 in location 1175
 105 run: *y <- copy in
9999 mem: location 1171 is 1215
9999 mem: location 1175 is 1222
9999 mem: storing 1215 in location 1222
9999 mem: incrementing refcount of 1215: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1172 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1172 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9999 mem: storing 1221 in location 1175
 105 run: *y <- copy next-node
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1221
9999 mem: storing 0 in location 1221
 105 run: jump-if next-node, 1:offset
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1171 is 1215
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1187 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 7 -> 6
9999 mem: storing 1219 in location 1187
9999 mem: incrementing refcount of 1219: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1186 is 6
9999 mem: storing 7 in location 1186
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1186 is 7
9999 mem: location 1185 is 7
9999 mem: storing 1 in location 1188
 104 run: jump-if done?, 
9999 mem: location 1188 is 1
9998 run: jumping to instruction 18
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1183 is 1154
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 2 -> 1
9999 mem: storing 1154 in location 1148
9999 mem: incrementing refcount of 1154: 1 -> 2
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1152
 103 run: *y <- copy *init
9999 mem: location 1150 is 1155
9999 mem: location 1155 is 1176
9999 mem: location 1152 is 1158
9999 mem: decrementing refcount of 1176: 7 -> 6
9999 mem: storing 1176 in location 1158
9999 mem: incrementing refcount of 1176: 6 -> 7
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1145 is 1012
9999 mem: location 1148 is 1154
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1223
9999 mem: storing 28 in location 1224
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1226
9999 mem: incrementing refcount of 1012: 4 -> 5
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1227
9999 mem: incrementing refcount of 1154: 2 -> 3
 104 run: jump-if editor, 1:offset
9999 mem: location 1227 is 1154
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1228
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1226 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 5 -> 6
 105 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1198
 105 run: reply height:number
9999 mem: location 1198 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1229
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1230
 104 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1231
9999 mem: incrementing refcount of 1176: 7 -> 8
 104 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1231 is 1176
9999 mem: storing 1176 in location 1232
9999 mem: incrementing refcount of 1176: 8 -> 9
 104 run: curr <- next_2 curr
9999 mem: location 1231 is 1176
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 10 -> 9
9999 mem: storing 1190 in location 1231
9999 mem: incrementing refcount of 1190: 7 -> 8
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1233
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1234
 104 run: column:number <- copy left
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1235
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1236
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1237
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1238
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1226 is 1012
9999 mem: location 1234 is 1
9999 mem: location 1235 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1253
9999 mem: storing 6 in location 1254
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 6 -> 7
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1226
9999 mem: incrementing refcount of 1012: 6 -> 7
 104 run: jump-unless curr, 
9999 mem: location 1231 is 1190
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 1
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 104 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1235 is 0
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 1 in location 1241
 104 run: jump-unless at-cursor?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1232 is 1176
9999 mem: location 1238 is 1158
9999 mem: decrementing refcount of 1176: 9 -> 8
9999 mem: storing 1176 in location 1158
9999 mem: incrementing refcount of 1176: 8 -> 9
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1231 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is character
9999 mem: location 1191 is 49
9999 mem: storing 49 in location 1242
 104 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 49
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 49
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 49
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 49
9999 mem: storing 0 in location 1243
 104 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 0
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 104 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 49
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1261
9999 mem: storing 25 in location 1262
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 7 -> 8
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1265
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 105 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 105 run: trace 90, [print-character], c
9999 mem: location 1265 is 49
  90 print-character: 49 
 105 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 49
9999 mem: storing 0 in location 1275
 105 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 105 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1278
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 2 -> 3
 105 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 49
9999 mem: storing 0 in location 1281
 105 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 10
9999 mem: storing 1040 in location 1283
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1283 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1284
 105 run: *cursor-contents <- copy c
9999 mem: location 1265 is 49
9999 mem: location 1284 is 1040
9999 mem: storing 49 in location 1040
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1040
9999 mem: location 1040 is 49
9999 mem: location 1041 is 7
9999 mem: location 1283 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1285
 105 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1041
9999 mem: storing 7 in location 1041
 105 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 105 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1231 is 1190
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 9 -> 8
9999 mem: storing 1199 in location 1231
9999 mem: incrementing refcount of 1199: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1232 is 1176
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 10 -> 9
9999 mem: storing 1190 in location 1232
9999 mem: incrementing refcount of 1190: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1235 is 0
9999 mem: storing 1 in location 1235
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1231 is 1199
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 1
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 104 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1241
 104 run: jump-unless at-cursor?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1231 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 50
9999 mem: storing 50 in location 1242
 104 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 50
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 50
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 50
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 50
9999 mem: storing 0 in location 1243
 104 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 1
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 104 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 50
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 8 -> 9
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1265
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 105 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 105 run: trace 90, [print-character], c
9999 mem: location 1265 is 50
  90 print-character: 50 
 105 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 50
9999 mem: storing 0 in location 1275
 105 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 105 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1278
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 3 -> 4
 105 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 50
9999 mem: storing 0 in location 1281
 105 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 11
9999 mem: storing 1042 in location 1283
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1283 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1284
 105 run: *cursor-contents <- copy c
9999 mem: location 1265 is 50
9999 mem: location 1284 is 1042
9999 mem: storing 50 in location 1042
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1042
9999 mem: location 1042 is 50
9999 mem: location 1043 is 7
9999 mem: location 1283 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1285
 105 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1043
9999 mem: storing 7 in location 1043
 105 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 105 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1274 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1231 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 9 -> 8
9999 mem: storing 1203 in location 1231
9999 mem: incrementing refcount of 1203: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1232 is 1190
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 11 -> 10
9999 mem: storing 1199 in location 1232
9999 mem: incrementing refcount of 1199: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1235 is 1
9999 mem: storing 2 in location 1235
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1231 is 1203
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 1
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 104 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1235 is 2
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1241
 104 run: jump-unless at-cursor?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1231 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 51
9999 mem: storing 51 in location 1242
9990 schedule: render/new-editor/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 104 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 51
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 51
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 51
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 51
9999 mem: storing 0 in location 1243
 104 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 2
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 104 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 51
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 9 -> 10
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1265
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 105 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 105 run: trace 90, [print-character], c
9999 mem: location 1265 is 51
  90 print-character: 51 
 105 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 51
9999 mem: storing 0 in location 1275
 105 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 105 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1278
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 4 -> 5
 105 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 51
9999 mem: storing 0 in location 1281
 105 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 12
9999 mem: storing 1044 in location 1283
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1283 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1284
 105 run: *cursor-contents <- copy c
9999 mem: location 1265 is 51
9999 mem: location 1284 is 1044
9999 mem: storing 51 in location 1044
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1044
9999 mem: location 1044 is 51
9999 mem: location 1045 is 7
9999 mem: location 1283 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1285
 105 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1045
9999 mem: storing 7 in location 1045
 105 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 105 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1274 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1231 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 9 -> 8
9999 mem: storing 1207 in location 1231
9999 mem: incrementing refcount of 1207: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1232 is 1199
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 11 -> 10
9999 mem: storing 1203 in location 1232
9999 mem: incrementing refcount of 1203: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1235 is 2
9999 mem: storing 3 in location 1235
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1231 is 1207
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 1
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 104 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1235 is 3
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1241
 104 run: jump-unless at-cursor?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1231 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1242
 104 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 10
9999 mem: storing 1 in location 1243
 104 run: jump-unless newline?, 
9999 mem: location 1243 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1235 is 3
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1244
 104 run: jump-unless left-of-cursor?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1226 is 1012
9999 mem: location 1235 is 3
9999 mem: location 1230 is 9
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 10 -> 11
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1184
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1185
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1186
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1187
9999 mem: storing 0 in location 1188
 105 run: jump-if bg-color-found?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1187
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 3
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 105 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 11 -> 12
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 106 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 106 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 106 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 106 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1278
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 5 -> 6
 106 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 13
9999 mem: storing 1046 in location 1283
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1283 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1284
 106 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1046
9999 mem: storing 32 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1283 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1285
 106 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 106 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1274 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 12 -> 11
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 11 -> 12
 105 run: column <- add column, 1
9999 mem: location 1184 is 3
9999 mem: storing 4 in location 1184
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 4
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 105 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 12 -> 13
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 106 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 106 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 106 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 106 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1278
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 6 -> 7
 106 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 14
9999 mem: storing 1048 in location 1283
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1283 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1284
 106 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1048
9999 mem: storing 32 in location 1048
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1283 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1285
 106 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1049
9999 mem: storing 7 in location 1049
 106 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 106 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1274 is 1016
9999 mem: storing 5 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 13 -> 12
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 12 -> 13
 105 run: column <- add column, 1
9999 mem: location 1184 is 4
9999 mem: storing 5 in location 1184
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 5
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 105 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 13 -> 14
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 106 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 106 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 106 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 106 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1278
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 7 -> 8
 106 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 15
9999 mem: storing 1050 in location 1283
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1283 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1284
 106 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1050
9999 mem: storing 32 in location 1050
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1283 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1285
 106 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1051
9999 mem: storing 7 in location 1051
 106 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 106 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1274 is 1016
9999 mem: storing 6 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 14 -> 13
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 13 -> 14
 105 run: column <- add column, 1
9999 mem: location 1184 is 5
9999 mem: storing 6 in location 1184
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 6
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 105 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 14 -> 15
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 106 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 106 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 106 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 106 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1278
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 8 -> 9
 106 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 16
9999 mem: storing 1052 in location 1283
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1283 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1284
 106 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1052
9999 mem: storing 32 in location 1052
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1283 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1285
 106 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1053
9999 mem: storing 7 in location 1053
 106 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 106 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1274 is 1016
9999 mem: storing 7 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 15 -> 14
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 14 -> 15
 105 run: column <- add column, 1
9999 mem: location 1184 is 6
9999 mem: storing 7 in location 1184
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 7
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 105 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 15 -> 16
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 106 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 106 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 106 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 106 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1278
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 9 -> 10
 106 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 17
9999 mem: storing 1054 in location 1283
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1283 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1284
 106 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1054
9999 mem: storing 32 in location 1054
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1283 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1285
 106 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1055
9999 mem: storing 7 in location 1055
 106 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 106 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1274 is 1016
9999 mem: storing 8 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 16 -> 15
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 15 -> 16
 105 run: column <- add column, 1
9999 mem: location 1184 is 7
9999 mem: storing 8 in location 1184
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 8
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 105 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 16 -> 17
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 106 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 106 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 106 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 106 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1278
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 10 -> 11
 106 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 18
9999 mem: storing 1056 in location 1283
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1283 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1284
 106 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1056
9999 mem: storing 32 in location 1056
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1283 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1285
 106 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1057
9999 mem: storing 7 in location 1057
 106 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 106 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1274 is 1016
9999 mem: storing 9 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 17 -> 16
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 16 -> 17
 105 run: column <- add column, 1
9999 mem: location 1184 is 8
9999 mem: storing 9 in location 1184
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 9
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 105 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 17 -> 18
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 106 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 106 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 106 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 106 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 106 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 106 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1278
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 11 -> 12
 106 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 106 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 19
9999 mem: storing 1058 in location 1283
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1283 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1284
 106 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1058
9999 mem: storing 32 in location 1058
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1283 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1285
 106 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1059
9999 mem: storing 7 in location 1059
 106 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1286 is 9
9999 mem: storing 1 in location 1287
 106 run: jump-if at-right?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 18 -> 17
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1184 is 9
9999 mem: storing 10 in location 1184
 105 run: jump 
9998 run: jumping to instruction 11
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 10
9999 mem: location 1185 is 9
9999 mem: storing 1 in location 1189
 105 run: jump-if done?, 
9999 mem: location 1189 is 1
9998 run: jumping to instruction 16
 105 run: reply screen:address:shared:screen
9999 mem: location 1183 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1234 is 1
9999 mem: storing 2 in location 1234
 104 run: column <- copy left
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1235
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1226 is 1012
9999 mem: location 1234 is 2
9999 mem: location 1235 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 18 -> 19
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 19 -> 18
9999 mem: storing 1012 in location 1226
9999 mem: incrementing refcount of 1012: 18 -> 19
 104 run: curr <- next_2 curr
9999 mem: location 1231 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 9 -> 8
9999 mem: storing 1211 in location 1231
9999 mem: incrementing refcount of 1211: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1232 is 1203
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 11 -> 10
9999 mem: storing 1207 in location 1232
9999 mem: incrementing refcount of 1207: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1231 is 1211
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 2
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 104 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1240
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1231 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 52
9999 mem: storing 52 in location 1242
 104 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 52
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 52
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 52
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 52
9999 mem: storing 0 in location 1243
 104 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 0
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 104 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 52
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 19 -> 20
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1265
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 105 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 105 run: trace 90, [print-character], c
9999 mem: location 1265 is 52
  90 print-character: 52 
 105 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 52
9999 mem: storing 0 in location 1275
 105 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 105 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1278
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 12 -> 13
 105 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 52
9999 mem: storing 0 in location 1281
 105 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 20
9999 mem: storing 1060 in location 1283
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1283 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1284
 105 run: *cursor-contents <- copy c
9999 mem: location 1265 is 52
9999 mem: location 1284 is 1060
9999 mem: storing 52 in location 1060
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1060
9999 mem: location 1060 is 52
9999 mem: location 1061 is 7
9999 mem: location 1283 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1285
 105 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1061
9999 mem: storing 7 in location 1061
 105 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 105 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1231 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 9 -> 8
9999 mem: storing 1215 in location 1231
9999 mem: incrementing refcount of 1215: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1232 is 1207
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 11 -> 10
9999 mem: storing 1211 in location 1232
9999 mem: incrementing refcount of 1211: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1235 is 0
9999 mem: storing 1 in location 1235
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1231 is 1215
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 2
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 104 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1240
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1231 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 53
9999 mem: storing 53 in location 1242
 104 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 53
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 53 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 53
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 53
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 53
9999 mem: storing 0 in location 1243
 104 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 1
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 104 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 53
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 20 -> 21
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 53 in location 1265
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 105 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 105 run: trace 90, [print-character], c
9999 mem: location 1265 is 53
  90 print-character: 53 
 105 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 53
9999 mem: storing 0 in location 1275
 105 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 105 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1278
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 13 -> 14
 105 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 53
9999 mem: storing 0 in location 1281
 105 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 21
9999 mem: storing 1062 in location 1283
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1283 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1284
 105 run: *cursor-contents <- copy c
9999 mem: location 1265 is 53
9999 mem: location 1284 is 1062
9999 mem: storing 53 in location 1062
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1062
9999 mem: location 1062 is 53
9999 mem: location 1063 is 7
9999 mem: location 1283 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1285
 105 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1063
9999 mem: storing 7 in location 1063
 105 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 105 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1274 is 1016
9999 mem: storing 2 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1231 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 4 -> 5
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 9 -> 8
9999 mem: storing 1219 in location 1231
9999 mem: incrementing refcount of 1219: 5 -> 6
 104 run: prev <- next_2 prev
9999 mem: location 1232 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 11 -> 10
9999 mem: storing 1215 in location 1232
9999 mem: incrementing refcount of 1215: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1235 is 1
9999 mem: storing 2 in location 1235
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1231 is 1219
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 2
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 104 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1240
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1231 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 54
9999 mem: storing 54 in location 1242
 104 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 54
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 54 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 54
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 54
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 54
9999 mem: storing 0 in location 1243
 104 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 2
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 104 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 54
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 21 -> 22
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 54 in location 1265
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 105 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 105 run: trace 90, [print-character], c
9999 mem: location 1265 is 54
  90 print-character: 54 
 105 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 105 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 54
9999 mem: storing 0 in location 1275
 105 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 105 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1278
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 14 -> 15
 105 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 54
9999 mem: storing 0 in location 1281
 105 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 22
9999 mem: storing 1064 in location 1283
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 7
9999 mem: location 1283 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1284
 105 run: *cursor-contents <- copy c
9999 mem: location 1265 is 54
9999 mem: location 1284 is 1064
9999 mem: storing 54 in location 1064
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1064
9999 mem: location 1064 is 54
9999 mem: location 1065 is 7
9999 mem: location 1283 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1285
 105 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1065
9999 mem: storing 7 in location 1065
 105 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 105 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1274 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1231 is 1219
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1197
9999 mem: incrementing refcount of 1219: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1219
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1198
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1219: 7 -> 6
9999 mem: storing 0 in location 1231
 104 run: prev <- next_2 prev
9999 mem: location 1232 is 1215
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 11 -> 10
9999 mem: storing 1219 in location 1232
9999 mem: incrementing refcount of 1219: 7 -> 8
 104 run: column <- add column, 1
9999 mem: location 1235 is 2
9999 mem: storing 3 in location 1235
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 68
 104 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1247
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1231 is 0
9999 mem: location 1247 is 1157
9999 mem: storing 0 in location 1157
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1240
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1235 is 3
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1248
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1240 is 0
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1249
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1250
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1251
 104 run: jump-unless before-cursor?, 
9999 mem: location 1251 is 0
9998 run: jumping to instruction 81
 104 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1252
 104 run: *bottom <- copy row
9999 mem: location 1234 is 2
9999 mem: location 1252 is 1161
9999 mem: storing 2 in location 1161
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1234 is 2
9999 mem: location 1235 is 3
9999 mem: location 1226 is 1012
9999 mem: location 1227 is 1154
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 2
9998 run: result 1 is 3
9998 run: result 2 is 1012
9998 run: result 3 is 1154
9999 mem: decrementing refcount of 1012: 22 -> 21
9999 mem: storing 1012 in location 1145
9999 mem: incrementing refcount of 1012: 21 -> 22
9999 mem: decrementing refcount of 1154: 3 -> 2
9999 mem: storing 1154 in location 1148
9999 mem: incrementing refcount of 1154: 2 -> 3
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1148 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1153
 103 run: *indent? <- copy 1/true
9999 mem: location 1153 is 1164
9999 mem: storing 1 in location 1164
 103 run: reply result:address:shared:editor-data, screen:address:shared:screen
9999 mem: location 1148 is 1154
9999 mem: location 1145 is 1012
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1154
9999 mem: storing 1154 in location 2
9999 mem: incrementing refcount of 1154: 3 -> 4
 102 run: assume-console [
    left-click 1, 3
    press ctrl-k
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"3": "literal"}
9992 load: after rewriting: left-click 1, 3
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"ctrl-k": <>}
9992 load: after rewriting: press ctrl-k
9999 mem: storing 'left-click' event starting at 1290
9999 mem: storing 'press' event starting at 1294
9999 mem: storing console in 1298
9999 mem: storing console data in 1300
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 97
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 97
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1298
9999 mem: location 2 is 1154
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1301
9999 mem: storing 14 in location 1302
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 22 -> 23
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1306
9999 mem: incrementing refcount of 1154: 4 -> 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 1
9999 mem: location 1308 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 23 -> 24
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 24 -> 23
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 23 -> 24
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1317
9999 mem: storing 12 in location 1318
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1320
9999 mem: incrementing refcount of 1298: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1320 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 0
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1321
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 0
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1288
9999 mem: storing 1288 in location 1322
9999 mem: incrementing refcount of 1288: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9999 mem: storing 2 in location 1323
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 0
9999 mem: location 1323 is 2
9999 mem: storing 0 in location 1324
 105 run: jump-unless done?, 
9999 mem: location 1324 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9998 run: base address is 1289
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 0
9998 run: address to copy is 1290
9998 run: its type is event
9999 mem: location 1290 is 2
9999 mem: location 1291 is 65513
9999 mem: location 1292 is 1
9999 mem: location 1293 is 3
9999 mem: storing 2 in location 1326
9999 mem: storing 65513 in location 1327
9999 mem: storing 1 in location 1328
9999 mem: storing 3 in location 1329
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 0
9999 mem: location 1321 is 1299
9999 mem: storing 1 in location 1299
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1326 is 2
9999 mem: location 1327 is 65513
9999 mem: location 1328 is 1
9999 mem: location 1329 is 3
9999 mem: location 1320 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 3]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1309
9999 mem: storing 65513 in location 1310
9999 mem: storing 1 in location 1311
9999 mem: storing 3 in location 1312
9999 mem: decrementing refcount of 1298: 2 -> 1
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 1 -> 2
9999 mem: storing 1 in location 1313
9999 mem: storing 0 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1309 is 2
9999 mem: location 1310 is 65513
9999 mem: location 1311 is 1
9999 mem: location 1312 is 3
9999 mem: storing 1310 in location 1315
 104 run: jump-unless t, 
9999 mem: location 1315 is 1310
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1304 is 1012
9999 mem: location 1306 is 1154
9999 mem: location 1315 is 1310
9999 mem: location 1310 is 65513
9999 mem: location 1311 is 1
9999 mem: location 1312 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1331
9999 mem: storing 27 in location 1332
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 24 -> 25
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1335
9999 mem: incrementing refcount of 1154: 5 -> 6
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1336
9999 mem: storing 1 in location 1337
9999 mem: storing 3 in location 1338
 105 run: jump-if editor, 1:offset
9999 mem: location 1335 is 1154
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1336 is 65513
9999 mem: location 1337 is 1
9999 mem: location 1338 is 3
9998 run: address to copy is 1337
9998 run: its type is number
9999 mem: location 1337 is 1
9999 mem: storing 1 in location 1339
 105 run: jump-if click-row, 1:offset
9999 mem: location 1339 is 1
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1336 is 65513
9999 mem: location 1337 is 1
9999 mem: location 1338 is 3
9998 run: address to copy is 1338
9998 run: its type is number
9999 mem: location 1338 is 3
9999 mem: storing 3 in location 1340
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1341
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1340 is 3
9999 mem: location 1341 is 0
9999 mem: storing 0 in location 1342
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1342 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1343
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1340 is 3
9999 mem: location 1343 is 9
9999 mem: storing 0 in location 1344
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1344 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1345
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1346
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1347
9999 mem: incrementing refcount of 1176: 9 -> 10
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1334 is 1012
9999 mem: location 1335 is 1154
9999 mem: location 1339 is 1
9999 mem: location 1340 is 3
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1360
9999 mem: storing 26 in location 1361
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1363
9999 mem: incrementing refcount of 1012: 25 -> 26
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1364
9999 mem: incrementing refcount of 1154: 6 -> 7
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1365
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1366
 106 run: jump-if editor, 1:offset
9999 mem: location 1364 is 1154
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1367
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1368
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1363 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 26 -> 27
 107 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1198
 107 run: reply height:number
9999 mem: location 1198 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1369
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1370
9999 mem: incrementing refcount of 1176: 10 -> 11
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1370 is 1176
9999 mem: storing 1176 in location 1371
9999 mem: incrementing refcount of 1176: 11 -> 12
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 13 -> 12
9999 mem: storing 1190 in location 1370
9999 mem: incrementing refcount of 1190: 11 -> 12
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1372
 106 run: column:number <- copy left
9999 mem: location 1367 is 0
9999 mem: storing 0 in location 1373
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1374
 106 run: *cursor-row <- copy target-row
9999 mem: location 1365 is 1
9999 mem: location 1374 is 1162
9999 mem: storing 1 in location 1162
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1375
 106 run: *cursor-column <- copy target-column
9999 mem: location 1366 is 3
9999 mem: location 1375 is 1163
9999 mem: storing 3 in location 1163
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1176
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1364 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1376
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1190
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 1
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1373 is 0
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1379
 106 run: jump-unless at-cursor?, 
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1370 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is character
9999 mem: location 1191 is 49
9999 mem: storing 49 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 49
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 0
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 13 -> 12
9999 mem: storing 1199 in location 1370
9999 mem: incrementing refcount of 1199: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 13 -> 12
9999 mem: storing 1190 in location 1371
9999 mem: incrementing refcount of 1190: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 0
9999 mem: storing 1 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1199
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 1
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1373 is 1
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1379
 106 run: jump-unless at-cursor?, 
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1370 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 50
9999 mem: storing 50 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 50
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 1
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 13 -> 12
9999 mem: storing 1203 in location 1370
9999 mem: incrementing refcount of 1203: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 15 -> 14
9999 mem: storing 1199 in location 1371
9999 mem: incrementing refcount of 1199: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 1
9999 mem: storing 2 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1203
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 1
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1373 is 2
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1379
 106 run: jump-unless at-cursor?, 
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1370 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 51
9999 mem: storing 51 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 51
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 2
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: storing 1207 in location 1370
9999 mem: incrementing refcount of 1207: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 15 -> 14
9999 mem: storing 1203 in location 1371
9999 mem: incrementing refcount of 1203: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 2
9999 mem: storing 3 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1207
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 1
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1373 is 3
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 1 in location 1379
 106 run: jump-unless at-cursor?, 
9999 mem: location 1379 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1371 is 1203
9999 mem: location 1376 is 1158
9999 mem: decrementing refcount of 1176: 12 -> 11
9999 mem: storing 1203 in location 1158
9999 mem: incrementing refcount of 1203: 14 -> 15
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1370 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 10
9999 mem: storing 1 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 1
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1373 is 3
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1382
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1382 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1372 is 1
9999 mem: storing 2 in location 1372
 106 run: column <- copy left
9999 mem: location 1367 is 0
9999 mem: storing 0 in location 1373
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 13 -> 12
9999 mem: storing 1211 in location 1370
9999 mem: incrementing refcount of 1211: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 15 -> 16
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 16 -> 15
9999 mem: storing 1207 in location 1371
9999 mem: incrementing refcount of 1207: 13 -> 14
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1211
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 2
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1370 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 52
9999 mem: storing 52 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 52
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 0
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 13 -> 12
9999 mem: storing 1215 in location 1370
9999 mem: incrementing refcount of 1215: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 15 -> 14
9999 mem: storing 1211 in location 1371
9999 mem: incrementing refcount of 1211: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 0
9999 mem: storing 1 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1215
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 2
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1370 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 53
9999 mem: storing 53 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 53
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 1
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 8 -> 9
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 13 -> 12
9999 mem: storing 1219 in location 1370
9999 mem: incrementing refcount of 1219: 9 -> 10
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 15 -> 14
9999 mem: storing 1215 in location 1371
9999 mem: incrementing refcount of 1215: 13 -> 14
 106 run: column <- add column, 1
9999 mem: location 1373 is 1
9999 mem: storing 2 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 1219
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1372 is 2
9999 mem: location 1369 is 5
9999 mem: storing 0 in location 1377
 106 run: jump-if off-screen?, 
9999 mem: location 1377 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1378
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1378 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1370 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1370 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 54
9999 mem: storing 54 in location 1380
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1380 is 54
9999 mem: storing 0 in location 1381
 106 run: jump-unless newline?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1373 is 2
9999 mem: location 1368 is 9
9999 mem: storing 0 in location 1383
 106 run: jump-unless at-right?, 
9999 mem: location 1383 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1370 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1197
9999 mem: incrementing refcount of 1219: 10 -> 11
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1198
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1219: 11 -> 10
9999 mem: storing 0 in location 1370
 106 run: prev <- next_2 prev
9999 mem: location 1371 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 15 -> 14
9999 mem: storing 1219 in location 1371
9999 mem: incrementing refcount of 1219: 11 -> 12
 106 run: column <- add column, 1
9999 mem: location 1373 is 2
9999 mem: storing 3 in location 1373
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1370 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1378
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1373 is 3
9999 mem: location 1375 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 1 in location 1384
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1378 is 0
9999 mem: location 1384 is 1
9999 mem: storing 0 in location 1385
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1372 is 2
9999 mem: location 1374 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1386
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1385 is 0
9999 mem: location 1386 is 0
9999 mem: storing 0 in location 1387
 106 run: jump-unless before-cursor?, 
9999 mem: location 1387 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1364 is 1154
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 7 -> 6
9999 mem: storing 1154 in location 1335
9999 mem: incrementing refcount of 1154: 6 -> 7
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1348
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1349
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1350
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1335 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1351
9999 mem: incrementing refcount of 1176: 11 -> 12
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1353
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1345 is 1
9999 mem: location 1346 is 0
9999 mem: location 1347 is 1176
9999 mem: location 1349 is 1
9999 mem: location 1350 is 3
9999 mem: location 1351 is 1176
9999 mem: location 1348 is 0
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1176 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 3 in location 1006
9999 mem: storing 1176 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1335 is 1154
9999 mem: location 1353 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1388
9999 mem: storing 5 in location 1389
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1391
9999 mem: incrementing refcount of 1154: 7 -> 8
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1392
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1393
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1392 is 1000
9999 mem: location 1393 is 1165
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1256
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1257
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1395
9999 mem: storing 1395 in location 1258
9999 mem: incrementing refcount of 1395: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1258 is 1395
9999 mem: skipping refcount at 1395
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1396 is 0
9999 mem: location 1397 is 0
9999 mem: location 1258 is 1395
9999 mem: skipping refcount at 1395
9998 run: address to copy is 1396
9999 mem: storing 1396 in location 1259
 107 run: *val <- copy x
9999 mem: location 1256 is 1000
9999 mem: location 1259 is 1396
9999 mem: storing 1000 in location 1396
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1258 is 1395
9999 mem: skipping refcount at 1395
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1396 is 1000
9999 mem: location 1397 is 0
9999 mem: location 1258 is 1395
9999 mem: skipping refcount at 1395
9999 type: type deduced to be address$
9998 run: address to copy is 1397
9999 mem: storing 1397 in location 1260
 107 run: *next <- copy in
9999 mem: location 1257 is 0
9999 mem: location 1260 is 1397
9999 mem: storing 0 in location 1397
 107 run: reply result
9999 mem: location 1258 is 1395
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1395
9999 mem: location 1393 is 1165
9999 mem: storing 1395 in location 1165
9999 mem: incrementing refcount of 1395: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1394
 106 run: *redo <- copy 0
9999 mem: location 1394 is 1166
9999 mem: storing 0 in location 1166
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1391 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 8 -> 7
9999 mem: storing 1154 in location 1335
9999 mem: incrementing refcount of 1154: 7 -> 8
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 1
9999 mem: location 1308 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 27 -> 28
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 28 -> 27
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 27 -> 28
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1320
9999 mem: incrementing refcount of 1298: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1320 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 1
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1321
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 1
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1288
9999 mem: storing 1288 in location 1322
9999 mem: incrementing refcount of 1288: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9999 mem: storing 2 in location 1323
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 1
9999 mem: location 1323 is 2
9999 mem: storing 0 in location 1324
 105 run: jump-unless done?, 
9999 mem: location 1324 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9998 run: base address is 1289
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 1
9998 run: address to copy is 1294
9998 run: its type is event
9999 mem: location 1294 is 0
9999 mem: location 1295 is 11
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: storing 0 in location 1326
9999 mem: storing 11 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 1
9999 mem: location 1321 is 1299
9999 mem: storing 2 in location 1299
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1326 is 0
9999 mem: location 1327 is 11
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: location 1320 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 11, 0, 0]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1309
9999 mem: storing 11 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: decrementing refcount of 1298: 3 -> 2
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 2 -> 3
9999 mem: storing 1 in location 1313
9999 mem: storing 0 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1309 is 0
9999 mem: location 1310 is 11
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: storing 0 in location 1315
 104 run: jump-unless t, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1315 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1304 is 1012
9999 mem: location 1306 is 1154
9999 mem: location 1309 is 0
9999 mem: location 1310 is 11
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1398
9999 mem: storing 85 in location 1399
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1401
9999 mem: incrementing refcount of 1012: 28 -> 29
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1402
9999 mem: incrementing refcount of 1154: 8 -> 9
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1403
9999 mem: storing 11 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: storing 0 in location 1406
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1407
 105 run: jump-if editor, 1:offset
9999 mem: location 1402 is 1154
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1401 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 29 -> 30
 106 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1198
 106 run: reply width:number
9999 mem: location 1198 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1408
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1401 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 30 -> 31
 106 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1198
 106 run: reply height:number
9999 mem: location 1198 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1409
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1410
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1411
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1412
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1413
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1414
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1413 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1415
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1414 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1416
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1403 is 0
9999 mem: location 1404 is 11
9999 mem: location 1405 is 0
9999 mem: location 1406 is 0
9999 mem: storing 1404 in location 1417
 105 run: jump-unless c, 
9999 mem: location 1417 is 1404
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1417 is 1404
9999 mem: location 1404 is 11
9999 mem: storing 0 in location 1418
 105 run: jump-unless redo?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1417 is 1404
9999 mem: location 1404 is 11
9999 mem: storing 0 in location 1429
 105 run: jump-unless undo?, 
9999 mem: location 1429 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1417 is 1404
9999 mem: location 1404 is 11
9999 mem: storing 0 in location 1434
 105 run: jump-unless page-up?, 
9999 mem: location 1434 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1417 is 1404
9999 mem: location 1404 is 11
9999 mem: storing 0 in location 1450
 105 run: jump-unless page-down?, 
9999 mem: location 1450 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1417 is 1404
9999 mem: location 1404 is 11
9999 mem: storing 1 in location 1451
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1451 is 1
9998 run: jump-unless fell through
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1452
9999 mem: incrementing refcount of 1176: 12 -> 13
 105 run: deleted-cells:address:shared:duplex-list:character <- delete-to-end-of-line editor
9999 mem: location 1402 is 1154
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1183
9999 mem: incrementing refcount of 1154: 9 -> 10
 106 run: start:address:shared:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1183 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1183 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1158 is 1203
9999 mem: storing 1203 in location 1184
9999 mem: incrementing refcount of 1203: 15 -> 16
 106 run: end:address:shared:duplex-list:character <- next_2 start
9999 mem: location 1184 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1185
9999 mem: incrementing refcount of 1207: 15 -> 16
 106 run: at-end-of-text?:boolean <- equal end, 0/null
9999 mem: location 1185 is 1207
9999 mem: storing 0 in location 1186
 106 run: jump-if at-end-of-text?, 
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 106 run: curr:character <- get *end, value:offset
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1187
 106 run: at-end-of-line?:boolean <- equal curr, 10/newline
9999 mem: location 1187 is 10
9999 mem: storing 1 in location 1188
 106 run: jump-if at-end-of-line?, 
9999 mem: location 1188 is 1
9998 run: jumping to instruction 12
 106 run: result <- next_2 start
9999 mem: location 1184 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 17 -> 18
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1189
9999 mem: incrementing refcount of 1207: 17 -> 18
 106 run: remove-between_2 start, end
9999 mem: location 1184 is 1203
9999 mem: location 1185 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: start:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1256
9999 mem: incrementing refcount of 1203: 18 -> 19
 107 run: end:address:shared:duplex-list:_elem/contained-in:start <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1257
9999 mem: incrementing refcount of 1207: 18 -> 19
 107 run: jump-if start, 1:offset
9999 mem: location 1256 is 1203
9998 run: jumping to instruction 5
 107 run: next:address:address:shared:duplex-list:_elem <- get-address *start, next:offset
9999 mem: location 1256 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1256 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1258
 107 run: nothing-to-delete?:boolean <- equal *next, end
9999 mem: location 1258 is 1205
9999 mem: location 1205 is 1207
9999 mem: location 1257 is 1207
9999 mem: storing 1 in location 1259
 107 run: jump-unless nothing-to-delete?, 1:offset
9999 mem: location 1259 is 1
9998 run: jump-unless fell through
 107 run: reply start:address:shared:duplex-list:_elem
9999 mem: location 1256 is 1203
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply result:address:shared:duplex-list:character, editor:address:shared:editor-data
9999 mem: location 1189 is 1207
9999 mem: location 1183 is 1154
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1453
9999 mem: incrementing refcount of 1207: 19 -> 20
 105 run: jump-unless deleted-cells, 
9999 mem: location 1453 is 1207
9998 run: jump-unless fell through
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1454
9999 mem: incrementing refcount of 1176: 13 -> 14
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1402 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1421
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1120 in location 1420
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: deleted-until:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1412 is 1158
9999 mem: location 1158 is 1203
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 19 -> 20
 106 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 20 -> 21
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1455
9999 mem: incrementing refcount of 1207: 21 -> 22
 105 run: *op <- merge 2/delete-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, deleted-cells/deleted, *before-cursor/delete-from, deleted-until, 0/never-coalesce
9999 mem: location 1415 is 1
9999 mem: location 1416 is 3
9999 mem: location 1452 is 1176
9999 mem: location 1413 is 1162
9999 mem: location 1162 is 1
9999 mem: location 1414 is 1163
9999 mem: location 1163 is 3
9999 mem: location 1454 is 1176
9999 mem: location 1453 is 1207
9999 mem: location 1412 is 1158
9999 mem: location 1158 is 1203
9999 mem: location 1455 is 1207
9999 mem: location 1420 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1420 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 2 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 3 in location 1123
9999 mem: storing 1176 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 3 in location 1126
9999 mem: storing 1176 in location 1127
9999 mem: storing 1207 in location 1128
9999 mem: storing 1203 in location 1129
9999 mem: storing 1207 in location 1130
9999 mem: storing 0 in location 1131
 105 run: editor <- add-operation editor, op
9999 mem: location 1402 is 1154
9999 mem: location 1420 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1391
9999 mem: incrementing refcount of 1154: 10 -> 11
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1392
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1395
9999 mem: location 1166 is 0
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1393
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1392 is 1120
9999 mem: location 1393 is 1165
9999 mem: location 1165 is 1395
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1256
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1395 in location 1257
9999 mem: incrementing refcount of 1395: 2 -> 3
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1485
9999 mem: storing 1485 in location 1258
9999 mem: incrementing refcount of 1485: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1258 is 1485
9999 mem: skipping refcount at 1485
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1486 is 0
9999 mem: location 1487 is 0
9999 mem: location 1258 is 1485
9999 mem: skipping refcount at 1485
9998 run: address to copy is 1486
9999 mem: storing 1486 in location 1259
 107 run: *val <- copy x
9999 mem: location 1256 is 1120
9999 mem: location 1259 is 1486
9999 mem: storing 1120 in location 1486
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1258 is 1485
9999 mem: skipping refcount at 1485
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1486 is 1120
9999 mem: location 1487 is 0
9999 mem: location 1258 is 1485
9999 mem: skipping refcount at 1485
9999 type: type deduced to be address$
9998 run: address to copy is 1487
9999 mem: storing 1487 in location 1260
 107 run: *next <- copy in
9999 mem: location 1257 is 1395
9999 mem: location 1260 is 1487
9999 mem: storing 1395 in location 1487
9999 mem: incrementing refcount of 1395: 3 -> 4
 107 run: reply result
9999 mem: location 1258 is 1485
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1485
9999 mem: location 1393 is 1165
9999 mem: decrementing refcount of 1395: 4 -> 3
9999 mem: storing 1485 in location 1165
9999 mem: incrementing refcount of 1485: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1391 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1394
 106 run: *redo <- copy 0
9999 mem: location 1394 is 1166
9999 mem: storing 0 in location 1166
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1391 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 11 -> 10
9999 mem: storing 1154 in location 1402
9999 mem: incrementing refcount of 1154: 10 -> 11
 105 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1407
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1401 is 1012
9999 mem: location 1402 is 1154
9999 mem: location 1407 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1154
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 31 -> 30
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 30 -> 31
9999 mem: decrementing refcount of 1154: 11 -> 10
9999 mem: storing 1154 in location 1306
9999 mem: incrementing refcount of 1154: 10 -> 11
9999 mem: storing 1 in location 1316
 104 run: jump-unless go-render?, 
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1304 is 1012
9999 mem: location 1306 is 1154
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1170
9999 mem: incrementing refcount of 1012: 31 -> 32
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1171
9999 mem: incrementing refcount of 1154: 11 -> 12
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1171 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1171 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1172
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1171 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1171 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1173
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1170 is 1012
9999 mem: location 1171 is 1154
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1226
9999 mem: incrementing refcount of 1012: 32 -> 33
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1227
9999 mem: incrementing refcount of 1154: 12 -> 13
 106 run: jump-if editor, 1:offset
9999 mem: location 1227 is 1154
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1228
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1226 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 33 -> 34
 107 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1198
 107 run: reply height:number
9999 mem: location 1198 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1229
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is number
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1230
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1176
9999 mem: storing 1176 in location 1231
9999 mem: incrementing refcount of 1176: 14 -> 15
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1231 is 1176
9999 mem: storing 1176 in location 1232
9999 mem: incrementing refcount of 1176: 15 -> 16
 106 run: curr <- next_2 curr
9999 mem: location 1231 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 17 -> 16
9999 mem: storing 1190 in location 1231
9999 mem: incrementing refcount of 1190: 15 -> 16
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1233
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1234
 106 run: column:number <- copy left
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1235
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1236
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1237
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1238
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1226 is 1012
9999 mem: location 1234 is 1
9999 mem: location 1235 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 34 -> 35
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 107 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 107 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 107 run: *column <- copy new-column
9999 mem: location 1258 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 35 -> 34
9999 mem: storing 1012 in location 1226
9999 mem: incrementing refcount of 1012: 34 -> 35
 106 run: jump-unless curr, 
9999 mem: location 1231 is 1190
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 1
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 106 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1235 is 0
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1241
 106 run: jump-unless at-cursor?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1231 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is character
9999 mem: location 1191 is 49
9999 mem: storing 49 in location 1242
 106 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 49
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1488
9999 mem: storing 10 in location 1489
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1491
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1492
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1491 is 7
9999 mem: storing 1 in location 1493
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1492 is 49
9999 mem: storing 0 in location 1494
 107 run: jump-unless starting-comment?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1495
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1492 is 49
9999 mem: storing 0 in location 1497
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1497 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1498
 107 run: jump-unless color-is-red?, 
9999 mem: location 1498 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1491 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 49
9999 mem: storing 0 in location 1243
 106 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 0
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 106 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 49
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 35 -> 36
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 49
  90 print-character: 49 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 49
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 15 -> 16
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 49
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 10
9999 mem: storing 1040 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1040
9999 mem: location 1040 is 49
9999 mem: location 1041 is 7
9999 mem: location 1283 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 49
9999 mem: location 1284 is 1040
9999 mem: storing 49 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1040
9999 mem: location 1040 is 49
9999 mem: location 1041 is 7
9999 mem: location 1283 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1231 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 17 -> 16
9999 mem: storing 1199 in location 1231
9999 mem: incrementing refcount of 1199: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1232 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1197
9999 mem: incrementing refcount of 1176: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 167
9999 mem: location 1178 is 1190
9999 mem: location 1179 is 0
9999 mem: location 1197 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1190
9999 mem: storing 1190 in location 1198
9999 mem: incrementing refcount of 1190: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: decrementing refcount of 1176: 17 -> 16
9999 mem: storing 1190 in location 1232
9999 mem: incrementing refcount of 1190: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1235 is 0
9999 mem: storing 1 in location 1235
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1231 is 1199
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 1
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 106 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1235 is 1
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1241
 106 run: jump-unless at-cursor?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1231 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is character
9999 mem: location 1200 is 50
9999 mem: storing 50 in location 1242
 106 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 50
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1491
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1492
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1491 is 7
9999 mem: storing 1 in location 1493
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1492 is 50
9999 mem: storing 0 in location 1494
 107 run: jump-unless starting-comment?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1495
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1492 is 50
9999 mem: storing 0 in location 1497
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1497 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1498
 107 run: jump-unless color-is-red?, 
9999 mem: location 1498 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1491 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 50
9999 mem: storing 0 in location 1243
 106 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 1
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 106 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 50
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 36 -> 37
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 50
  90 print-character: 50 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 50
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 16 -> 17
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 50
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 11
9999 mem: storing 1042 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1042
9999 mem: location 1042 is 50
9999 mem: location 1043 is 7
9999 mem: location 1283 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 50
9999 mem: location 1284 is 1042
9999 mem: storing 50 in location 1042
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1042
9999 mem: location 1042 is 50
9999 mem: location 1043 is 7
9999 mem: location 1283 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1043
9999 mem: storing 7 in location 1043
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1274 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1231 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 20 -> 21
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 17 -> 16
9999 mem: storing 1203 in location 1231
9999 mem: incrementing refcount of 1203: 21 -> 22
 106 run: prev <- next_2 prev
9999 mem: location 1232 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1197
9999 mem: incrementing refcount of 1190: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 49
9999 mem: location 1192 is 1199
9999 mem: location 1193 is 1176
9999 mem: location 1197 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1199
9999 mem: storing 1199 in location 1198
9999 mem: incrementing refcount of 1199: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1190: 19 -> 18
9999 mem: storing 1199 in location 1232
9999 mem: incrementing refcount of 1199: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1235 is 1
9999 mem: storing 2 in location 1235
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1231 is 1203
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 1
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 106 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1235 is 2
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1241
 106 run: jump-unless at-cursor?, 
9999 mem: location 1241 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1231 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 51
9999 mem: storing 51 in location 1242
 106 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 51
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1491
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1492
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1491 is 7
9999 mem: storing 1 in location 1493
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1492 is 51
9999 mem: storing 0 in location 1494
 107 run: jump-unless starting-comment?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1495
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1492 is 51
9999 mem: storing 0 in location 1497
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1497 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1498
 107 run: jump-unless color-is-red?, 
9999 mem: location 1498 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1491 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 51
9999 mem: storing 0 in location 1243
 106 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 2
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 106 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 51
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 37 -> 38
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 51
  90 print-character: 51 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 51
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 17 -> 18
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 51
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 12
9999 mem: storing 1044 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1044
9999 mem: location 1044 is 51
9999 mem: location 1045 is 7
9999 mem: location 1283 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 51
9999 mem: location 1284 is 1044
9999 mem: storing 51 in location 1044
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1044
9999 mem: location 1044 is 51
9999 mem: location 1045 is 7
9999 mem: location 1283 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1045
9999 mem: storing 7 in location 1045
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1274 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1231 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 22 -> 23
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 23 -> 22
9999 mem: storing 1207 in location 1231
9999 mem: incrementing refcount of 1207: 23 -> 24
 106 run: prev <- next_2 prev
9999 mem: location 1232 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1197
9999 mem: incrementing refcount of 1199: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1199
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1200 is 50
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1190
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 type: type deduced to be character$
9998 run: address to copy is 1201
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1198
9999 mem: incrementing refcount of 1203: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 19 -> 18
9999 mem: storing 1203 in location 1232
9999 mem: incrementing refcount of 1203: 23 -> 24
 106 run: column <- add column, 1
9999 mem: location 1235 is 2
9999 mem: storing 3 in location 1235
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1231 is 1207
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 1
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 106 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1235 is 3
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 1 in location 1241
 106 run: jump-unless at-cursor?, 
9999 mem: location 1241 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1232 is 1203
9999 mem: location 1238 is 1158
9999 mem: decrementing refcount of 1203: 24 -> 23
9999 mem: storing 1203 in location 1158
9999 mem: incrementing refcount of 1203: 23 -> 24
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1231 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 10
9999 mem: storing 10 in location 1242
 106 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1491
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1492
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1491 is 7
9999 mem: storing 1 in location 1493
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1494
 107 run: jump-unless starting-comment?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1495
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1492 is 10
9999 mem: storing 0 in location 1497
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1497 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1498
 107 run: jump-unless color-is-red?, 
9999 mem: location 1498 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1491 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 10
9999 mem: storing 1 in location 1243
 106 run: jump-unless newline?, 
9999 mem: location 1243 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 1
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1240
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1235 is 3
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 0 in location 1244
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1244 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1226 is 1012
9999 mem: location 1235 is 3
9999 mem: location 1230 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 38 -> 39
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1184
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1185
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1186
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1187
9999 mem: storing 0 in location 1188
 107 run: jump-if bg-color-found?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1187
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 3
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 39 -> 40
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 18 -> 19
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 13
9999 mem: storing 1046 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1283 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1046
9999 mem: storing 32 in location 1046
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1283 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1047
9999 mem: storing 7 in location 1047
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1274 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 40 -> 39
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 39 -> 40
 107 run: column <- add column, 1
9999 mem: location 1184 is 3
9999 mem: storing 4 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 4
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 40 -> 41
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 19 -> 20
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 14
9999 mem: storing 1048 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1283 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1048
9999 mem: storing 32 in location 1048
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1283 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1049
9999 mem: storing 7 in location 1049
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1274 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 41 -> 40
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 40 -> 41
 107 run: column <- add column, 1
9999 mem: location 1184 is 4
9999 mem: storing 5 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 5
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 41 -> 42
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 20 -> 21
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 15
9999 mem: storing 1050 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1283 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1050
9999 mem: storing 32 in location 1050
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1283 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1051
9999 mem: storing 7 in location 1051
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1274 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 42 -> 41
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 41 -> 42
 107 run: column <- add column, 1
9999 mem: location 1184 is 5
9999 mem: storing 6 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 6
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 42 -> 43
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 21 -> 22
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 16
9999 mem: storing 1052 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1283 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1052
9999 mem: storing 32 in location 1052
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1283 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1053
9999 mem: storing 7 in location 1053
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1274 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 43 -> 42
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 42 -> 43
 107 run: column <- add column, 1
9999 mem: location 1184 is 6
9999 mem: storing 7 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 7
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 43 -> 44
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 22 -> 23
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 17
9999 mem: storing 1054 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1283 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1054
9999 mem: storing 32 in location 1054
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1283 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1055
9999 mem: storing 7 in location 1055
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1274 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 44 -> 43
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 43 -> 44
 107 run: column <- add column, 1
9999 mem: location 1184 is 7
9999 mem: storing 8 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 8
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 44 -> 45
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 23 -> 24
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 18
9999 mem: storing 1056 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1283 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1056
9999 mem: storing 32 in location 1056
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1283 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1057
9999 mem: storing 7 in location 1057
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1274 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 45 -> 44
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 44 -> 45
 107 run: column <- add column, 1
9999 mem: location 1184 is 8
9999 mem: storing 9 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 9
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 45 -> 46
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1270 is 10
9999 mem: storing 10 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 10
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 24 -> 25
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 19
9999 mem: storing 1058 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1283 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1058
9999 mem: storing 32 in location 1058
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1283 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1059
9999 mem: storing 7 in location 1059
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1286 is 9
9999 mem: storing 1 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 46 -> 45
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 45 -> 46
 107 run: column <- add column, 1
9999 mem: location 1184 is 9
9999 mem: storing 10 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 10
9999 mem: location 1185 is 9
9999 mem: storing 1 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1183 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1234 is 1
9999 mem: storing 2 in location 1234
 106 run: column <- copy left
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1235
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1226 is 1012
9999 mem: location 1234 is 2
9999 mem: location 1235 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 46 -> 47
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1257
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 107 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 107 run: *row <- copy new-row
9999 mem: location 1257 is 2
9999 mem: location 1259 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 107 run: *column <- copy new-column
9999 mem: location 1258 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 47 -> 46
9999 mem: storing 1012 in location 1226
9999 mem: incrementing refcount of 1012: 46 -> 47
 106 run: curr <- next_2 curr
9999 mem: location 1231 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 25 -> 24
9999 mem: storing 1211 in location 1231
9999 mem: incrementing refcount of 1211: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1232 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1197
9999 mem: incrementing refcount of 1203: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 51
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1197 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1198
9999 mem: incrementing refcount of 1207: 24 -> 25
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 25 -> 24
9999 mem: storing 1207 in location 1232
9999 mem: incrementing refcount of 1207: 25 -> 26
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1231 is 1211
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 2
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 106 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1240
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1231 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 52
9999 mem: storing 52 in location 1242
 106 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 52
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1491
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1492
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1491 is 7
9999 mem: storing 1 in location 1493
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1492 is 52
9999 mem: storing 0 in location 1494
 107 run: jump-unless starting-comment?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1495
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1492 is 52
9999 mem: storing 0 in location 1497
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1497 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1498
 107 run: jump-unless color-is-red?, 
9999 mem: location 1498 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1491 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 52
9999 mem: storing 0 in location 1243
 106 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 0
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 106 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 52
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 47 -> 48
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 52
  90 print-character: 52 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 52
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 25 -> 26
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 52
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 20
9999 mem: storing 1060 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1060
9999 mem: location 1060 is 52
9999 mem: location 1061 is 7
9999 mem: location 1283 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 52
9999 mem: location 1284 is 1060
9999 mem: storing 52 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1060
9999 mem: location 1060 is 52
9999 mem: location 1061 is 7
9999 mem: location 1283 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1061
9999 mem: storing 7 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1231 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 17 -> 16
9999 mem: storing 1215 in location 1231
9999 mem: incrementing refcount of 1215: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1232 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1197
9999 mem: incrementing refcount of 1207: 26 -> 27
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 10
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1197 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1198
9999 mem: incrementing refcount of 1211: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 27 -> 26
9999 mem: storing 1211 in location 1232
9999 mem: incrementing refcount of 1211: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1235 is 0
9999 mem: storing 1 in location 1235
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1231 is 1215
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 2
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 106 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1240
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1231 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 53
9999 mem: storing 53 in location 1242
 106 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 53
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1491
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 53 in location 1492
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1491 is 7
9999 mem: storing 1 in location 1493
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1492 is 53
9999 mem: storing 0 in location 1494
 107 run: jump-unless starting-comment?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1495
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1492 is 53
9999 mem: storing 0 in location 1497
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1497 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1498
 107 run: jump-unless color-is-red?, 
9999 mem: location 1498 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1491 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 53
9999 mem: storing 0 in location 1243
 106 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 1
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 106 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 53
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 48 -> 49
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 53 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 53
  90 print-character: 53 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 53
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 26 -> 27
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 53
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 21
9999 mem: storing 1062 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1062
9999 mem: location 1062 is 53
9999 mem: location 1063 is 7
9999 mem: location 1283 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 53
9999 mem: location 1284 is 1062
9999 mem: storing 53 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1062
9999 mem: location 1062 is 53
9999 mem: location 1063 is 7
9999 mem: location 1283 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1274 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1231 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 17 -> 16
9999 mem: storing 1219 in location 1231
9999 mem: incrementing refcount of 1219: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1232 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1197
9999 mem: incrementing refcount of 1211: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 52
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1197 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1198
9999 mem: incrementing refcount of 1215: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 19 -> 18
9999 mem: storing 1215 in location 1232
9999 mem: incrementing refcount of 1215: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1235 is 1
9999 mem: storing 2 in location 1235
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1231 is 1219
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1234 is 2
9999 mem: location 1229 is 5
9999 mem: storing 0 in location 1239
 106 run: jump-if off-screen?, 
9999 mem: location 1239 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1240
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1240 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1231 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1231 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 54
9999 mem: storing 54 in location 1242
 106 run: color <- get-color color, c
9999 mem: location 1233 is 7
9999 mem: location 1242 is 54
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1491
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 54 in location 1492
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1491 is 7
9999 mem: storing 1 in location 1493
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1492 is 54
9999 mem: storing 0 in location 1494
 107 run: jump-unless starting-comment?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1495
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1493 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1492 is 54
9999 mem: storing 0 in location 1497
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1497 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1491 is 7
9999 mem: storing 0 in location 1498
 107 run: jump-unless color-is-red?, 
9999 mem: location 1498 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1491 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1233
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1242 is 54
9999 mem: storing 0 in location 1243
 106 run: jump-unless newline?, 
9999 mem: location 1243 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1235 is 2
9999 mem: location 1230 is 9
9999 mem: storing 0 in location 1245
 106 run: jump-unless at-right?, 
9999 mem: location 1245 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1226 is 1012
9999 mem: location 1242 is 54
9999 mem: location 1233 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 49 -> 50
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 54 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1268
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 54
  90 print-character: 54 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 54
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 27 -> 28
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 54
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 22
9999 mem: storing 1064 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1064
9999 mem: location 1064 is 54
9999 mem: location 1065 is 7
9999 mem: location 1283 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 54
9999 mem: location 1284 is 1064
9999 mem: storing 54 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1064
9999 mem: location 1064 is 54
9999 mem: location 1065 is 7
9999 mem: location 1283 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1274 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1231 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1197
9999 mem: incrementing refcount of 1219: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 54
9999 mem: location 1221 is 0
9999 mem: location 1222 is 1215
9999 mem: location 1197 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1198
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1219: 15 -> 14
9999 mem: storing 0 in location 1231
 106 run: prev <- next_2 prev
9999 mem: location 1232 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1197
9999 mem: incrementing refcount of 1215: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1197 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 53
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1197 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1198
9999 mem: incrementing refcount of 1219: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1198 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 19 -> 18
9999 mem: storing 1219 in location 1232
9999 mem: incrementing refcount of 1219: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1235 is 2
9999 mem: storing 3 in location 1235
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1247
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1231 is 0
9999 mem: location 1247 is 1157
9999 mem: storing 0 in location 1157
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1240
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1235 is 3
9999 mem: location 1237 is 1163
9999 mem: location 1163 is 3
9999 mem: storing 1 in location 1248
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1240 is 0
9999 mem: location 1248 is 1
9999 mem: storing 0 in location 1249
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1234 is 2
9999 mem: location 1236 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1250
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1251
 106 run: jump-unless before-cursor?, 
9999 mem: location 1251 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1227 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1252
 106 run: *bottom <- copy row
9999 mem: location 1234 is 2
9999 mem: location 1252 is 1161
9999 mem: storing 2 in location 1161
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1234 is 2
9999 mem: location 1235 is 3
9999 mem: location 1226 is 1012
9999 mem: location 1227 is 1154
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2
9998 run: result 1 is 3
9999 mem: storing 2 in location 1174
9999 mem: storing 3 in location 1175
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1170 is 1012
9999 mem: location 1175 is 3
9999 mem: location 1173 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 50 -> 51
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1184
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1185
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1186
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1187
9999 mem: storing 0 in location 1188
 106 run: jump-if bg-color-found?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1187
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 3
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 106 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 51 -> 52
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 28 -> 29
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 23
9999 mem: storing 1066 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 7
9999 mem: location 1283 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1066
9999 mem: storing 32 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1283 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1067
9999 mem: storing 7 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1274 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 52 -> 51
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 51 -> 52
 106 run: column <- add column, 1
9999 mem: location 1184 is 3
9999 mem: storing 4 in location 1184
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 4
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 106 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 52 -> 53
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 29 -> 30
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 24
9999 mem: storing 1068 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 7
9999 mem: location 1283 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1068
9999 mem: storing 32 in location 1068
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1068
9999 mem: location 1068 is 32
9999 mem: location 1069 is 7
9999 mem: location 1283 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1069
9999 mem: storing 7 in location 1069
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1274 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 53 -> 52
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 52 -> 53
 106 run: column <- add column, 1
9999 mem: location 1184 is 4
9999 mem: storing 5 in location 1184
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 5
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 106 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 53 -> 54
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 30 -> 31
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 25
9999 mem: storing 1070 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 7
9999 mem: location 1283 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1070
9999 mem: storing 32 in location 1070
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1070
9999 mem: location 1070 is 32
9999 mem: location 1071 is 7
9999 mem: location 1283 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1071
9999 mem: storing 7 in location 1071
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1274 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 54 -> 53
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 53 -> 54
 106 run: column <- add column, 1
9999 mem: location 1184 is 5
9999 mem: storing 6 in location 1184
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 6
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 106 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 54 -> 55
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 31 -> 32
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 26
9999 mem: storing 1072 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 7
9999 mem: location 1283 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1072
9999 mem: storing 32 in location 1072
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1072
9999 mem: location 1072 is 32
9999 mem: location 1073 is 7
9999 mem: location 1283 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1073
9999 mem: storing 7 in location 1073
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1274 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 55 -> 54
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 54 -> 55
 106 run: column <- add column, 1
9999 mem: location 1184 is 6
9999 mem: storing 7 in location 1184
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 7
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 106 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 55 -> 56
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 32 -> 33
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 27
9999 mem: storing 1074 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 7
9999 mem: location 1283 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1074
9999 mem: storing 32 in location 1074
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1074
9999 mem: location 1074 is 32
9999 mem: location 1075 is 7
9999 mem: location 1283 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1075
9999 mem: storing 7 in location 1075
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1274 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 56 -> 55
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 55 -> 56
 106 run: column <- add column, 1
9999 mem: location 1184 is 7
9999 mem: storing 8 in location 1184
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 8
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 106 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 56 -> 57
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 33 -> 34
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 28
9999 mem: storing 1076 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1283 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1076
9999 mem: storing 32 in location 1076
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1283 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1077
9999 mem: storing 7 in location 1077
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1274 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 57 -> 56
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 56 -> 57
 106 run: column <- add column, 1
9999 mem: location 1184 is 8
9999 mem: storing 9 in location 1184
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 9
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 106 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 57 -> 58
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1270 is 10
9999 mem: storing 20 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 20
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 34 -> 35
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 29
9999 mem: storing 1078 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1283 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1078
9999 mem: storing 32 in location 1078
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1283 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1079
9999 mem: storing 7 in location 1079
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1286 is 9
9999 mem: storing 1 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 58 -> 57
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 57 -> 58
 106 run: column <- add column, 1
9999 mem: location 1184 is 9
9999 mem: storing 10 in location 1184
 106 run: jump 
9998 run: jumping to instruction 11
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 10
9999 mem: location 1185 is 9
9999 mem: storing 1 in location 1189
 106 run: jump-if done?, 
9999 mem: location 1189 is 1
9998 run: jumping to instruction 16
 106 run: reply screen:address:shared:screen
9999 mem: location 1183 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1170 is 1012
9999 mem: location 1174 is 3
9999 mem: location 1172 is 0
9999 mem: location 1173 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1320
9999 mem: incrementing refcount of 1012: 58 -> 59
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1321
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1322
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1323
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1324
9999 mem: storing 1 in location 1325
 106 run: jump-if style-found?, 
9999 mem: location 1325 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
 106 run: jump-if color-found?, 
9999 mem: location 1327 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1326
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
 106 run: jump-if bg-color-found?, 
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1328
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1320 is 1012
9999 mem: location 1321 is 3
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 59 -> 60
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1257
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 107 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 107 run: *row <- copy new-row
9999 mem: location 1257 is 3
9999 mem: location 1259 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 107 run: *column <- copy new-column
9999 mem: location 1258 is 0
9999 mem: location 1260 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 60 -> 59
9999 mem: storing 1012 in location 1320
9999 mem: incrementing refcount of 1012: 59 -> 60
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 0
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 60 -> 61
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 35 -> 36
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 30
9999 mem: storing 1080 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1283 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1080
9999 mem: storing 9480 in location 1080
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1080
9999 mem: location 1080 is 9480
9999 mem: location 1081 is 7
9999 mem: location 1283 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1081
9999 mem: storing 245 in location 1081
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 1
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 61 -> 62
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 36 -> 37
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 31
9999 mem: storing 1082 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1283 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1082
9999 mem: storing 9480 in location 1082
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1082
9999 mem: location 1082 is 9480
9999 mem: location 1083 is 7
9999 mem: location 1283 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1083
9999 mem: storing 245 in location 1083
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1274 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 2
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 62 -> 63
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 37 -> 38
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 32
9999 mem: storing 1084 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 7
9999 mem: location 1283 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1084
9999 mem: storing 9480 in location 1084
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1084
9999 mem: location 1084 is 9480
9999 mem: location 1085 is 7
9999 mem: location 1283 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1085
9999 mem: storing 245 in location 1085
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1274 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 3
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 63 -> 64
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 38 -> 39
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 33
9999 mem: storing 1086 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 7
9999 mem: location 1283 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1086
9999 mem: storing 9480 in location 1086
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1086
9999 mem: location 1086 is 9480
9999 mem: location 1087 is 7
9999 mem: location 1283 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1087
9999 mem: storing 245 in location 1087
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1274 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 3
9999 mem: storing 4 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 4
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 64 -> 65
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 39 -> 40
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 34
9999 mem: storing 1088 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 7
9999 mem: location 1283 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1088
9999 mem: storing 9480 in location 1088
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1088
9999 mem: location 1088 is 9480
9999 mem: location 1089 is 7
9999 mem: location 1283 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1089
9999 mem: storing 245 in location 1089
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1274 is 1016
9999 mem: storing 5 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 4
9999 mem: storing 5 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 5
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 65 -> 66
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 40 -> 41
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 35
9999 mem: storing 1090 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 7
9999 mem: location 1283 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1090
9999 mem: storing 9480 in location 1090
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1090
9999 mem: location 1090 is 9480
9999 mem: location 1091 is 7
9999 mem: location 1283 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1091
9999 mem: storing 245 in location 1091
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1274 is 1016
9999 mem: storing 6 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 5
9999 mem: storing 6 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 6
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 66 -> 67
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 41 -> 42
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 36
9999 mem: storing 1092 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 7
9999 mem: location 1283 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1092
9999 mem: storing 9480 in location 1092
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1092
9999 mem: location 1092 is 9480
9999 mem: location 1093 is 7
9999 mem: location 1283 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1093
9999 mem: storing 245 in location 1093
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1274 is 1016
9999 mem: storing 7 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 6
9999 mem: storing 7 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 7
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 67 -> 68
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 42 -> 43
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 37
9999 mem: storing 1094 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 7
9999 mem: location 1283 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1094
9999 mem: storing 9480 in location 1094
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1094
9999 mem: location 1094 is 9480
9999 mem: location 1095 is 7
9999 mem: location 1283 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1095
9999 mem: storing 245 in location 1095
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1274 is 1016
9999 mem: storing 8 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 7
9999 mem: storing 8 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 8
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 68 -> 69
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 43 -> 44
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 38
9999 mem: storing 1096 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 7
9999 mem: location 1283 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1096
9999 mem: storing 9480 in location 1096
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1096
9999 mem: location 1096 is 9480
9999 mem: location 1097 is 7
9999 mem: location 1283 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1097
9999 mem: storing 245 in location 1097
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1274 is 1016
9999 mem: storing 9 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 8
9999 mem: storing 9 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 9
9999 mem: location 1323 is 9
9999 mem: storing 1 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1320 is 1012
9999 mem: location 1324 is 9480
9999 mem: location 1326 is 245
9999 mem: location 1328 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 69 -> 70
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1265
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1266
9999 mem: storing 1 in location 1267
 107 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 107 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1265 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 107 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1275
 107 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1270 is 10
9999 mem: storing 30 in location 1278
 107 run: index <- add index, *column
9999 mem: location 1278 is 30
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1278
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 44 -> 45
 107 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 9480
9999 mem: storing 0 in location 1281
 107 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 39
9999 mem: storing 1098 in location 1283
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 7
9999 mem: location 1283 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1284
 107 run: *cursor-contents <- copy c
9999 mem: location 1265 is 9480
9999 mem: location 1284 is 1098
9999 mem: storing 9480 in location 1098
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1098
9999 mem: location 1098 is 9480
9999 mem: location 1099 is 7
9999 mem: location 1283 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1285
 107 run: *cursor-color <- copy color
9999 mem: location 1266 is 245
9999 mem: location 1285 is 1099
9999 mem: storing 245 in location 1099
 107 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1286 is 9
9999 mem: storing 1 in location 1287
 107 run: jump-if at-right?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1322 is 9
9999 mem: storing 10 in location 1322
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1322 is 10
9999 mem: location 1323 is 9
9999 mem: storing 0 in location 1330
 106 run: jump-unless continue?, 
9999 mem: location 1330 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1320 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1170 is 1012
9999 mem: location 1174 is 4
9999 mem: location 1172 is 0
9999 mem: location 1172 is 0
9999 mem: location 1173 is 9
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 70 -> 71
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1257
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1258
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1259
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1260
 106 run: jump-if screen, 
9999 mem: location 1256 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1256 is 1012
9999 mem: location 1257 is 4
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1500
9999 mem: storing 6 in location 1501
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1503
9999 mem: incrementing refcount of 1012: 71 -> 72
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1504
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1505
 107 run: jump-unless screen, 
9999 mem: location 1503 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1503 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1503 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1506
 107 run: *row <- copy new-row
9999 mem: location 1504 is 4
9999 mem: location 1506 is 1015
9999 mem: storing 4 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1503 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1503 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1507
 107 run: *column <- copy new-column
9999 mem: location 1505 is 0
9999 mem: location 1507 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1503 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 72 -> 71
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 71 -> 72
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1256 is 1012
9999 mem: location 1258 is 0
9999 mem: location 1260 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 72 -> 73
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1184
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1185
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1186
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1187
9999 mem: storing 0 in location 1188
 107 run: jump-if bg-color-found?, 
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1187
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 0
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 73 -> 74
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 45 -> 46
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 40
9999 mem: storing 1100 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 7
9999 mem: location 1283 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1100
9999 mem: storing 32 in location 1100
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1283 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1101
9999 mem: storing 7 in location 1101
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1274 is 1016
9999 mem: storing 1 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 74 -> 73
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 73 -> 74
 107 run: column <- add column, 1
9999 mem: location 1184 is 0
9999 mem: storing 1 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 1
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 74 -> 75
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 46 -> 47
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 41
9999 mem: storing 1102 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 7
9999 mem: location 1283 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1102
9999 mem: storing 32 in location 1102
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1283 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1103
9999 mem: storing 7 in location 1103
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1274 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 75 -> 74
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 74 -> 75
 107 run: column <- add column, 1
9999 mem: location 1184 is 1
9999 mem: storing 2 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 2
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 75 -> 76
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 47 -> 48
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 42
9999 mem: storing 1104 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 7
9999 mem: location 1283 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1104
9999 mem: storing 32 in location 1104
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1283 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1105
9999 mem: storing 7 in location 1105
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1274 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 76 -> 75
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 75 -> 76
 107 run: column <- add column, 1
9999 mem: location 1184 is 2
9999 mem: storing 3 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 3
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 76 -> 77
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 48 -> 49
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 43
9999 mem: storing 1106 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 7
9999 mem: location 1283 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1106
9999 mem: storing 32 in location 1106
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1283 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1107
9999 mem: storing 7 in location 1107
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1274 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 77 -> 76
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 76 -> 77
 107 run: column <- add column, 1
9999 mem: location 1184 is 3
9999 mem: storing 4 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 4
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 77 -> 78
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 49 -> 50
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 44
9999 mem: storing 1108 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 7
9999 mem: location 1283 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1108
9999 mem: storing 32 in location 1108
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1283 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1109
9999 mem: storing 7 in location 1109
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1274 is 1016
9999 mem: storing 5 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 78 -> 77
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 77 -> 78
 107 run: column <- add column, 1
9999 mem: location 1184 is 4
9999 mem: storing 5 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 5
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 78 -> 79
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 50 -> 51
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 45
9999 mem: storing 1110 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 7
9999 mem: location 1283 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1110
9999 mem: storing 32 in location 1110
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1283 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1111
9999 mem: storing 7 in location 1111
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1274 is 1016
9999 mem: storing 6 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 78 -> 79
 107 run: column <- add column, 1
9999 mem: location 1184 is 5
9999 mem: storing 6 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 6
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 79 -> 80
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-deletes-to-end-of-line-with-ctrl-k-4
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 51 -> 52
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 46
9999 mem: storing 1112 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 7
9999 mem: location 1283 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1112
9999 mem: storing 32 in location 1112
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1283 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1113
9999 mem: storing 7 in location 1113
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1274 is 1016
9999 mem: storing 7 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 80 -> 79
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 79 -> 80
 107 run: column <- add column, 1
9999 mem: location 1184 is 6
9999 mem: storing 7 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 7
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 80 -> 81
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 52 -> 53
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 47
9999 mem: storing 1114 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 7
9999 mem: location 1283 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1114
9999 mem: storing 32 in location 1114
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1283 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1115
9999 mem: storing 7 in location 1115
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1274 is 1016
9999 mem: storing 8 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 80 -> 81
 107 run: column <- add column, 1
9999 mem: location 1184 is 7
9999 mem: storing 8 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 8
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 81 -> 82
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 53 -> 54
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 48
9999 mem: storing 1116 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 7
9999 mem: location 1283 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1116
9999 mem: storing 32 in location 1116
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1283 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1117
9999 mem: storing 7 in location 1117
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1286 is 9
9999 mem: storing 0 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1274 is 1016
9999 mem: storing 9 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 82 -> 81
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 81 -> 82
 107 run: column <- add column, 1
9999 mem: location 1184 is 8
9999 mem: storing 9 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 9
9999 mem: location 1185 is 9
9999 mem: storing 0 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space, 7/white, bg-color
9999 mem: location 1183 is 1012
9999 mem: location 1186 is 32
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1264
9999 mem: incrementing refcount of 1012: 82 -> 83
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1265
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1266
9999 mem: storing 1 in location 1267
 108 run: jump-if color-found?, 
9999 mem: location 1267 is 1
9998 run: jumping to instruction 7
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 1 in location 1269
 108 run: jump-if bg-color-found?, 
9999 mem: location 1269 is 1
9998 run: jumping to instruction 12
 108 run: trace 90, [print-character], c
9999 mem: location 1265 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1264 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1270
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1271
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1272
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1271 is 5
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1274
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1270 is 10
9999 mem: storing 1 in location 1273
 108 run: jump-if legal?, 1:offset
9999 mem: location 1273 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1275
 108 run: jump-unless newline?, 
9999 mem: location 1275 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1272 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1270 is 10
9999 mem: storing 40 in location 1278
 108 run: index <- add index, *column
9999 mem: location 1278 is 40
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1278
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1264 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1279
9999 mem: incrementing refcount of 1018: 54 -> 55
 108 run: len:number <- length *buf
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1280
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1265 is 32
9999 mem: storing 0 in location 1281
 108 run: jump-unless backspace?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1279 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1278 is 49
9999 mem: storing 1118 in location 1283
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1283 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 7
9999 mem: location 1283 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1284
 108 run: *cursor-contents <- copy c
9999 mem: location 1265 is 32
9999 mem: location 1284 is 1118
9999 mem: storing 32 in location 1118
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1283 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1283 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1285
 108 run: *cursor-color <- copy color
9999 mem: location 1266 is 7
9999 mem: location 1285 is 1119
9999 mem: storing 7 in location 1119
 108 run: right:number <- subtract width, 1
9999 mem: location 1270 is 10
9999 mem: storing 9 in location 1286
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1274 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1286 is 9
9999 mem: storing 1 in location 1287
 108 run: jump-if at-right?, 
9999 mem: location 1287 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1264 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 83 -> 82
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 82 -> 83
 107 run: column <- add column, 1
9999 mem: location 1184 is 9
9999 mem: storing 10 in location 1184
 107 run: jump 
9998 run: jumping to instruction 11
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1184 is 10
9999 mem: location 1185 is 9
9999 mem: storing 1 in location 1189
 107 run: jump-if done?, 
9999 mem: location 1189 is 1
9998 run: jumping to instruction 16
 107 run: reply screen:address:shared:screen
9999 mem: location 1183 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1256 is 1012
9999 mem: location 1257 is 4
9999 mem: location 1259 is 0
9999 mem: location 1260 is 9
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1508
9999 mem: storing 7 in location 1509
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1511
9999 mem: incrementing refcount of 1012: 83 -> 84
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1512
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1513
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1514
 107 run: row <- add row, 1
9999 mem: location 1512 is 4
9999 mem: storing 5 in location 1512
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1511 is 1012
9999 mem: location 1512 is 5
9999 mem: location 1513 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1503
9999 mem: incrementing refcount of 1012: 84 -> 85
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1504
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1505
 108 run: jump-unless screen, 
9999 mem: location 1503 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1503 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1503 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1506
 108 run: *row <- copy new-row
9999 mem: location 1504 is 5
9999 mem: location 1506 is 1015
9999 mem: storing 5 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1503 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1503 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1507
 108 run: *column <- copy new-column
9999 mem: location 1505 is 0
9999 mem: location 1507 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1503 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 85 -> 84
9999 mem: storing 1012 in location 1511
9999 mem: incrementing refcount of 1012: 84 -> 85
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1511 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1197
9999 mem: incrementing refcount of 1012: 85 -> 86
 108 run: jump-unless screen, 
9999 mem: location 1197 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1197 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1198
 108 run: reply height:number
9999 mem: location 1198 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1515
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1512 is 5
9999 mem: location 1515 is 5
9999 mem: storing 1 in location 1516
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1516 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1511 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1170 is 1012
9999 mem: location 1171 is 1154
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 86 -> 85
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 85 -> 86
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is number
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1307
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1176
9999 mem: location 1156 is 1176
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1203
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 3
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1485
9999 mem: location 1166 is 0
9999 mem: location 1306 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 3
9999 mem: storing 3 in location 1308
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1304 is 1012
9999 mem: location 1307 is 1
9999 mem: location 1308 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1256
9999 mem: incrementing refcount of 1012: 86 -> 87
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1257
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1258
 105 run: jump-unless screen, 
9999 mem: location 1256 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1259
 105 run: *row <- copy new-row
9999 mem: location 1257 is 1
9999 mem: location 1259 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1256 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1260
 105 run: *column <- copy new-column
9999 mem: location 1258 is 3
9999 mem: location 1260 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1256 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 87 -> 86
9999 mem: storing 1012 in location 1304
9999 mem: incrementing refcount of 1012: 86 -> 87
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1305 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1320
9999 mem: incrementing refcount of 1298: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1320 is 1298
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 2
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1299
9999 mem: storing 1299 in location 1321
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 2
9999 mem: location 1300 is 1288
9999 mem: location 1320 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1300 is 1288
9999 mem: storing 1288 in location 1322
9999 mem: incrementing refcount of 1288: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9999 mem: storing 2 in location 1323
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1321 is 1299
9999 mem: location 1299 is 2
9999 mem: location 1323 is 2
9999 mem: storing 1 in location 1324
 105 run: jump-unless done?, 
9999 mem: location 1324 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1194 in location 1325
9999 mem: incrementing refcount of 1194: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1325 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1320 is 1298
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1298
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: decrementing refcount of 1298: 4 -> 3
9999 mem: storing 1298 in location 1305
9999 mem: incrementing refcount of 1298: 3 -> 4
9999 mem: storing 1 in location 1313
9999 mem: storing 1 in location 1314
 104 run: jump-unless found?, 
9999 mem: location 1313 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1314 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1304 is 1012
9999 mem: location 1305 is 1298
9999 mem: location 1306 is 1154
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .123       .
    .456       .
    .┈┈┈┈┈┈┈┈┈┈.
    .          .
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
