9991 parse: --- defining scenario-editor-scrolls-up-on-left-arrow
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"5": "literal", "width": <>}
9993 parse:   ingredient: {"4": "literal", "height": <>}
9992 load: after rewriting: screen:address:shared:screen <- new-fake-screen 5/width, 4/height
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a\nb\nc\nd\ne": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new [a
b
c
d
e]
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"0": "literal", "left": <>}
9993 parse:   ingredient: {"5": "literal", "right": <>}
9993 parse:   product: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 5/right
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-down\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press page-down
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .     .\n    .c    .\n    .d    .\n    .e    .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .     .
    .c    .
    .d    .
    .e    .
  ]
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press left-arrow\n  ": "literal-string"}
9992 load: after rewriting: assume-console [
    press left-arrow
  ]
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .     .\n    .b    .\n    .c    .\n    .d    .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain [
    .     .
    .b    .
    .c    .
    .d    .
  ]
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 parse: recipe scenario-editor-scrolls-up-on-left-arrow has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe scenario-editor-scrolls-up-on-left-arrow
9991 transform: --- deduce types for recipe scenario-editor-scrolls-up-on-left-arrow
9992 transform: screen => <address : <shared : <screen : <>>>>
9991 transform: --- collect surrounding spaces for recipe scenario-editor-scrolls-up-on-left-arrow
9991 transform: --- transform names for recipe scenario-editor-scrolls-up-on-left-arrow
9991 transform: --- resolve ambiguous calls for recipe scenario-editor-scrolls-up-on-left-arrow
9992 transform: instruction new-fake-screen
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for base: 1000
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: product 0
9992 transform: score for variant 0: 1000
9992 transform: instruction new-editor
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for base: 999
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9993 transform: strict match: ingredient 3
9993 transform: strict match: product 0
9992 transform: score for variant 0: 999
9991 transform: --- compute instruction operations for recipe scenario-editor-scrolls-up-on-left-arrow
9991 transform: --- transform braces for recipe scenario-editor-scrolls-up-on-left-arrow
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario-editor-scrolls-up-on-left-arrow
9991 transform: --- type-check 'call' instructions inside recipe scenario-editor-scrolls-up-on-left-arrow
9991 transform: --- type-check calls inside recipe scenario-editor-scrolls-up-on-left-arrow
9991 transform: --- convert 'new' to 'allocate' for recipe scenario-editor-scrolls-up-on-left-arrow
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario-editor-scrolls-up-on-left-arrow
 102 run: screen:address:shared:screen <- new-fake-screen 5/width, 4/height
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1000
9999 mem: storing 10 in location 1001
 103 run: w:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1003
 103 run: h:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 103 run: result <- new screen:type
9999 mem: allocating size 6
9999 mem: new alloc: 1012
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 0 -> 1
 103 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1006
 103 run: *width <- copy w
9999 mem: location 1003 is 5
9999 mem: location 1006 is 1014
9999 mem: storing 5 in location 1014
 103 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: *height <- copy h
9999 mem: location 1004 is 4
9999 mem: location 1007 is 1013
9999 mem: storing 4 in location 1013
 103 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1008
 103 run: *row <- copy 0
9999 mem: location 1008 is 1015
9999 mem: storing 0 in location 1015
 103 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1009
 103 run: *column <- copy 0
9999 mem: location 1009 is 1016
9999 mem: storing 0 in location 1016
 103 run: bufsize:number <- multiply *width, *height
9999 mem: location 1006 is 1014
9999 mem: location 1014 is 5
9999 mem: location 1007 is 1013
9999 mem: location 1013 is 4
9999 mem: storing 20 in location 1010
 103 run: buf:address:address:shared:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1011
 103 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1010 is 20
9999 mem: array size is 20
9999 mem: allocating size 42
9999 mem: new alloc: 1018
9999 mem: storing 20 in location 1019
9999 mem: location 1011 is 1017
9999 mem: storing 1018 in location 1017
9999 mem: incrementing refcount of 1018: 0 -> 1
 103 run: result <- clear-screen result
9999 mem: location 1005 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1060
9999 mem: storing 10 in location 1061
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1063
9999 mem: incrementing refcount of 1012: 1 -> 2
 104 run: jump-unless screen, 
9999 mem: location 1063 is 1012
9998 run: jump-unless fell through
 104 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1064
9999 mem: incrementing refcount of 1018: 1 -> 2
 104 run: max:number <- length *buf
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1065
 104 run: i:number <- copy 0
9999 mem: storing 0 in location 1066
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 0
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 0
9999 mem: storing 1020 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1068 is 1020
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1020
9999 mem: storing 0 in location 1020
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1068 is 1020
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1021
9999 mem: storing 7 in location 1021
 104 run: i <- add i, 1
9999 mem: location 1066 is 0
9999 mem: storing 1 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 1
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 1
9999 mem: storing 1022 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1068 is 1022
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1022
9999 mem: storing 0 in location 1022
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1068 is 1022
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1023
9999 mem: storing 7 in location 1023
 104 run: i <- add i, 1
9999 mem: location 1066 is 1
9999 mem: storing 2 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 2
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 2
9999 mem: storing 1024 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1068 is 1024
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1024
9999 mem: storing 0 in location 1024
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1068 is 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1025
9999 mem: storing 7 in location 1025
 104 run: i <- add i, 1
9999 mem: location 1066 is 2
9999 mem: storing 3 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 3
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 3
9999 mem: storing 1026 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1068 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1026
9999 mem: storing 0 in location 1026
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1068 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1027
9999 mem: storing 7 in location 1027
 104 run: i <- add i, 1
9999 mem: location 1066 is 3
9999 mem: storing 4 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 4
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 4
9999 mem: storing 1028 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1068 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1028
9999 mem: storing 0 in location 1028
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1068 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1029
9999 mem: storing 7 in location 1029
 104 run: i <- add i, 1
9999 mem: location 1066 is 4
9999 mem: storing 5 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 5
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 5
9999 mem: storing 1030 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1068 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1030
9999 mem: storing 0 in location 1030
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1068 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1031
9999 mem: storing 7 in location 1031
 104 run: i <- add i, 1
9999 mem: location 1066 is 5
9999 mem: storing 6 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 6
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 6
9999 mem: storing 1032 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1068 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1032
9999 mem: storing 0 in location 1032
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1068 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1033
9999 mem: storing 7 in location 1033
 104 run: i <- add i, 1
9999 mem: location 1066 is 6
9999 mem: storing 7 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 7
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 7
9999 mem: storing 1034 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1068 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1034
9999 mem: storing 0 in location 1034
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1068 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1035
9999 mem: storing 7 in location 1035
 104 run: i <- add i, 1
9999 mem: location 1066 is 7
9999 mem: storing 8 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 8
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 8
9999 mem: storing 1036 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1068 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1036
9999 mem: storing 0 in location 1036
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1068 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1037
9999 mem: storing 7 in location 1037
 104 run: i <- add i, 1
9999 mem: location 1066 is 8
9999 mem: storing 9 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 9
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 9
9999 mem: storing 1038 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1068 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1038
9999 mem: storing 0 in location 1038
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1068 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1039
9999 mem: storing 7 in location 1039
 104 run: i <- add i, 1
9999 mem: location 1066 is 9
9999 mem: storing 10 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 10
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 10
9999 mem: storing 1040 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1068 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1040
9999 mem: storing 0 in location 1040
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1068 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1041
9999 mem: storing 7 in location 1041
 104 run: i <- add i, 1
9999 mem: location 1066 is 10
9999 mem: storing 11 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 11
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 11
9999 mem: storing 1042 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1068 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1042
9999 mem: storing 0 in location 1042
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1068 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1043
9999 mem: storing 7 in location 1043
 104 run: i <- add i, 1
9999 mem: location 1066 is 11
9999 mem: storing 12 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 12
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 12
9999 mem: storing 1044 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1068 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1044
9999 mem: storing 0 in location 1044
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1068 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1045
9999 mem: storing 7 in location 1045
 104 run: i <- add i, 1
9999 mem: location 1066 is 12
9999 mem: storing 13 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 13
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 13
9999 mem: storing 1046 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1068 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1046
9999 mem: storing 0 in location 1046
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1068 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1047
9999 mem: storing 7 in location 1047
 104 run: i <- add i, 1
9999 mem: location 1066 is 13
9999 mem: storing 14 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 14
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 14
9999 mem: storing 1048 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1068 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1048
9999 mem: storing 0 in location 1048
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1068 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1049
9999 mem: storing 7 in location 1049
 104 run: i <- add i, 1
9999 mem: location 1066 is 14
9999 mem: storing 15 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 15
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 15
9999 mem: storing 1050 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1068 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1050
9999 mem: storing 0 in location 1050
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1068 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1051
9999 mem: storing 7 in location 1051
 104 run: i <- add i, 1
9999 mem: location 1066 is 15
9999 mem: storing 16 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 16
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 16
9999 mem: storing 1052 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1068 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1052
9999 mem: storing 0 in location 1052
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1068 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1053
9999 mem: storing 7 in location 1053
 104 run: i <- add i, 1
9999 mem: location 1066 is 16
9999 mem: storing 17 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 17
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 17
9999 mem: storing 1054 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1068 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1054
9999 mem: storing 0 in location 1054
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1068 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1055
9999 mem: storing 7 in location 1055
 104 run: i <- add i, 1
9999 mem: location 1066 is 17
9999 mem: storing 18 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 18
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 18
9999 mem: storing 1056 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1068 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1056
9999 mem: storing 0 in location 1056
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1068 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1057
9999 mem: storing 7 in location 1057
 104 run: i <- add i, 1
9999 mem: location 1066 is 18
9999 mem: storing 19 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 19
9999 mem: location 1065 is 20
9999 mem: storing 0 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 0
9998 run: jump-if fell through
 104 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1064 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1066 is 19
9999 mem: storing 1058 in location 1068
 104 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1068 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1068 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1069
 104 run: *curr-content <- copy 0/empty
9999 mem: location 1069 is 1058
9999 mem: storing 0 in location 1058
 104 run: curr-color:address:number <- get-address *curr, color:offset
9999 mem: location 1068 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1068 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1070
 104 run: *curr-color <- copy 7/white
9999 mem: location 1070 is 1059
9999 mem: storing 7 in location 1059
 104 run: i <- add i, 1
9999 mem: location 1066 is 19
9999 mem: storing 20 in location 1066
 104 run: jump 
9998 run: jumping to instruction 8
 104 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1066 is 20
9999 mem: location 1065 is 20
9999 mem: storing 1 in location 1067
 104 run: jump-if done?, 
9999 mem: location 1067 is 1
9998 run: jumping to instruction 17
 104 run: x:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1071
 104 run: *x <- copy 0
9999 mem: location 1071 is 1015
9999 mem: storing 0 in location 1015
 104 run: x <- get-address *screen, cursor-column:offset
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1063 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1071
 104 run: *x <- copy 0
9999 mem: location 1071 is 1016
9999 mem: storing 0 in location 1016
 104 run: reply screen:address:shared:screen
9999 mem: location 1063 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 2 -> 1
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 1 -> 2
 103 run: reply result:address:shared:screen
9999 mem: location 1005 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 900
9999 mem: incrementing refcount of 1012: 2 -> 3
 102 run: 1:address:shared:array:character <- new [a
b
c
d
e]
9999 mem: storing 1072 in location 1
9999 mem: incrementing refcount of 1072: 0 -> 1
 102 run: 2:address:shared:editor-data <- new-editor 1:address:shared:array:character, screen:address:shared:screen, 0/left, 5/right
9999 mem: location 1 is 1072
9999 mem: location 900 is 1012
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1083
9999 mem: storing 11 in location 1084
 103 run: s:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1072 in location 1086
9999 mem: incrementing refcount of 1072: 1 -> 2
 103 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1087
9999 mem: incrementing refcount of 1012: 3 -> 4
 103 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1088
 103 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1089
 103 run: right <- subtract right, 1
9999 mem: location 1089 is 5
9999 mem: storing 4 in location 1089
 103 run: result <- new editor-data:type
9999 mem: allocating size 13
9999 mem: new alloc: 1096
9999 mem: storing 1096 in location 1090
9999 mem: incrementing refcount of 1096: 0 -> 1
 103 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1091
 103 run: *x <- copy left
9999 mem: location 1088 is 0
9999 mem: location 1091 is 1101
9999 mem: storing 0 in location 1101
 103 run: x <- get-address *result, right:offset
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1091
 103 run: *x <- copy right
9999 mem: location 1089 is 4
9999 mem: location 1091 is 1102
9999 mem: storing 4 in location 1102
 103 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1091
 103 run: *x <- copy 1/top
9999 mem: location 1091 is 1104
9999 mem: storing 1 in location 1104
 103 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1091
 103 run: *x <- copy left
9999 mem: location 1088 is 0
9999 mem: location 1091 is 1105
9999 mem: storing 0 in location 1105
 103 run: init:address:address:shared:duplex-list:character <- get-address *result, data:offset
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1092
 103 run: *init <- push_3 167/§, 0/tail
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1109
9999 mem: storing 7 in location 1110
 104 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1112
 104 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1113
 104 run: result:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1118
9999 mem: storing 1118 in location 1114
9999 mem: incrementing refcount of 1118: 0 -> 1
 104 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1114 is 1118
9999 mem: skipping refcount at 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1114 is 1118
9999 mem: skipping refcount at 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1115
 104 run: *val <- copy x
9999 mem: location 1112 is 167
9999 mem: location 1115 is 1119
9999 mem: storing 167 in location 1119
 104 run: next:address:address:shared:duplex-list:_elem <- get-address *result, next:offset
9999 mem: location 1114 is 1118
9999 mem: skipping refcount at 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1119 is 167
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1114 is 1118
9999 mem: skipping refcount at 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1120
9999 mem: storing 1120 in location 1116
 104 run: *next <- copy in
9999 mem: location 1113 is 0
9999 mem: location 1116 is 1120
9999 mem: storing 0 in location 1120
 104 run: jump-unless in, 
9999 mem: location 1113 is 0
9998 run: jumping to instruction 12
 104 run: reply result
9999 mem: location 1114 is 1118
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1118
9999 mem: location 1092 is 1097
9999 mem: storing 1118 in location 1097
9999 mem: incrementing refcount of 1118: 1 -> 2
 103 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *result, top-of-screen:offset
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1093
 103 run: *top-of-screen <- copy *init
9999 mem: location 1092 is 1097
9999 mem: location 1097 is 1118
9999 mem: location 1093 is 1098
9999 mem: storing 1118 in location 1098
9999 mem: incrementing refcount of 1118: 2 -> 3
 103 run: y:address:address:shared:duplex-list:character <- get-address *result, before-cursor:offset
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1094
 103 run: *y <- copy *init
9999 mem: location 1092 is 1097
9999 mem: location 1097 is 1118
9999 mem: location 1094 is 1100
9999 mem: storing 1118 in location 1100
9999 mem: incrementing refcount of 1118: 3 -> 4
 103 run: result <- insert-text result, s
9999 mem: location 1090 is 1096
9999 mem: location 1086 is 1072
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1122
9999 mem: storing 8 in location 1123
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1125
9999 mem: incrementing refcount of 1096: 1 -> 2
 104 run: text:address:shared:array:character <- next-ingredient-without-typechecking 
9999 mem: storing 1072 in location 1126
9999 mem: incrementing refcount of 1072: 2 -> 3
 104 run: jump-if text, 1:offset
9999 mem: location 1126 is 1072
9998 run: jumping to instruction 5
 104 run: len:number <- length *text
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9999 mem: storing 9 in location 1127
 104 run: jump-if len, 1:offset
9999 mem: location 1127 is 9
9998 run: jumping to instruction 8
 104 run: idx:number <- copy 0
9999 mem: storing 0 in location 1128
 104 run: curr:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1125 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1125 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1097
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1097 is 1118
9999 mem: storing 1118 in location 1129
9999 mem: incrementing refcount of 1118: 4 -> 5
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 0
9999 mem: location 1127 is 9
9999 mem: storing 0 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1128 is 0
9998 run: address to copy is 1074
9998 run: its type is character
9999 mem: location 1074 is 97
9999 mem: storing 97 in location 1131
 104 run: insert_2 c, curr
9999 mem: location 1131 is 97
9999 mem: location 1129 is 1118
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1112
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1113
9999 mem: incrementing refcount of 1118: 5 -> 6
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1132
9999 mem: storing 1132 in location 1114
9999 mem: incrementing refcount of 1132: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1114 is 1132
9999 mem: skipping refcount at 1132
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1114 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1133
9999 mem: storing 1133 in location 1115
 105 run: *val <- copy x
9999 mem: location 1112 is 97
9999 mem: location 1115 is 1133
9999 mem: storing 97 in location 1133
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1113 is 1118
9999 mem: skipping refcount at 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1119 is 167
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1113 is 1118
9999 mem: skipping refcount at 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1120
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1120 is 0
9999 mem: storing 0 in location 1116
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1113 is 1118
9999 mem: skipping refcount at 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1119 is 167
9999 mem: location 1120 is 0
9999 mem: location 1121 is 0
9999 mem: location 1113 is 1118
9999 mem: skipping refcount at 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1120
9999 mem: storing 1120 in location 1117
 105 run: *y <- copy new-node
9999 mem: location 1114 is 1132
9999 mem: location 1117 is 1120
9999 mem: storing 1132 in location 1120
9999 mem: incrementing refcount of 1132: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1114 is 1132
9999 mem: skipping refcount at 1132
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 97
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1114 is 1132
9999 mem: skipping refcount at 1132
9999 type: type deduced to be character$
9998 run: address to copy is 1135
9999 mem: storing 1135 in location 1117
 105 run: *y <- copy in
9999 mem: location 1113 is 1118
9999 mem: location 1117 is 1135
9999 mem: storing 1118 in location 1135
9999 mem: incrementing refcount of 1118: 6 -> 7
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1114 is 1132
9999 mem: skipping refcount at 1132
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 97
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1118
9999 mem: location 1114 is 1132
9999 mem: skipping refcount at 1132
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9999 mem: storing 1134 in location 1117
 105 run: *y <- copy next-node
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1134
9999 mem: storing 0 in location 1134
 105 run: jump-if next-node, 1:offset
9999 mem: location 1116 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1113 is 1118
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1129 is 1118
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1136
9999 mem: storing 3 in location 1137
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1139
9999 mem: incrementing refcount of 1118: 7 -> 8
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1118
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1118
9999 mem: skipping refcount at 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1119 is 167
9999 mem: location 1120 is 1132
9999 mem: location 1121 is 0
9999 mem: location 1139 is 1118
9999 mem: skipping refcount at 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1120
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1120 is 1132
9999 mem: storing 1132 in location 1140
9999 mem: incrementing refcount of 1132: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1132
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1132
9999 mem: decrementing refcount of 1118: 8 -> 7
9999 mem: storing 1132 in location 1129
9999 mem: incrementing refcount of 1132: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1128 is 0
9999 mem: storing 1 in location 1128
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 1
9999 mem: location 1127 is 9
9999 mem: storing 0 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1128 is 1
9998 run: address to copy is 1075
9998 run: its type is character
9999 mem: location 1075 is 10
9999 mem: storing 10 in location 1131
 104 run: insert_2 c, curr
9999 mem: location 1131 is 10
9999 mem: location 1129 is 1132
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1112
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1113
9999 mem: incrementing refcount of 1132: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1141
9999 mem: storing 1141 in location 1114
9999 mem: incrementing refcount of 1141: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1114 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1114 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1115
 105 run: *val <- copy x
9999 mem: location 1112 is 10
9999 mem: location 1115 is 1142
9999 mem: storing 10 in location 1142
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1113 is 1132
9999 mem: skipping refcount at 1132
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 97
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1118
9999 mem: location 1113 is 1132
9999 mem: skipping refcount at 1132
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1134 is 0
9999 mem: storing 0 in location 1116
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1113 is 1132
9999 mem: skipping refcount at 1132
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 97
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1118
9999 mem: location 1113 is 1132
9999 mem: skipping refcount at 1132
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9999 mem: storing 1134 in location 1117
 105 run: *y <- copy new-node
9999 mem: location 1114 is 1141
9999 mem: location 1117 is 1134
9999 mem: storing 1141 in location 1134
9999 mem: incrementing refcount of 1141: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1114 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1114 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1117
 105 run: *y <- copy in
9999 mem: location 1113 is 1132
9999 mem: location 1117 is 1144
9999 mem: storing 1132 in location 1144
9999 mem: incrementing refcount of 1132: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1114 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1132
9999 mem: location 1114 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1117
 105 run: *y <- copy next-node
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1143
9999 mem: storing 0 in location 1143
 105 run: jump-if next-node, 1:offset
9999 mem: location 1116 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1113 is 1132
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1129 is 1132
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1139
9999 mem: incrementing refcount of 1132: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1132
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1132
9999 mem: skipping refcount at 1132
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 97
9999 mem: location 1134 is 1141
9999 mem: location 1135 is 1118
9999 mem: location 1139 is 1132
9999 mem: skipping refcount at 1132
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1134 is 1141
9999 mem: storing 1141 in location 1140
9999 mem: incrementing refcount of 1141: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1132: 7 -> 6
9999 mem: storing 1141 in location 1129
9999 mem: incrementing refcount of 1141: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1128 is 1
9999 mem: storing 2 in location 1128
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 2
9999 mem: location 1127 is 9
9999 mem: storing 0 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1128 is 2
9998 run: address to copy is 1076
9998 run: its type is character
9999 mem: location 1076 is 98
9999 mem: storing 98 in location 1131
 104 run: insert_2 c, curr
9999 mem: location 1131 is 98
9999 mem: location 1129 is 1141
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1112
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1113
9999 mem: incrementing refcount of 1141: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1145
9999 mem: storing 1145 in location 1114
9999 mem: incrementing refcount of 1145: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1114 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1114 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9999 mem: storing 1146 in location 1115
 105 run: *val <- copy x
9999 mem: location 1112 is 98
9999 mem: location 1115 is 1146
9999 mem: storing 98 in location 1146
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1113 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1132
9999 mem: location 1113 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1116
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1113 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1132
9999 mem: location 1113 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1117
 105 run: *y <- copy new-node
9999 mem: location 1114 is 1145
9999 mem: location 1117 is 1143
9999 mem: storing 1145 in location 1143
9999 mem: incrementing refcount of 1145: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1114 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1114 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1117
 105 run: *y <- copy in
9999 mem: location 1113 is 1141
9999 mem: location 1117 is 1148
9999 mem: storing 1141 in location 1148
9999 mem: incrementing refcount of 1141: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1114 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1141
9999 mem: location 1114 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1117
 105 run: *y <- copy next-node
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1147
9999 mem: storing 0 in location 1147
 105 run: jump-if next-node, 1:offset
9999 mem: location 1116 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1113 is 1141
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1129 is 1141
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1139
9999 mem: incrementing refcount of 1141: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1141
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1132
9999 mem: location 1139 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1140
9999 mem: incrementing refcount of 1145: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 7 -> 6
9999 mem: storing 1145 in location 1129
9999 mem: incrementing refcount of 1145: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1128 is 2
9999 mem: storing 3 in location 1128
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 3
9999 mem: location 1127 is 9
9999 mem: storing 0 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1128 is 3
9998 run: address to copy is 1077
9998 run: its type is character
9999 mem: location 1077 is 10
9999 mem: storing 10 in location 1131
 104 run: insert_2 c, curr
9999 mem: location 1131 is 10
9999 mem: location 1129 is 1145
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1112
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1113
9999 mem: incrementing refcount of 1145: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1149
9999 mem: storing 1149 in location 1114
9999 mem: incrementing refcount of 1149: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1114 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1114 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1115
 105 run: *val <- copy x
9999 mem: location 1112 is 10
9999 mem: location 1115 is 1150
9999 mem: storing 10 in location 1150
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1113 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1141
9999 mem: location 1113 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1116
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1113 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1141
9999 mem: location 1113 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1117
 105 run: *y <- copy new-node
9999 mem: location 1114 is 1149
9999 mem: location 1117 is 1147
9999 mem: storing 1149 in location 1147
9999 mem: incrementing refcount of 1149: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1114 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1114 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1117
 105 run: *y <- copy in
9999 mem: location 1113 is 1145
9999 mem: location 1117 is 1152
9999 mem: storing 1145 in location 1152
9999 mem: incrementing refcount of 1145: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1114 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1114 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1117
 105 run: *y <- copy next-node
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1151
9999 mem: storing 0 in location 1151
 105 run: jump-if next-node, 1:offset
9999 mem: location 1116 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1113 is 1145
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1129 is 1145
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1139
9999 mem: incrementing refcount of 1145: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1145
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1140
9999 mem: incrementing refcount of 1149: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 7 -> 6
9999 mem: storing 1149 in location 1129
9999 mem: incrementing refcount of 1149: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1128 is 3
9999 mem: storing 4 in location 1128
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 4
9999 mem: location 1127 is 9
9999 mem: storing 0 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1128 is 4
9998 run: address to copy is 1078
9998 run: its type is character
9999 mem: location 1078 is 99
9999 mem: storing 99 in location 1131
 104 run: insert_2 c, curr
9999 mem: location 1131 is 99
9999 mem: location 1129 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1112
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1113
9999 mem: incrementing refcount of 1149: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1153
9999 mem: storing 1153 in location 1114
9999 mem: incrementing refcount of 1153: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1114 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1114 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1115
 105 run: *val <- copy x
9999 mem: location 1112 is 99
9999 mem: location 1115 is 1154
9999 mem: storing 99 in location 1154
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1113 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1113 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1116
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1113 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1145
9999 mem: location 1113 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1117
 105 run: *y <- copy new-node
9999 mem: location 1114 is 1153
9999 mem: location 1117 is 1151
9999 mem: storing 1153 in location 1151
9999 mem: incrementing refcount of 1153: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1114 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1114 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1117
 105 run: *y <- copy in
9999 mem: location 1113 is 1149
9999 mem: location 1117 is 1156
9999 mem: storing 1149 in location 1156
9999 mem: incrementing refcount of 1149: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1114 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1149
9999 mem: location 1114 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1117
 105 run: *y <- copy next-node
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1155
9999 mem: storing 0 in location 1155
 105 run: jump-if next-node, 1:offset
9999 mem: location 1116 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1113 is 1149
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1129 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1139
9999 mem: incrementing refcount of 1149: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1149
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1153
9999 mem: storing 1153 in location 1140
9999 mem: incrementing refcount of 1153: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1153
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1149: 7 -> 6
9999 mem: storing 1153 in location 1129
9999 mem: incrementing refcount of 1153: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1128 is 4
9999 mem: storing 5 in location 1128
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 5
9999 mem: location 1127 is 9
9999 mem: storing 0 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1128 is 5
9998 run: address to copy is 1079
9998 run: its type is character
9999 mem: location 1079 is 10
9999 mem: storing 10 in location 1131
 104 run: insert_2 c, curr
9999 mem: location 1131 is 10
9999 mem: location 1129 is 1153
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1112
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1113
9999 mem: incrementing refcount of 1153: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1157
9999 mem: storing 1157 in location 1114
9999 mem: incrementing refcount of 1157: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1114 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1114 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1115
 105 run: *val <- copy x
9999 mem: location 1112 is 10
9999 mem: location 1115 is 1158
9999 mem: storing 10 in location 1158
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1113 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1149
9999 mem: location 1113 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1116
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1113 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1149
9999 mem: location 1113 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1117
 105 run: *y <- copy new-node
9999 mem: location 1114 is 1157
9999 mem: location 1117 is 1155
9999 mem: storing 1157 in location 1155
9999 mem: incrementing refcount of 1157: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1114 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1114 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1117
 105 run: *y <- copy in
9999 mem: location 1113 is 1153
9999 mem: location 1117 is 1160
9999 mem: storing 1153 in location 1160
9999 mem: incrementing refcount of 1153: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1114 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1153
9999 mem: location 1114 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1117
 105 run: *y <- copy next-node
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1159
9999 mem: storing 0 in location 1159
 105 run: jump-if next-node, 1:offset
9999 mem: location 1116 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1113 is 1153
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1129 is 1153
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1139
9999 mem: incrementing refcount of 1153: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1153
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1140
9999 mem: incrementing refcount of 1157: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1157
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1157
9999 mem: decrementing refcount of 1153: 7 -> 6
9999 mem: storing 1157 in location 1129
9999 mem: incrementing refcount of 1157: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1128 is 5
9999 mem: storing 6 in location 1128
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 6
9999 mem: location 1127 is 9
9999 mem: storing 0 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1128 is 6
9998 run: address to copy is 1080
9998 run: its type is character
9999 mem: location 1080 is 100
9999 mem: storing 100 in location 1131
 104 run: insert_2 c, curr
9999 mem: location 1131 is 100
9999 mem: location 1129 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1112
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1113
9999 mem: incrementing refcount of 1157: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1161
9999 mem: storing 1161 in location 1114
9999 mem: incrementing refcount of 1161: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1114 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1114 is 1161
9999 mem: skipping refcount at 1161
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1115
 105 run: *val <- copy x
9999 mem: location 1112 is 100
9999 mem: location 1115 is 1162
9999 mem: storing 100 in location 1162
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1113 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1153
9999 mem: location 1113 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1116
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1113 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1153
9999 mem: location 1113 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1117
 105 run: *y <- copy new-node
9999 mem: location 1114 is 1161
9999 mem: location 1117 is 1159
9999 mem: storing 1161 in location 1159
9999 mem: incrementing refcount of 1161: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1114 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1114 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1117
 105 run: *y <- copy in
9999 mem: location 1113 is 1157
9999 mem: location 1117 is 1164
9999 mem: storing 1157 in location 1164
9999 mem: incrementing refcount of 1157: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1114 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1157
9999 mem: location 1114 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1117
 105 run: *y <- copy next-node
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1163
9999 mem: storing 0 in location 1163
 105 run: jump-if next-node, 1:offset
9999 mem: location 1116 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1113 is 1157
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1129 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1139
9999 mem: incrementing refcount of 1157: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1157
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1140
9999 mem: incrementing refcount of 1161: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1161
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1161
9999 mem: decrementing refcount of 1157: 7 -> 6
9999 mem: storing 1161 in location 1129
9999 mem: incrementing refcount of 1161: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1128 is 6
9999 mem: storing 7 in location 1128
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 7
9999 mem: location 1127 is 9
9999 mem: storing 0 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1128 is 7
9998 run: address to copy is 1081
9998 run: its type is character
9999 mem: location 1081 is 10
9999 mem: storing 10 in location 1131
 104 run: insert_2 c, curr
9999 mem: location 1131 is 10
9999 mem: location 1129 is 1161
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1112
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1161 in location 1113
9999 mem: incrementing refcount of 1161: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1165
9999 mem: storing 1165 in location 1114
9999 mem: incrementing refcount of 1165: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1114 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1114 is 1165
9999 mem: skipping refcount at 1165
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1115
 105 run: *val <- copy x
9999 mem: location 1112 is 10
9999 mem: location 1115 is 1166
9999 mem: storing 10 in location 1166
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1113 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1157
9999 mem: location 1113 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1116
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1113 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1157
9999 mem: location 1113 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1117
 105 run: *y <- copy new-node
9999 mem: location 1114 is 1165
9999 mem: location 1117 is 1163
9999 mem: storing 1165 in location 1163
9999 mem: incrementing refcount of 1165: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1114 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 0
9999 mem: location 1168 is 0
9999 mem: location 1114 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1168
9999 mem: storing 1168 in location 1117
 105 run: *y <- copy in
9999 mem: location 1113 is 1161
9999 mem: location 1117 is 1168
9999 mem: storing 1161 in location 1168
9999 mem: incrementing refcount of 1161: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1114 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1161
9999 mem: location 1114 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1117
 105 run: *y <- copy next-node
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1167
9999 mem: storing 0 in location 1167
 105 run: jump-if next-node, 1:offset
9999 mem: location 1116 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1113 is 1161
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1129 is 1161
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1161 in location 1139
9999 mem: incrementing refcount of 1161: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1161
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1157
9999 mem: location 1139 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1163 is 1165
9999 mem: storing 1165 in location 1140
9999 mem: incrementing refcount of 1165: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1165
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1165
9999 mem: decrementing refcount of 1161: 7 -> 6
9999 mem: storing 1165 in location 1129
9999 mem: incrementing refcount of 1165: 3 -> 4
 104 run: idx <- add idx, 1
9999 mem: location 1128 is 7
9999 mem: storing 8 in location 1128
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 8
9999 mem: location 1127 is 9
9999 mem: storing 0 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 0
9998 run: jump-if fell through
 104 run: c:character <- index *text, idx
9999 mem: location 1126 is 1072
9999 mem: skipping refcount at 1072
9998 run: base address is 1073
9999 mem: location 1128 is 8
9998 run: address to copy is 1082
9998 run: its type is character
9999 mem: location 1082 is 101
9999 mem: storing 101 in location 1131
 104 run: insert_2 c, curr
9999 mem: location 1131 is 101
9999 mem: location 1129 is 1165
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1112
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1113
9999 mem: incrementing refcount of 1165: 4 -> 5
 105 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1169
9999 mem: storing 1169 in location 1114
9999 mem: incrementing refcount of 1169: 0 -> 1
 105 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1114 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1114 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1115
 105 run: *val <- copy x
9999 mem: location 1112 is 101
9999 mem: location 1115 is 1170
9999 mem: storing 101 in location 1170
 105 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1113 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1161
9999 mem: location 1113 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1116
 105 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1113 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1161
9999 mem: location 1113 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1117
 105 run: *y <- copy new-node
9999 mem: location 1114 is 1169
9999 mem: location 1117 is 1167
9999 mem: storing 1169 in location 1167
9999 mem: incrementing refcount of 1169: 1 -> 2
 105 run: y <- get-address *new-node, prev:offset
9999 mem: location 1114 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 101
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1114 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1172
9999 mem: storing 1172 in location 1117
 105 run: *y <- copy in
9999 mem: location 1113 is 1165
9999 mem: location 1117 is 1172
9999 mem: storing 1165 in location 1172
9999 mem: incrementing refcount of 1165: 5 -> 6
 105 run: y <- get-address *new-node, next:offset
9999 mem: location 1114 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 101
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1165
9999 mem: location 1114 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9999 mem: storing 1171 in location 1117
 105 run: *y <- copy next-node
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1171
9999 mem: storing 0 in location 1171
 105 run: jump-if next-node, 1:offset
9999 mem: location 1116 is 0
9998 run: jump-if fell through
 105 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1113 is 1165
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1129 is 1165
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1139
9999 mem: incrementing refcount of 1165: 6 -> 7
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1165
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 1169
9999 mem: location 1168 is 1161
9999 mem: location 1139 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 1169
9999 mem: storing 1169 in location 1140
9999 mem: incrementing refcount of 1169: 2 -> 3
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1169
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1165: 7 -> 6
9999 mem: storing 1169 in location 1129
9999 mem: incrementing refcount of 1169: 3 -> 4
9990 schedule: insert-text/new-editor/scenario-editor-scrolls-up-on-left-arrow
 104 run: idx <- add idx, 1
9999 mem: location 1128 is 8
9999 mem: storing 9 in location 1128
 104 run: jump 
9998 run: jumping to instruction 11
 104 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1128 is 9
9999 mem: location 1127 is 9
9999 mem: storing 1 in location 1130
 104 run: jump-if done?, 
9999 mem: location 1130 is 1
9998 run: jumping to instruction 18
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1125 is 1096
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1096
9999 mem: decrementing refcount of 1096: 2 -> 1
9999 mem: storing 1096 in location 1090
9999 mem: incrementing refcount of 1096: 1 -> 2
 103 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1094
 103 run: *y <- copy *init
9999 mem: location 1092 is 1097
9999 mem: location 1097 is 1118
9999 mem: location 1094 is 1100
9999 mem: decrementing refcount of 1118: 7 -> 6
9999 mem: storing 1118 in location 1100
9999 mem: incrementing refcount of 1118: 6 -> 7
 103 run: _, _, screen, result <- render screen, result
9999 mem: location 1087 is 1012
9999 mem: location 1090 is 1096
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1173
9999 mem: storing 28 in location 1174
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 4 -> 5
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1177
9999 mem: incrementing refcount of 1096: 2 -> 3
 104 run: jump-if editor, 1:offset
9999 mem: location 1177 is 1096
9998 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1178
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1176 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1139
9999 mem: incrementing refcount of 1012: 5 -> 6
 105 run: jump-unless screen, 
9999 mem: location 1139 is 1012
9998 run: jump-unless fell through
 105 run: height <- get *screen, num-rows:offset
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1140
 105 run: reply height:number
9999 mem: location 1140 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 4
9999 mem: storing 4 in location 1179
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 4
9999 mem: storing 4 in location 1180
 104 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1098 is 1118
9999 mem: storing 1118 in location 1181
9999 mem: incrementing refcount of 1118: 7 -> 8
 104 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1181 is 1118
9999 mem: storing 1118 in location 1182
9999 mem: incrementing refcount of 1118: 8 -> 9
 104 run: curr <- next_2 curr
9999 mem: location 1181 is 1118
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1139
9999 mem: incrementing refcount of 1118: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1118
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1118
9999 mem: skipping refcount at 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1119 is 167
9999 mem: location 1120 is 1132
9999 mem: location 1121 is 0
9999 mem: location 1139 is 1118
9999 mem: skipping refcount at 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1120
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1120 is 1132
9999 mem: storing 1132 in location 1140
9999 mem: incrementing refcount of 1132: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1132
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1132
9999 mem: decrementing refcount of 1118: 10 -> 9
9999 mem: storing 1132 in location 1181
9999 mem: incrementing refcount of 1132: 7 -> 8
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1183
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1184
 104 run: column:number <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1186
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1187
 104 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1188
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1203
9999 mem: storing 6 in location 1204
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 6 -> 7
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 105 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 105 run: *row <- copy new-row
9999 mem: location 1207 is 1
9999 mem: location 1209 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 105 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 6 -> 7
 104 run: jump-unless curr, 
9999 mem: location 1181 is 1132
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 1
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 104 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1190
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 1 in location 1191
 104 run: jump-unless at-cursor?, 
9999 mem: location 1191 is 1
9998 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1182 is 1118
9999 mem: location 1188 is 1100
9999 mem: decrementing refcount of 1118: 9 -> 8
9999 mem: storing 1118 in location 1100
9999 mem: incrementing refcount of 1118: 8 -> 9
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1132
9999 mem: skipping refcount at 1132
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 97
9999 mem: location 1134 is 1141
9999 mem: location 1135 is 1118
9999 mem: location 1181 is 1132
9999 mem: skipping refcount at 1132
9998 run: address to copy is 1133
9998 run: its type is character
9999 mem: location 1133 is 97
9999 mem: storing 97 in location 1192
 104 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 97
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 97
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 97
9999 mem: storing 0 in location 1193
 104 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1185 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1195
 104 run: jump-unless at-right?, 
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1176 is 1012
9999 mem: location 1192 is 97
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1211
9999 mem: storing 25 in location 1212
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 7 -> 8
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1215
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1216
9999 mem: storing 1 in location 1217
 105 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 105 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 105 run: trace 90, [print-character], c
9999 mem: location 1215 is 97
  90 print-character: 97 
 105 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 97
9999 mem: storing 0 in location 1225
 105 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 105 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 5 in location 1228
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 2 -> 3
 105 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 97
9999 mem: storing 0 in location 1231
 105 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 5
9999 mem: storing 1030 in location 1233
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 7
9999 mem: location 1233 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1234
 105 run: *cursor-contents <- copy c
9999 mem: location 1215 is 97
9999 mem: location 1234 is 1030
9999 mem: storing 97 in location 1030
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1030
9999 mem: location 1030 is 97
9999 mem: location 1031 is 7
9999 mem: location 1233 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1235
 105 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1031
9999 mem: storing 7 in location 1031
 105 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 105 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1224 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1181 is 1132
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1139
9999 mem: incrementing refcount of 1132: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1132
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1132
9999 mem: skipping refcount at 1132
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 97
9999 mem: location 1134 is 1141
9999 mem: location 1135 is 1118
9999 mem: location 1139 is 1132
9999 mem: skipping refcount at 1132
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1134 is 1141
9999 mem: storing 1141 in location 1140
9999 mem: incrementing refcount of 1141: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1132: 9 -> 8
9999 mem: storing 1141 in location 1181
9999 mem: incrementing refcount of 1141: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1182 is 1118
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1139
9999 mem: incrementing refcount of 1118: 9 -> 10
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1118
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1118
9999 mem: skipping refcount at 1118
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1119 is 167
9999 mem: location 1120 is 1132
9999 mem: location 1121 is 0
9999 mem: location 1139 is 1118
9999 mem: skipping refcount at 1118
9999 type: type deduced to be character$
9998 run: address to copy is 1120
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1120 is 1132
9999 mem: storing 1132 in location 1140
9999 mem: incrementing refcount of 1132: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1132
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1132
9999 mem: decrementing refcount of 1118: 10 -> 9
9999 mem: storing 1132 in location 1182
9999 mem: incrementing refcount of 1132: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1181 is 1141
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 1
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 104 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1190
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1191
 104 run: jump-unless at-cursor?, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1132
9999 mem: location 1181 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9998 run: its type is character
9999 mem: location 1142 is 10
9999 mem: storing 10 in location 1192
 104 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 10
9999 mem: storing 1 in location 1193
 104 run: jump-unless newline?, 
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1190
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1194
 104 run: jump-unless left-of-cursor?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1176 is 1012
9999 mem: location 1185 is 1
9999 mem: location 1180 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 8 -> 9
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 9 -> 10
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 6 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 3 -> 4
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 6
9999 mem: storing 1032 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 7
9999 mem: location 1233 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1032
9999 mem: storing 32 in location 1032
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1233 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1033
9999 mem: storing 7 in location 1033
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1224 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 10 -> 9
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 9 -> 10
 105 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 10 -> 11
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 7 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 4 -> 5
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 7
9999 mem: storing 1034 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 7
9999 mem: location 1233 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1034
9999 mem: storing 32 in location 1034
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1233 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1035
9999 mem: storing 7 in location 1035
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1224 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 11 -> 10
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 10 -> 11
 105 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 11 -> 12
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 8 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 5 -> 6
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 8
9999 mem: storing 1036 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 7
9999 mem: location 1233 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1036
9999 mem: storing 32 in location 1036
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1233 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1037
9999 mem: storing 7 in location 1037
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1224 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 12 -> 11
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 11 -> 12
 105 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 12 -> 13
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 9 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 6 -> 7
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 9
9999 mem: storing 1038 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 7
9999 mem: location 1233 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1038
9999 mem: storing 32 in location 1038
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1233 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1039
9999 mem: storing 7 in location 1039
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 13 -> 12
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 12 -> 13
 105 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1184 is 1
9999 mem: storing 2 in location 1184
 104 run: column <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 2
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 13 -> 14
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1207
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 105 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 105 run: *row <- copy new-row
9999 mem: location 1207 is 2
9999 mem: location 1209 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 105 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 14 -> 13
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 13 -> 14
 104 run: curr <- next_2 curr
9999 mem: location 1181 is 1141
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1139
9999 mem: incrementing refcount of 1141: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1141
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1132
9999 mem: location 1139 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1140
9999 mem: incrementing refcount of 1145: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 9 -> 8
9999 mem: storing 1145 in location 1181
9999 mem: incrementing refcount of 1145: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1182 is 1132
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1139
9999 mem: incrementing refcount of 1132: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1132
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1132
9999 mem: skipping refcount at 1132
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1133 is 97
9999 mem: location 1134 is 1141
9999 mem: location 1135 is 1118
9999 mem: location 1139 is 1132
9999 mem: skipping refcount at 1132
9999 type: type deduced to be character$
9998 run: address to copy is 1134
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1134 is 1141
9999 mem: storing 1141 in location 1140
9999 mem: incrementing refcount of 1141: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1132: 11 -> 10
9999 mem: storing 1141 in location 1182
9999 mem: incrementing refcount of 1141: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1181 is 1145
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 2
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 104 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is character
9999 mem: location 1146 is 98
9999 mem: storing 98 in location 1192
 104 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 98
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 98
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
9990 schedule: get-color/render/new-editor/scenario-editor-scrolls-up-on-left-arrow
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 98
9999 mem: storing 0 in location 1193
 104 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1185 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1195
 104 run: jump-unless at-right?, 
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1176 is 1012
9999 mem: location 1192 is 98
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 14 -> 15
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1215
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1216
9999 mem: storing 1 in location 1217
 105 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 105 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 105 run: trace 90, [print-character], c
9999 mem: location 1215 is 98
  90 print-character: 98 
 105 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 98
9999 mem: storing 0 in location 1225
 105 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 105 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1228
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 7 -> 8
 105 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 98
9999 mem: storing 0 in location 1231
 105 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 10
9999 mem: storing 1040 in location 1233
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1233 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1234
 105 run: *cursor-contents <- copy c
9999 mem: location 1215 is 98
9999 mem: location 1234 is 1040
9999 mem: storing 98 in location 1040
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1040
9999 mem: location 1040 is 98
9999 mem: location 1041 is 7
9999 mem: location 1233 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1235
 105 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1041
9999 mem: storing 7 in location 1041
 105 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 105 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1224 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1181 is 1145
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1139
9999 mem: incrementing refcount of 1145: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1145
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1140
9999 mem: incrementing refcount of 1149: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 9 -> 8
9999 mem: storing 1149 in location 1181
9999 mem: incrementing refcount of 1149: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1182 is 1141
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1139
9999 mem: incrementing refcount of 1141: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1141
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1132
9999 mem: location 1139 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1140
9999 mem: incrementing refcount of 1145: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 11 -> 10
9999 mem: storing 1145 in location 1182
9999 mem: incrementing refcount of 1145: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1181 is 1149
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 2
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 104 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1181 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is character
9999 mem: location 1150 is 10
9999 mem: storing 10 in location 1192
 104 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 10
9999 mem: storing 1 in location 1193
 104 run: jump-unless newline?, 
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1176 is 1012
9999 mem: location 1185 is 1
9999 mem: location 1180 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 15 -> 16
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 16 -> 17
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 8 -> 9
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 11
9999 mem: storing 1042 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1233 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1042
9999 mem: storing 32 in location 1042
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1233 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1043
9999 mem: storing 7 in location 1043
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1224 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 17 -> 16
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 16 -> 17
 105 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 17 -> 18
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 9 -> 10
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 12
9999 mem: storing 1044 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1233 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1044
9999 mem: storing 32 in location 1044
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1233 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1045
9999 mem: storing 7 in location 1045
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1224 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 18 -> 17
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 17 -> 18
 105 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 18 -> 19
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 10 -> 11
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 13
9999 mem: storing 1046 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1233 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1046
9999 mem: storing 32 in location 1046
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1233 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1047
9999 mem: storing 7 in location 1047
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1224 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 19 -> 18
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 18 -> 19
 105 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 19 -> 20
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 11 -> 12
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 14
9999 mem: storing 1048 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1233 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1048
9999 mem: storing 32 in location 1048
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1233 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1049
9999 mem: storing 7 in location 1049
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 20 -> 19
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 19 -> 20
 105 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1184 is 2
9999 mem: storing 3 in location 1184
 104 run: column <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 20 -> 21
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1207
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 105 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 105 run: *row <- copy new-row
9999 mem: location 1207 is 3
9999 mem: location 1209 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 105 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 21 -> 20
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 20 -> 21
 104 run: curr <- next_2 curr
9999 mem: location 1181 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1139
9999 mem: incrementing refcount of 1149: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1149
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1153
9999 mem: storing 1153 in location 1140
9999 mem: incrementing refcount of 1153: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1153
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1149: 9 -> 8
9999 mem: storing 1153 in location 1181
9999 mem: incrementing refcount of 1153: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1182 is 1145
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1139
9999 mem: incrementing refcount of 1145: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1145
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1139 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1140
9999 mem: incrementing refcount of 1149: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 11 -> 10
9999 mem: storing 1149 in location 1182
9999 mem: incrementing refcount of 1149: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1181 is 1153
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 3
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 104 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 3
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 99
9999 mem: storing 99 in location 1192
 104 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 99
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 99
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 99
9999 mem: storing 0 in location 1193
 104 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1185 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1195
 104 run: jump-unless at-right?, 
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 104 run: print screen, c, color
9999 mem: location 1176 is 1012
9999 mem: location 1192 is 99
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 21 -> 22
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1215
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1216
9999 mem: storing 1 in location 1217
 105 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 105 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 105 run: trace 90, [print-character], c
9999 mem: location 1215 is 99
  90 print-character: 99 
 105 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 105 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 105 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 105 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 99
9999 mem: storing 0 in location 1225
 105 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 105 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 15 in location 1228
 105 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 12 -> 13
 105 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 99
9999 mem: storing 0 in location 1231
 105 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 15
9999 mem: storing 1050 in location 1233
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1233 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1234
 105 run: *cursor-contents <- copy c
9999 mem: location 1215 is 99
9999 mem: location 1234 is 1050
9999 mem: storing 99 in location 1050
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1050
9999 mem: location 1050 is 99
9999 mem: location 1051 is 7
9999 mem: location 1233 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1235
 105 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1051
9999 mem: storing 7 in location 1051
 105 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 105 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1224 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: curr <- next_2 curr
9999 mem: location 1181 is 1153
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1139
9999 mem: incrementing refcount of 1153: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1153
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1140
9999 mem: incrementing refcount of 1157: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1157
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1157
9999 mem: decrementing refcount of 1153: 9 -> 8
9999 mem: storing 1157 in location 1181
9999 mem: incrementing refcount of 1157: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1182 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1139
9999 mem: incrementing refcount of 1149: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1149
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1153
9999 mem: storing 1153 in location 1140
9999 mem: incrementing refcount of 1153: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1153
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1149: 11 -> 10
9999 mem: storing 1153 in location 1182
9999 mem: incrementing refcount of 1153: 9 -> 10
 104 run: column <- add column, 1
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 104 run: jump 
9998 run: jumping to instruction 20
 104 run: jump-unless curr, 
9999 mem: location 1181 is 1157
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 3
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 104 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
9990 schedule: render/new-editor/scenario-editor-scrolls-up-on-left-arrow
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 3
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1181 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1158
9998 run: its type is character
9999 mem: location 1158 is 10
9999 mem: storing 10 in location 1192
 104 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 10
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 105 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1003
 105 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1004
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1003 is 7
9999 mem: storing 1 in location 1005
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1006
 105 run: jump-unless starting-comment?, 
9999 mem: location 1006 is 0
9998 run: jumping to instruction 11
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1007
 105 run: jump-unless color-is-blue?, 
9999 mem: location 1007 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless color-is-white?, 
9999 mem: location 1005 is 1
9998 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1004 is 10
9999 mem: storing 0 in location 1009
 105 run: jump-unless starting-assignment?, 
9999 mem: location 1009 is 0
9998 run: jumping to instruction 27
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1003 is 7
9999 mem: storing 0 in location 1010
 105 run: jump-unless color-is-red?, 
9999 mem: location 1010 is 0
9998 run: jumping to instruction 35
 105 run: reply color
9999 mem: location 1003 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 10
9999 mem: storing 1 in location 1193
 104 run: jump-unless newline?, 
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 3
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 104 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1176 is 1012
9999 mem: location 1185 is 1
9999 mem: location 1180 is 4
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 22 -> 23
 105 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 105 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 105 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 23 -> 24
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 16 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 13 -> 14
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 16
9999 mem: storing 1052 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1233 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1052
9999 mem: storing 32 in location 1052
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1233 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1053
9999 mem: storing 7 in location 1053
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1224 is 1016
9999 mem: storing 2 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 24 -> 23
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 23 -> 24
 105 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 24 -> 25
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 17 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 14 -> 15
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 17
9999 mem: storing 1054 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1233 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1054
9999 mem: storing 32 in location 1054
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1233 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1055
9999 mem: storing 7 in location 1055
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1224 is 1016
9999 mem: storing 3 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 25 -> 24
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 24 -> 25
 105 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 25 -> 26
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 18 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 15 -> 16
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 18
9999 mem: storing 1056 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1233 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1056
9999 mem: storing 32 in location 1056
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1233 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1057
9999 mem: storing 7 in location 1057
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1224 is 1016
9999 mem: storing 4 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 26 -> 25
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 25 -> 26
 105 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 26 -> 27
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 106 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 106 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 106 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 106 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 106 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 106 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 106 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 106 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 106 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 19 in location 1228
 106 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 16 -> 17
 106 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 19
9999 mem: storing 1058 in location 1233
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1233 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1234
 106 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1058
9999 mem: storing 32 in location 1058
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1233 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1235
 106 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1059
9999 mem: storing 7 in location 1059
 106 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1237
 106 run: jump-if at-right?, 
9999 mem: location 1237 is 1
9998 run: jumping to instruction 74
 106 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 27 -> 26
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 26 -> 27
 105 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 105 run: jump 
9998 run: jumping to instruction 6
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 105 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: row <- add row, 1
9999 mem: location 1184 is 3
9999 mem: storing 4 in location 1184
 104 run: column <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 4
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 27 -> 28
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1207
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 105 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 105 run: *row <- copy new-row
9999 mem: location 1207 is 4
9999 mem: location 1209 is 1015
9999 mem: storing 4 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 105 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 28 -> 27
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 27 -> 28
 104 run: curr <- next_2 curr
9999 mem: location 1181 is 1157
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1139
9999 mem: incrementing refcount of 1157: 8 -> 9
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1157
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1140
9999 mem: incrementing refcount of 1161: 6 -> 7
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1161
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1161
9999 mem: decrementing refcount of 1157: 9 -> 8
9999 mem: storing 1161 in location 1181
9999 mem: incrementing refcount of 1161: 7 -> 8
 104 run: prev <- next_2 prev
9999 mem: location 1182 is 1153
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 105 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1139
9999 mem: incrementing refcount of 1153: 10 -> 11
 105 run: jump-if in, 1:offset
9999 mem: location 1139 is 1153
9998 run: jumping to instruction 4
 105 run: result <- get *in, next:offset
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1140
9999 mem: incrementing refcount of 1157: 8 -> 9
 105 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1157
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1157
9999 mem: decrementing refcount of 1153: 11 -> 10
9999 mem: storing 1157 in location 1182
9999 mem: incrementing refcount of 1157: 9 -> 10
 104 run: jump +next-character:label
9998 run: jumping to instruction 21
 104 run: jump-unless curr, 
9999 mem: location 1181 is 1161
9998 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 4
9999 mem: location 1179 is 4
9999 mem: storing 1 in location 1189
 104 run: jump-if off-screen?, 
9999 mem: location 1189 is 1
9998 run: jumping to instruction 68
 104 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1197
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1181 is 1161
9999 mem: location 1197 is 1099
9999 mem: storing 1161 in location 1099
9999 mem: incrementing refcount of 1161: 8 -> 9
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 4
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 1 in location 1198
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1190 is 0
9999 mem: location 1198 is 1
9999 mem: storing 0 in location 1199
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1184 is 4
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1200
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1201
 104 run: jump-unless before-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 81
 104 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 0
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1202
 104 run: *bottom <- copy row
9999 mem: location 1184 is 4
9999 mem: location 1202 is 1103
9999 mem: storing 4 in location 1103
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1184 is 4
9999 mem: location 1185 is 0
9999 mem: location 1176 is 1012
9999 mem: location 1177 is 1096
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 4
9998 run: result 1 is 0
9998 run: result 2 is 1012
9998 run: result 3 is 1096
9999 mem: decrementing refcount of 1012: 28 -> 27
9999 mem: storing 1012 in location 1087
9999 mem: incrementing refcount of 1012: 27 -> 28
9999 mem: decrementing refcount of 1096: 3 -> 2
9999 mem: storing 1096 in location 1090
9999 mem: incrementing refcount of 1096: 2 -> 3
 103 run: indent?:address:boolean <- get-address *result, indent?:offset
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1090 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1095
 103 run: *indent? <- copy 1/true
9999 mem: location 1095 is 1106
9999 mem: storing 1 in location 1106
 103 run: reply result:address:shared:editor-data, screen:address:shared:screen
9999 mem: location 1090 is 1096
9999 mem: location 1087 is 1012
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1096
9999 mem: storing 1096 in location 2
9999 mem: incrementing refcount of 1096: 3 -> 4
 102 run: assume-console [
    press page-down
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"page-down": <>}
9992 load: after rewriting: press page-down
9999 mem: storing 'press' event starting at 1240
9999 mem: storing console in 1244
9999 mem: storing console data in 1246
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1244
9999 mem: location 2 is 1096
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1247
9999 mem: storing 14 in location 1248
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 28 -> 29
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1251
9999 mem: incrementing refcount of 1244: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1252
9999 mem: incrementing refcount of 1096: 4 -> 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9998 run: its type is number
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1253
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9998 run: its type is number
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1254
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1250 is 1012
9999 mem: location 1253 is 1
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 29 -> 30
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 105 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 105 run: *row <- copy new-row
9999 mem: location 1207 is 1
9999 mem: location 1209 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 105 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 30 -> 29
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 29 -> 30
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1251 is 1244
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1263
9999 mem: storing 12 in location 1264
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1266
9999 mem: incrementing refcount of 1244: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1266 is 1244
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1266 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 0
9999 mem: location 1246 is 1238
9999 mem: location 1266 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1245
9999 mem: storing 1245 in location 1267
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1266 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 0
9999 mem: location 1246 is 1238
9999 mem: location 1266 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1246
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1246 is 1238
9999 mem: storing 1238 in location 1268
9999 mem: incrementing refcount of 1238: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1268 is 1238
9999 mem: skipping refcount at 1238
9999 mem: storing 1 in location 1269
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1267 is 1245
9999 mem: location 1245 is 0
9999 mem: location 1269 is 1
9999 mem: storing 0 in location 1270
 105 run: jump-unless done?, 
9999 mem: location 1270 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1268 is 1238
9999 mem: skipping refcount at 1238
9998 run: base address is 1239
9999 mem: location 1267 is 1245
9999 mem: location 1245 is 0
9998 run: address to copy is 1240
9998 run: its type is event
9999 mem: location 1240 is 1
9999 mem: location 1241 is 65518
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: storing 1 in location 1272
9999 mem: storing 65518 in location 1273
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1267 is 1245
9999 mem: location 1245 is 0
9999 mem: location 1267 is 1245
9999 mem: storing 1 in location 1245
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1272 is 1
9999 mem: location 1273 is 65518
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: location 1266 is 1244
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65518, 0, 0]
9998 run: result 1 is 1244
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1255
9999 mem: storing 65518 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: decrementing refcount of 1244: 2 -> 1
9999 mem: storing 1244 in location 1251
9999 mem: incrementing refcount of 1244: 1 -> 2
9999 mem: storing 1 in location 1259
9999 mem: storing 0 in location 1260
 104 run: jump-unless found?, 
9999 mem: location 1259 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1255 is 1
9999 mem: location 1256 is 65518
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless t, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1250 is 1012
9999 mem: location 1252 is 1096
9999 mem: location 1255 is 1
9999 mem: location 1256 is 65518
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1277
9999 mem: storing 85 in location 1278
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 30 -> 31
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1281
9999 mem: incrementing refcount of 1096: 5 -> 6
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1282
9999 mem: storing 65518 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1286
 105 run: jump-if editor, 1:offset
9999 mem: location 1281 is 1096
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1280 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1139
9999 mem: incrementing refcount of 1012: 31 -> 32
 106 run: jump-unless screen, 
9999 mem: location 1139 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1140
 106 run: reply width:number
9999 mem: location 1140 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1287
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1280 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1139
9999 mem: incrementing refcount of 1012: 32 -> 33
 106 run: jump-unless screen, 
9999 mem: location 1139 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1140
 106 run: reply height:number
9999 mem: location 1140 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1288
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1289
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 4
9999 mem: storing 4 in location 1290
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1291
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1292
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1293
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1292 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1294
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1293 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1295
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1282 is 1
9999 mem: location 1283 is 65518
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: storing 0 in location 1296
 105 run: jump-unless c, 
9999 mem: location 1296 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1282 is 1
9999 mem: location 1283 is 65518
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: storing 1283 in location 1350
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1350 is 1283
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1350 is 1283
9999 mem: location 1283 is 65518
9999 mem: storing 0 in location 1313
 105 run: jump-unless page-up?, 
9999 mem: location 1313 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1350 is 1283
9999 mem: location 1283 is 65518
9999 mem: storing 1 in location 1329
 105 run: jump-unless page-down?, 
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 105 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1314
 105 run: old-top:address:shared:duplex-list:character <- copy *top-of-screen
9999 mem: location 1314 is 1098
9999 mem: location 1098 is 1118
9999 mem: storing 1118 in location 1315
9999 mem: incrementing refcount of 1118: 9 -> 10
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9998 run: its type is number
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1316
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9998 run: its type is number
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1317
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1098 is 1118
9999 mem: storing 1118 in location 1318
9999 mem: incrementing refcount of 1118: 10 -> 11
 105 run: page-down editor
9999 mem: location 1281 is 1096
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1112
9999 mem: incrementing refcount of 1096: 6 -> 7
 106 run: bottom-of-screen:address:shared:duplex-list:character <- get *editor, bottom-of-screen:offset
9999 mem: location 1112 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1112 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1099
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1099 is 1161
9999 mem: storing 1161 in location 1113
9999 mem: incrementing refcount of 1161: 9 -> 10
 106 run: jump-if bottom-of-screen, 1:offset
9999 mem: location 1113 is 1161
9998 run: jumping to instruction 5
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1112 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1118
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1112 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1114
 106 run: *before-cursor <- prev_2 bottom-of-screen
9999 mem: location 1113 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1161 in location 1139
9999 mem: incrementing refcount of 1161: 10 -> 11
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1139 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1157
9999 mem: location 1139 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1164
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1164 is 1157
9999 mem: storing 1157 in location 1140
9999 mem: incrementing refcount of 1157: 10 -> 11
 107 run: reply result
9999 mem: location 1140 is 1157
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1157
9999 mem: location 1114 is 1100
9999 mem: decrementing refcount of 1118: 11 -> 10
9999 mem: storing 1157 in location 1100
9999 mem: incrementing refcount of 1157: 11 -> 12
 106 run: last:character <- get **before-cursor, value:offset
9999 mem: location 1114 is 1100
9999 mem: location 1100 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1114 is 1100
9999 mem: location 1100 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1158
9998 run: its type is character
9999 mem: location 1158 is 10
9999 mem: storing 10 in location 1115
 106 run: newline?:boolean <- equal last, 10/newline
9999 mem: location 1115 is 10
9999 mem: storing 1 in location 1116
 106 run: jump-unless newline?:boolean, 
9999 mem: location 1116 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- prev_2 *before-cursor
9999 mem: location 1114 is 1100
9999 mem: location 1100 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1139
9999 mem: incrementing refcount of 1157: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1157
9998 run: jumping to instruction 4
 107 run: result <- get *in, prev:offset
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1153
9999 mem: storing 1153 in location 1140
9999 mem: incrementing refcount of 1153: 10 -> 11
 107 run: reply result
9999 mem: location 1140 is 1153
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1153
9999 mem: location 1114 is 1100
9999 mem: decrementing refcount of 1157: 13 -> 12
9999 mem: storing 1153 in location 1100
9999 mem: incrementing refcount of 1153: 11 -> 12
 106 run: move-to-start-of-line editor
9999 mem: location 1112 is 1096
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1364
9999 mem: storing 9 in location 1365
 107 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1367
9999 mem: incrementing refcount of 1096: 7 -> 8
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1367 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1153
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1367 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1368
 107 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1367 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1153
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1367 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1369
 107 run: *cursor-column <- copy left
9999 mem: location 1368 is 0
9999 mem: location 1369 is 1105
9999 mem: storing 0 in location 1105
 107 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1367 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1153
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1367 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1370
 107 run: init:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1367 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1153
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1367 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1097
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1097 is 1118
9999 mem: storing 1118 in location 1371
9999 mem: incrementing refcount of 1118: 10 -> 11
 107 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1370 is 1100
9999 mem: location 1100 is 1153
9999 mem: location 1371 is 1118
9999 mem: storing 0 in location 1372
 107 run: jump-if at-start-of-text?, 
9999 mem: location 1372 is 0
9998 run: jump-if fell through
 107 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1370 is 1100
9999 mem: location 1100 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1370 is 1100
9999 mem: location 1100 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 99
9999 mem: storing 99 in location 1373
 107 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1373 is 99
9999 mem: storing 0 in location 1374
 107 run: jump-if at-start-of-line?, 
9999 mem: location 1374 is 0
9998 run: jump-if fell through
 107 run: *before-cursor <- prev_2 *before-cursor
9999 mem: location 1370 is 1100
9999 mem: location 1100 is 1153
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1139
9999 mem: incrementing refcount of 1153: 12 -> 13
 108 run: jump-if in, 1:offset
9999 mem: location 1139 is 1153
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1156
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1156 is 1149
9999 mem: storing 1149 in location 1140
9999 mem: incrementing refcount of 1149: 10 -> 11
 108 run: reply result
9999 mem: location 1140 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1149
9999 mem: location 1370 is 1100
9999 mem: decrementing refcount of 1153: 13 -> 12
9999 mem: storing 1149 in location 1100
9999 mem: incrementing refcount of 1149: 11 -> 12
 107 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1370 is 1100
9999 mem: location 1100 is 1149
 107 run: jump 
9998 run: jumping to instruction 8
 107 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1370 is 1100
9999 mem: location 1100 is 1149
9999 mem: location 1371 is 1118
9999 mem: storing 0 in location 1372
 107 run: jump-if at-start-of-text?, 
9999 mem: location 1372 is 0
9998 run: jump-if fell through
 107 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1370 is 1100
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1370 is 1100
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is character
9999 mem: location 1150 is 10
9999 mem: storing 10 in location 1373
 107 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1373 is 10
9999 mem: storing 1 in location 1374
 107 run: jump-if at-start-of-line?, 
9999 mem: location 1374 is 1
9998 run: jumping to instruction 16
 107 run: reply editor:address:shared:editor-data
9999 mem: location 1367 is 1096
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
 106 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1112 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1118
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1112 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1117
 106 run: *top-of-screen <- copy *before-cursor
9999 mem: location 1114 is 1100
9999 mem: location 1100 is 1149
9999 mem: location 1117 is 1098
9999 mem: decrementing refcount of 1118: 11 -> 10
9999 mem: storing 1149 in location 1098
9999 mem: incrementing refcount of 1149: 12 -> 13
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1112 is 1096
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1319
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9998 run: its type is number
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1320
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9998 run: its type is number
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1321
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1098 is 1149
9999 mem: storing 1149 in location 1322
9999 mem: incrementing refcount of 1149: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1319 is 0
9998 run: jumping to instruction 514
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1299
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1316 is 1
9999 mem: location 1317 is 0
9999 mem: location 1318 is 1118
9999 mem: location 1320 is 1
9999 mem: location 1321 is 0
9999 mem: location 1322 is 1149
9999 mem: location 1319 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1118 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 1149 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1281 is 1096
9999 mem: location 1299 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1375
9999 mem: storing 5 in location 1376
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1378
9999 mem: incrementing refcount of 1096: 8 -> 9
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1379
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1378 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 0
9999 mem: location 1108 is 0
9999 mem: location 1378 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1380
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1379 is 1000
9999 mem: location 1380 is 1107
9999 mem: location 1107 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1206
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1207
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1382
9999 mem: storing 1382 in location 1208
9999 mem: incrementing refcount of 1382: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1208 is 1382
9999 mem: skipping refcount at 1382
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1383 is 0
9999 mem: location 1384 is 0
9999 mem: location 1208 is 1382
9999 mem: skipping refcount at 1382
9998 run: address to copy is 1383
9999 mem: storing 1383 in location 1209
 107 run: *val <- copy x
9999 mem: location 1206 is 1000
9999 mem: location 1209 is 1383
9999 mem: storing 1000 in location 1383
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1208 is 1382
9999 mem: skipping refcount at 1382
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1383 is 1000
9999 mem: location 1384 is 0
9999 mem: location 1208 is 1382
9999 mem: skipping refcount at 1382
9999 type: type deduced to be address$
9998 run: address to copy is 1384
9999 mem: storing 1384 in location 1210
 107 run: *next <- copy in
9999 mem: location 1207 is 0
9999 mem: location 1210 is 1384
9999 mem: storing 0 in location 1384
 107 run: reply result
9999 mem: location 1208 is 1382
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1382
9999 mem: location 1380 is 1107
9999 mem: storing 1382 in location 1107
9999 mem: incrementing refcount of 1382: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1378 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1378 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1381
 106 run: *redo <- copy 0
9999 mem: location 1381 is 1108
9999 mem: storing 0 in location 1108
9990 schedule: add-operation/handle-keyboard-event/editor-event-loop/run1001/scenario-editor-scrolls-up-on-left-arrow
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1378 is 1096
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1096
9999 mem: decrementing refcount of 1096: 9 -> 8
9999 mem: storing 1096 in location 1281
9999 mem: incrementing refcount of 1096: 8 -> 9
 105 run: no-movement?:boolean <- equal *top-of-screen, old-top
9999 mem: location 1314 is 1098
9999 mem: location 1098 is 1149
9999 mem: location 1315 is 1118
9999 mem: storing 0 in location 1328
 105 run: go-render? <- not no-movement?
9999 mem: location 1328 is 0
9999 mem: storing 1 in location 1286
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 1096
9999 mem: location 1286 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1096
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 33 -> 32
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 32 -> 33
9999 mem: decrementing refcount of 1096: 9 -> 8
9999 mem: storing 1096 in location 1252
9999 mem: incrementing refcount of 1096: 8 -> 9
9999 mem: storing 1 in location 1262
 104 run: jump-unless go-render?, 
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1250 is 1012
9999 mem: location 1252 is 1096
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1112
9999 mem: incrementing refcount of 1012: 33 -> 34
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1113
9999 mem: incrementing refcount of 1096: 9 -> 10
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1113 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1113 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1114
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1113 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1113 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 4
9999 mem: storing 4 in location 1115
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1112 is 1012
9999 mem: location 1113 is 1096
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 34 -> 35
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1177
9999 mem: incrementing refcount of 1096: 10 -> 11
 106 run: jump-if editor, 1:offset
9999 mem: location 1177 is 1096
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1178
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1176 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1139
9999 mem: incrementing refcount of 1012: 35 -> 36
 107 run: jump-unless screen, 
9999 mem: location 1139 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1140
 107 run: reply height:number
9999 mem: location 1140 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1179
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 4
9999 mem: storing 4 in location 1180
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1098 is 1149
9999 mem: storing 1149 in location 1181
9999 mem: incrementing refcount of 1149: 14 -> 15
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1181 is 1149
9999 mem: storing 1149 in location 1182
9999 mem: incrementing refcount of 1149: 15 -> 16
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1139
9999 mem: incrementing refcount of 1149: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1149
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1153
9999 mem: storing 1153 in location 1140
9999 mem: incrementing refcount of 1153: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1153
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1149: 17 -> 16
9999 mem: storing 1153 in location 1181
9999 mem: incrementing refcount of 1153: 13 -> 14
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1183
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1184
 106 run: column:number <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1186
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1187
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1188
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 36 -> 37
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 107 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 107 run: *row <- copy new-row
9999 mem: location 1207 is 1
9999 mem: location 1209 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 107 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 37 -> 36
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 36 -> 37
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1153
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 1
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 1 in location 1191
 106 run: jump-unless at-cursor?, 
9999 mem: location 1191 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1182 is 1149
9999 mem: location 1188 is 1100
9999 mem: decrementing refcount of 1149: 16 -> 15
9999 mem: storing 1149 in location 1100
9999 mem: incrementing refcount of 1149: 15 -> 16
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 99
9999 mem: storing 99 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1063
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1064
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1063 is 7
9999 mem: storing 1 in location 1065
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1064 is 99
9999 mem: storing 0 in location 1066
 107 run: jump-unless starting-comment?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1067
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1067 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1064 is 99
9999 mem: storing 0 in location 1069
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1069 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1070
 107 run: jump-unless color-is-red?, 
9999 mem: location 1070 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1063 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 99
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1185 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1195
 106 run: jump-unless at-right?, 
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1176 is 1012
9999 mem: location 1192 is 99
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 37 -> 38
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 99
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 5 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 17 -> 18
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 99
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 5
9999 mem: storing 1030 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1030
9999 mem: location 1030 is 97
9999 mem: location 1031 is 7
9999 mem: location 1233 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 99
9999 mem: location 1234 is 1030
9999 mem: storing 99 in location 1030
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1030
9999 mem: location 1030 is 99
9999 mem: location 1031 is 7
9999 mem: location 1233 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1031
9999 mem: storing 7 in location 1031
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1224 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1139
9999 mem: incrementing refcount of 1153: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1153
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1140
9999 mem: incrementing refcount of 1157: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1157
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1157
9999 mem: decrementing refcount of 1153: 15 -> 14
9999 mem: storing 1157 in location 1181
9999 mem: incrementing refcount of 1157: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1139
9999 mem: incrementing refcount of 1149: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1149
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1139 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1153
9999 mem: storing 1153 in location 1140
9999 mem: incrementing refcount of 1153: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1153
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1149: 17 -> 16
9999 mem: storing 1153 in location 1182
9999 mem: incrementing refcount of 1153: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1157
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 1
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1191
 106 run: jump-unless at-cursor?, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1181 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1158
9998 run: its type is character
9999 mem: location 1158 is 10
9999 mem: storing 10 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1063
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1064
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1063 is 7
9999 mem: storing 1 in location 1065
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1064 is 10
9999 mem: storing 0 in location 1066
 107 run: jump-unless starting-comment?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1067
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1067 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1064 is 10
9999 mem: storing 0 in location 1069
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1069 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1070
 107 run: jump-unless color-is-red?, 
9999 mem: location 1070 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1063 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 10
9999 mem: storing 1 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1194
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1176 is 1012
9999 mem: location 1185 is 1
9999 mem: location 1180 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 38 -> 39
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 39 -> 40
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 6 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 18 -> 19
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 6
9999 mem: storing 1032 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1233 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1032
9999 mem: storing 32 in location 1032
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1233 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1033
9999 mem: storing 7 in location 1033
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1224 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 40 -> 39
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 39 -> 40
 107 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 40 -> 41
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 7 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 19 -> 20
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 7
9999 mem: storing 1034 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1233 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1034
9999 mem: storing 32 in location 1034
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1233 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1035
9999 mem: storing 7 in location 1035
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1224 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 41 -> 40
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 40 -> 41
 107 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 41 -> 42
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 8 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 20 -> 21
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 8
9999 mem: storing 1036 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1233 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1036
9999 mem: storing 32 in location 1036
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1233 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1037
9999 mem: storing 7 in location 1037
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1224 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 42 -> 41
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 41 -> 42
 107 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 42 -> 43
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 9 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 21 -> 22
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 9
9999 mem: storing 1038 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1233 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1038
9999 mem: storing 32 in location 1038
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1233 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1039
9999 mem: storing 7 in location 1039
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 43 -> 42
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 42 -> 43
 107 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1184 is 1
9999 mem: storing 2 in location 1184
 106 run: column <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 2
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 43 -> 44
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1207
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 107 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 107 run: *row <- copy new-row
9999 mem: location 1207 is 2
9999 mem: location 1209 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 107 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 44 -> 43
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 43 -> 44
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1139
9999 mem: incrementing refcount of 1157: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1157
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1140
9999 mem: incrementing refcount of 1161: 11 -> 12
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1161
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1161
9999 mem: decrementing refcount of 1157: 15 -> 14
9999 mem: storing 1161 in location 1181
9999 mem: incrementing refcount of 1161: 12 -> 13
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1139
9999 mem: incrementing refcount of 1153: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1153
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1139 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1140
9999 mem: incrementing refcount of 1157: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1157
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1157
9999 mem: decrementing refcount of 1153: 17 -> 16
9999 mem: storing 1157 in location 1182
9999 mem: incrementing refcount of 1157: 15 -> 16
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1161
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 2
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1157
9999 mem: location 1181 is 1161
9999 mem: skipping refcount at 1161
9998 run: address to copy is 1162
9998 run: its type is character
9999 mem: location 1162 is 100
9999 mem: storing 100 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1063
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1064
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1063 is 7
9999 mem: storing 1 in location 1065
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1064 is 100
9999 mem: storing 0 in location 1066
 107 run: jump-unless starting-comment?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1067
9990 schedule: get-color/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-on-left-arrow
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1067 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1064 is 100
9999 mem: storing 0 in location 1069
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1069 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1070
 107 run: jump-unless color-is-red?, 
9999 mem: location 1070 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1063 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 100
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1185 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1195
 106 run: jump-unless at-right?, 
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1176 is 1012
9999 mem: location 1192 is 100
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 44 -> 45
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 100
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 22 -> 23
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 100
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 10
9999 mem: storing 1040 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1040
9999 mem: location 1040 is 98
9999 mem: location 1041 is 7
9999 mem: location 1233 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 100
9999 mem: location 1234 is 1040
9999 mem: storing 100 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1040
9999 mem: location 1040 is 100
9999 mem: location 1041 is 7
9999 mem: location 1233 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1224 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1161 in location 1139
9999 mem: incrementing refcount of 1161: 13 -> 14
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1157
9999 mem: location 1139 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1163 is 1165
9999 mem: storing 1165 in location 1140
9999 mem: incrementing refcount of 1165: 6 -> 7
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1165
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1165
9999 mem: decrementing refcount of 1161: 14 -> 13
9999 mem: storing 1165 in location 1181
9999 mem: incrementing refcount of 1165: 7 -> 8
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1139
9999 mem: incrementing refcount of 1157: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1157
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1139 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1140
9999 mem: incrementing refcount of 1161: 13 -> 14
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1161
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1161
9999 mem: decrementing refcount of 1157: 17 -> 16
9999 mem: storing 1161 in location 1182
9999 mem: incrementing refcount of 1161: 14 -> 15
 106 run: column <- add column, 1
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1165
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 2
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 1169
9999 mem: location 1168 is 1161
9999 mem: location 1181 is 1165
9999 mem: skipping refcount at 1165
9998 run: address to copy is 1166
9998 run: its type is character
9999 mem: location 1166 is 10
9999 mem: storing 10 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1063
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1064
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1063 is 7
9999 mem: storing 1 in location 1065
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1064 is 10
9999 mem: storing 0 in location 1066
 107 run: jump-unless starting-comment?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1067
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1067 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1064 is 10
9999 mem: storing 0 in location 1069
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1069 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1070
 107 run: jump-unless color-is-red?, 
9999 mem: location 1070 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1063 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 10
9999 mem: storing 1 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1176 is 1012
9999 mem: location 1185 is 1
9999 mem: location 1180 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 45 -> 46
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 46 -> 47
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 23 -> 24
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 11
9999 mem: storing 1042 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1233 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1042
9999 mem: storing 32 in location 1042
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1233 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1043
9999 mem: storing 7 in location 1043
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1224 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 47 -> 46
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 46 -> 47
 107 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 47 -> 48
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 24 -> 25
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 12
9999 mem: storing 1044 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1233 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1044
9999 mem: storing 32 in location 1044
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1233 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1045
9999 mem: storing 7 in location 1045
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1224 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 48 -> 47
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 47 -> 48
 107 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 48 -> 49
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 25 -> 26
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 13
9999 mem: storing 1046 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1233 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1046
9999 mem: storing 32 in location 1046
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1233 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1047
9999 mem: storing 7 in location 1047
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1224 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 49 -> 48
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 48 -> 49
 107 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 49 -> 50
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 26 -> 27
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 14
9999 mem: storing 1048 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1233 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1048
9999 mem: storing 32 in location 1048
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1233 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1049
9999 mem: storing 7 in location 1049
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 50 -> 49
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 49 -> 50
 107 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1184 is 2
9999 mem: storing 3 in location 1184
 106 run: column <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 50 -> 51
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1207
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 107 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 107 run: *row <- copy new-row
9999 mem: location 1207 is 3
9999 mem: location 1209 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 107 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 51 -> 50
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 50 -> 51
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1165
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1139
9999 mem: incrementing refcount of 1165: 8 -> 9
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1165
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 1169
9999 mem: location 1168 is 1161
9999 mem: location 1139 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 1169
9999 mem: storing 1169 in location 1140
9999 mem: incrementing refcount of 1169: 4 -> 5
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1169
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1165: 9 -> 8
9999 mem: storing 1169 in location 1181
9999 mem: incrementing refcount of 1169: 5 -> 6
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1161 in location 1139
9999 mem: incrementing refcount of 1161: 15 -> 16
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1157
9999 mem: location 1139 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1163 is 1165
9999 mem: storing 1165 in location 1140
9999 mem: incrementing refcount of 1165: 8 -> 9
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1165
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1165
9999 mem: decrementing refcount of 1161: 16 -> 15
9999 mem: storing 1165 in location 1182
9999 mem: incrementing refcount of 1165: 9 -> 10
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1169
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 3
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 3
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 101
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1165
9999 mem: location 1181 is 1169
9999 mem: skipping refcount at 1169
9998 run: address to copy is 1170
9998 run: its type is character
9999 mem: location 1170 is 101
9999 mem: storing 101 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1063
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1064
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1063 is 7
9999 mem: storing 1 in location 1065
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1064 is 101
9999 mem: storing 0 in location 1066
 107 run: jump-unless starting-comment?, 
9999 mem: location 1066 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1067
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1067 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1065 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1064 is 101
9999 mem: storing 0 in location 1069
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1069 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1063 is 7
9999 mem: storing 0 in location 1070
 107 run: jump-unless color-is-red?, 
9999 mem: location 1070 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1063 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 101
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1185 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1195
 106 run: jump-unless at-right?, 
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1176 is 1012
9999 mem: location 1192 is 101
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 51 -> 52
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 101
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 15 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 27 -> 28
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 101
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 15
9999 mem: storing 1050 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1050
9999 mem: location 1050 is 99
9999 mem: location 1051 is 7
9999 mem: location 1233 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 101
9999 mem: location 1234 is 1050
9999 mem: storing 101 in location 1050
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1050
9999 mem: location 1050 is 101
9999 mem: location 1051 is 7
9999 mem: location 1233 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1051
9999 mem: storing 7 in location 1051
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1224 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1169
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1169 in location 1139
9999 mem: incrementing refcount of 1169: 6 -> 7
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1169
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1169
9999 mem: skipping refcount at 1169
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1170 is 101
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1165
9999 mem: location 1139 is 1169
9999 mem: skipping refcount at 1169
9999 type: type deduced to be character$
9998 run: address to copy is 1171
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1171 is 0
9999 mem: storing 0 in location 1140
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1169: 7 -> 6
9999 mem: storing 0 in location 1181
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1165
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1139
9999 mem: incrementing refcount of 1165: 10 -> 11
 107 run: jump-if in, 1:offset
9999 mem: location 1139 is 1165
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1139 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 1169
9999 mem: location 1168 is 1161
9999 mem: location 1139 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 1169
9999 mem: storing 1169 in location 1140
9999 mem: incrementing refcount of 1169: 6 -> 7
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1140 is 1169
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1165: 11 -> 10
9999 mem: storing 1169 in location 1182
9999 mem: incrementing refcount of 1169: 7 -> 8
9990 schedule: render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-on-left-arrow
 106 run: column <- add column, 1
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1181 is 0
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 1161
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1197
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1181 is 0
9999 mem: location 1197 is 1099
9999 mem: decrementing refcount of 1161: 15 -> 14
9999 mem: storing 0 in location 1099
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 3
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1198
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1190 is 0
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1199
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1184 is 3
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1200
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1201
 106 run: jump-unless before-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1202
 106 run: *bottom <- copy row
9999 mem: location 1184 is 3
9999 mem: location 1202 is 1103
9999 mem: storing 3 in location 1103
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1184 is 3
9999 mem: location 1185 is 1
9999 mem: location 1176 is 1012
9999 mem: location 1177 is 1096
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 1
9999 mem: storing 3 in location 1116
9999 mem: storing 1 in location 1117
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1112 is 1012
9999 mem: location 1117 is 1
9999 mem: location 1115 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 52 -> 53
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 53 -> 54
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 16 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 28 -> 29
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 16
9999 mem: storing 1052 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1233 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1052
9999 mem: storing 32 in location 1052
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1233 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1053
9999 mem: storing 7 in location 1053
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1224 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 54 -> 53
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 53 -> 54
 106 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 54 -> 55
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 17 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 29 -> 30
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 17
9999 mem: storing 1054 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1233 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1054
9999 mem: storing 32 in location 1054
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1233 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1055
9999 mem: storing 7 in location 1055
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1224 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 55 -> 54
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 54 -> 55
 106 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 55 -> 56
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 18 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 30 -> 31
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 18
9999 mem: storing 1056 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1233 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1056
9999 mem: storing 32 in location 1056
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1233 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1057
9999 mem: storing 7 in location 1057
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1224 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 56 -> 55
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 55 -> 56
 106 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 56 -> 57
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 19 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 31 -> 32
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 19
9999 mem: storing 1058 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1233 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1058
9999 mem: storing 32 in location 1058
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1233 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1059
9999 mem: storing 7 in location 1059
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 1
9998 run: jumping to instruction 74
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 57 -> 56
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 56 -> 57
 106 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1116 is 3
9999 mem: storing 4 in location 1116
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1112 is 1012
9999 mem: location 1116 is 4
9999 mem: location 1114 is 0
9999 mem: location 1115 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1266
9999 mem: incrementing refcount of 1012: 57 -> 58
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1267
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1269
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1270
9999 mem: storing 1 in location 1271
 106 run: jump-if style-found?, 
9999 mem: location 1271 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 106 run: jump-if color-found?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1272
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 106 run: jump-if bg-color-found?, 
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1274
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1266 is 1012
9999 mem: location 1267 is 4
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 58 -> 59
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1207
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 107 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 107 run: *row <- copy new-row
9999 mem: location 1207 is 4
9999 mem: location 1209 is 1015
9999 mem: storing 4 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 107 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 59 -> 58
9999 mem: storing 1012 in location 1266
9999 mem: incrementing refcount of 1012: 58 -> 59
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 0
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 59 -> 60
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 0
9999 mem: storing 1 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 1
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 60 -> 61
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 1
9999 mem: storing 2 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 2
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 61 -> 62
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 2
9999 mem: storing 3 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 3
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 62 -> 63
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 3
9999 mem: storing 4 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 4
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 63 -> 64
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 4
9999 mem: storing 5 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 5
9999 mem: location 1269 is 4
9999 mem: storing 0 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1266 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1116 is 4
9999 mem: storing 5 in location 1116
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1112 is 1012
9999 mem: location 1116 is 5
9999 mem: location 1114 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 64 -> 65
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1207
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1209
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1210
 106 run: jump-if screen, 
9999 mem: location 1206 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1206 is 1012
9999 mem: location 1207 is 5
9999 mem: location 1208 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1385
9999 mem: storing 6 in location 1386
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 65 -> 66
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1389
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1390
 107 run: jump-unless screen, 
9999 mem: location 1388 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1391
 107 run: *row <- copy new-row
9999 mem: location 1389 is 5
9999 mem: location 1391 is 1015
9999 mem: storing 5 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1392
 107 run: *column <- copy new-column
9999 mem: location 1390 is 0
9999 mem: location 1392 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1388 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 66 -> 65
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 65 -> 66
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1206 is 1012
9999 mem: location 1208 is 0
9999 mem: location 1210 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 66 -> 67
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1389
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1390
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1391
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 0
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 67 -> 68
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 68 -> 67
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 67 -> 68
 107 run: column <- add column, 1
9999 mem: location 1389 is 0
9999 mem: storing 1 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 1
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 68 -> 69
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-on-left-arrow
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 69 -> 68
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 68 -> 69
 107 run: column <- add column, 1
9999 mem: location 1389 is 1
9999 mem: storing 2 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 2
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 69 -> 70
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 70 -> 69
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 69 -> 70
 107 run: column <- add column, 1
9999 mem: location 1389 is 2
9999 mem: storing 3 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 3
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 70 -> 71
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 71 -> 70
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 70 -> 71
 107 run: column <- add column, 1
9999 mem: location 1389 is 3
9999 mem: storing 4 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 4
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 71 -> 72
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 72 -> 71
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 71 -> 72
 107 run: column <- add column, 1
9999 mem: location 1389 is 4
9999 mem: storing 5 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 5
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1388 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1206 is 1012
9999 mem: location 1207 is 5
9999 mem: location 1209 is 0
9999 mem: location 1210 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1393
9999 mem: storing 7 in location 1394
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1396
9999 mem: incrementing refcount of 1012: 72 -> 73
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1397
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1398
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1399
 107 run: row <- add row, 1
9999 mem: location 1397 is 5
9999 mem: storing 6 in location 1397
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1396 is 1012
9999 mem: location 1397 is 6
9999 mem: location 1398 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 73 -> 74
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1389
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1390
 108 run: jump-unless screen, 
9999 mem: location 1388 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1391
 108 run: *row <- copy new-row
9999 mem: location 1389 is 6
9999 mem: location 1391 is 1015
9999 mem: storing 6 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1392
 108 run: *column <- copy new-column
9999 mem: location 1390 is 0
9999 mem: location 1392 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1388 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 74 -> 73
9999 mem: storing 1012 in location 1396
9999 mem: incrementing refcount of 1012: 73 -> 74
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1396 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1139
9999 mem: incrementing refcount of 1012: 74 -> 75
 108 run: jump-unless screen, 
9999 mem: location 1139 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1139 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1140
 108 run: reply height:number
9999 mem: location 1140 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1400
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1397 is 6
9999 mem: location 1400 is 4
9999 mem: storing 1 in location 1401
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1401 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1396 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1112 is 1012
9999 mem: location 1113 is 1096
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 75 -> 74
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 74 -> 75
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9998 run: its type is number
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1253
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9998 run: its type is number
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1254
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1250 is 1012
9999 mem: location 1253 is 1
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 75 -> 76
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 105 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 105 run: *row <- copy new-row
9999 mem: location 1207 is 1
9999 mem: location 1209 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 105 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 76 -> 75
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 75 -> 76
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1251 is 1244
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1266
9999 mem: incrementing refcount of 1244: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1266 is 1244
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1266 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 1
9999 mem: location 1246 is 1238
9999 mem: location 1266 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1245
9999 mem: storing 1245 in location 1267
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1266 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 1
9999 mem: location 1246 is 1238
9999 mem: location 1266 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1246
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1246 is 1238
9999 mem: storing 1238 in location 1268
9999 mem: incrementing refcount of 1238: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1268 is 1238
9999 mem: skipping refcount at 1238
9999 mem: storing 1 in location 1269
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1267 is 1245
9999 mem: location 1245 is 1
9999 mem: location 1269 is 1
9999 mem: storing 1 in location 1270
 105 run: jump-unless done?, 
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1136 in location 1271
9999 mem: incrementing refcount of 1136: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1271 is 1136
9999 mem: skipping refcount at 1136
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1266 is 1244
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1244
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1255
9999 mem: storing 0 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: decrementing refcount of 1244: 3 -> 2
9999 mem: storing 1244 in location 1251
9999 mem: incrementing refcount of 1244: 2 -> 3
9999 mem: storing 1 in location 1259
9999 mem: storing 1 in location 1260
 104 run: jump-unless found?, 
9999 mem: location 1259 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1260 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1250 is 1012
9999 mem: location 1251 is 1244
9999 mem: location 1252 is 1096
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .     .
    .c    .
    .d    .
    .e    .
  ]
 102 run: assume-console [
    press left-arrow
  ]
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"left-arrow": <>}
9992 load: after rewriting: press left-arrow
9999 mem: storing 'press' event starting at 1404
9999 mem: storing console in 1408
9999 mem: storing console data in 1410
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1002
9991 transform: --- type-check 'call' instructions inside recipe run1002
9991 transform: --- type-check calls inside recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1408
9999 mem: location 2 is 1096
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 76 -> 77
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1408 in location 1251
9999 mem: incrementing refcount of 1408: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1252
9999 mem: incrementing refcount of 1096: 11 -> 12
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9998 run: its type is number
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1253
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9998 run: its type is number
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1254
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1250 is 1012
9999 mem: location 1253 is 1
9999 mem: location 1254 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 77 -> 78
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 105 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 105 run: *row <- copy new-row
9999 mem: location 1207 is 1
9999 mem: location 1209 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 105 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 78 -> 77
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 77 -> 78
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1251 is 1408
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1408 in location 1266
9999 mem: incrementing refcount of 1408: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1266 is 1408
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1266 is 1408
9999 mem: skipping refcount at 1408
9999 mem: location 1409 is 0
9999 mem: location 1410 is 1402
9999 mem: location 1266 is 1408
9999 mem: skipping refcount at 1408
9998 run: address to copy is 1409
9999 mem: storing 1409 in location 1267
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1266 is 1408
9999 mem: skipping refcount at 1408
9999 mem: location 1409 is 0
9999 mem: location 1410 is 1402
9999 mem: location 1266 is 1408
9999 mem: skipping refcount at 1408
9998 run: address to copy is 1410
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1410 is 1402
9999 mem: storing 1402 in location 1268
9999 mem: incrementing refcount of 1402: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1268 is 1402
9999 mem: skipping refcount at 1402
9999 mem: storing 1 in location 1269
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1267 is 1409
9999 mem: location 1409 is 0
9999 mem: location 1269 is 1
9999 mem: storing 0 in location 1270
 105 run: jump-unless done?, 
9999 mem: location 1270 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1268 is 1402
9999 mem: skipping refcount at 1402
9998 run: base address is 1403
9999 mem: location 1267 is 1409
9999 mem: location 1409 is 0
9998 run: address to copy is 1404
9998 run: its type is event
9999 mem: location 1404 is 1
9999 mem: location 1405 is 65515
9999 mem: location 1406 is 0
9999 mem: location 1407 is 0
9999 mem: storing 1 in location 1272
9999 mem: storing 65515 in location 1273
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1267 is 1409
9999 mem: location 1409 is 0
9999 mem: location 1267 is 1409
9999 mem: storing 1 in location 1409
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1272 is 1
9999 mem: location 1273 is 65515
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: location 1266 is 1408
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65515, 0, 0]
9998 run: result 1 is 1408
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1255
9999 mem: storing 65515 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: decrementing refcount of 1408: 2 -> 1
9999 mem: storing 1408 in location 1251
9999 mem: incrementing refcount of 1408: 1 -> 2
9999 mem: storing 1 in location 1259
9999 mem: storing 0 in location 1260
 104 run: jump-unless found?, 
9999 mem: location 1259 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1260 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1255 is 1
9999 mem: location 1256 is 65515
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: storing 0 in location 1261
 104 run: jump-unless t, 
9999 mem: location 1261 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1261 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1250 is 1012
9999 mem: location 1252 is 1096
9999 mem: location 1255 is 1
9999 mem: location 1256 is 65515
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1280
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1281
9999 mem: incrementing refcount of 1096: 12 -> 13
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1282
9999 mem: storing 65515 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1286
 105 run: jump-if editor, 1:offset
9999 mem: location 1281 is 1096
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1280 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1411
9999 mem: storing 3 in location 1412
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1414
9999 mem: incrementing refcount of 1012: 79 -> 80
 106 run: jump-unless screen, 
9999 mem: location 1414 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1414 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1414 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1415
 106 run: reply width:number
9999 mem: location 1415 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1287
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1280 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1414
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: jump-unless screen, 
9999 mem: location 1414 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1414 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1414 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1415
 106 run: reply height:number
9999 mem: location 1415 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1288
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1289
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 4
9999 mem: storing 4 in location 1290
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1291
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1292
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1293
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1292 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1294
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1293 is 1105
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1295
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1282 is 1
9999 mem: location 1283 is 65515
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: storing 0 in location 1296
 105 run: jump-unless c, 
9999 mem: location 1296 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1282 is 1
9999 mem: location 1283 is 65515
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: storing 1283 in location 1350
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1350 is 1283
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1350 is 1283
9999 mem: location 1283 is 65515
9999 mem: storing 0 in location 1313
 105 run: jump-unless page-up?, 
9999 mem: location 1313 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1350 is 1283
9999 mem: location 1283 is 65515
9999 mem: storing 0 in location 1329
 105 run: jump-unless page-down?, 
9999 mem: location 1329 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1350 is 1283
9999 mem: location 1283 is 65515
9999 mem: storing 0 in location 1336
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1336 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1350 is 1283
9999 mem: location 1283 is 65515
9999 mem: storing 0 in location 1337
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1337 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1350 is 1283
9999 mem: location 1283 is 65515
9999 mem: storing 0 in location 1351
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1351 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1350 is 1283
9999 mem: location 1283 is 65515
9999 mem: storing 0 in location 1352
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1350 is 1283
9999 mem: location 1283 is 65515
9999 mem: storing 1 in location 1353
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 105 run: trace 10, [app], [left arrow]
  10 app: left arrow 
 105 run: prev:address:shared:duplex-list:character <- prev_2 *before-cursor
9999 mem: location 1291 is 1100
9999 mem: location 1100 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1414
9999 mem: incrementing refcount of 1149: 16 -> 17
 106 run: jump-if in, 1:offset
9999 mem: location 1414 is 1149
9998 run: jumping to instruction 4
 106 run: result <- get *in, prev:offset
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1145
9999 mem: storing 1145 in location 1415
9999 mem: incrementing refcount of 1145: 10 -> 11
 106 run: reply result
9999 mem: location 1415 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1145
9999 mem: storing 1145 in location 1354
9999 mem: incrementing refcount of 1145: 11 -> 12
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1286
 105 run: jump-if prev, 1:offset
9999 mem: location 1354 is 1145
9998 run: jumping to instruction 682
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9998 run: its type is number
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1316
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9998 run: its type is number
9999 mem: location 1105 is 0
9999 mem: storing 0 in location 1317
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1098 is 1149
9999 mem: storing 1149 in location 1318
9999 mem: incrementing refcount of 1149: 17 -> 18
 105 run: editor, go-render? <- move-cursor-coordinates-left editor
9999 mem: location 1281 is 1096
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1416
9999 mem: storing 17 in location 1417
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1419
9999 mem: incrementing refcount of 1096: 13 -> 14
 106 run: before-cursor:address:shared:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1100 is 1149
9999 mem: storing 1149 in location 1420
9999 mem: incrementing refcount of 1149: 18 -> 19
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1421
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1422
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1423
 106 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1422 is 1105
9999 mem: location 1105 is 0
9999 mem: location 1423 is 0
9999 mem: storing 1 in location 1424
 106 run: jump-if at-left-margin?, 
9999 mem: location 1424 is 1
9998 run: jumping to instruction 13
 106 run: top-of-screen?:boolean <- equal *cursor-row, 1
9999 mem: location 1421 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1426
 106 run: go-render?:boolean <- copy 0/false
9999 mem: storing 0 in location 1425
 106 run: jump-if top-of-screen?, 
9999 mem: location 1426 is 1
9998 run: jumping to instruction 19
 106 run: jump-unless top-of-screen?, 
9999 mem: location 1426 is 1
9998 run: jump-unless fell through
 106 run: trace 10, [app], [scroll up]
  10 app: scroll up 
 106 run: top-of-screen:address:address:shared:duplex-list:character <- get-address *editor, top-of-screen:offset
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1427
 106 run: old-top:address:shared:duplex-list:character <- copy *top-of-screen
9999 mem: location 1427 is 1098
9999 mem: location 1098 is 1149
9999 mem: storing 1149 in location 1428
9999 mem: incrementing refcount of 1149: 19 -> 20
 106 run: *top-of-screen <- before-previous-line *top-of-screen, editor
9999 mem: location 1427 is 1098
9999 mem: location 1098 is 1149
9999 mem: location 1419 is 1096
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: allocating size 15
9999 mem: new alloc: 1435
9999 mem: storing 13 in location 1436
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1438
9999 mem: incrementing refcount of 1149: 20 -> 21
 107 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1439
9999 mem: incrementing refcount of 1096: 14 -> 15
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1438 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1438 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is character
9999 mem: location 1150 is 10
9999 mem: storing 10 in location 1440
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1439 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1439 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1441
 107 run: right:number <- get *editor, right:offset
9999 mem: location 1439 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1439 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 4
9999 mem: storing 4 in location 1442
 107 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1442 is 4
9999 mem: location 1441 is 0
9999 mem: storing 4 in location 1443
 107 run: sentinel:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1439 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1149
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1439 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1097
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1097 is 1118
9999 mem: storing 1118 in location 1444
9999 mem: incrementing refcount of 1118: 10 -> 11
 107 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1438 is 1149
9999 mem: location 1444 is 1118
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 108 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1112
9999 mem: incrementing refcount of 1149: 21 -> 22
 108 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1113
9999 mem: incrementing refcount of 1118: 11 -> 12
 108 run: result:number <- copy 0
9999 mem: storing 0 in location 1114
 108 run: jump-if curr, 1:offset
9999 mem: location 1112 is 1149
9998 run: jumping to instruction 6
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1112 is 1149
9999 mem: location 1113 is 1118
9999 mem: storing 0 in location 1115
 108 run: jump-unless at-start?, 1:offset
9999 mem: location 1115 is 0
9998 run: jumping to instruction 9
 108 run: curr <- prev_2 curr
9999 mem: location 1112 is 1149
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1414
9999 mem: incrementing refcount of 1149: 22 -> 23
 109 run: jump-if in, 1:offset
9999 mem: location 1414 is 1149
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1145
9999 mem: storing 1145 in location 1415
9999 mem: incrementing refcount of 1145: 12 -> 13
 109 run: reply result
9999 mem: location 1415 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1149: 23 -> 22
9999 mem: storing 1145 in location 1112
9999 mem: incrementing refcount of 1145: 13 -> 14
 108 run: jump-unless curr, 
9999 mem: location 1112 is 1145
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1112 is 1145
9999 mem: location 1113 is 1118
9999 mem: storing 0 in location 1115
 108 run: jump-if at-start?, 
9999 mem: location 1115 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1112 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1112 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is character
9999 mem: location 1146 is 98
9999 mem: storing 98 in location 1116
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1116 is 98
9999 mem: storing 0 in location 1117
 108 run: jump-if at-newline?, 
9999 mem: location 1117 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1114 is 0
9999 mem: storing 1 in location 1114
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1112 is 1145
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1414
9999 mem: incrementing refcount of 1145: 14 -> 15
 109 run: jump-if in, 1:offset
9999 mem: location 1414 is 1145
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1148
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1148 is 1141
9999 mem: storing 1141 in location 1415
9999 mem: incrementing refcount of 1141: 10 -> 11
 109 run: reply result
9999 mem: location 1415 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1145: 15 -> 14
9999 mem: storing 1141 in location 1112
9999 mem: incrementing refcount of 1141: 11 -> 12
 108 run: jump-unless curr, 
9999 mem: location 1112 is 1141
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1112 is 1141
9999 mem: location 1113 is 1118
9999 mem: storing 0 in location 1115
 108 run: jump-if at-start?, 
9999 mem: location 1115 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1112 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1132
9999 mem: location 1112 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9998 run: its type is character
9999 mem: location 1142 is 10
9999 mem: storing 10 in location 1116
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1116 is 10
9999 mem: storing 1 in location 1117
 108 run: jump-if at-newline?, 
9999 mem: location 1117 is 1
9998 run: jumping to instruction 19
 108 run: reply result:number
9999 mem: location 1114 is 1
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1
9999 mem: storing 1 in location 1445
 107 run: jump-if len, 
9999 mem: location 1445 is 1
9998 run: jumping to instruction 15
 107 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1445 is 1
9999 mem: location 1443 is 4
9999 mem: storing 1 in location 1447
 107 run: jump-if max, 
9999 mem: location 1447 is 1
9998 run: jumping to instruction 20
 107 run: max <- add max, 1
9999 mem: location 1447 is 1
9999 mem: storing 2 in location 1447
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1448
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1448 is 0
9999 mem: location 1447 is 2
9999 mem: storing 0 in location 1449
 107 run: jump-if done?, 
9999 mem: location 1449 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1438 is 1149
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1414
9999 mem: incrementing refcount of 1149: 22 -> 23
 108 run: jump-if in, 1:offset
9999 mem: location 1414 is 1149
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1145
9999 mem: storing 1145 in location 1415
9999 mem: incrementing refcount of 1145: 14 -> 15
 108 run: reply result
9999 mem: location 1415 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1145
9999 mem: storing 1145 in location 1446
9999 mem: incrementing refcount of 1145: 15 -> 16
 107 run: jump-unless prev, 
9999 mem: location 1446 is 1145
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1446 is 1145
9999 mem: decrementing refcount of 1149: 23 -> 22
9999 mem: storing 1145 in location 1438
9999 mem: incrementing refcount of 1145: 16 -> 17
 107 run: count <- add count, 1
9999 mem: location 1448 is 0
9999 mem: storing 1 in location 1448
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1448 is 1
9999 mem: location 1447 is 2
9999 mem: storing 0 in location 1449
 107 run: jump-if done?, 
9999 mem: location 1449 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1438 is 1145
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1414
9999 mem: incrementing refcount of 1145: 17 -> 18
 108 run: jump-if in, 1:offset
9999 mem: location 1414 is 1145
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1148
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1148 is 1141
9999 mem: storing 1141 in location 1415
9999 mem: incrementing refcount of 1141: 12 -> 13
 108 run: reply result
9999 mem: location 1415 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1145: 18 -> 17
9999 mem: storing 1141 in location 1446
9999 mem: incrementing refcount of 1141: 13 -> 14
 107 run: jump-unless prev, 
9999 mem: location 1446 is 1141
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1446 is 1141
9999 mem: decrementing refcount of 1145: 17 -> 16
9999 mem: storing 1141 in location 1438
9999 mem: incrementing refcount of 1141: 14 -> 15
 107 run: count <- add count, 1
9999 mem: location 1448 is 1
9999 mem: storing 2 in location 1448
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1448 is 2
9999 mem: location 1447 is 2
9999 mem: storing 1 in location 1449
 107 run: jump-if done?, 
9999 mem: location 1449 is 1
9998 run: jumping to instruction 31
 107 run: reply curr
9999 mem: location 1438 is 1141
9999 abandon: saving in free-list of size 15
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1141
9999 mem: location 1427 is 1098
9999 mem: decrementing refcount of 1149: 22 -> 21
9999 mem: storing 1141 in location 1098
9999 mem: incrementing refcount of 1141: 15 -> 16
 106 run: no-movement?:boolean <- equal old-top, *top-of-screen
9999 mem: location 1428 is 1149
9999 mem: location 1427 is 1098
9999 mem: location 1098 is 1141
9999 mem: storing 0 in location 1429
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1425
 106 run: jump-unless no-movement?, 1:offset
9999 mem: location 1429 is 0
9998 run: jumping to instruction 31
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1425
 106 run: previous-character:character <- get *before-cursor, value:offset
9999 mem: location 1420 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1420 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is character
9999 mem: location 1150 is 10
9999 mem: storing 10 in location 1430
 106 run: previous-character-is-newline?:boolean <- equal previous-character, 10/newline
9999 mem: location 1430 is 10
9999 mem: storing 1 in location 1431
 106 run: jump-unless previous-character-is-newline?, 
9999 mem: location 1431 is 1
9998 run: jump-unless fell through
 106 run: trace 10, [app], [switching to previous line]
  10 app: switching to previous line 
 106 run: d:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1149
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 0
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1419 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1097
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1097 is 1118
9999 mem: storing 1118 in location 1432
9999 mem: incrementing refcount of 1118: 12 -> 13
 106 run: end-of-line:number <- previous-line-length before-cursor, d
9999 mem: location 1420 is 1149
9999 mem: location 1432 is 1118
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1112
9999 mem: incrementing refcount of 1149: 21 -> 22
 107 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1118 in location 1113
9999 mem: incrementing refcount of 1118: 13 -> 14
 107 run: result:number <- copy 0
9999 mem: storing 0 in location 1114
 107 run: jump-if curr, 1:offset
9999 mem: location 1112 is 1149
9998 run: jumping to instruction 6
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1112 is 1149
9999 mem: location 1113 is 1118
9999 mem: storing 0 in location 1115
 107 run: jump-unless at-start?, 1:offset
9999 mem: location 1115 is 0
9998 run: jumping to instruction 9
 107 run: curr <- prev_2 curr
9999 mem: location 1112 is 1149
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1414
9999 mem: incrementing refcount of 1149: 22 -> 23
 108 run: jump-if in, 1:offset
9999 mem: location 1414 is 1149
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1152
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1152 is 1145
9999 mem: storing 1145 in location 1415
9999 mem: incrementing refcount of 1145: 16 -> 17
 108 run: reply result
9999 mem: location 1415 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1149: 23 -> 22
9999 mem: storing 1145 in location 1112
9999 mem: incrementing refcount of 1145: 17 -> 18
 107 run: jump-unless curr, 
9999 mem: location 1112 is 1145
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1112 is 1145
9999 mem: location 1113 is 1118
9999 mem: storing 0 in location 1115
 107 run: jump-if at-start?, 
9999 mem: location 1115 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1112 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1112 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is character
9999 mem: location 1146 is 98
9999 mem: storing 98 in location 1116
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1116 is 98
9999 mem: storing 0 in location 1117
 107 run: jump-if at-newline?, 
9999 mem: location 1117 is 0
9998 run: jump-if fell through
 107 run: result <- add result, 1
9999 mem: location 1114 is 0
9999 mem: storing 1 in location 1114
 107 run: jump 
9998 run: jumping to instruction 10
 107 run: curr <- prev_2 curr
9999 mem: location 1112 is 1145
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1414
9999 mem: incrementing refcount of 1145: 18 -> 19
 108 run: jump-if in, 1:offset
9999 mem: location 1414 is 1145
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1148
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1148 is 1141
9999 mem: storing 1141 in location 1415
9999 mem: incrementing refcount of 1141: 16 -> 17
 108 run: reply result
9999 mem: location 1415 is 1141
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1141
9999 mem: decrementing refcount of 1145: 19 -> 18
9999 mem: storing 1141 in location 1112
9999 mem: incrementing refcount of 1141: 17 -> 18
 107 run: jump-unless curr, 
9999 mem: location 1112 is 1141
9998 run: jump-unless fell through
 107 run: at-start?:boolean <- equal curr, start
9999 mem: location 1112 is 1141
9999 mem: location 1113 is 1118
9999 mem: storing 0 in location 1115
 107 run: jump-if at-start?, 
9999 mem: location 1115 is 0
9998 run: jump-if fell through
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1112 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1132
9999 mem: location 1112 is 1141
9999 mem: skipping refcount at 1141
9998 run: address to copy is 1142
9998 run: its type is character
9999 mem: location 1142 is 10
9999 mem: storing 10 in location 1116
 107 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1116 is 10
9999 mem: storing 1 in location 1117
 107 run: jump-if at-newline?, 
9999 mem: location 1117 is 1
9998 run: jumping to instruction 19
 107 run: reply result:number
9999 mem: location 1114 is 1
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1
9999 mem: storing 1 in location 1433
 106 run: *cursor-column <- add left, end-of-line
9999 mem: location 1423 is 0
9999 mem: location 1433 is 1
9999 mem: location 1422 is 1105
9999 mem: storing 1 in location 1105
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1419 is 1096
9999 mem: location 1425 is 1
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1096
9998 run: result 1 is 1
9999 mem: decrementing refcount of 1096: 15 -> 14
9999 mem: storing 1096 in location 1281
9999 mem: incrementing refcount of 1096: 14 -> 15
9999 mem: storing 1 in location 1286
 105 run: *before-cursor <- copy prev
9999 mem: location 1354 is 1145
9999 mem: location 1291 is 1100
9999 mem: decrementing refcount of 1149: 22 -> 21
9999 mem: storing 1145 in location 1100
9999 mem: incrementing refcount of 1145: 18 -> 19
 105 run: undo-coalesce-tag:number <- copy 1/left-arrow
9999 mem: storing 1 in location 1319
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9998 run: its type is number
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1320
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9998 run: its type is number
9999 mem: location 1105 is 1
9999 mem: storing 1 in location 1321
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1098 is 1141
9999 mem: storing 1141 in location 1322
9999 mem: incrementing refcount of 1141: 18 -> 19
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1319 is 1
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1281 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1300
 105 run: jump-unless *undo, 
9999 mem: location 1300 is 1107
9999 mem: location 1107 is 1382
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1300 is 1107
9999 mem: location 1107 is 1382
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1382 in location 1414
9999 mem: incrementing refcount of 1382: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1414 is 1382
9999 mem: skipping refcount at 1382
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1383 is 1000
9999 mem: location 1384 is 0
9999 mem: location 1414 is 1382
9999 mem: skipping refcount at 1382
9998 run: address to copy is 1383
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1383 is 1000
9999 mem: storing 1000 in location 1415
9999 mem: incrementing refcount of 1000: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1415 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1299
9999 mem: incrementing refcount of 1000: 5 -> 6
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1118
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1149
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1299 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1305
 105 run: jump-unless move, 
9999 mem: location 1305 is 1002
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1305 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1118
9999 mem: location 1005 is 1
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1149
9999 mem: location 1008 is 0
9999 mem: location 1305 is 1002
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1323
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1319 is 1
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1324
 105 run: jump-unless coalesce?, 
9999 mem: location 1324 is 0
9998 run: jumping to instruction 709
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: decrementing refcount of 1000: 6 -> 5
9999 mem: storing 1060 in location 1299
9999 mem: incrementing refcount of 1060: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1316 is 1
9999 mem: location 1317 is 0
9999 mem: location 1318 is 1149
9999 mem: location 1320 is 1
9999 mem: location 1321 is 1
9999 mem: location 1322 is 1141
9999 mem: location 1319 is 1
9999 mem: location 1299 is 1060
9999 mem: skipping refcount at 1060
9999 mem: location 1299 is 1060
9999 mem: skipping refcount at 1060
9999 mem: storing 1 in location 1061
9999 mem: storing 1 in location 1062
9999 mem: storing 0 in location 1063
9999 mem: storing 1149 in location 1064
9999 mem: storing 1 in location 1065
9999 mem: storing 1 in location 1066
9999 mem: storing 1141 in location 1067
9999 mem: storing 1 in location 1068
 105 run: editor <- add-operation editor, op
9999 mem: location 1281 is 1096
9999 mem: location 1299 is 1060
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1378
9999 mem: incrementing refcount of 1096: 15 -> 16
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1060 in location 1379
9999 mem: incrementing refcount of 1060: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1378 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1382
9999 mem: location 1108 is 0
9999 mem: location 1378 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1380
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1379 is 1060
9999 mem: location 1380 is 1107
9999 mem: location 1107 is 1382
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1060 in location 1206
9999 mem: incrementing refcount of 1060: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1382 in location 1207
9999 mem: incrementing refcount of 1382: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1450
9999 mem: storing 1450 in location 1208
9999 mem: incrementing refcount of 1450: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1208 is 1450
9999 mem: skipping refcount at 1450
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1451 is 0
9999 mem: location 1452 is 0
9999 mem: location 1208 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy is 1451
9999 mem: storing 1451 in location 1209
 107 run: *val <- copy x
9999 mem: location 1206 is 1060
9999 mem: location 1209 is 1451
9999 mem: storing 1060 in location 1451
9999 mem: incrementing refcount of 1060: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1208 is 1450
9999 mem: skipping refcount at 1450
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1451 is 1060
9999 mem: location 1452 is 0
9999 mem: location 1208 is 1450
9999 mem: skipping refcount at 1450
9999 type: type deduced to be address$
9998 run: address to copy is 1452
9999 mem: storing 1452 in location 1210
 107 run: *next <- copy in
9999 mem: location 1207 is 1382
9999 mem: location 1210 is 1452
9999 mem: storing 1382 in location 1452
9999 mem: incrementing refcount of 1382: 4 -> 5
 107 run: reply result
9999 mem: location 1208 is 1450
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1450
9999 mem: location 1380 is 1107
9999 mem: decrementing refcount of 1382: 5 -> 4
9999 mem: storing 1450 in location 1107
9999 mem: incrementing refcount of 1450: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1378 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1378 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1381
 106 run: *redo <- copy 0
9999 mem: location 1381 is 1108
9999 mem: storing 0 in location 1108
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1378 is 1096
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1096
9999 mem: decrementing refcount of 1096: 16 -> 15
9999 mem: storing 1096 in location 1281
9999 mem: incrementing refcount of 1096: 15 -> 16
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1280 is 1012
9999 mem: location 1281 is 1096
9999 mem: location 1286 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1096
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 80 -> 81
9999 mem: decrementing refcount of 1096: 16 -> 15
9999 mem: storing 1096 in location 1252
9999 mem: incrementing refcount of 1096: 15 -> 16
9999 mem: storing 1 in location 1262
9990 schedule: editor-event-loop/run1002/scenario-editor-scrolls-up-on-left-arrow
 104 run: jump-unless go-render?, 
9999 mem: location 1262 is 1
9998 run: jump-unless fell through
 104 run: screen <- editor-render screen, editor
9999 mem: location 1250 is 1012
9999 mem: location 1252 is 1096
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1112
9999 mem: incrementing refcount of 1012: 81 -> 82
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1113
9999 mem: incrementing refcount of 1096: 16 -> 17
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1113 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1113 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1114
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1113 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1113 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 4
9999 mem: storing 4 in location 1115
 105 run: row:number, column:number <- render screen, editor
9999 mem: location 1112 is 1012
9999 mem: location 1113 is 1096
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 82 -> 83
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1096 in location 1177
9999 mem: incrementing refcount of 1096: 17 -> 18
 106 run: jump-if editor, 1:offset
9999 mem: location 1177 is 1096
9998 run: jumping to instruction 5
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1101
9998 run: its type is number
9999 mem: location 1101 is 0
9999 mem: storing 0 in location 1178
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1176 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1414
9999 mem: incrementing refcount of 1012: 83 -> 84
 107 run: jump-unless screen, 
9999 mem: location 1414 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1414 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1414 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1415
 107 run: reply height:number
9999 mem: location 1415 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1179
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1102
9998 run: its type is number
9999 mem: location 1102 is 4
9999 mem: storing 4 in location 1180
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1098
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1098 is 1141
9999 mem: storing 1141 in location 1181
9999 mem: incrementing refcount of 1141: 19 -> 20
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1181 is 1141
9999 mem: storing 1141 in location 1182
9999 mem: incrementing refcount of 1141: 20 -> 21
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1141
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1414
9999 mem: incrementing refcount of 1141: 21 -> 22
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1141
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1132
9999 mem: location 1414 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1415
9999 mem: incrementing refcount of 1145: 19 -> 20
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 22 -> 21
9999 mem: storing 1145 in location 1181
9999 mem: incrementing refcount of 1145: 20 -> 21
 106 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1183
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1184
 106 run: column:number <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1186
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1187
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1188
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 84 -> 85
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 107 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 107 run: *row <- copy new-row
9999 mem: location 1207 is 1
9999 mem: location 1209 is 1015
9999 mem: storing 1 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 107 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 85 -> 84
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 84 -> 85
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1145
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 1
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 1
9999 mem: storing 0 in location 1191
 106 run: jump-unless at-cursor?, 
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1181 is 1145
9999 mem: skipping refcount at 1145
9998 run: address to copy is 1146
9998 run: its type is character
9999 mem: location 1146 is 98
9999 mem: storing 98 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 98
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1453
9999 mem: storing 10 in location 1454
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1456
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1457
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1456 is 7
9999 mem: storing 1 in location 1458
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1457 is 98
9999 mem: storing 0 in location 1459
 107 run: jump-unless starting-comment?, 
9999 mem: location 1459 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1460
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1460 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1457 is 98
9999 mem: storing 0 in location 1462
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1463
 107 run: jump-unless color-is-red?, 
9999 mem: location 1463 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1456 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 98
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1185 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1195
 106 run: jump-unless at-right?, 
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1176 is 1012
9999 mem: location 1192 is 98
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 85 -> 86
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 98
  90 print-character: 98 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 98
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 5 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 32 -> 33
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 98
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 5
9999 mem: storing 1030 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1030
9999 mem: location 1030 is 99
9999 mem: location 1031 is 7
9999 mem: location 1233 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 98
9999 mem: location 1234 is 1030
9999 mem: storing 98 in location 1030
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1030
9999 mem: location 1030 is 98
9999 mem: location 1031 is 7
9999 mem: location 1233 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1031
9999 mem: storing 7 in location 1031
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1224 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1145
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1414
9999 mem: incrementing refcount of 1145: 21 -> 22
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1145
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1415
9999 mem: incrementing refcount of 1149: 21 -> 22
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 22 -> 21
9999 mem: storing 1149 in location 1181
9999 mem: incrementing refcount of 1149: 22 -> 23
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1141
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1141 in location 1414
9999 mem: incrementing refcount of 1141: 21 -> 22
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1141
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1141
9999 mem: skipping refcount at 1141
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1142 is 10
9999 mem: location 1143 is 1145
9999 mem: location 1144 is 1132
9999 mem: location 1414 is 1141
9999 mem: skipping refcount at 1141
9999 type: type deduced to be character$
9998 run: address to copy is 1143
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1143 is 1145
9999 mem: storing 1145 in location 1415
9999 mem: incrementing refcount of 1145: 21 -> 22
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1145
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1145
9999 mem: decrementing refcount of 1141: 22 -> 21
9999 mem: storing 1145 in location 1182
9999 mem: incrementing refcount of 1145: 22 -> 23
 106 run: column <- add column, 1
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1149
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 1
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 1
9999 mem: storing 1 in location 1191
 106 run: jump-unless at-cursor?, 
9999 mem: location 1191 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1182 is 1145
9999 mem: location 1188 is 1100
9999 mem: decrementing refcount of 1145: 23 -> 22
9999 mem: storing 1145 in location 1100
9999 mem: incrementing refcount of 1145: 22 -> 23
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1181 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is character
9999 mem: location 1150 is 10
9999 mem: storing 10 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1456
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1457
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1456 is 7
9999 mem: storing 1 in location 1458
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1457 is 10
9999 mem: storing 0 in location 1459
 107 run: jump-unless starting-comment?, 
9999 mem: location 1459 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1460
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1460 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1457 is 10
9999 mem: storing 0 in location 1462
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1463
 107 run: jump-unless color-is-red?, 
9999 mem: location 1463 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1456 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 10
9999 mem: storing 1 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 1
9999 mem: storing 0 in location 1194
 106 run: jump-unless left-of-cursor?, 
9999 mem: location 1194 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1176 is 1012
9999 mem: location 1185 is 1
9999 mem: location 1180 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 86 -> 87
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 87 -> 88
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 6 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 33 -> 34
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 6
9999 mem: storing 1032 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1233 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1032
9999 mem: storing 32 in location 1032
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1233 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1033
9999 mem: storing 7 in location 1033
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1224 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 88 -> 87
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 87 -> 88
 107 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 88 -> 89
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 7 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 34 -> 35
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 7
9999 mem: storing 1034 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1233 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1034
9999 mem: storing 32 in location 1034
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1233 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1035
9999 mem: storing 7 in location 1035
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1224 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 89 -> 88
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 88 -> 89
 107 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 89 -> 90
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 8 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 35 -> 36
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 8
9999 mem: storing 1036 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1233 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1036
9999 mem: storing 32 in location 1036
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1233 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1037
9999 mem: storing 7 in location 1037
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1224 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 90 -> 89
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 89 -> 90
 107 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 90 -> 91
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1220 is 5
9999 mem: storing 5 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 5
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 9 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 36 -> 37
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 9
9999 mem: storing 1038 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1233 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1038
9999 mem: storing 32 in location 1038
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1233 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1039
9999 mem: storing 7 in location 1039
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 91 -> 90
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 90 -> 91
 107 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1184 is 1
9999 mem: storing 2 in location 1184
 106 run: column <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 2
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 91 -> 92
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1207
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 107 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 107 run: *row <- copy new-row
9999 mem: location 1207 is 2
9999 mem: location 1209 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 107 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 92 -> 91
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 91 -> 92
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1414
9999 mem: incrementing refcount of 1149: 23 -> 24
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1149
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1153
9999 mem: storing 1153 in location 1415
9999 mem: incrementing refcount of 1153: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1153
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1149: 24 -> 23
9999 mem: storing 1153 in location 1181
9999 mem: incrementing refcount of 1153: 17 -> 18
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1145
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1414
9999 mem: incrementing refcount of 1145: 23 -> 24
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1145
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1146 is 98
9999 mem: location 1147 is 1149
9999 mem: location 1148 is 1141
9999 mem: location 1414 is 1145
9999 mem: skipping refcount at 1145
9999 type: type deduced to be character$
9998 run: address to copy is 1147
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1147 is 1149
9999 mem: storing 1149 in location 1415
9999 mem: incrementing refcount of 1149: 23 -> 24
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1149
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1145: 24 -> 23
9999 mem: storing 1149 in location 1182
9999 mem: incrementing refcount of 1149: 24 -> 25
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1153
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 2
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1181 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 99
9999 mem: storing 99 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 99
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1456
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1457
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1456 is 7
9999 mem: storing 1 in location 1458
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1457 is 99
9999 mem: storing 0 in location 1459
 107 run: jump-unless starting-comment?, 
9999 mem: location 1459 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1460
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1460 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1457 is 99
9999 mem: storing 0 in location 1462
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 27
9990 schedule: get-color/render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-on-left-arrow
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1463
 107 run: jump-unless color-is-red?, 
9999 mem: location 1463 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1456 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 99
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1185 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1195
 106 run: jump-unless at-right?, 
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1176 is 1012
9999 mem: location 1192 is 99
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 92 -> 93
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 99
  90 print-character: 99 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 99
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 37 -> 38
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 99
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 10
9999 mem: storing 1040 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1040
9999 mem: location 1040 is 100
9999 mem: location 1041 is 7
9999 mem: location 1233 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 99
9999 mem: location 1234 is 1040
9999 mem: storing 99 in location 1040
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1233 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1041
9999 mem: storing 7 in location 1041
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1224 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1414
9999 mem: incrementing refcount of 1153: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1153
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1415
9999 mem: incrementing refcount of 1157: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1157
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1157
9999 mem: decrementing refcount of 1153: 19 -> 18
9999 mem: storing 1157 in location 1181
9999 mem: incrementing refcount of 1157: 17 -> 18
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1414
9999 mem: incrementing refcount of 1149: 25 -> 26
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1149
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1150 is 10
9999 mem: location 1151 is 1153
9999 mem: location 1152 is 1145
9999 mem: location 1414 is 1149
9999 mem: skipping refcount at 1149
9999 type: type deduced to be character$
9998 run: address to copy is 1151
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1151 is 1153
9999 mem: storing 1153 in location 1415
9999 mem: incrementing refcount of 1153: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1153
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1149: 26 -> 25
9999 mem: storing 1153 in location 1182
9999 mem: incrementing refcount of 1153: 19 -> 20
 106 run: column <- add column, 1
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1157
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 2
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1181 is 1157
9999 mem: skipping refcount at 1157
9998 run: address to copy is 1158
9998 run: its type is character
9999 mem: location 1158 is 10
9999 mem: storing 10 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1456
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1457
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1456 is 7
9999 mem: storing 1 in location 1458
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1457 is 10
9999 mem: storing 0 in location 1459
 107 run: jump-unless starting-comment?, 
9999 mem: location 1459 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1460
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1460 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1457 is 10
9999 mem: storing 0 in location 1462
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1463
 107 run: jump-unless color-is-red?, 
9999 mem: location 1463 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1456 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 10
9999 mem: storing 1 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 2
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1176 is 1012
9999 mem: location 1185 is 1
9999 mem: location 1180 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 93 -> 94
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 94 -> 95
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 38 -> 39
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 11
9999 mem: storing 1042 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1233 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1042
9999 mem: storing 32 in location 1042
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1233 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1043
9999 mem: storing 7 in location 1043
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1224 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 95 -> 94
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 94 -> 95
 107 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 95 -> 96
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 39 -> 40
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 12
9999 mem: storing 1044 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1233 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1044
9999 mem: storing 32 in location 1044
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1233 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1045
9999 mem: storing 7 in location 1045
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1224 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 96 -> 95
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 95 -> 96
 107 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 96 -> 97
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 40 -> 41
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 13
9999 mem: storing 1046 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1233 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1046
9999 mem: storing 32 in location 1046
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1233 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1047
9999 mem: storing 7 in location 1047
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1224 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 97 -> 96
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 96 -> 97
 107 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 97 -> 98
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1220 is 5
9999 mem: storing 10 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 10
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 41 -> 42
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 14
9999 mem: storing 1048 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1233 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1048
9999 mem: storing 32 in location 1048
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1233 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1049
9999 mem: storing 7 in location 1049
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 97 -> 98
 107 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1184 is 2
9999 mem: storing 3 in location 1184
 106 run: column <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 3
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 98 -> 99
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1207
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 107 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 107 run: *row <- copy new-row
9999 mem: location 1207 is 3
9999 mem: location 1209 is 1015
9999 mem: storing 3 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 107 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 99 -> 98
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 98 -> 99
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1414
9999 mem: incrementing refcount of 1157: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1157
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1414 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1415
9999 mem: incrementing refcount of 1161: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1161
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1161
9999 mem: decrementing refcount of 1157: 19 -> 18
9999 mem: storing 1161 in location 1181
9999 mem: incrementing refcount of 1161: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1414
9999 mem: incrementing refcount of 1153: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1153
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1154 is 99
9999 mem: location 1155 is 1157
9999 mem: location 1156 is 1149
9999 mem: location 1414 is 1153
9999 mem: skipping refcount at 1153
9999 type: type deduced to be character$
9998 run: address to copy is 1155
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1155 is 1157
9999 mem: storing 1157 in location 1415
9999 mem: incrementing refcount of 1157: 18 -> 19
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1157
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1157
9999 mem: decrementing refcount of 1153: 21 -> 20
9999 mem: storing 1157 in location 1182
9999 mem: incrementing refcount of 1157: 19 -> 20
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1161
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 3
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 3
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1157
9999 mem: location 1181 is 1161
9999 mem: skipping refcount at 1161
9998 run: address to copy is 1162
9998 run: its type is character
9999 mem: location 1162 is 100
9999 mem: storing 100 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1456
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1457
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1456 is 7
9999 mem: storing 1 in location 1458
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1457 is 100
9999 mem: storing 0 in location 1459
 107 run: jump-unless starting-comment?, 
9999 mem: location 1459 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1460
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1460 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1457 is 100
9999 mem: storing 0 in location 1462
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1463
 107 run: jump-unless color-is-red?, 
9999 mem: location 1463 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1456 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 100
9999 mem: storing 0 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1185 is 0
9999 mem: location 1180 is 4
9999 mem: storing 0 in location 1195
 106 run: jump-unless at-right?, 
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print screen, c, color
9999 mem: location 1176 is 1012
9999 mem: location 1192 is 100
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 99 -> 100
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 100
9999 mem: storing 0 in location 1225
 107 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 107 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 15 in location 1228
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 42 -> 43
 107 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 100
9999 mem: storing 0 in location 1231
 107 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 15
9999 mem: storing 1050 in location 1233
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1050
9999 mem: location 1050 is 101
9999 mem: location 1051 is 7
9999 mem: location 1233 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1234
 107 run: *cursor-contents <- copy c
9999 mem: location 1215 is 100
9999 mem: location 1234 is 1050
9999 mem: storing 100 in location 1050
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1050
9999 mem: location 1050 is 100
9999 mem: location 1051 is 7
9999 mem: location 1233 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1235
 107 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1051
9999 mem: storing 7 in location 1051
 107 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 107 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1224 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1161 in location 1414
9999 mem: incrementing refcount of 1161: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1157
9999 mem: location 1414 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1163 is 1165
9999 mem: storing 1165 in location 1415
9999 mem: incrementing refcount of 1165: 10 -> 11
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1165
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1165
9999 mem: decrementing refcount of 1161: 17 -> 16
9999 mem: storing 1165 in location 1181
9999 mem: incrementing refcount of 1165: 11 -> 12
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1157
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1157 in location 1414
9999 mem: incrementing refcount of 1157: 20 -> 21
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1157
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1157
9999 mem: skipping refcount at 1157
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1158 is 10
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 1153
9999 mem: location 1414 is 1157
9999 mem: skipping refcount at 1157
9999 type: type deduced to be character$
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1415
9999 mem: incrementing refcount of 1161: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1161
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1161
9999 mem: decrementing refcount of 1157: 21 -> 20
9999 mem: storing 1161 in location 1182
9999 mem: incrementing refcount of 1161: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump 
9998 run: jumping to instruction 20
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1165
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 3
9999 mem: location 1179 is 4
9999 mem: storing 0 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 0
9998 run: jump-if fell through
9990 schedule: render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-on-left-arrow
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 3
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 30
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1181 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 1169
9999 mem: location 1168 is 1161
9999 mem: location 1181 is 1165
9999 mem: skipping refcount at 1165
9998 run: address to copy is 1166
9998 run: its type is character
9999 mem: location 1166 is 10
9999 mem: storing 10 in location 1192
 106 run: color <- get-color color, c
9999 mem: location 1183 is 7
9999 mem: location 1192 is 10
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
 107 run: color:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1456
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1457
 107 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1456 is 7
9999 mem: storing 1 in location 1458
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1457 is 10
9999 mem: storing 0 in location 1459
 107 run: jump-unless starting-comment?, 
9999 mem: location 1459 is 0
9998 run: jumping to instruction 11
 107 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1460
 107 run: jump-unless color-is-blue?, 
9999 mem: location 1460 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless color-is-white?, 
9999 mem: location 1458 is 1
9998 run: jump-unless fell through
 107 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1457 is 10
9999 mem: storing 0 in location 1462
 107 run: jump-unless starting-assignment?, 
9999 mem: location 1462 is 0
9998 run: jumping to instruction 27
 107 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1456 is 7
9999 mem: storing 0 in location 1463
 107 run: jump-unless color-is-red?, 
9999 mem: location 1463 is 0
9998 run: jumping to instruction 35
 107 run: reply color
9999 mem: location 1456 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1192 is 10
9999 mem: storing 1 in location 1193
 106 run: jump-unless newline?, 
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 3
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1190 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1176 is 1012
9999 mem: location 1185 is 1
9999 mem: location 1180 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 100 -> 101
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 101 -> 102
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 16 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 43 -> 44
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 16
9999 mem: storing 1052 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1233 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1052
9999 mem: storing 32 in location 1052
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1233 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1053
9999 mem: storing 7 in location 1053
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1224 is 1016
9999 mem: storing 2 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 102 -> 101
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 101 -> 102
 107 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 102 -> 103
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 17 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 44 -> 45
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 17
9999 mem: storing 1054 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1233 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1054
9999 mem: storing 32 in location 1054
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1233 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1055
9999 mem: storing 7 in location 1055
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1224 is 1016
9999 mem: storing 3 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 103 -> 102
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 102 -> 103
 107 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 103 -> 104
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 18 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 45 -> 46
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 18
9999 mem: storing 1056 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1233 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1056
9999 mem: storing 32 in location 1056
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1233 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1057
9999 mem: storing 7 in location 1057
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1236 is 4
9999 mem: storing 0 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 0
9998 run: jump-if fell through
 108 run: *column <- add *column, 1
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1224 is 1016
9999 mem: storing 4 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 104 -> 103
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 103 -> 104
 107 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 104 -> 105
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1221 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 25
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1224
 108 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 29
 108 run: legal? <- lesser-than *column, width
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1220 is 5
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 32
 108 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1225
 108 run: jump-unless newline?, 
9999 mem: location 1225 is 0
9998 run: jumping to instruction 43
 108 run: index:number <- multiply *row, width
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1220 is 5
9999 mem: storing 15 in location 1228
 108 run: index <- add index, *column
9999 mem: location 1228 is 15
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 19 in location 1228
 108 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1229
9999 mem: incrementing refcount of 1018: 46 -> 47
 108 run: len:number <- length *buf
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 20 in location 1230
 108 run: backspace?:boolean <- equal c, 8
9999 mem: location 1215 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless backspace?, 
9999 mem: location 1231 is 0
9998 run: jumping to instruction 63
 108 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1229 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1228 is 19
9999 mem: storing 1058 in location 1233
 108 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1233 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1233 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1234
 108 run: *cursor-contents <- copy c
9999 mem: location 1215 is 32
9999 mem: location 1234 is 1058
9999 mem: storing 32 in location 1058
 108 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1233 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1233 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1235
 108 run: *cursor-color <- copy color
9999 mem: location 1216 is 7
9999 mem: location 1235 is 1059
9999 mem: storing 7 in location 1059
 108 run: right:number <- subtract width, 1
9999 mem: location 1220 is 5
9999 mem: storing 4 in location 1236
 108 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1224 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1236 is 4
9999 mem: storing 1 in location 1237
 108 run: jump-if at-right?, 
9999 mem: location 1237 is 1
9998 run: jumping to instruction 74
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 105 -> 104
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 104 -> 105
 107 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 107 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: row <- add row, 1
9999 mem: location 1184 is 3
9999 mem: storing 4 in location 1184
 106 run: column <- copy left
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1176 is 1012
9999 mem: location 1184 is 4
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 105 -> 106
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1207
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 107 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 107 run: *row <- copy new-row
9999 mem: location 1207 is 4
9999 mem: location 1209 is 1015
9999 mem: storing 4 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 107 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 106 -> 105
9999 mem: storing 1012 in location 1176
9999 mem: incrementing refcount of 1012: 105 -> 106
 106 run: curr <- next_2 curr
9999 mem: location 1181 is 1165
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1414
9999 mem: incrementing refcount of 1165: 12 -> 13
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1165
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1165
9999 mem: skipping refcount at 1165
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1166 is 10
9999 mem: location 1167 is 1169
9999 mem: location 1168 is 1161
9999 mem: location 1414 is 1165
9999 mem: skipping refcount at 1165
9999 type: type deduced to be character$
9998 run: address to copy is 1167
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1167 is 1169
9999 mem: storing 1169 in location 1415
9999 mem: incrementing refcount of 1169: 8 -> 9
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1169
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1169
9999 mem: decrementing refcount of 1165: 13 -> 12
9999 mem: storing 1169 in location 1181
9999 mem: incrementing refcount of 1169: 9 -> 10
 106 run: prev <- next_2 prev
9999 mem: location 1182 is 1161
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1161 in location 1414
9999 mem: incrementing refcount of 1161: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1414 is 1161
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1414 is 1161
9999 mem: skipping refcount at 1161
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1162 is 100
9999 mem: location 1163 is 1165
9999 mem: location 1164 is 1157
9999 mem: location 1414 is 1161
9999 mem: skipping refcount at 1161
9999 type: type deduced to be character$
9998 run: address to copy is 1163
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1163 is 1165
9999 mem: storing 1165 in location 1415
9999 mem: incrementing refcount of 1165: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1415 is 1165
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1165
9999 mem: decrementing refcount of 1161: 19 -> 18
9999 mem: storing 1165 in location 1182
9999 mem: incrementing refcount of 1165: 13 -> 14
 106 run: jump +next-character:label
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1181 is 1169
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1184 is 4
9999 mem: location 1179 is 4
9999 mem: storing 1 in location 1189
 106 run: jump-if off-screen?, 
9999 mem: location 1189 is 1
9998 run: jumping to instruction 68
 106 run: bottom-of-screen:address:address:shared:duplex-list:character <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1197
 106 run: *bottom-of-screen <- copy curr
9999 mem: location 1181 is 1169
9999 mem: location 1197 is 1099
9999 mem: storing 1169 in location 1099
9999 mem: incrementing refcount of 1169: 10 -> 11
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1184 is 4
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1190
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1105
9999 mem: location 1105 is 1
9999 mem: storing 1 in location 1198
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1190 is 0
9999 mem: location 1198 is 1
9999 mem: storing 0 in location 1199
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1184 is 4
9999 mem: location 1186 is 1104
9999 mem: location 1104 is 1
9999 mem: storing 0 in location 1200
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1201
 106 run: jump-unless before-cursor?, 
9999 mem: location 1201 is 0
9998 run: jumping to instruction 81
 106 run: bottom:address:number <- get-address *editor, bottom:offset
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 1169
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 3
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1177 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1202
 106 run: *bottom <- copy row
9999 mem: location 1184 is 4
9999 mem: location 1202 is 1103
9999 mem: storing 4 in location 1103
 106 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1184 is 4
9999 mem: location 1185 is 0
9999 mem: location 1176 is 1012
9999 mem: location 1177 is 1096
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1116
9999 mem: storing 0 in location 1117
 105 run: clear-line-delimited screen, column, right
9999 mem: location 1112 is 1012
9999 mem: location 1117 is 0
9999 mem: location 1115 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 106 -> 107
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1207
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1208
 106 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1209
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 0
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 107 -> 108
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 108 -> 107
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 107 -> 108
 106 run: column <- add column, 1
9999 mem: location 1207 is 0
9999 mem: storing 1 in location 1207
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 1
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 108 -> 109
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 109 -> 108
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 108 -> 109
 106 run: column <- add column, 1
9999 mem: location 1207 is 1
9999 mem: storing 2 in location 1207
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 2
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 109 -> 110
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 110 -> 109
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 109 -> 110
 106 run: column <- add column, 1
9999 mem: location 1207 is 2
9999 mem: storing 3 in location 1207
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 3
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 110 -> 111
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 111 -> 110
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 110 -> 111
 106 run: column <- add column, 1
9999 mem: location 1207 is 3
9999 mem: storing 4 in location 1207
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 4
9999 mem: location 1208 is 4
9999 mem: storing 0 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 106 run: screen <- print screen, space
9999 mem: location 1206 is 1012
9999 mem: location 1209 is 32
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 111 -> 112
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 112 -> 111
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 111 -> 112
 106 run: column <- add column, 1
9999 mem: location 1207 is 4
9999 mem: storing 5 in location 1207
 106 run: jump 
9998 run: jumping to instruction 6
 106 run: done?:boolean <- greater-than column, right
9999 mem: location 1207 is 5
9999 mem: location 1208 is 4
9999 mem: storing 1 in location 1210
 106 run: jump-if done?, 
9999 mem: location 1210 is 1
9998 run: jumping to instruction 11
 106 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1116 is 4
9999 mem: storing 5 in location 1116
 105 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1112 is 1012
9999 mem: location 1116 is 5
9999 mem: location 1114 is 0
9999 mem: location 1115 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1266
9999 mem: incrementing refcount of 1012: 112 -> 113
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1267
 106 run: x:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1268
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1269
 106 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1270
9999 mem: storing 1 in location 1271
 106 run: jump-if style-found?, 
9999 mem: location 1271 is 1
9998 run: jumping to instruction 9
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 106 run: jump-if color-found?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 106 run: color <- copy 245/grey
9999 mem: storing 245 in location 1272
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 106 run: jump-if bg-color-found?, 
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1274
 106 run: screen <- move-cursor screen, row, x
9999 mem: location 1266 is 1012
9999 mem: location 1267 is 5
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 113 -> 114
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1207
9990 schedule: move-cursor/draw-horizontal/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-on-left-arrow
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 107 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 107 run: *row <- copy new-row
9999 mem: location 1207 is 5
9999 mem: location 1209 is 1015
9999 mem: storing 5 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 107 run: *column <- copy new-column
9999 mem: location 1208 is 0
9999 mem: location 1210 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 114 -> 113
9999 mem: storing 1012 in location 1266
9999 mem: incrementing refcount of 1012: 113 -> 114
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 0
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 114 -> 115
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 0
9999 mem: storing 1 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 1
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 115 -> 116
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 1
9999 mem: storing 2 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 2
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 116 -> 117
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 2
9999 mem: storing 3 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 3
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 117 -> 118
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 3
9999 mem: storing 4 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 4
9999 mem: location 1269 is 4
9999 mem: storing 1 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 106 run: print screen, style, color, bg-color
9999 mem: location 1266 is 1012
9999 mem: location 1270 is 9480
9999 mem: location 1272 is 245
9999 mem: location 1274 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 118 -> 119
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1215
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1216
9999 mem: storing 1 in location 1217
 107 run: jump-if color-found?, 
9999 mem: location 1217 is 1
9998 run: jumping to instruction 7
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 1 in location 1219
 107 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 1
9998 run: jumping to instruction 12
 107 run: trace 90, [print-character], c
9999 mem: location 1215 is 9480
  90 print-character: 9480 
 107 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: storing 1 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 5
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 107 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 107 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: x <- add x, 1
9999 mem: location 1268 is 4
9999 mem: storing 5 in location 1268
 106 run: jump 
9998 run: jumping to instruction 22
 106 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1268 is 5
9999 mem: location 1269 is 4
9999 mem: storing 0 in location 1276
 106 run: jump-unless continue?, 
9999 mem: location 1276 is 0
9998 run: jumping to instruction 27
 106 run: reply screen:address:shared:screen
9999 mem: location 1266 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: row <- add row, 1
9999 mem: location 1116 is 5
9999 mem: storing 6 in location 1116
 105 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1112 is 1012
9999 mem: location 1116 is 6
9999 mem: location 1114 is 0
9999 mem: location 1114 is 0
9999 mem: location 1115 is 4
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 119 -> 120
 106 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1207
 106 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 106 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1209
 106 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1210
 106 run: jump-if screen, 
9999 mem: location 1206 is 1012
9998 run: jumping to instruction 10
 106 run: screen <- move-cursor screen, row, column
9999 mem: location 1206 is 1012
9999 mem: location 1207 is 6
9999 mem: location 1208 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 120 -> 121
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1389
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1390
 107 run: jump-unless screen, 
9999 mem: location 1388 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1391
 107 run: *row <- copy new-row
9999 mem: location 1389 is 6
9999 mem: location 1391 is 1015
9999 mem: storing 6 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1392
 107 run: *column <- copy new-column
9999 mem: location 1390 is 0
9999 mem: location 1392 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1388 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 121 -> 120
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 120 -> 121
 106 run: clear-line-delimited screen, column, right
9999 mem: location 1206 is 1012
9999 mem: location 1208 is 0
9999 mem: location 1210 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 121 -> 122
 107 run: column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1389
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1390
 107 run: space:character <- copy 32/space
9999 mem: storing 32 in location 1391
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 0
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 122 -> 123
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 123 -> 122
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 122 -> 123
 107 run: column <- add column, 1
9999 mem: location 1389 is 0
9999 mem: storing 1 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 1
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 123 -> 124
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 124 -> 123
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 123 -> 124
 107 run: column <- add column, 1
9999 mem: location 1389 is 1
9999 mem: storing 2 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 2
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 124 -> 125
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 125 -> 124
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 124 -> 125
 107 run: column <- add column, 1
9999 mem: location 1389 is 2
9999 mem: storing 3 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 3
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 125 -> 126
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 126 -> 125
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 125 -> 126
 107 run: column <- add column, 1
9999 mem: location 1389 is 3
9999 mem: storing 4 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 4
9999 mem: location 1390 is 4
9999 mem: storing 0 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 0
9998 run: jump-if fell through
 107 run: screen <- print screen, space
9999 mem: location 1388 is 1012
9999 mem: location 1391 is 32
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1214
9999 mem: incrementing refcount of 1012: 126 -> 127
 108 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1215
 108 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
 108 run: jump-if color-found?, 
9999 mem: location 1217 is 0
9998 run: jump-if fell through
 108 run: color <- copy 7/white
9999 mem: storing 7 in location 1216
 108 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
 108 run: jump-if bg-color-found?, 
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 108 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1218
 108 run: trace 90, [print-character], c
9999 mem: location 1215 is 32
  90 print-character: 32 
 108 run: jump-unless screen, 
9999 mem: location 1214 is 1012
9998 run: jump-unless fell through
 108 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 5
9999 mem: storing 5 in location 1220
 108 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1221
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1214 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1222
 108 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: storing 1 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 1
9998 run: jumping to instruction 22
 108 run: legal? <- lesser-than *row, height
9999 mem: location 1222 is 1015
9999 mem: location 1015 is 6
9999 mem: location 1221 is 4
9999 mem: storing 0 in location 1223
 108 run: jump-if legal?, 1:offset
9999 mem: location 1223 is 0
9998 run: jump-if fell through
 108 run: reply screen:address:shared:screen
9999 mem: location 1214 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 127 -> 126
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 126 -> 127
 107 run: column <- add column, 1
9999 mem: location 1389 is 4
9999 mem: storing 5 in location 1389
 107 run: jump 
9998 run: jumping to instruction 6
 107 run: done?:boolean <- greater-than column, right
9999 mem: location 1389 is 5
9999 mem: location 1390 is 4
9999 mem: storing 1 in location 1392
 107 run: jump-if done?, 
9999 mem: location 1392 is 1
9998 run: jumping to instruction 11
 107 run: reply screen:address:shared:screen
9999 mem: location 1388 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1206 is 1012
9999 mem: location 1207 is 6
9999 mem: location 1209 is 0
9999 mem: location 1210 is 4
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1396
9999 mem: incrementing refcount of 1012: 127 -> 128
 107 run: row:number <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1397
 107 run: left:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1398
 107 run: right:number <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1399
 107 run: row <- add row, 1
9999 mem: location 1397 is 6
9999 mem: storing 7 in location 1397
 107 run: screen <- move-cursor screen, row, left
9999 mem: location 1396 is 1012
9999 mem: location 1397 is 7
9999 mem: location 1398 is 0
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1388
9999 mem: incrementing refcount of 1012: 128 -> 129
 108 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1389
 108 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1390
 108 run: jump-unless screen, 
9999 mem: location 1388 is 1012
9998 run: jump-unless fell through
 108 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1391
 108 run: *row <- copy new-row
9999 mem: location 1389 is 7
9999 mem: location 1391 is 1015
9999 mem: storing 7 in location 1015
 108 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1388 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1392
 108 run: *column <- copy new-column
9999 mem: location 1390 is 0
9999 mem: location 1392 is 1016
9999 mem: storing 0 in location 1016
 108 run: reply screen:address:shared:screen
9999 mem: location 1388 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 129 -> 128
9999 mem: storing 1012 in location 1396
9999 mem: incrementing refcount of 1012: 128 -> 129
 107 run: screen-height:number <- screen-height screen
9999 mem: location 1396 is 1012
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1414
9999 mem: incrementing refcount of 1012: 129 -> 130
 108 run: jump-unless screen, 
9999 mem: location 1414 is 1012
9998 run: jump-unless fell through
 108 run: height <- get *screen, num-rows:offset
9999 mem: location 1414 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1414 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 4
9999 mem: storing 4 in location 1415
 108 run: reply height:number
9999 mem: location 1415 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1400
 107 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1397 is 7
9999 mem: location 1400 is 4
9999 mem: storing 1 in location 1401
 107 run: jump-if at-bottom-of-screen?, 
9999 mem: location 1401 is 1
9998 run: jumping to instruction 15
 107 run: reply screen:address:shared:screen
9999 mem: location 1396 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: reply screen/same-as-ingredient:0
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data
9999 mem: location 1112 is 1012
9999 mem: location 1113 is 1096
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 130 -> 129
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 129 -> 130
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 1169
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9998 run: its type is number
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 1253
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 1169
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 1252 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9998 run: its type is number
9999 mem: location 1105 is 1
9999 mem: storing 1 in location 1254
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1250 is 1012
9999 mem: location 1253 is 1
9999 mem: location 1254 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1206
9999 mem: incrementing refcount of 1012: 130 -> 131
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1207
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1208
 105 run: jump-unless screen, 
9999 mem: location 1206 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 7
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1209
 105 run: *row <- copy new-row
9999 mem: location 1207 is 1
9999 mem: location 1209 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 4
9999 mem: location 1014 is 5
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1206 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1210
 105 run: *column <- copy new-column
9999 mem: location 1208 is 1
9999 mem: location 1210 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1206 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 131 -> 130
9999 mem: storing 1012 in location 1250
9999 mem: incrementing refcount of 1012: 130 -> 131
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1251 is 1408
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1408 in location 1266
9999 mem: incrementing refcount of 1408: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1266 is 1408
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1266 is 1408
9999 mem: skipping refcount at 1408
9999 mem: location 1409 is 1
9999 mem: location 1410 is 1402
9999 mem: location 1266 is 1408
9999 mem: skipping refcount at 1408
9998 run: address to copy is 1409
9999 mem: storing 1409 in location 1267
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1266 is 1408
9999 mem: skipping refcount at 1408
9999 mem: location 1409 is 1
9999 mem: location 1410 is 1402
9999 mem: location 1266 is 1408
9999 mem: skipping refcount at 1408
9998 run: address to copy is 1410
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1410 is 1402
9999 mem: storing 1402 in location 1268
9999 mem: incrementing refcount of 1402: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1268 is 1402
9999 mem: skipping refcount at 1402
9999 mem: storing 1 in location 1269
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1267 is 1409
9999 mem: location 1409 is 1
9999 mem: location 1269 is 1
9999 mem: storing 1 in location 1270
 105 run: jump-unless done?, 
9999 mem: location 1270 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1411 in location 1271
9999 mem: incrementing refcount of 1411: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1271 is 1411
9999 mem: skipping refcount at 1411
9999 mem: location 1412 is 0
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 mem: location 1415 is 0
9999 mem: location 1266 is 1408
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1408
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1255
9999 mem: storing 0 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: decrementing refcount of 1408: 3 -> 2
9999 mem: storing 1408 in location 1251
9999 mem: incrementing refcount of 1408: 2 -> 3
9999 mem: storing 1 in location 1259
9999 mem: storing 1 in location 1260
 104 run: jump-unless found?, 
9999 mem: location 1259 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1260 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1250 is 1012
9999 mem: location 1251 is 1408
9999 mem: location 1252 is 1096
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 1169
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 2 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1104
9998 run: its type is number
9999 mem: location 1104 is 1
9999 mem: storing 1 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1096
9999 mem: skipping refcount at 1096
9999 mem: location 1097 is 1118
9999 mem: location 1098 is 1141
9999 mem: location 1099 is 1169
9999 mem: location 1100 is 1145
9999 mem: location 1101 is 0
9999 mem: location 1102 is 4
9999 mem: location 1103 is 4
9999 mem: location 1104 is 1
9999 mem: location 1105 is 1
9999 mem: location 1106 is 1
9999 mem: location 1107 is 1450
9999 mem: location 1108 is 0
9999 mem: location 2 is 1096
9999 mem: skipping refcount at 1096
9998 run: address to copy is 1105
9998 run: its type is number
9999 mem: location 1105 is 1
9999 mem: storing 1 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .     .
    .b    .
    .c    .
    .d    .
  ]
 102 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
