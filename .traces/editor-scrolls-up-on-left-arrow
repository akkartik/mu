parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "4", properties: ["4": "literal", "height": ]}
parse: instruction: new
parse:   ingredient: {name: "a\nb\nc\nd\ne", properties: [_: "literal-string"]}
parse:   product: {name: "1", properties: ["1": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "1", properties: ["1": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   product: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press 65518  # page-down\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .c    .\n    .d    .\n    .e    .\n  ", properties: [_: "literal-string"]}
parse: instruction: assume-console
parse:   ingredient: {name: "\n    press 65515  # left arrow\n  ", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    editor-event-loop screen:address, console:address, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .b    .\n    .c    .\n    .d    .\n  ", properties: [_: "literal-string"]}
parse: instruction: memory-should-contain
parse:   ingredient: {name: "\n    3 <- 1\n    4 <- 1\n  ", properties: [_: "literal-string"]}
after-brace: recipe scenario-editor-scrolls-up-on-left-arrow
after-brace: new-fake-screen ...
after-brace: new ...
after-brace: new-editor ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: assume-console ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: memory-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: scenario-editor-scrolls-up-on-left-arrow
 101 run: screen:address <- new-fake-screen 5/width, 4/height
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1009
9999 mem: storing 1009 in location 1002
 102 run: width:address:number <- get-address *result, num-columns:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1010
9999 mem: storing 1010 in location 1003
 102 run: *width <- next-ingredient 
9999 mem: location 1003 is 1010
9999 mem: storing 5 in location 1010
 102 run: height:address:number <- get-address *result, num-rows:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 0
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1009
9999 mem: storing 1009 in location 1004
 102 run: *height <- next-ingredient 
9999 mem: location 1004 is 1009
9999 mem: storing 4 in location 1009
 102 run: row:address:number <- get-address *result, cursor-row:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1005
 102 run: *row <- copy 0
9999 mem: location 1005 is 1011
9999 mem: location 1005 is 1011
9999 mem: storing 0 in location 1011
 102 run: column:address:number <- get-address *result, cursor-column:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1006
 102 run: *column <- copy 0
9999 mem: location 1006 is 1012
9999 mem: location 1006 is 1012
9999 mem: storing 0 in location 1012
 102 run: bufsize:number <- multiply *width, *height
9999 mem: location 1003 is 1010
9999 mem: location 1010 is 5
9999 mem: location 1004 is 1009
9999 mem: location 1009 is 4
9999 mem: storing 20 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address *result, data:offset
9999 mem: location 1002 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 0
9999 mem: location 1002 is 1009
9999 run: address to copy is 1013
9999 mem: storing 1013 in location 1008
 102 run: *buf <- new screen-cell:type, bufsize
9999 mem: location 1007 is 20
9999 mem: array size is 20
9999 mem: new alloc: 1014
9999 mem: location 1008 is 1013
9999 mem: storing 1014 in location 1013
 102 run: clear-screen result
9999 mem: location 1002 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
9999 mem: new alloc: 1055
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1057
 103 run: break-unless sc, 
9999 mem: location 1057 is 1009
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1057 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1057 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1058
 103 run: max:number <- length *buf
9999 mem: location 1058 is 1014
9999 mem: storing 20 in location 1059
 103 run: i:number <- copy 0
9999 mem: storing 0 in location 1060
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 0
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 0
9999 mem: storing 1015 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1062 is 1015
9999 run: address to copy is 1015
9999 mem: storing 1015 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1015
9999 mem: location 1063 is 1015
9999 mem: storing 0 in location 1015
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1015
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1062 is 1015
9999 run: address to copy is 1016
9999 mem: storing 1016 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1016
9999 mem: location 1064 is 1016
9999 mem: storing 7 in location 1016
 103 run: i <- add i, 1
9999 mem: location 1060 is 0
9999 mem: storing 1 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 1
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 1
9999 mem: storing 1017 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1062 is 1017
9999 run: address to copy is 1017
9999 mem: storing 1017 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1017
9999 mem: location 1063 is 1017
9999 mem: storing 0 in location 1017
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1017
9999 mem: location 1017 is 0
9999 mem: location 1018 is 0
9999 mem: location 1062 is 1017
9999 run: address to copy is 1018
9999 mem: storing 1018 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1018
9999 mem: location 1064 is 1018
9999 mem: storing 7 in location 1018
 103 run: i <- add i, 1
9999 mem: location 1060 is 1
9999 mem: storing 2 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 2
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 2
9999 mem: storing 1019 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1062 is 1019
9999 run: address to copy is 1019
9999 mem: storing 1019 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1019
9999 mem: location 1063 is 1019
9999 mem: storing 0 in location 1019
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1019
9999 mem: location 1019 is 0
9999 mem: location 1020 is 0
9999 mem: location 1062 is 1019
9999 run: address to copy is 1020
9999 mem: storing 1020 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1020
9999 mem: location 1064 is 1020
9999 mem: storing 7 in location 1020
 103 run: i <- add i, 1
9999 mem: location 1060 is 2
9999 mem: storing 3 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 3
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 3
9999 mem: storing 1021 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1062 is 1021
9999 run: address to copy is 1021
9999 mem: storing 1021 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1021
9999 mem: location 1063 is 1021
9999 mem: storing 0 in location 1021
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1021
9999 mem: location 1021 is 0
9999 mem: location 1022 is 0
9999 mem: location 1062 is 1021
9999 run: address to copy is 1022
9999 mem: storing 1022 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1022
9999 mem: location 1064 is 1022
9999 mem: storing 7 in location 1022
 103 run: i <- add i, 1
9999 mem: location 1060 is 3
9999 mem: storing 4 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 4
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 4
9999 mem: storing 1023 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1062 is 1023
9999 run: address to copy is 1023
9999 mem: storing 1023 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1023
9999 mem: location 1063 is 1023
9999 mem: storing 0 in location 1023
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1023
9999 mem: location 1023 is 0
9999 mem: location 1024 is 0
9999 mem: location 1062 is 1023
9999 run: address to copy is 1024
9999 mem: storing 1024 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1024
9999 mem: location 1064 is 1024
9999 mem: storing 7 in location 1024
 103 run: i <- add i, 1
9999 mem: location 1060 is 4
9999 mem: storing 5 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 5
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 5
9999 mem: storing 1025 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1062 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1025
9999 mem: location 1063 is 1025
9999 mem: storing 0 in location 1025
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 0
9999 mem: location 1062 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1026
9999 mem: location 1064 is 1026
9999 mem: storing 7 in location 1026
 103 run: i <- add i, 1
9999 mem: location 1060 is 5
9999 mem: storing 6 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 6
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 6
9999 mem: storing 1027 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1062 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1027
9999 mem: location 1063 is 1027
9999 mem: storing 0 in location 1027
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 0
9999 mem: location 1062 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1028
9999 mem: location 1064 is 1028
9999 mem: storing 7 in location 1028
 103 run: i <- add i, 1
9999 mem: location 1060 is 6
9999 mem: storing 7 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 7
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 7
9999 mem: storing 1029 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1062 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1029
9999 mem: location 1063 is 1029
9999 mem: storing 0 in location 1029
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 0
9999 mem: location 1062 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1030
9999 mem: location 1064 is 1030
9999 mem: storing 7 in location 1030
 103 run: i <- add i, 1
9999 mem: location 1060 is 7
9999 mem: storing 8 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 8
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 8
9999 mem: storing 1031 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1062 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1031
9999 mem: location 1063 is 1031
9999 mem: storing 0 in location 1031
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1062 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1032
9999 mem: location 1064 is 1032
9999 mem: storing 7 in location 1032
 103 run: i <- add i, 1
9999 mem: location 1060 is 8
9999 mem: storing 9 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 9
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 9
9999 mem: storing 1033 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1062 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1033
9999 mem: location 1063 is 1033
9999 mem: storing 0 in location 1033
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1062 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1034
9999 mem: location 1064 is 1034
9999 mem: storing 7 in location 1034
 103 run: i <- add i, 1
9999 mem: location 1060 is 9
9999 mem: storing 10 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 10
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 10
9999 mem: storing 1035 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1062 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1035
9999 mem: location 1063 is 1035
9999 mem: storing 0 in location 1035
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 0
9999 mem: location 1062 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1036
9999 mem: location 1064 is 1036
9999 mem: storing 7 in location 1036
 103 run: i <- add i, 1
9999 mem: location 1060 is 10
9999 mem: storing 11 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 11
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 11
9999 mem: storing 1037 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1062 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1037
9999 mem: location 1063 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1062 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1038
9999 mem: location 1064 is 1038
9999 mem: storing 7 in location 1038
 103 run: i <- add i, 1
9999 mem: location 1060 is 11
9999 mem: storing 12 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 12
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 12
9999 mem: storing 1039 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1062 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1039
9999 mem: location 1063 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1062 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1040
9999 mem: location 1064 is 1040
9999 mem: storing 7 in location 1040
 103 run: i <- add i, 1
9999 mem: location 1060 is 12
9999 mem: storing 13 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 13
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 13
9999 mem: storing 1041 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1062 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1041
9999 mem: location 1063 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1062 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1042
9999 mem: location 1064 is 1042
9999 mem: storing 7 in location 1042
 103 run: i <- add i, 1
9999 mem: location 1060 is 13
9999 mem: storing 14 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 14
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 14
9999 mem: storing 1043 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1062 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1043
9999 mem: location 1063 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1062 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1044
9999 mem: location 1064 is 1044
9999 mem: storing 7 in location 1044
 103 run: i <- add i, 1
9999 mem: location 1060 is 14
9999 mem: storing 15 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 15
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 15
9999 mem: storing 1045 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1062 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1045
9999 mem: location 1063 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1062 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1046
9999 mem: location 1064 is 1046
9999 mem: storing 7 in location 1046
 103 run: i <- add i, 1
9999 mem: location 1060 is 15
9999 mem: storing 16 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 16
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 16
9999 mem: storing 1047 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1062 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1047
9999 mem: location 1063 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1062 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1048
9999 mem: location 1064 is 1048
9999 mem: storing 7 in location 1048
 103 run: i <- add i, 1
9999 mem: location 1060 is 16
9999 mem: storing 17 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 17
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 17
9999 mem: storing 1049 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1062 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1049
9999 mem: location 1063 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1062 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1050
9999 mem: location 1064 is 1050
9999 mem: storing 7 in location 1050
 103 run: i <- add i, 1
9999 mem: location 1060 is 17
9999 mem: storing 18 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 18
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 18
9999 mem: storing 1051 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1062 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1051
9999 mem: location 1063 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1062 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1052
9999 mem: location 1064 is 1052
9999 mem: storing 7 in location 1052
 103 run: i <- add i, 1
9999 mem: location 1060 is 18
9999 mem: storing 19 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 19
9999 mem: location 1059 is 20
9999 mem: storing 0 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address *buf, i
9999 mem: location 1058 is 1014
9999 mem: location 1060 is 19
9999 mem: storing 1053 in location 1062
 103 run: curr-content:address:character <- get-address *curr, contents:offset
9999 mem: location 1062 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1062 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1063
 103 run: *curr-content <- copy [ ]
9999 mem: location 1063 is 1053
9999 mem: location 1063 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address *curr, color:offset
9999 mem: location 1062 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1062 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1064
 103 run: *curr-color <- copy 7/white
9999 mem: location 1064 is 1054
9999 mem: location 1064 is 1054
9999 mem: storing 7 in location 1054
 103 run: i <- add i, 1
9999 mem: location 1060 is 19
9999 mem: storing 20 in location 1060
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i, max
9999 mem: location 1060 is 20
9999 mem: location 1059 is 20
9999 mem: storing 1 in location 1061
 103 run: break-if done?, 
9999 mem: location 1061 is 1
9999 run: jumping to instruction 17
 103 run: x:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1057 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1057 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1065
 103 run: *x <- copy 0
9999 mem: location 1065 is 1011
9999 mem: location 1065 is 1011
9999 mem: storing 0 in location 1011
 103 run: x <- get-address *sc, cursor-column:offset
9999 mem: location 1057 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1057 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1065
 103 run: *x <- copy 0
9999 mem: location 1065 is 1012
9999 mem: location 1065 is 1012
9999 mem: storing 0 in location 1012
 103 run: reply sc/same-as-ingredient:0
9999 mem: location 1057 is 1009
 102 run: reply result
9999 mem: location 1002 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 900
 101 run: 1:address:array:character <- new [a
b
c
d
e]
9999 mem: storing 1066 in location 1
 101 run: 2:address:editor-data <- new-editor 1:address:array:character, screen:address, 0/left, 5/right
9999 mem: location 1 is 1066
9999 mem: location 900 is 1009
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 11
9999 mem: new alloc: 1076
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1066 in location 1078
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1079
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1080
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1081
 102 run: right <- subtract right, 1
9999 mem: location 1081 is 5
9999 mem: storing 4 in location 1081
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: storing 1000 in location 1082
 102 run: x:address:number <- get-address *result, left:offset
9999 mem: location 1082 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 0
9999 mem: location 1006 is 0
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1082 is 1000
9999 run: address to copy is 1004
9999 mem: storing 1004 in location 1083
 102 run: *x <- copy left
9999 mem: location 1080 is 0
9999 mem: location 1083 is 1004
9999 mem: location 1083 is 1004
9999 mem: storing 0 in location 1004
 102 run: x <- get-address *result, right:offset
9999 mem: location 1082 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 0
9999 mem: location 1006 is 0
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1082 is 1000
9999 run: address to copy is 1005
9999 mem: storing 1005 in location 1083
 102 run: *x <- copy right
9999 mem: location 1081 is 4
9999 mem: location 1083 is 1005
9999 mem: location 1083 is 1005
9999 mem: storing 4 in location 1005
 102 run: x <- get-address *result, cursor-row:offset
9999 mem: location 1082 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 0
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1082 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1083
 102 run: *x <- copy 1/top
9999 mem: location 1083 is 1006
9999 mem: location 1083 is 1006
9999 mem: storing 1 in location 1006
 102 run: x <- get-address *result, cursor-column:offset
9999 mem: location 1082 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1082 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1083
 102 run: *x <- copy left
9999 mem: location 1080 is 0
9999 mem: location 1083 is 1007
9999 mem: location 1083 is 1007
9999 mem: storing 0 in location 1007
 102 run: init:address:address:duplex-list <- get-address *result, data:offset
9999 mem: location 1082 is 1000
9999 mem: location 1000 is 0
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1082 is 1000
9999 run: address to copy is 1000
9999 mem: storing 1000 in location 1084
 102 run: *init <- push-duplex 167/§, 0/tail
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1088
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1090
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1091
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1096
9999 mem: storing 1096 in location 1092
 103 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1092 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1092 is 1096
9999 run: address to copy is 1096
9999 mem: storing 1096 in location 1093
 103 run: *val <- copy x
9999 mem: location 1090 is 167
9999 mem: location 1093 is 1096
9999 mem: location 1093 is 1096
9999 mem: storing 167 in location 1096
 103 run: next:address:address:duplex-list <- get-address *result, next:offset
9999 mem: location 1092 is 1096
9999 mem: location 1096 is 167
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1092 is 1096
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1094
 103 run: *next <- copy in
9999 mem: location 1091 is 0
9999 mem: location 1094 is 1097
9999 mem: location 1094 is 1097
9999 mem: storing 0 in location 1097
 103 run: jump-if in, 1:offset
9999 mem: location 1091 is 0
9999 run: jump-if fell through
 103 run: reply result
9999 mem: location 1092 is 1096
9999 run: result 0 is 1096
9999 mem: location 1084 is 1000
9999 mem: storing 1096 in location 1000
 102 run: top-of-screen:address:address:duplex-list <- get-address *result, top-of-screen:offset
9999 mem: location 1082 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 0
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1082 is 1000
9999 run: address to copy is 1001
9999 mem: storing 1001 in location 1085
 102 run: *top-of-screen <- copy *init
9999 mem: location 1084 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1084 is 1000
9999 mem: location 1085 is 1001
9999 mem: location 1084 is 1000
9999 mem: location 1085 is 1001
9999 mem: storing 1096 in location 1001
 102 run: y:address:address:duplex-list <- get-address *result, before-cursor:offset
9999 mem: location 1082 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 0
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1082 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1086
 102 run: *y <- copy *init
9999 mem: location 1084 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1084 is 1000
9999 mem: location 1086 is 1003
9999 mem: location 1084 is 1000
9999 mem: location 1086 is 1003
9999 mem: storing 1096 in location 1003
 102 run: result <- insert-text result, s
9999 mem: location 1082 is 1000
9999 mem: location 1078 is 1066
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 8
9999 mem: new alloc: 1099
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1101
 103 run: text:address:array:character <- next-ingredient 
9999 mem: storing 1066 in location 1102
 103 run: jump-if text, 1:offset
9999 mem: location 1102 is 1066
9999 run: jumping to instruction 5
 103 run: len:number <- length *text
9999 mem: location 1102 is 1066
9999 mem: storing 9 in location 1103
 103 run: jump-if len, 1:offset
9999 mem: location 1103 is 9
9999 run: jumping to instruction 8
 103 run: idx:number <- copy 0
9999 mem: storing 0 in location 1104
 103 run: curr:address:duplex-list <- get *editor, data:offset
9999 mem: location 1101 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1101 is 1000
9999 run: address to copy is 1000
9999 run: its type is address
9999 mem: location 1000 is 1096
9999 mem: storing 1096 in location 1105
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 0
9999 mem: location 1103 is 9
9999 mem: storing 0 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1102 is 1066
9999 mem: location 1104 is 0
9999 run: address to copy is 1067
9999 run: its type is character
9999 mem: location 1067 is 97
9999 mem: storing 97 in location 1107
 103 run: insert-duplex c, curr
9999 mem: location 1107 is 97
9999 mem: location 1105 is 1096
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1090
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1096 in location 1091
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1108
9999 mem: storing 1108 in location 1092
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1092 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1092 is 1108
9999 run: address to copy is 1108
9999 mem: storing 1108 in location 1093
 104 run: *val <- copy x
9999 mem: location 1090 is 97
9999 mem: location 1093 is 1108
9999 mem: location 1093 is 1108
9999 mem: storing 97 in location 1108
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1091 is 1096
9999 mem: location 1096 is 167
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1091 is 1096
9999 run: address to copy is 1097
9999 run: its type is address
9999 mem: location 1097 is 0
9999 mem: storing 0 in location 1094
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1091 is 1096
9999 mem: location 1096 is 167
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1091 is 1096
9999 run: address to copy is 1097
9999 mem: storing 1097 in location 1095
 104 run: *y <- copy new-node
9999 mem: location 1092 is 1108
9999 mem: location 1095 is 1097
9999 mem: location 1095 is 1097
9999 mem: storing 1108 in location 1097
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1092 is 1108
9999 mem: location 1108 is 97
9999 mem: location 1109 is 0
9999 mem: location 1110 is 0
9999 mem: location 1092 is 1108
9999 run: address to copy is 1110
9999 mem: storing 1110 in location 1095
 104 run: *y <- copy in
9999 mem: location 1091 is 1096
9999 mem: location 1095 is 1110
9999 mem: location 1095 is 1110
9999 mem: storing 1096 in location 1110
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1092 is 1108
9999 mem: location 1108 is 97
9999 mem: location 1109 is 0
9999 mem: location 1110 is 1096
9999 mem: location 1092 is 1108
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1095
 104 run: *y <- copy next-node
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1109
9999 mem: location 1095 is 1109
9999 mem: storing 0 in location 1109
 104 run: jump-if next-node, 1:offset
9999 mem: location 1094 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1092 is 1108
 103 run: curr <- next-duplex curr
9999 mem: location 1105 is 1096
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1111
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1096 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1096
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1096
9999 mem: location 1096 is 167
9999 mem: location 1097 is 1108
9999 mem: location 1098 is 0
9999 mem: location 1113 is 1096
9999 run: address to copy is 1097
9999 run: its type is address
9999 mem: location 1097 is 1108
9999 mem: storing 1108 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1105
 103 run: idx <- add idx, 1
9999 mem: location 1104 is 0
9999 mem: storing 1 in location 1104
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 1
9999 mem: location 1103 is 9
9999 mem: storing 0 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1102 is 1066
9999 mem: location 1104 is 1
9999 run: address to copy is 1068
9999 run: its type is character
9999 mem: location 1068 is 10
9999 mem: storing 10 in location 1107
 103 run: insert-duplex c, curr
9999 mem: location 1107 is 10
9999 mem: location 1105 is 1108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1090
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1091
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1115
9999 mem: storing 1115 in location 1092
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1092 is 1115
9999 mem: location 1115 is 0
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1092 is 1115
9999 run: address to copy is 1115
9999 mem: storing 1115 in location 1093
 104 run: *val <- copy x
9999 mem: location 1090 is 10
9999 mem: location 1093 is 1115
9999 mem: location 1093 is 1115
9999 mem: storing 10 in location 1115
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1091 is 1108
9999 mem: location 1108 is 97
9999 mem: location 1109 is 0
9999 mem: location 1110 is 1096
9999 mem: location 1091 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 0
9999 mem: storing 0 in location 1094
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1091 is 1108
9999 mem: location 1108 is 97
9999 mem: location 1109 is 0
9999 mem: location 1110 is 1096
9999 mem: location 1091 is 1108
9999 run: address to copy is 1109
9999 mem: storing 1109 in location 1095
 104 run: *y <- copy new-node
9999 mem: location 1092 is 1115
9999 mem: location 1095 is 1109
9999 mem: location 1095 is 1109
9999 mem: storing 1115 in location 1109
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1092 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1092 is 1115
9999 run: address to copy is 1117
9999 mem: storing 1117 in location 1095
 104 run: *y <- copy in
9999 mem: location 1091 is 1108
9999 mem: location 1095 is 1117
9999 mem: location 1095 is 1117
9999 mem: storing 1108 in location 1117
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1092 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1108
9999 mem: location 1092 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1095
 104 run: *y <- copy next-node
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1116
9999 mem: location 1095 is 1116
9999 mem: storing 0 in location 1116
 104 run: jump-if next-node, 1:offset
9999 mem: location 1094 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1092 is 1115
 103 run: curr <- next-duplex curr
9999 mem: location 1105 is 1108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1108
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1108
9999 mem: location 1108 is 97
9999 mem: location 1109 is 1115
9999 mem: location 1110 is 1096
9999 mem: location 1113 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1115
9999 mem: storing 1115 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1105
 103 run: idx <- add idx, 1
9999 mem: location 1104 is 1
9999 mem: storing 2 in location 1104
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 2
9999 mem: location 1103 is 9
9999 mem: storing 0 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1102 is 1066
9999 mem: location 1104 is 2
9999 run: address to copy is 1069
9999 run: its type is character
9999 mem: location 1069 is 98
9999 mem: storing 98 in location 1107
 103 run: insert-duplex c, curr
9999 mem: location 1107 is 98
9999 mem: location 1105 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1090
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1115 in location 1091
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1118
9999 mem: storing 1118 in location 1092
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1092 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1092 is 1118
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1093
 104 run: *val <- copy x
9999 mem: location 1090 is 98
9999 mem: location 1093 is 1118
9999 mem: location 1093 is 1118
9999 mem: storing 98 in location 1118
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1091 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1108
9999 mem: location 1091 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 0
9999 mem: storing 0 in location 1094
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1091 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 0
9999 mem: location 1117 is 1108
9999 mem: location 1091 is 1115
9999 run: address to copy is 1116
9999 mem: storing 1116 in location 1095
 104 run: *y <- copy new-node
9999 mem: location 1092 is 1118
9999 mem: location 1095 is 1116
9999 mem: location 1095 is 1116
9999 mem: storing 1118 in location 1116
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1092 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 0
9999 mem: location 1120 is 0
9999 mem: location 1092 is 1118
9999 run: address to copy is 1120
9999 mem: storing 1120 in location 1095
 104 run: *y <- copy in
9999 mem: location 1091 is 1115
9999 mem: location 1095 is 1120
9999 mem: location 1095 is 1120
9999 mem: storing 1115 in location 1120
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1092 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1115
9999 mem: location 1092 is 1118
9999 run: address to copy is 1119
9999 mem: storing 1119 in location 1095
 104 run: *y <- copy next-node
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1119
9999 mem: location 1095 is 1119
9999 mem: storing 0 in location 1119
 104 run: jump-if next-node, 1:offset
9999 mem: location 1094 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1092 is 1118
 103 run: curr <- next-duplex curr
9999 mem: location 1105 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1115 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1115
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 1118
9999 mem: location 1117 is 1108
9999 mem: location 1113 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1118
9999 mem: storing 1118 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1118
9999 run: result 0 is 1118
9999 mem: storing 1118 in location 1105
 103 run: idx <- add idx, 1
9999 mem: location 1104 is 2
9999 mem: storing 3 in location 1104
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 3
9999 mem: location 1103 is 9
9999 mem: storing 0 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1102 is 1066
9999 mem: location 1104 is 3
9999 run: address to copy is 1070
9999 run: its type is character
9999 mem: location 1070 is 10
9999 mem: storing 10 in location 1107
 103 run: insert-duplex c, curr
9999 mem: location 1107 is 10
9999 mem: location 1105 is 1118
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1090
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1118 in location 1091
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1121
9999 mem: storing 1121 in location 1092
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1092 is 1121
9999 mem: location 1121 is 0
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1092 is 1121
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1093
 104 run: *val <- copy x
9999 mem: location 1090 is 10
9999 mem: location 1093 is 1121
9999 mem: location 1093 is 1121
9999 mem: storing 10 in location 1121
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1091 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1115
9999 mem: location 1091 is 1118
9999 run: address to copy is 1119
9999 run: its type is address
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1094
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1091 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 0
9999 mem: location 1120 is 1115
9999 mem: location 1091 is 1118
9999 run: address to copy is 1119
9999 mem: storing 1119 in location 1095
 104 run: *y <- copy new-node
9999 mem: location 1092 is 1121
9999 mem: location 1095 is 1119
9999 mem: location 1095 is 1119
9999 mem: storing 1121 in location 1119
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1092 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 0
9999 mem: location 1123 is 0
9999 mem: location 1092 is 1121
9999 run: address to copy is 1123
9999 mem: storing 1123 in location 1095
 104 run: *y <- copy in
9999 mem: location 1091 is 1118
9999 mem: location 1095 is 1123
9999 mem: location 1095 is 1123
9999 mem: storing 1118 in location 1123
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1092 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1118
9999 mem: location 1092 is 1121
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1095
 104 run: *y <- copy next-node
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1122
9999 mem: location 1095 is 1122
9999 mem: storing 0 in location 1122
 104 run: jump-if next-node, 1:offset
9999 mem: location 1094 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1092 is 1121
 103 run: curr <- next-duplex curr
9999 mem: location 1105 is 1118
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1118 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1118
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1113 is 1118
9999 run: address to copy is 1119
9999 run: its type is address
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1121
9999 run: result 0 is 1121
9999 mem: storing 1121 in location 1105
 103 run: idx <- add idx, 1
9999 mem: location 1104 is 3
9999 mem: storing 4 in location 1104
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 4
9999 mem: location 1103 is 9
9999 mem: storing 0 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1102 is 1066
9999 mem: location 1104 is 4
9999 run: address to copy is 1071
9999 run: its type is character
9999 mem: location 1071 is 99
9999 mem: storing 99 in location 1107
 103 run: insert-duplex c, curr
9999 mem: location 1107 is 99
9999 mem: location 1105 is 1121
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1090
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1091
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1124
9999 mem: storing 1124 in location 1092
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1092 is 1124
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1092 is 1124
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1093
 104 run: *val <- copy x
9999 mem: location 1090 is 99
9999 mem: location 1093 is 1124
9999 mem: location 1093 is 1124
9999 mem: storing 99 in location 1124
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1091 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1118
9999 mem: location 1091 is 1121
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1094
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1091 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1118
9999 mem: location 1091 is 1121
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1095
 104 run: *y <- copy new-node
9999 mem: location 1092 is 1124
9999 mem: location 1095 is 1122
9999 mem: location 1095 is 1122
9999 mem: storing 1124 in location 1122
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1092 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 0
9999 mem: location 1126 is 0
9999 mem: location 1092 is 1124
9999 run: address to copy is 1126
9999 mem: storing 1126 in location 1095
 104 run: *y <- copy in
9999 mem: location 1091 is 1121
9999 mem: location 1095 is 1126
9999 mem: location 1095 is 1126
9999 mem: storing 1121 in location 1126
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1092 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 0
9999 mem: location 1126 is 1121
9999 mem: location 1092 is 1124
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1095
 104 run: *y <- copy next-node
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1125
9999 mem: location 1095 is 1125
9999 mem: storing 0 in location 1125
 104 run: jump-if next-node, 1:offset
9999 mem: location 1094 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1092 is 1124
 103 run: curr <- next-duplex curr
9999 mem: location 1105 is 1121
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1121
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1113 is 1121
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1124
9999 run: result 0 is 1124
9999 mem: storing 1124 in location 1105
 103 run: idx <- add idx, 1
9999 mem: location 1104 is 4
9999 mem: storing 5 in location 1104
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 5
9999 mem: location 1103 is 9
9999 mem: storing 0 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1102 is 1066
9999 mem: location 1104 is 5
9999 run: address to copy is 1072
9999 run: its type is character
9999 mem: location 1072 is 10
9999 mem: storing 10 in location 1107
 103 run: insert-duplex c, curr
9999 mem: location 1107 is 10
9999 mem: location 1105 is 1124
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1090
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1124 in location 1091
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1127
9999 mem: storing 1127 in location 1092
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1092 is 1127
9999 mem: location 1127 is 0
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1092 is 1127
9999 run: address to copy is 1127
9999 mem: storing 1127 in location 1093
 104 run: *val <- copy x
9999 mem: location 1090 is 10
9999 mem: location 1093 is 1127
9999 mem: location 1093 is 1127
9999 mem: storing 10 in location 1127
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1091 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 0
9999 mem: location 1126 is 1121
9999 mem: location 1091 is 1124
9999 run: address to copy is 1125
9999 run: its type is address
9999 mem: location 1125 is 0
9999 mem: storing 0 in location 1094
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1091 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 0
9999 mem: location 1126 is 1121
9999 mem: location 1091 is 1124
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1095
 104 run: *y <- copy new-node
9999 mem: location 1092 is 1127
9999 mem: location 1095 is 1125
9999 mem: location 1095 is 1125
9999 mem: storing 1127 in location 1125
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1092 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1092 is 1127
9999 run: address to copy is 1129
9999 mem: storing 1129 in location 1095
 104 run: *y <- copy in
9999 mem: location 1091 is 1124
9999 mem: location 1095 is 1129
9999 mem: location 1095 is 1129
9999 mem: storing 1124 in location 1129
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1092 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 0
9999 mem: location 1129 is 1124
9999 mem: location 1092 is 1127
9999 run: address to copy is 1128
9999 mem: storing 1128 in location 1095
 104 run: *y <- copy next-node
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1128
9999 mem: location 1095 is 1128
9999 mem: storing 0 in location 1128
 104 run: jump-if next-node, 1:offset
9999 mem: location 1094 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1092 is 1127
 103 run: curr <- next-duplex curr
9999 mem: location 1105 is 1124
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1124 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1124
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1113 is 1124
9999 run: address to copy is 1125
9999 run: its type is address
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1127
9999 run: result 0 is 1127
9999 mem: storing 1127 in location 1105
 103 run: idx <- add idx, 1
9999 mem: location 1104 is 5
9999 mem: storing 6 in location 1104
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 6
9999 mem: location 1103 is 9
9999 mem: storing 0 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1102 is 1066
9999 mem: location 1104 is 6
9999 run: address to copy is 1073
9999 run: its type is character
9999 mem: location 1073 is 100
9999 mem: storing 100 in location 1107
 103 run: insert-duplex c, curr
9999 mem: location 1107 is 100
9999 mem: location 1105 is 1127
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1090
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1127 in location 1091
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1130
9999 mem: storing 1130 in location 1092
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1092 is 1130
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1092 is 1130
9999 run: address to copy is 1130
9999 mem: storing 1130 in location 1093
 104 run: *val <- copy x
9999 mem: location 1090 is 100
9999 mem: location 1093 is 1130
9999 mem: location 1093 is 1130
9999 mem: storing 100 in location 1130
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1091 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 0
9999 mem: location 1129 is 1124
9999 mem: location 1091 is 1127
9999 run: address to copy is 1128
9999 run: its type is address
9999 mem: location 1128 is 0
9999 mem: storing 0 in location 1094
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1091 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 0
9999 mem: location 1129 is 1124
9999 mem: location 1091 is 1127
9999 run: address to copy is 1128
9999 mem: storing 1128 in location 1095
 104 run: *y <- copy new-node
9999 mem: location 1092 is 1130
9999 mem: location 1095 is 1128
9999 mem: location 1095 is 1128
9999 mem: storing 1130 in location 1128
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1092 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1092 is 1130
9999 run: address to copy is 1132
9999 mem: storing 1132 in location 1095
 104 run: *y <- copy in
9999 mem: location 1091 is 1127
9999 mem: location 1095 is 1132
9999 mem: location 1095 is 1132
9999 mem: storing 1127 in location 1132
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1092 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 0
9999 mem: location 1132 is 1127
9999 mem: location 1092 is 1130
9999 run: address to copy is 1131
9999 mem: storing 1131 in location 1095
 104 run: *y <- copy next-node
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1131
9999 mem: location 1095 is 1131
9999 mem: storing 0 in location 1131
 104 run: jump-if next-node, 1:offset
9999 mem: location 1094 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1092 is 1130
 103 run: curr <- next-duplex curr
9999 mem: location 1105 is 1127
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1127 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1127
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1113 is 1127
9999 run: address to copy is 1128
9999 run: its type is address
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1130
9999 run: result 0 is 1130
9999 mem: storing 1130 in location 1105
 103 run: idx <- add idx, 1
9999 mem: location 1104 is 6
9999 mem: storing 7 in location 1104
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 7
9999 mem: location 1103 is 9
9999 mem: storing 0 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1102 is 1066
9999 mem: location 1104 is 7
9999 run: address to copy is 1074
9999 run: its type is character
9999 mem: location 1074 is 10
9999 mem: storing 10 in location 1107
 103 run: insert-duplex c, curr
9999 mem: location 1107 is 10
9999 mem: location 1105 is 1130
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1090
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1130 in location 1091
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1133
9999 mem: storing 1133 in location 1092
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1092 is 1133
9999 mem: location 1133 is 0
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1092 is 1133
9999 run: address to copy is 1133
9999 mem: storing 1133 in location 1093
 104 run: *val <- copy x
9999 mem: location 1090 is 10
9999 mem: location 1093 is 1133
9999 mem: location 1093 is 1133
9999 mem: storing 10 in location 1133
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1091 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 0
9999 mem: location 1132 is 1127
9999 mem: location 1091 is 1130
9999 run: address to copy is 1131
9999 run: its type is address
9999 mem: location 1131 is 0
9999 mem: storing 0 in location 1094
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1091 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 0
9999 mem: location 1132 is 1127
9999 mem: location 1091 is 1130
9999 run: address to copy is 1131
9999 mem: storing 1131 in location 1095
 104 run: *y <- copy new-node
9999 mem: location 1092 is 1133
9999 mem: location 1095 is 1131
9999 mem: location 1095 is 1131
9999 mem: storing 1133 in location 1131
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1092 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 0
9999 mem: location 1135 is 0
9999 mem: location 1092 is 1133
9999 run: address to copy is 1135
9999 mem: storing 1135 in location 1095
 104 run: *y <- copy in
9999 mem: location 1091 is 1130
9999 mem: location 1095 is 1135
9999 mem: location 1095 is 1135
9999 mem: storing 1130 in location 1135
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1092 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1130
9999 mem: location 1092 is 1133
9999 run: address to copy is 1134
9999 mem: storing 1134 in location 1095
 104 run: *y <- copy next-node
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1134
9999 mem: location 1095 is 1134
9999 mem: storing 0 in location 1134
 104 run: jump-if next-node, 1:offset
9999 mem: location 1094 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1092 is 1133
 103 run: curr <- next-duplex curr
9999 mem: location 1105 is 1130
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1130 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1130
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1113 is 1130
9999 run: address to copy is 1131
9999 run: its type is address
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1133
9999 run: result 0 is 1133
9999 mem: storing 1133 in location 1105
 103 run: idx <- add idx, 1
9999 mem: location 1104 is 7
9999 mem: storing 8 in location 1104
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 8
9999 mem: location 1103 is 9
9999 mem: storing 0 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 0
9999 run: jump-if fell through
 103 run: c:character <- index *text, idx
9999 mem: location 1102 is 1066
9999 mem: location 1104 is 8
9999 run: address to copy is 1075
9999 run: its type is character
9999 mem: location 1075 is 101
9999 mem: storing 101 in location 1107
 103 run: insert-duplex c, curr
9999 mem: location 1107 is 101
9999 mem: location 1105 is 1133
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1090
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1133 in location 1091
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1136
9999 mem: storing 1136 in location 1092
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1092 is 1136
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1092 is 1136
9999 run: address to copy is 1136
9999 mem: storing 1136 in location 1093
 104 run: *val <- copy x
9999 mem: location 1090 is 101
9999 mem: location 1093 is 1136
9999 mem: location 1093 is 1136
9999 mem: storing 101 in location 1136
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1091 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1130
9999 mem: location 1091 is 1133
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 0
9999 mem: storing 0 in location 1094
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1091 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 0
9999 mem: location 1135 is 1130
9999 mem: location 1091 is 1133
9999 run: address to copy is 1134
9999 mem: storing 1134 in location 1095
 104 run: *y <- copy new-node
9999 mem: location 1092 is 1136
9999 mem: location 1095 is 1134
9999 mem: location 1095 is 1134
9999 mem: storing 1136 in location 1134
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1092 is 1136
9999 mem: location 1136 is 101
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1092 is 1136
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1095
 104 run: *y <- copy in
9999 mem: location 1091 is 1133
9999 mem: location 1095 is 1138
9999 mem: location 1095 is 1138
9999 mem: storing 1133 in location 1138
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1092 is 1136
9999 mem: location 1136 is 101
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1133
9999 mem: location 1092 is 1136
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1095
 104 run: *y <- copy next-node
9999 mem: location 1094 is 0
9999 mem: location 1095 is 1137
9999 mem: location 1095 is 1137
9999 mem: storing 0 in location 1137
 104 run: jump-if next-node, 1:offset
9999 mem: location 1094 is 0
9999 run: jump-if fell through
 104 run: reply new-node
9999 mem: location 1092 is 1136
 103 run: curr <- next-duplex curr
9999 mem: location 1105 is 1133
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1133 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1133
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1113 is 1133
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1136
9999 run: result 0 is 1136
9999 mem: storing 1136 in location 1105
 103 run: idx <- add idx, 1
9999 mem: location 1104 is 8
9999 mem: storing 9 in location 1104
 103 run: loop 
9999 run: jumping to instruction 11
 103 run: done?:boolean <- greater-or-equal idx, len
9999 mem: location 1104 is 9
9999 mem: location 1103 is 9
9999 mem: storing 1 in location 1106
 103 run: break-if done?, 
9999 mem: location 1106 is 1
9999 run: jumping to instruction 18
schedule: insert-text/new-editor/scenario-editor-scrolls-up-on-left-arrow
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1101 is 1000
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 1082
 102 run: y <- get-address *result, before-cursor:offset
9999 mem: location 1082 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1082 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1086
 102 run: *y <- copy *init
9999 mem: location 1084 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1084 is 1000
9999 mem: location 1086 is 1003
9999 mem: location 1084 is 1000
9999 mem: location 1086 is 1003
9999 mem: storing 1096 in location 1003
 102 run: _, _, screen, result <- render screen, result
9999 mem: location 1079 is 1009
9999 mem: location 1082 is 1000
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: new alloc: 1139
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1142
 103 run: jump-if editor, 1:offset
9999 mem: location 1142 is 1000
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1142 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1143
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1141 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1113
 104 run: break-unless sc, 
9999 mem: location 1113 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1113 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1113 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1114
 104 run: reply height
9999 mem: location 1114 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1144
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1142 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1145
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1142 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1096
9999 mem: storing 1096 in location 1146
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1146 is 1096
9999 mem: storing 1096 in location 1147
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1096
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1096 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1096
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1096
9999 mem: location 1096 is 167
9999 mem: location 1097 is 1108
9999 mem: location 1098 is 0
9999 mem: location 1113 is 1096
9999 run: address to copy is 1097
9999 run: its type is address
9999 mem: location 1097 is 1108
9999 mem: storing 1108 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1146
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1148
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1149
 103 run: column:number <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1142 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1151
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1142 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1152
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1142 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1153
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1166
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1169
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 104 run: *row <- copy new-row
9999 mem: location 1169 is 1
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 104 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 103 run: break-unless curr, 
9999 mem: location 1146 is 1108
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 1
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 1
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1150 is 0
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1156
 103 run: break-unless at-cursor?, 
9999 mem: location 1156 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- copy prev
9999 mem: location 1147 is 1096
9999 mem: location 1153 is 1003
9999 mem: location 1153 is 1003
9999 mem: storing 1096 in location 1003
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1108
9999 mem: location 1108 is 97
9999 mem: location 1109 is 1115
9999 mem: location 1110 is 1096
9999 mem: location 1146 is 1108
9999 run: address to copy is 1108
9999 run: its type is number
9999 mem: location 1108 is 97
9999 mem: storing 97 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 97
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 97
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 97
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 97
9999 mem: storing 0 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1150 is 0
9999 mem: location 1145 is 4
9999 mem: storing 0 in location 1160
 103 run: break-unless at-right?, 
9999 mem: location 1160 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1141 is 1009
9999 mem: location 1157 is 97
9999 mem: location 1148 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: new alloc: 1173
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 97
  90 print-character: 97 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 97
9999 mem: storing 0 in location 1186
 104 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 104 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1189
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 104 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 97
9999 mem: storing 0 in location 1192
 104 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 5
9999 mem: storing 1025 in location 1194
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1025
9999 mem: location 1025 is 0
9999 mem: location 1026 is 7
9999 mem: location 1194 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1195
 104 run: *cursor-contents <- copy c
9999 mem: location 1176 is 97
9999 mem: location 1195 is 1025
9999 mem: location 1195 is 1025
9999 mem: storing 97 in location 1025
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1194 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1196
 104 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1026
9999 mem: location 1196 is 1026
9999 mem: storing 7 in location 1026
 104 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 104 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1185 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1108
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1108
9999 mem: location 1108 is 97
9999 mem: location 1109 is 1115
9999 mem: location 1110 is 1096
9999 mem: location 1113 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1115
9999 mem: storing 1115 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1096
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1096 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1096
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1096
9999 mem: location 1096 is 167
9999 mem: location 1097 is 1108
9999 mem: location 1098 is 0
9999 mem: location 1113 is 1096
9999 run: address to copy is 1097
9999 run: its type is address
9999 mem: location 1097 is 1108
9999 mem: storing 1108 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1108
9999 run: result 0 is 1108
9999 mem: storing 1108 in location 1147
 103 run: column <- add column, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1146 is 1115
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 1
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 1
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1150 is 1
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1156
 103 run: break-unless at-cursor?, 
9999 mem: location 1156 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 1118
9999 mem: location 1117 is 1108
9999 mem: location 1146 is 1115
9999 run: address to copy is 1115
9999 run: its type is number
9999 mem: location 1115 is 10
9999 mem: storing 10 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 10
9999 mem: storing 1 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 1
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1150 is 1
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1159
 103 run: break-unless left-of-cursor?, 
9999 mem: location 1159 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1150 is 1
9999 mem: location 1145 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: new alloc: 1199
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1202
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 6
9999 mem: storing 1027 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1027
9999 mem: location 1027 is 0
9999 mem: location 1028 is 7
9999 mem: location 1194 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1027
9999 mem: location 1195 is 1027
9999 mem: storing 32 in location 1027
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1194 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1028
9999 mem: location 1196 is 1028
9999 mem: storing 7 in location 1028
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1185 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 7
9999 mem: storing 1029 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1029
9999 mem: location 1029 is 0
9999 mem: location 1030 is 7
9999 mem: location 1194 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1029
9999 mem: location 1195 is 1029
9999 mem: storing 32 in location 1029
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1194 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1030
9999 mem: location 1196 is 1030
9999 mem: storing 7 in location 1030
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1185 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 8
9999 mem: storing 1031 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 7
9999 mem: location 1194 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1031
9999 mem: location 1195 is 1031
9999 mem: storing 32 in location 1031
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1194 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1032
9999 mem: location 1196 is 1032
9999 mem: storing 7 in location 1032
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1185 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 9
9999 mem: storing 1033 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1034 is 7
9999 mem: location 1194 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1033
9999 mem: location 1195 is 1033
9999 mem: storing 32 in location 1033
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1194 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1034
9999 mem: location 1196 is 1034
9999 mem: storing 7 in location 1034
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1197 is 4
9999 mem: storing 1 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1149 is 1
9999 mem: storing 2 in location 1149
 103 run: column <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 2
9999 mem: location 1150 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1169
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 104 run: *row <- copy new-row
9999 mem: location 1169 is 2
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 104 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1115 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1115
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 1118
9999 mem: location 1117 is 1108
9999 mem: location 1113 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1118
9999 mem: storing 1118 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1118
9999 run: result 0 is 1118
9999 mem: storing 1118 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1108
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1108 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1108
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1108
9999 mem: location 1108 is 97
9999 mem: location 1109 is 1115
9999 mem: location 1110 is 1096
9999 mem: location 1113 is 1108
9999 run: address to copy is 1109
9999 run: its type is address
9999 mem: location 1109 is 1115
9999 mem: storing 1115 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1147
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1146 is 1118
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 2
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 2
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1146 is 1118
9999 run: address to copy is 1118
9999 run: its type is number
9999 mem: location 1118 is 98
9999 mem: storing 98 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 98
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 98
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
schedule: get-color/render/new-editor/scenario-editor-scrolls-up-on-left-arrow
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 98
9999 mem: storing 0 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1150 is 0
9999 mem: location 1145 is 4
9999 mem: storing 0 in location 1160
 103 run: break-unless at-right?, 
9999 mem: location 1160 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1141 is 1009
9999 mem: location 1157 is 98
9999 mem: location 1148 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 98
  90 print-character: 98 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 98
9999 mem: storing 0 in location 1186
 104 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 104 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1189
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 104 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 98
9999 mem: storing 0 in location 1192
 104 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 10
9999 mem: storing 1035 in location 1194
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1035
9999 mem: location 1035 is 0
9999 mem: location 1036 is 7
9999 mem: location 1194 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1195
 104 run: *cursor-contents <- copy c
9999 mem: location 1176 is 98
9999 mem: location 1195 is 1035
9999 mem: location 1195 is 1035
9999 mem: storing 98 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1035
9999 mem: location 1035 is 98
9999 mem: location 1036 is 7
9999 mem: location 1194 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1196
 104 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1036
9999 mem: location 1196 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 104 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1185 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1118
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1118 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1118
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1113 is 1118
9999 run: address to copy is 1119
9999 run: its type is address
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1121
9999 run: result 0 is 1121
9999 mem: storing 1121 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1115 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1115
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 1118
9999 mem: location 1117 is 1108
9999 mem: location 1113 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1118
9999 mem: storing 1118 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1118
9999 run: result 0 is 1118
9999 mem: storing 1118 in location 1147
 103 run: column <- add column, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1146 is 1121
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 2
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 2
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1146 is 1121
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 10
9999 mem: storing 10 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 10
9999 mem: storing 1 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 2
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1150 is 1
9999 mem: location 1145 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1202
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 11
9999 mem: storing 1037 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1194 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1037
9999 mem: location 1195 is 1037
9999 mem: storing 32 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1194 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1038
9999 mem: location 1196 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1185 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 12
9999 mem: storing 1039 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1194 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1039
9999 mem: location 1195 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1194 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1040
9999 mem: location 1196 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1185 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 13
9999 mem: storing 1041 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1194 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1041
9999 mem: location 1195 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1194 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1042
9999 mem: location 1196 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1185 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 14
9999 mem: storing 1043 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1194 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1043
9999 mem: location 1195 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1194 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1044
9999 mem: location 1196 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1197 is 4
9999 mem: storing 1 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1149 is 2
9999 mem: storing 3 in location 1149
 103 run: column <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 3
9999 mem: location 1150 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1169
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 104 run: *row <- copy new-row
9999 mem: location 1169 is 3
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 104 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1121
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1121
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1113 is 1121
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1124
9999 run: result 0 is 1124
9999 mem: storing 1124 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1118
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1118 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1118
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1113 is 1118
9999 run: address to copy is 1119
9999 run: its type is address
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1121
9999 run: result 0 is 1121
9999 mem: storing 1121 in location 1147
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1146 is 1124
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 3
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 3
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1146 is 1124
9999 run: address to copy is 1124
9999 run: its type is number
9999 mem: location 1124 is 99
9999 mem: storing 99 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 99
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 99
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 99
9999 mem: storing 0 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1150 is 0
9999 mem: location 1145 is 4
9999 mem: storing 0 in location 1160
 103 run: break-unless at-right?, 
9999 mem: location 1160 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1141 is 1009
9999 mem: location 1157 is 99
9999 mem: location 1148 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 99
  90 print-character: 99 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 99
9999 mem: storing 0 in location 1186
 104 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 104 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1189
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 104 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 99
9999 mem: storing 0 in location 1192
 104 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 15
9999 mem: storing 1045 in location 1194
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1194 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1195
 104 run: *cursor-contents <- copy c
9999 mem: location 1176 is 99
9999 mem: location 1195 is 1045
9999 mem: location 1195 is 1045
9999 mem: storing 99 in location 1045
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1045
9999 mem: location 1045 is 99
9999 mem: location 1046 is 7
9999 mem: location 1194 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1196
 104 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1046
9999 mem: location 1196 is 1046
9999 mem: storing 7 in location 1046
 104 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 104 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1185 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1124
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1124 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1124
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1113 is 1124
9999 run: address to copy is 1125
9999 run: its type is address
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1127
9999 run: result 0 is 1127
9999 mem: storing 1127 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1121
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1121
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1113 is 1121
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1124
9999 run: result 0 is 1124
9999 mem: storing 1124 in location 1147
 103 run: column <- add column, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1146 is 1127
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 3
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 3
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1146 is 1127
9999 run: address to copy is 1127
9999 run: its type is number
9999 mem: location 1127 is 10
9999 mem: storing 10 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
schedule: get-color/render/new-editor/scenario-editor-scrolls-up-on-left-arrow
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 10
9999 mem: storing 1 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 3
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1150 is 1
9999 mem: location 1145 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1202
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 16
9999 mem: storing 1047 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1194 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1047
9999 mem: location 1195 is 1047
9999 mem: storing 32 in location 1047
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1194 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1048
9999 mem: location 1196 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1185 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 17
9999 mem: storing 1049 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1194 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1049
9999 mem: location 1195 is 1049
9999 mem: storing 32 in location 1049
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1194 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1050
9999 mem: location 1196 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1185 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 18
9999 mem: storing 1051 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1194 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1051
9999 mem: location 1195 is 1051
9999 mem: storing 32 in location 1051
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1194 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1052
9999 mem: location 1196 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1185 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 19 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 19
9999 mem: storing 1053 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1194 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1053
9999 mem: location 1195 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1194 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1054
9999 mem: location 1196 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1197 is 4
9999 mem: storing 1 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1149 is 3
9999 mem: storing 4 in location 1149
 103 run: column <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 4
9999 mem: location 1150 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1169
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 104 run: *row <- copy new-row
9999 mem: location 1169 is 4
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 4 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 104 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1127
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1127 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1127
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1113 is 1127
9999 run: address to copy is 1128
9999 run: its type is address
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1130
9999 run: result 0 is 1130
9999 mem: storing 1130 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1124
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1124 in location 1113
 104 run: jump-if in, 1:offset
9999 mem: location 1113 is 1124
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1113 is 1124
9999 run: address to copy is 1125
9999 run: its type is address
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1114
 104 run: reply result
9999 mem: location 1114 is 1127
9999 run: result 0 is 1127
9999 mem: storing 1127 in location 1147
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1146 is 1130
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 4
9999 mem: location 1144 is 4
9999 mem: storing 1 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 1
9999 run: jumping to instruction 67
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1142 is 1000
9999 run: address to copy is 1002
9999 mem: storing 1002 in location 1161
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1146 is 1130
9999 mem: location 1161 is 1002
9999 mem: location 1161 is 1002
9999 mem: storing 1130 in location 1002
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 4
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1150 is 0
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1162
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1155 is 0
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1163
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1149 is 4
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1164
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1165
 103 run: break-unless before-cursor?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 80
 103 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 0
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1000
9999 run: result 0 is 4
9999 run: result 1 is 0
9999 run: result 2 is 1009
9999 run: result 3 is 1000
9999 mem: storing 1009 in location 1079
9999 mem: storing 1000 in location 1082
 102 run: indent:address:boolean <- get-address *result, indent:offset
9999 mem: location 1082 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 0
9999 mem: location 1082 is 1000
9999 run: address to copy is 1008
9999 mem: storing 1008 in location 1087
 102 run: *indent <- copy 1/true
9999 mem: location 1087 is 1008
9999 mem: location 1087 is 1008
9999 mem: storing 1 in location 1008
 102 run: reply result
9999 mem: location 1082 is 1000
9999 run: result 0 is 1000
9999 mem: storing 1000 in location 2
 101 run: assume-console [
    press 65518  # page-down
  ]
parse: instruction: press
parse:   ingredient: {name: "65518", properties: ["65518": "literal"]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1001
after-brace: editor-event-loop ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1210
9999 mem: location 2 is 1000
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1212
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1214
 102 run: console:address <- next-ingredient 
9999 mem: storing 1210 in location 1215
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1216
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1215 is 1210
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1225
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1210 in location 1227
 103 run: break-unless x, 
9999 mem: location 1227 is 1210
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1227 is 1210
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1205
9999 mem: location 1227 is 1210
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 1228
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1227 is 1210
9999 mem: location 1210 is 0
9999 mem: location 1211 is 1205
9999 mem: location 1227 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1205
9999 mem: storing 1205 in location 1229
 103 run: max:number <- length *buf
9999 mem: location 1229 is 1205
9999 mem: storing 1 in location 1230
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1228 is 1210
9999 mem: location 1210 is 0
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1231
 103 run: break-unless done?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1229 is 1205
9999 mem: location 1228 is 1210
9999 mem: location 1210 is 0
9999 run: address to copy is 1206
9999 run: its type is event
9999 mem: location 1206 is 1
9999 mem: location 1207 is 65518
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: storing 1 in location 1233
9999 mem: storing 65518 in location 1234
9999 mem: storing 0 in location 1235
9999 mem: storing 0 in location 1236
 103 run: *idx <- add *idx, 1
9999 mem: location 1228 is 1210
9999 mem: location 1210 is 0
9999 mem: location 1228 is 1210
9999 mem: storing 1 in location 1210
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1233 is 1
9999 mem: location 1234 is 65518
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1227 is 1210
9999 run: result 0 is [1, 65518, 0, 0]
9999 run: result 1 is 1210
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1217
9999 mem: storing 65518 in location 1218
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
9999 mem: storing 1210 in location 1215
9999 mem: storing 1 in location 1221
9999 mem: storing 0 in location 1222
 102 run: loop-unless found?, 
9999 mem: location 1221 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1222 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1217 is 1
9999 mem: location 1218 is 65518
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: storing 0 in location 1223
 102 run: break-unless t, 
9999 mem: location 1223 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1223 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1214 is 1009
9999 mem: location 1216 is 1000
9999 mem: location 1217 is 1
9999 mem: location 1218 is 65518
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 68
9999 mem: new alloc: 1238
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1240
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1241
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1242
9999 mem: storing 65518 in location 1243
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 103 run: jump-if editor, 1:offset
9999 mem: location 1241 is 1000
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1240 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1113
 104 run: break-unless sc, 
9999 mem: location 1113 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1113 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1113 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1114
 104 run: reply width
9999 mem: location 1114 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1246
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1240 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1113
 104 run: break-unless sc, 
9999 mem: location 1113 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1113 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1113 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1114
 104 run: reply height
9999 mem: location 1114 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1247
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1248
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1249
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1250
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1251
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1252
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1251 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1251 is 1006
9999 mem: location 1251 is 1006
9999 mem: storing 1 in location 1253
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1252 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1252 is 1007
9999 mem: location 1252 is 1007
9999 mem: storing 0 in location 1254
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1242 is 1
9999 mem: location 1243 is 65518
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1255
 103 run: break-unless c, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 75
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1242 is 1
9999 mem: location 1243 is 65518
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: storing 1243 in location 1267
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1267 is 1243
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1267 is 1243
9999 mem: location 1243 is 65518
9999 mem: storing 0 in location 1268
 103 run: break-unless page-up?, 
9999 mem: location 1268 is 0
9999 run: jumping to instruction 84
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1267 is 1243
9999 mem: location 1243 is 65518
9999 mem: storing 1 in location 1269
 103 run: break-unless page-down?, 
9999 mem: location 1269 is 1
9999 run: jump-unless fell through
 103 run: page-down editor
9999 mem: location 1241 is 1000
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1090
 104 run: bottom-of-screen:address:duplex-list <- get *editor, bottom-of-screen:offset
9999 mem: location 1090 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1090 is 1000
9999 run: address to copy is 1002
9999 run: its type is address
9999 mem: location 1002 is 1130
9999 mem: storing 1130 in location 1091
 104 run: jump-if bottom-of-screen, 1:offset
9999 mem: location 1091 is 1130
9999 run: jumping to instruction 5
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1090 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1096
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1090 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1092
 104 run: *before-cursor <- prev-duplex bottom-of-screen
9999 mem: location 1091 is 1130
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1130 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1130
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1113 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1113 is 1130
9999 run: address to copy is 1132
9999 run: its type is address
9999 mem: location 1132 is 1127
9999 mem: storing 1127 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1127
9999 run: result 0 is 1127
9999 mem: location 1092 is 1003
9999 mem: storing 1127 in location 1003
 104 run: last:character <- get **before-cursor, value:offset
9999 mem: location 1092 is 1003
9999 mem: location 1003 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1092 is 1003
9999 mem: location 1003 is 1127
9999 run: address to copy is 1127
9999 run: its type is number
9999 mem: location 1127 is 10
9999 mem: storing 10 in location 1093
 104 run: newline?:boolean <- equal last, 10/newline
9999 mem: location 1093 is 10
9999 mem: storing 1 in location 1094
 104 run: break-unless newline?:boolean, 
9999 mem: location 1094 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1092 is 1003
9999 mem: location 1003 is 1127
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1127 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1127
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1113 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1113 is 1127
9999 run: address to copy is 1129
9999 run: its type is address
9999 mem: location 1129 is 1124
9999 mem: storing 1124 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1124
9999 run: result 0 is 1124
9999 mem: location 1092 is 1003
9999 mem: storing 1124 in location 1003
 104 run: move-to-start-of-line editor
9999 mem: location 1090 is 1000
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 9
9999 mem: new alloc: 1307
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1309
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1309 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1124
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1309 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1310
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1309 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1124
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1309 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1311
 105 run: *cursor-column <- copy left
9999 mem: location 1310 is 0
9999 mem: location 1311 is 1007
9999 mem: location 1311 is 1007
9999 mem: storing 0 in location 1007
 105 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1309 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1124
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1309 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1312
 105 run: init:address:duplex-list <- get *editor, data:offset
9999 mem: location 1309 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1124
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1309 is 1000
9999 run: address to copy is 1000
9999 run: its type is address
9999 mem: location 1000 is 1096
9999 mem: storing 1096 in location 1313
 105 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1312 is 1003
9999 mem: location 1003 is 1124
9999 mem: location 1313 is 1096
9999 mem: storing 0 in location 1314
 105 run: break-if at-start-of-text?, 
9999 mem: location 1314 is 0
9999 run: jump-if fell through
 105 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1312 is 1003
9999 mem: location 1003 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1312 is 1003
9999 mem: location 1003 is 1124
9999 run: address to copy is 1124
9999 run: its type is number
9999 mem: location 1124 is 99
9999 mem: storing 99 in location 1315
 105 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1315 is 99
9999 mem: storing 0 in location 1316
 105 run: break-if at-start-of-line?, 
9999 mem: location 1316 is 0
9999 run: jump-if fell through
 105 run: *before-cursor <- prev-duplex *before-cursor
9999 mem: location 1312 is 1003
9999 mem: location 1003 is 1124
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1124 in location 1113
 106 run: jump-if in, 1:offset
9999 mem: location 1113 is 1124
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1113 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1113 is 1124
9999 run: address to copy is 1126
9999 run: its type is address
9999 mem: location 1126 is 1121
9999 mem: storing 1121 in location 1114
 106 run: reply result
9999 mem: location 1114 is 1121
9999 run: result 0 is 1121
9999 mem: location 1312 is 1003
9999 mem: storing 1121 in location 1003
 105 run: assert *before-cursor, [move-to-start-of-line tried to move before start of text]
9999 mem: location 1312 is 1003
9999 mem: location 1003 is 1121
 105 run: loop 
9999 run: jumping to instruction 8
 105 run: at-start-of-text?:boolean <- equal *before-cursor, init
9999 mem: location 1312 is 1003
9999 mem: location 1003 is 1121
9999 mem: location 1313 is 1096
9999 mem: storing 0 in location 1314
 105 run: break-if at-start-of-text?, 
9999 mem: location 1314 is 0
9999 run: jump-if fell through
 105 run: prev:character <- get **before-cursor, value:offset
9999 mem: location 1312 is 1003
9999 mem: location 1003 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1312 is 1003
9999 mem: location 1003 is 1121
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 10
9999 mem: storing 10 in location 1315
 105 run: at-start-of-line?:boolean <- equal prev, 10/newline
9999 mem: location 1315 is 10
9999 mem: storing 1 in location 1316
 105 run: break-if at-start-of-line?, 
9999 mem: location 1316 is 1
9999 run: jumping to instruction 16
 104 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1090 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1096
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1090 is 1000
9999 run: address to copy is 1001
9999 mem: storing 1001 in location 1095
 104 run: *top-of-screen <- copy *before-cursor
9999 mem: location 1092 is 1003
9999 mem: location 1003 is 1121
9999 mem: location 1092 is 1003
9999 mem: location 1095 is 1001
9999 mem: location 1092 is 1003
9999 mem: location 1095 is 1001
9999 mem: storing 1121 in location 1001
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1090 is 1000
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, 1/go-render
9999 mem: location 1240 is 1009
9999 mem: location 1241 is 1000
9999 run: result 0 is 1009
9999 run: result 1 is 1000
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1214
9999 mem: storing 1000 in location 1216
9999 mem: storing 1 in location 1224
 102 run: break-unless go-render?, 
9999 mem: location 1224 is 1
9999 run: jump-unless fell through
 102 run: editor-render screen, editor
9999 mem: location 1214 is 1009
9999 mem: location 1216 is 1000
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1090
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1091
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1091 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1091 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1092
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1091 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1091 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1093
 103 run: row:number, column:number <- render screen, editor
9999 mem: location 1090 is 1009
9999 mem: location 1091 is 1000
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1142
 104 run: jump-if editor, 1:offset
9999 mem: location 1142 is 1000
9999 run: jumping to instruction 5
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1143
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1141 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1113
 105 run: break-unless sc, 
9999 mem: location 1113 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1113 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1113 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1114
 105 run: reply height
9999 mem: location 1114 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1144
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1145
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1121
9999 mem: storing 1121 in location 1146
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1146 is 1121
9999 mem: storing 1121 in location 1147
 104 run: curr <- next-duplex curr
9999 mem: location 1146 is 1121
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1121
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1113 is 1121
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1124
9999 run: result 0 is 1124
9999 mem: storing 1124 in location 1146
 104 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1148
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1149
 104 run: column:number <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1151
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1152
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1153
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1169
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 105 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 105 run: *row <- copy new-row
9999 mem: location 1169 is 1
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 1 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 105 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 104 run: break-unless curr, 
9999 mem: location 1146 is 1124
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 1
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 104 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 1
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1155
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1150 is 0
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 1 in location 1156
 104 run: break-unless at-cursor?, 
9999 mem: location 1156 is 1
9999 run: jump-unless fell through
schedule: render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-on-left-arrow
 104 run: *before-cursor <- copy prev
9999 mem: location 1147 is 1121
9999 mem: location 1153 is 1003
9999 mem: location 1153 is 1003
9999 mem: storing 1121 in location 1003
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1146 is 1124
9999 run: address to copy is 1124
9999 run: its type is number
9999 mem: location 1124 is 99
9999 mem: storing 99 in location 1157
 104 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 99
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1058
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 99
9999 mem: storing 0 in location 1060
 105 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 105 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 99
9999 mem: storing 0 in location 1063
 105 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 105 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 105 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 99
9999 mem: storing 0 in location 1158
 104 run: break-unless newline?, 
9999 mem: location 1158 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1150 is 0
9999 mem: location 1145 is 4
9999 mem: storing 0 in location 1160
 104 run: break-unless at-right?, 
9999 mem: location 1160 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1141 is 1009
9999 mem: location 1157 is 99
9999 mem: location 1148 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 99
  90 print-character: 99 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 99
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 99
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 5
9999 mem: storing 1025 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1025
9999 mem: location 1025 is 97
9999 mem: location 1026 is 7
9999 mem: location 1194 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 99
9999 mem: location 1195 is 1025
9999 mem: location 1195 is 1025
9999 mem: storing 99 in location 1025
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1025
9999 mem: location 1025 is 99
9999 mem: location 1026 is 7
9999 mem: location 1194 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1026
9999 mem: location 1196 is 1026
9999 mem: storing 7 in location 1026
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1185 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1146 is 1124
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1124 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1124
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1113 is 1124
9999 run: address to copy is 1125
9999 run: its type is address
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1127
9999 run: result 0 is 1127
9999 mem: storing 1127 in location 1146
 104 run: prev <- next-duplex prev
9999 mem: location 1147 is 1121
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1121
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1113 is 1121
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1124
9999 run: result 0 is 1124
9999 mem: storing 1124 in location 1147
 104 run: column <- add column, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1146 is 1127
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 1
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 104 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 1
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1155
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1150 is 1
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1156
 104 run: break-unless at-cursor?, 
9999 mem: location 1156 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1146 is 1127
9999 run: address to copy is 1127
9999 run: its type is number
9999 mem: location 1127 is 10
9999 mem: storing 10 in location 1157
 104 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 10
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1058
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1060
 105 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 105 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1063
 105 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 105 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 105 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 10
9999 mem: storing 1 in location 1158
 104 run: break-unless newline?, 
9999 mem: location 1158 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 1
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1155
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 1
9999 run: jump-unless fell through
 104 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1150 is 1
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1159
 104 run: break-unless left-of-cursor?, 
9999 mem: location 1159 is 0
9999 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1150 is 1
9999 mem: location 1145 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 105 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1202
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 106 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 106 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1189
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 106 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 106 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 6
9999 mem: storing 1027 in location 1194
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1194 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1195
 106 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1027
9999 mem: location 1195 is 1027
9999 mem: storing 32 in location 1027
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1194 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1196
 106 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1028
9999 mem: location 1196 is 1028
9999 mem: storing 7 in location 1028
 106 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 106 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1185 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 106 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 106 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1189
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 106 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 106 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 7
9999 mem: storing 1029 in location 1194
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1194 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1195
 106 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1029
9999 mem: location 1195 is 1029
9999 mem: storing 32 in location 1029
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1194 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1196
 106 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1030
9999 mem: location 1196 is 1030
9999 mem: storing 7 in location 1030
 106 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 106 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1185 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 106 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 106 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1189
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 106 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 106 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 8
9999 mem: storing 1031 in location 1194
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1194 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1195
 106 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1031
9999 mem: location 1195 is 1031
9999 mem: storing 32 in location 1031
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1194 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1196
 106 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1032
9999 mem: location 1196 is 1032
9999 mem: storing 7 in location 1032
 106 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 106 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1185 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 106 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 106 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1189
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 106 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 106 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 9
9999 mem: storing 1033 in location 1194
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1194 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1195
 106 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1033
9999 mem: location 1195 is 1033
9999 mem: storing 32 in location 1033
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1194 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1196
 106 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1034
9999 mem: location 1196 is 1034
9999 mem: storing 7 in location 1034
 106 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1197 is 4
9999 mem: storing 1 in location 1198
 106 run: break-if at-right?, 
9999 mem: location 1198 is 1
9999 run: jumping to instruction 74
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 104 run: row <- add row, 1
9999 mem: location 1149 is 1
9999 mem: storing 2 in location 1149
 104 run: column <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 2
9999 mem: location 1150 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1169
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 105 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 105 run: *row <- copy new-row
9999 mem: location 1169 is 2
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 2 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 105 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 104 run: curr <- next-duplex curr
9999 mem: location 1146 is 1127
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1127 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1127
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1113 is 1127
9999 run: address to copy is 1128
9999 run: its type is address
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1130
9999 run: result 0 is 1130
9999 mem: storing 1130 in location 1146
 104 run: prev <- next-duplex prev
9999 mem: location 1147 is 1124
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1124 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1124
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1113 is 1124
9999 run: address to copy is 1125
9999 run: its type is address
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1127
9999 run: result 0 is 1127
9999 mem: storing 1127 in location 1147
 104 run: loop +next-character:label
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1146 is 1130
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 2
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 104 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 2
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1146 is 1130
9999 run: address to copy is 1130
9999 run: its type is number
9999 mem: location 1130 is 100
9999 mem: storing 100 in location 1157
 104 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 100
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1058
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 100
9999 mem: storing 0 in location 1060
 105 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 105 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 100
9999 mem: storing 0 in location 1063
 105 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 105 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 105 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 100
9999 mem: storing 0 in location 1158
 104 run: break-unless newline?, 
9999 mem: location 1158 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1150 is 0
9999 mem: location 1145 is 4
9999 mem: storing 0 in location 1160
 104 run: break-unless at-right?, 
9999 mem: location 1160 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1141 is 1009
9999 mem: location 1157 is 100
9999 mem: location 1148 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 100
  90 print-character: 100 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 100
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 100
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 10
9999 mem: storing 1035 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1035
9999 mem: location 1035 is 98
9999 mem: location 1036 is 7
9999 mem: location 1194 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 100
9999 mem: location 1195 is 1035
9999 mem: location 1195 is 1035
9999 mem: storing 100 in location 1035
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1035
9999 mem: location 1035 is 100
9999 mem: location 1036 is 7
9999 mem: location 1194 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1036
9999 mem: location 1196 is 1036
9999 mem: storing 7 in location 1036
schedule: print-character/render/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-on-left-arrow
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1185 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1146 is 1130
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1130 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1130
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1113 is 1130
9999 run: address to copy is 1131
9999 run: its type is address
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1133
9999 run: result 0 is 1133
9999 mem: storing 1133 in location 1146
 104 run: prev <- next-duplex prev
9999 mem: location 1147 is 1127
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1127 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1127
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1113 is 1127
9999 run: address to copy is 1128
9999 run: its type is address
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1130
9999 run: result 0 is 1130
9999 mem: storing 1130 in location 1147
 104 run: column <- add column, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1146 is 1133
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 2
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 104 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 2
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1146 is 1133
9999 run: address to copy is 1133
9999 run: its type is number
9999 mem: location 1133 is 10
9999 mem: storing 10 in location 1157
 104 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 10
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 105 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1058
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1060
 105 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 105 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1063
 105 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 105 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 105 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 10
9999 mem: storing 1 in location 1158
 104 run: break-unless newline?, 
9999 mem: location 1158 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 2
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 44
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1150 is 1
9999 mem: location 1145 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 105 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1202
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 106 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 106 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1189
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 106 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 106 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 11
9999 mem: storing 1037 in location 1194
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1194 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1195
 106 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1037
9999 mem: location 1195 is 1037
9999 mem: storing 32 in location 1037
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1194 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1196
 106 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1038
9999 mem: location 1196 is 1038
9999 mem: storing 7 in location 1038
 106 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 106 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1185 is 1012
9999 mem: storing 2 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 106 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 106 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1189
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 106 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 106 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 12
9999 mem: storing 1039 in location 1194
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1194 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1195
 106 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1039
9999 mem: location 1195 is 1039
9999 mem: storing 32 in location 1039
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1194 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1196
 106 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1040
9999 mem: location 1196 is 1040
9999 mem: storing 7 in location 1040
 106 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 106 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1185 is 1012
9999 mem: storing 3 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 106 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 106 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1189
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 106 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 106 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 13
9999 mem: storing 1041 in location 1194
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1194 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1195
 106 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1041
9999 mem: location 1195 is 1041
9999 mem: storing 32 in location 1041
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1194 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1196
 106 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1042
9999 mem: location 1196 is 1042
9999 mem: storing 7 in location 1042
 106 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 106 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 106 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1185 is 1012
9999 mem: storing 4 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 106 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 106 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 106 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 106 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 106 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1189
 106 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 106 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 106 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 106 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 106 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 14
9999 mem: storing 1043 in location 1194
 106 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1194 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1195
 106 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1043
9999 mem: location 1195 is 1043
9999 mem: storing 32 in location 1043
 106 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1194 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1196
 106 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1044
9999 mem: location 1196 is 1044
9999 mem: storing 7 in location 1044
 106 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 106 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1197 is 4
9999 mem: storing 1 in location 1198
 106 run: break-if at-right?, 
9999 mem: location 1198 is 1
9999 run: jumping to instruction 74
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 104 run: row <- add row, 1
9999 mem: location 1149 is 2
9999 mem: storing 3 in location 1149
 104 run: column <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 3
9999 mem: location 1150 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1169
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 105 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 105 run: *row <- copy new-row
9999 mem: location 1169 is 3
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 3 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 105 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 104 run: curr <- next-duplex curr
9999 mem: location 1146 is 1133
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1133 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1133
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1113 is 1133
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1136
9999 run: result 0 is 1136
9999 mem: storing 1136 in location 1146
 104 run: prev <- next-duplex prev
9999 mem: location 1147 is 1130
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1130 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1130
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1113 is 1130
9999 run: address to copy is 1131
9999 run: its type is address
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1133
9999 run: result 0 is 1133
9999 mem: storing 1133 in location 1147
 104 run: loop +next-character:label
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1146 is 1136
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 3
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 104 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 3
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1136
9999 mem: location 1136 is 101
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1133
9999 mem: location 1146 is 1136
9999 run: address to copy is 1136
9999 run: its type is number
9999 mem: location 1136 is 101
9999 mem: storing 101 in location 1157
 104 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 101
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 105 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1058
 105 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 101
9999 mem: storing 0 in location 1060
 105 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 105 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 105 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 105 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 105 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 101
9999 mem: storing 0 in location 1063
 105 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 105 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 105 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 105 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 101
9999 mem: storing 0 in location 1158
 104 run: break-unless newline?, 
9999 mem: location 1158 is 0
9999 run: jumping to instruction 52
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1150 is 0
9999 mem: location 1145 is 4
9999 mem: storing 0 in location 1160
 104 run: break-unless at-right?, 
9999 mem: location 1160 is 0
9999 run: jumping to instruction 61
 104 run: print-character screen, c, color
9999 mem: location 1141 is 1009
9999 mem: location 1157 is 101
9999 mem: location 1148 is 7
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 101
  90 print-character: 101 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 101
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 101
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 15
9999 mem: storing 1045 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1045
9999 mem: location 1045 is 99
9999 mem: location 1046 is 7
9999 mem: location 1194 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 101
9999 mem: location 1195 is 1045
9999 mem: location 1195 is 1045
9999 mem: storing 101 in location 1045
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1045
9999 mem: location 1045 is 101
9999 mem: location 1046 is 7
9999 mem: location 1194 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1046
9999 mem: location 1196 is 1046
9999 mem: storing 7 in location 1046
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1185 is 1012
9999 mem: storing 1 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: curr <- next-duplex curr
9999 mem: location 1146 is 1136
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1136 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1136
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1136
9999 mem: location 1136 is 101
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1133
9999 mem: location 1113 is 1136
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 0
9999 mem: storing 0 in location 1114
 105 run: reply result
9999 mem: location 1114 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1146
 104 run: prev <- next-duplex prev
9999 mem: location 1147 is 1133
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1133 in location 1113
 105 run: jump-if in, 1:offset
9999 mem: location 1113 is 1133
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1113 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1113 is 1133
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1114
 105 run: reply result
9999 mem: location 1114 is 1136
9999 run: result 0 is 1136
9999 mem: storing 1136 in location 1147
 104 run: column <- add column, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 104 run: loop 
9999 run: jumping to instruction 20
 104 run: break-unless curr, 
9999 mem: location 1146 is 0
9999 run: jumping to instruction 67
 104 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 1130
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1002
9999 mem: storing 1002 in location 1161
 104 run: *bottom-of-screen <- copy curr
9999 mem: location 1146 is 0
9999 mem: location 1161 is 1002
9999 mem: location 1161 is 1002
9999 mem: storing 0 in location 1002
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 3
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1150 is 1
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 0
9999 mem: storing 0 in location 1162
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1155 is 0
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1163
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1149 is 3
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1164
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1165
 104 run: break-unless before-cursor?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 80
 104 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1000
9999 run: result 0 is 3
9999 run: result 1 is 1
9999 mem: storing 3 in location 1094
9999 mem: storing 1 in location 1095
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1090 is 1009
9999 mem: location 1095 is 1
9999 mem: location 1093 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1202
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 16
9999 mem: storing 1047 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1194 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1047
9999 mem: location 1195 is 1047
9999 mem: storing 32 in location 1047
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1194 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1196
schedule: print-character/clear-line-delimited/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-on-left-arrow
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1048
9999 mem: location 1196 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1185 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 17
9999 mem: storing 1049 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1194 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1049
9999 mem: location 1195 is 1049
9999 mem: storing 32 in location 1049
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1194 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1050
9999 mem: location 1196 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1185 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 18
9999 mem: storing 1051 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1194 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1051
9999 mem: location 1195 is 1051
9999 mem: storing 32 in location 1051
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1194 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1052
9999 mem: location 1196 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1185 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 19 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 19
9999 mem: storing 1053 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1194 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1053
9999 mem: location 1195 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1194 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1054
9999 mem: location 1196 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1197 is 4
9999 mem: storing 1 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1094 is 3
9999 mem: storing 4 in location 1094
 103 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1090 is 1009
9999 mem: location 1094 is 4
9999 mem: location 1092 is 0
9999 mem: location 1093 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: row:number <- next-ingredient 
9999 mem: storing 4 in location 1228
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1230
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1231
9999 mem: storing 1 in location 1232
 104 run: break-if style-found?, 
9999 mem: location 1232 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 104 run: break-if color-found?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 104 run: color <- copy 245/grey
9999 mem: storing 245 in location 1233
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1235
9999 mem: storing 0 in location 1236
 104 run: break-if bg-color-found?, 
9999 mem: location 1236 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1235
 104 run: screen <- move-cursor screen, row, x
9999 mem: location 1227 is 1009
9999 mem: location 1228 is 4
9999 mem: location 1229 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1169
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 105 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 105 run: *row <- copy new-row
9999 mem: location 1169 is 4
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 4 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 105 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1227
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 0
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 104 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: x <- add x, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 1
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 104 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: x <- add x, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 2
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 104 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: x <- add x, 1
9999 mem: location 1229 is 2
9999 mem: storing 3 in location 1229
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 3
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 104 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: x <- add x, 1
9999 mem: location 1229 is 3
9999 mem: storing 4 in location 1229
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 4
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 104 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 104 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: x <- add x, 1
9999 mem: location 1229 is 4
9999 mem: storing 5 in location 1229
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 5
9999 mem: location 1230 is 4
9999 mem: storing 0 in location 1237
 104 run: break-unless continue?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 27
 103 run: row <- add row, 1
9999 mem: location 1094 is 4
9999 mem: storing 5 in location 1094
 103 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1090 is 1009
9999 mem: location 1094 is 5
9999 mem: location 1092 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1169
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1171
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1172
 104 run: break-if screen, 
9999 mem: location 1168 is 1009
9999 run: jumping to instruction 10
 104 run: screen <- move-cursor screen, row, column
9999 mem: location 1168 is 1009
9999 mem: location 1169 is 5
9999 mem: location 1170 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: new alloc: 1317
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1319
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1320
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1321
 105 run: break-unless sc, 
9999 mem: location 1319 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1319 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1319 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1322
 105 run: *row <- copy new-row
9999 mem: location 1320 is 5
9999 mem: location 1322 is 1011
9999 mem: location 1322 is 1011
9999 mem: storing 5 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1319 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1319 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1323
 105 run: *column <- copy new-column
9999 mem: location 1321 is 0
9999 mem: location 1323 is 1012
9999 mem: location 1323 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1319 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1168
 104 run: clear-line-delimited screen, column, right
9999 mem: location 1168 is 1009
9999 mem: location 1170 is 0
9999 mem: location 1172 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 105 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1202
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 0
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 0
9999 mem: storing 1 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1001/scenario-editor-scrolls-up-on-left-arrow
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 105 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 106 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 106 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 106 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 106 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 106 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 106 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 106 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 106 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 106 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 106 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 106 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 106 run: reply sc
9999 mem: location 1175 is 1009
 105 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 105 run: loop 
9999 run: jumping to instruction 5
 105 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 105 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 104 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1168 is 1009
9999 mem: location 1169 is 5
9999 mem: location 1171 is 0
9999 mem: location 1172 is 4
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: new alloc: 1324
 105 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1326
 105 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1327
 105 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1328
 105 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1329
 105 run: row <- add row, 1
9999 mem: location 1327 is 5
9999 mem: storing 6 in location 1327
 105 run: screen <- move-cursor screen, row, left
9999 mem: location 1326 is 1009
9999 mem: location 1327 is 6
9999 mem: location 1328 is 0
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1319
 106 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1320
 106 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1321
 106 run: break-unless sc, 
9999 mem: location 1319 is 1009
9999 run: jump-unless fell through
 106 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1319 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1319 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1322
 106 run: *row <- copy new-row
9999 mem: location 1320 is 6
9999 mem: location 1322 is 1011
9999 mem: location 1322 is 1011
9999 mem: storing 6 in location 1011
 106 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1319 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1319 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1323
 106 run: *column <- copy new-column
9999 mem: location 1321 is 0
9999 mem: location 1323 is 1012
9999 mem: location 1323 is 1012
9999 mem: storing 0 in location 1012
 106 run: reply sc/same-as-ingredient:0
9999 mem: location 1319 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1326
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1326 is 1009
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1113
 106 run: break-unless sc, 
9999 mem: location 1113 is 1009
9999 run: jump-unless fell through
 106 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1113 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1113 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1114
 106 run: reply height
9999 mem: location 1114 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1330
 105 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1327 is 6
9999 mem: location 1330 is 4
9999 mem: storing 1 in location 1331
 105 run: break-if at-bottom-of-screen?, 
9999 mem: location 1331 is 1
9999 run: jumping to instruction 15
 104 run: reply screen/same-as-ingredient:0
9999 mem: location 1168 is 1009
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1215 is 1210
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1210 in location 1227
 103 run: break-unless x, 
9999 mem: location 1227 is 1210
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1227 is 1210
9999 mem: location 1210 is 1
9999 mem: location 1211 is 1205
9999 mem: location 1227 is 1210
9999 run: address to copy is 1210
9999 mem: storing 1210 in location 1228
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1227 is 1210
9999 mem: location 1210 is 1
9999 mem: location 1211 is 1205
9999 mem: location 1227 is 1210
9999 run: address to copy is 1211
9999 run: its type is address
9999 mem: location 1211 is 1205
9999 mem: storing 1205 in location 1229
 103 run: max:number <- length *buf
9999 mem: location 1229 is 1205
9999 mem: storing 1 in location 1230
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1228 is 1210
9999 mem: location 1210 is 1
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1231
 103 run: break-unless done?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1111 in location 1232
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1232 is 1111
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1114 is 0
9999 mem: location 1227 is 1210
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1210
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
9999 mem: storing 1210 in location 1215
9999 mem: storing 1 in location 1221
9999 mem: storing 1 in location 1222
 102 run: loop-unless found?, 
9999 mem: location 1221 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1222 is 1
9999 run: jumping to instruction 25
 100 run: screen-should-contain [
    .     .
    .c    .
    .d    .
    .e    .
  ]
 100 run: assume-console [
    press 65515  # left arrow
  ]
parse: instruction: press
parse:   ingredient: {name: "65515", properties: ["65515": "literal"]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1002
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1337
9999 mem: location 2 is 1000
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1214
 101 run: console:address <- next-ingredient 
9999 mem: storing 1337 in location 1215
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1216
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1215 is 1337
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1337 in location 1227
 102 run: break-unless x, 
9999 mem: location 1227 is 1337
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1227 is 1337
9999 mem: location 1337 is 0
9999 mem: location 1338 is 1332
9999 mem: location 1227 is 1337
9999 run: address to copy is 1337
9999 mem: storing 1337 in location 1228
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1227 is 1337
9999 mem: location 1337 is 0
9999 mem: location 1338 is 1332
9999 mem: location 1227 is 1337
9999 run: address to copy is 1338
9999 run: its type is address
9999 mem: location 1338 is 1332
9999 mem: storing 1332 in location 1229
 102 run: max:number <- length *buf
9999 mem: location 1229 is 1332
9999 mem: storing 1 in location 1230
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1228 is 1337
9999 mem: location 1337 is 0
9999 mem: location 1230 is 1
9999 mem: storing 0 in location 1231
 102 run: break-unless done?, 
9999 mem: location 1231 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index *buf, *idx
9999 mem: location 1229 is 1332
9999 mem: location 1228 is 1337
9999 mem: location 1337 is 0
9999 run: address to copy is 1333
9999 run: its type is event
9999 mem: location 1333 is 1
9999 mem: location 1334 is 65515
9999 mem: location 1335 is 0
9999 mem: location 1336 is 0
9999 mem: storing 1 in location 1233
9999 mem: storing 65515 in location 1234
9999 mem: storing 0 in location 1235
9999 mem: storing 0 in location 1236
 102 run: *idx <- add *idx, 1
9999 mem: location 1228 is 1337
9999 mem: location 1337 is 0
9999 mem: location 1228 is 1337
9999 mem: storing 1 in location 1337
 102 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1233 is 1
9999 mem: location 1234 is 65515
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1227 is 1337
9999 run: result 0 is [1, 65515, 0, 0]
9999 run: result 1 is 1337
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1217
9999 mem: storing 65515 in location 1218
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
9999 mem: storing 1337 in location 1215
9999 mem: storing 1 in location 1221
9999 mem: storing 0 in location 1222
 101 run: loop-unless found?, 
9999 mem: location 1221 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1222 is 0
9999 run: jump-if fell through
 101 run: trace 10, [app], [next-event]
  10 app: next-event 
 101 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1217 is 1
9999 mem: location 1218 is 65515
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: storing 0 in location 1223
 101 run: break-unless t, 
9999 mem: location 1223 is 0
9999 run: jumping to instruction 15
 101 run: break-if t, 
9999 mem: location 1223 is 0
9999 run: jump-if fell through
 101 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1214 is 1009
9999 mem: location 1216 is 1000
9999 mem: location 1217 is 1
9999 mem: location 1218 is 65515
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 68
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1240
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1241
 102 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1242
9999 mem: storing 65515 in location 1243
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 102 run: jump-if editor, 1:offset
9999 mem: location 1241 is 1000
9999 run: jumping to instruction 6
 102 run: screen-width:number <- screen-width screen
9999 mem: location 1240 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1339
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1341
 103 run: break-unless sc, 
9999 mem: location 1341 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1341 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1341 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1342
 103 run: reply width
9999 mem: location 1342 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1246
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1240 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1341
 103 run: break-unless sc, 
9999 mem: location 1341 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1341 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1341 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1342
 103 run: reply height
9999 mem: location 1342 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1247
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1248
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1249
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1250
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1251
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1241 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1241 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1252
 102 run: save-row:number <- copy *cursor-row
9999 mem: location 1251 is 1006
9999 mem: location 1006 is 1
9999 mem: location 1251 is 1006
9999 mem: location 1251 is 1006
9999 mem: storing 1 in location 1253
 102 run: save-column:number <- copy *cursor-column
9999 mem: location 1252 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1252 is 1007
9999 mem: location 1252 is 1007
9999 mem: storing 0 in location 1254
 102 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1242 is 1
9999 mem: location 1243 is 65515
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: storing 0 in location 1255
 102 run: break-unless c, 
9999 mem: location 1255 is 0
9999 run: jumping to instruction 75
 102 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1242 is 1
9999 mem: location 1243 is 65515
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: storing 1243 in location 1267
 102 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1267 is 1243
 102 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1267 is 1243
9999 mem: location 1243 is 65515
9999 mem: storing 0 in location 1268
 102 run: break-unless page-up?, 
9999 mem: location 1268 is 0
9999 run: jumping to instruction 84
 102 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1267 is 1243
9999 mem: location 1243 is 65515
9999 mem: storing 0 in location 1269
 102 run: break-unless page-down?, 
9999 mem: location 1269 is 0
9999 run: jumping to instruction 90
 102 run: end?:boolean <- equal *k, 65520/end
9999 mem: location 1267 is 1243
9999 mem: location 1243 is 65515
9999 mem: storing 0 in location 1270
 102 run: break-unless end?, 
9999 mem: location 1270 is 0
9999 run: jumping to instruction 96
 102 run: home?:boolean <- equal *k, 65521/home
9999 mem: location 1267 is 1243
9999 mem: location 1243 is 65515
9999 mem: storing 0 in location 1271
 102 run: break-unless home?, 
9999 mem: location 1271 is 0
9999 run: jumping to instruction 102
 102 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1267 is 1243
9999 mem: location 1243 is 65515
9999 mem: storing 0 in location 1272
 102 run: break-unless move-to-next-line?, 
9999 mem: location 1272 is 0
9999 run: jumping to instruction 145
 102 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1267 is 1243
9999 mem: location 1243 is 65515
9999 mem: storing 0 in location 1286
 102 run: break-unless move-to-previous-line?, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 188
 102 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1267 is 1243
9999 mem: location 1243 is 65515
9999 mem: storing 1 in location 1290
 102 run: break-unless move-to-previous-character?, 
9999 mem: location 1290 is 1
9999 run: jump-unless fell through
 102 run: prev:address:duplex-list <- prev-duplex *before-cursor
9999 mem: location 1250 is 1003
9999 mem: location 1003 is 1121
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1341
 103 run: jump-if in, 1:offset
9999 mem: location 1341 is 1121
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1341 is 1121
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 1118
9999 mem: storing 1118 in location 1342
 103 run: reply result
9999 mem: location 1342 is 1118
9999 run: result 0 is 1118
9999 mem: storing 1118 in location 1288
 102 run: jump-if prev, 1:offset
9999 mem: location 1288 is 1118
9999 run: jumping to instruction 195
 102 run: editor, go-render? <- move-cursor-coordinates-left editor
9999 mem: location 1241 is 1000
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 15
9999 mem: new alloc: 1343
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1345
 103 run: before-cursor:address:duplex-list <- get *editor, before-cursor:offset
9999 mem: location 1345 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1345 is 1000
9999 run: address to copy is 1003
9999 run: its type is address
9999 mem: location 1003 is 1121
9999 mem: storing 1121 in location 1346
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1345 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1345 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1347
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1345 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1345 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1348
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1345 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1345 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1349
 103 run: at-left-margin?:boolean <- equal *cursor-column, left
9999 mem: location 1348 is 1007
9999 mem: location 1007 is 0
9999 mem: location 1349 is 0
9999 mem: storing 1 in location 1350
 103 run: break-if at-left-margin?, 
9999 mem: location 1350 is 1
9999 run: jumping to instruction 11
 103 run: top-of-screen?:boolean <- equal *cursor-row, 1
9999 mem: location 1347 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1351
 103 run: go-render?:boolean <- copy 0/false
9999 mem: storing 0 in location 1352
 103 run: break-if top-of-screen?, 
9999 mem: location 1351 is 1
9999 run: jumping to instruction 17
 103 run: break-unless top-of-screen?, 
9999 mem: location 1351 is 1
9999 run: jump-unless fell through
 103 run: top-of-screen:address:address:duplex-list <- get-address *editor, top-of-screen:offset
9999 mem: location 1345 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1345 is 1000
9999 run: address to copy is 1001
9999 mem: storing 1001 in location 1353
 103 run: *top-of-screen <- before-previous-line *top-of-screen, editor
9999 mem: location 1353 is 1001
9999 mem: location 1001 is 1121
9999 mem: location 1345 is 1000
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1359
 104 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1361
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1361 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1361 is 1121
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 10
9999 mem: storing 10 in location 1362
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1363
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1363 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1363 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1364
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1363 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1363 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1365
 104 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1365 is 4
9999 mem: location 1364 is 0
9999 mem: storing 4 in location 1366
 104 run: sentinel:address:duplex-list <- get *editor, data:offset
9999 mem: location 1363 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1121
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1363 is 1000
9999 run: address to copy is 1000
9999 run: its type is address
9999 mem: location 1000 is 1096
9999 mem: storing 1096 in location 1367
 104 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1361 is 1121
9999 mem: location 1367 is 1096
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 105 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1090
 105 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1096 in location 1091
 105 run: result:number <- copy 0
9999 mem: storing 0 in location 1092
 105 run: jump-if curr, 1:offset
9999 mem: location 1090 is 1121
9999 run: jumping to instruction 6
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1090 is 1121
9999 mem: location 1091 is 1096
9999 mem: storing 0 in location 1093
 105 run: jump-unless at-start?, 1:offset
9999 mem: location 1093 is 0
9999 run: jumping to instruction 9
 105 run: curr <- prev-duplex curr
9999 mem: location 1090 is 1121
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1341
 106 run: jump-if in, 1:offset
9999 mem: location 1341 is 1121
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1341 is 1121
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 1118
9999 mem: storing 1118 in location 1342
 106 run: reply result
9999 mem: location 1342 is 1118
9999 run: result 0 is 1118
9999 mem: storing 1118 in location 1090
 105 run: break-unless curr, 
9999 mem: location 1090 is 1118
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1090 is 1118
9999 mem: location 1091 is 1096
9999 mem: storing 0 in location 1093
 105 run: break-if at-start?, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1090 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1090 is 1118
9999 run: address to copy is 1118
9999 run: its type is number
9999 mem: location 1118 is 98
9999 mem: storing 98 in location 1094
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1094 is 98
9999 mem: storing 0 in location 1095
 105 run: break-if at-newline?, 
9999 mem: location 1095 is 0
9999 run: jump-if fell through
 105 run: result <- add result, 1
9999 mem: location 1092 is 0
9999 mem: storing 1 in location 1092
 105 run: loop 
9999 run: jumping to instruction 10
 105 run: curr <- prev-duplex curr
9999 mem: location 1090 is 1118
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1118 in location 1341
 106 run: jump-if in, 1:offset
9999 mem: location 1341 is 1118
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1341 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1341 is 1118
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1115
9999 mem: storing 1115 in location 1342
 106 run: reply result
9999 mem: location 1342 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1090
 105 run: break-unless curr, 
9999 mem: location 1090 is 1115
9999 run: jump-unless fell through
 105 run: at-start?:boolean <- equal curr, start
9999 mem: location 1090 is 1115
9999 mem: location 1091 is 1096
9999 mem: storing 0 in location 1093
 105 run: break-if at-start?, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1090 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 1118
9999 mem: location 1117 is 1108
9999 mem: location 1090 is 1115
9999 run: address to copy is 1115
9999 run: its type is number
9999 mem: location 1115 is 10
9999 mem: storing 10 in location 1094
 105 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1094 is 10
9999 mem: storing 1 in location 1095
 105 run: break-if at-newline?, 
9999 mem: location 1095 is 1
9999 run: jumping to instruction 19
 105 run: reply result
9999 mem: location 1092 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 1368
 104 run: break-if len, 
9999 mem: location 1368 is 1
9999 run: jumping to instruction 15
 104 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1368 is 1
9999 mem: location 1366 is 4
9999 mem: storing 1 in location 1370
 104 run: break-if max, 
9999 mem: location 1370 is 1
9999 run: jumping to instruction 20
 104 run: max <- add max, 1
9999 mem: location 1370 is 1
9999 mem: storing 2 in location 1370
 104 run: count:number <- copy 0
9999 mem: storing 0 in location 1371
 104 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1371 is 0
9999 mem: location 1370 is 2
9999 mem: storing 0 in location 1372
 104 run: break-if done?, 
9999 mem: location 1372 is 0
9999 run: jump-if fell through
 104 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1361 is 1121
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1341
 105 run: jump-if in, 1:offset
9999 mem: location 1341 is 1121
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1341 is 1121
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 1118
9999 mem: storing 1118 in location 1342
 105 run: reply result
9999 mem: location 1342 is 1118
9999 run: result 0 is 1118
9999 mem: storing 1118 in location 1369
 104 run: break-unless prev, 
9999 mem: location 1369 is 1118
9999 run: jump-unless fell through
 104 run: curr <- copy prev
9999 mem: location 1369 is 1118
9999 mem: storing 1118 in location 1361
 104 run: count <- add count, 1
9999 mem: location 1371 is 0
9999 mem: storing 1 in location 1371
 104 run: loop 
9999 run: jumping to instruction 24
 104 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1371 is 1
9999 mem: location 1370 is 2
9999 mem: storing 0 in location 1372
 104 run: break-if done?, 
9999 mem: location 1372 is 0
9999 run: jump-if fell through
 104 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1361 is 1118
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1118 in location 1341
 105 run: jump-if in, 1:offset
9999 mem: location 1341 is 1118
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1341 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1341 is 1118
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1115
9999 mem: storing 1115 in location 1342
 105 run: reply result
9999 mem: location 1342 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1369
 104 run: break-unless prev, 
9999 mem: location 1369 is 1115
9999 run: jump-unless fell through
 104 run: curr <- copy prev
9999 mem: location 1369 is 1115
9999 mem: storing 1115 in location 1361
 104 run: count <- add count, 1
9999 mem: location 1371 is 1
9999 mem: storing 2 in location 1371
 104 run: loop 
9999 run: jumping to instruction 24
 104 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1371 is 2
9999 mem: location 1370 is 2
9999 mem: storing 1 in location 1372
 104 run: break-if done?, 
9999 mem: location 1372 is 1
9999 run: jumping to instruction 31
 104 run: reply curr
9999 mem: location 1361 is 1115
9999 run: result 0 is 1115
9999 mem: location 1353 is 1001
9999 mem: storing 1115 in location 1001
 103 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1352
 103 run: previous-character:character <- get *before-cursor, value:offset
9999 mem: location 1346 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1346 is 1121
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 10
9999 mem: storing 10 in location 1354
 103 run: previous-character-is-newline?:boolean <- equal previous-character, 10/newline
9999 mem: location 1354 is 10
9999 mem: storing 1 in location 1355
 103 run: break-unless previous-character-is-newline?, 
9999 mem: location 1355 is 1
9999 run: jump-unless fell through
 103 run: d:address:duplex-list <- get *editor, data:offset
9999 mem: location 1345 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1121
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 0
9999 mem: location 1008 is 1
9999 mem: location 1345 is 1000
9999 run: address to copy is 1000
9999 run: its type is address
9999 mem: location 1000 is 1096
9999 mem: storing 1096 in location 1356
 103 run: end-of-line:number <- previous-line-length before-cursor, d
9999 mem: location 1346 is 1121
9999 mem: location 1356 is 1096
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1090
 104 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1096 in location 1091
 104 run: result:number <- copy 0
9999 mem: storing 0 in location 1092
 104 run: jump-if curr, 1:offset
9999 mem: location 1090 is 1121
9999 run: jumping to instruction 6
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1090 is 1121
9999 mem: location 1091 is 1096
9999 mem: storing 0 in location 1093
 104 run: jump-unless at-start?, 1:offset
9999 mem: location 1093 is 0
9999 run: jumping to instruction 9
 104 run: curr <- prev-duplex curr
9999 mem: location 1090 is 1121
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1341
 105 run: jump-if in, 1:offset
9999 mem: location 1341 is 1121
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1341 is 1121
9999 run: address to copy is 1123
9999 run: its type is address
9999 mem: location 1123 is 1118
9999 mem: storing 1118 in location 1342
 105 run: reply result
9999 mem: location 1342 is 1118
9999 run: result 0 is 1118
9999 mem: storing 1118 in location 1090
 104 run: break-unless curr, 
9999 mem: location 1090 is 1118
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1090 is 1118
9999 mem: location 1091 is 1096
9999 mem: storing 0 in location 1093
 104 run: break-if at-start?, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1090 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1090 is 1118
9999 run: address to copy is 1118
9999 run: its type is number
9999 mem: location 1118 is 98
9999 mem: storing 98 in location 1094
 104 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1094 is 98
9999 mem: storing 0 in location 1095
 104 run: break-if at-newline?, 
9999 mem: location 1095 is 0
9999 run: jump-if fell through
 104 run: result <- add result, 1
9999 mem: location 1092 is 0
9999 mem: storing 1 in location 1092
 104 run: loop 
9999 run: jumping to instruction 10
 104 run: curr <- prev-duplex curr
9999 mem: location 1090 is 1118
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1118 in location 1341
 105 run: jump-if in, 1:offset
9999 mem: location 1341 is 1118
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1341 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1341 is 1118
9999 run: address to copy is 1120
9999 run: its type is address
9999 mem: location 1120 is 1115
9999 mem: storing 1115 in location 1342
 105 run: reply result
9999 mem: location 1342 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1090
 104 run: break-unless curr, 
9999 mem: location 1090 is 1115
9999 run: jump-unless fell through
 104 run: at-start?:boolean <- equal curr, start
9999 mem: location 1090 is 1115
9999 mem: location 1091 is 1096
9999 mem: storing 0 in location 1093
 104 run: break-if at-start?, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1090 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 1118
9999 mem: location 1117 is 1108
9999 mem: location 1090 is 1115
9999 run: address to copy is 1115
9999 run: its type is number
9999 mem: location 1115 is 10
9999 mem: storing 10 in location 1094
 104 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1094 is 10
9999 mem: storing 1 in location 1095
 104 run: break-if at-newline?, 
9999 mem: location 1095 is 1
9999 run: jumping to instruction 19
 104 run: reply result
9999 mem: location 1092 is 1
9999 run: result 0 is 1
9999 mem: storing 1 in location 1357
 103 run: *cursor-column <- add left, end-of-line
9999 mem: location 1349 is 0
9999 mem: location 1357 is 1
9999 mem: location 1348 is 1007
9999 mem: storing 1 in location 1007
 103 run: reply editor/same-as-ingredient:0, go-render?
9999 mem: location 1345 is 1000
9999 mem: location 1352 is 1
9999 run: result 0 is 1000
9999 run: result 1 is 1
9999 mem: storing 1000 in location 1241
9999 mem: storing 1 in location 1263
 102 run: *before-cursor <- copy prev
9999 mem: location 1288 is 1118
9999 mem: location 1250 is 1003
9999 mem: location 1250 is 1003
9999 mem: storing 1118 in location 1003
 102 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1240 is 1009
9999 mem: location 1241 is 1000
9999 mem: location 1263 is 1
9999 run: result 0 is 1009
9999 run: result 1 is 1000
9999 run: result 2 is 1
9999 mem: storing 1009 in location 1214
9999 mem: storing 1000 in location 1216
9999 mem: storing 1 in location 1224
 101 run: break-unless go-render?, 
9999 mem: location 1224 is 1
9999 run: jump-unless fell through
 101 run: editor-render screen, editor
9999 mem: location 1214 is 1009
9999 mem: location 1216 is 1000
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1090
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1091
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1091 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1091 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1092
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1091 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1091 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1093
 102 run: row:number, column:number <- render screen, editor
9999 mem: location 1090 is 1009
9999 mem: location 1091 is 1000
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1141
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1000 in location 1142
 103 run: jump-if editor, 1:offset
9999 mem: location 1142 is 1000
9999 run: jumping to instruction 5
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1004
9999 run: its type is number
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1143
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1141 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1341
 104 run: break-unless sc, 
9999 mem: location 1341 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1341 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1341 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1342
 104 run: reply height
9999 mem: location 1342 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1144
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1005
9999 run: its type is number
9999 mem: location 1005 is 4
9999 mem: storing 4 in location 1145
 103 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1001
9999 run: its type is address
9999 mem: location 1001 is 1115
9999 mem: storing 1115 in location 1146
 103 run: prev:address:duplex-list <- copy curr
9999 mem: location 1146 is 1115
9999 mem: storing 1115 in location 1147
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1115 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1115
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 1118
9999 mem: location 1117 is 1108
9999 mem: location 1341 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1118
9999 mem: storing 1118 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1118
9999 run: result 0 is 1118
9999 mem: storing 1118 in location 1146
 103 run: color:number <- copy 7/white
9999 mem: storing 7 in location 1148
 103 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1149
 103 run: column:number <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1006
9999 mem: storing 1006 in location 1151
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1007
9999 mem: storing 1007 in location 1152
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1003
9999 mem: storing 1003 in location 1153
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 1
9999 mem: location 1150 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1169
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 104 run: *row <- copy new-row
9999 mem: location 1169 is 1
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 1 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 104 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 103 run: break-unless curr, 
9999 mem: location 1146 is 1118
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 1
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 1
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1150 is 0
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1156
 103 run: break-unless at-cursor?, 
9999 mem: location 1156 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1146 is 1118
9999 run: address to copy is 1118
9999 run: its type is number
9999 mem: location 1118 is 98
9999 mem: storing 98 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 98
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 98
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 98
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 98
9999 mem: storing 0 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1150 is 0
9999 mem: location 1145 is 4
9999 mem: storing 0 in location 1160
 103 run: break-unless at-right?, 
9999 mem: location 1160 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1141 is 1009
9999 mem: location 1157 is 98
9999 mem: location 1148 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 98
  90 print-character: 98 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 98
9999 mem: storing 0 in location 1186
 104 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 104 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1189
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 104 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 98
9999 mem: storing 0 in location 1192
 104 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 5
9999 mem: storing 1025 in location 1194
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1025
9999 mem: location 1025 is 99
9999 mem: location 1026 is 7
9999 mem: location 1194 is 1025
9999 run: address to copy is 1025
9999 mem: storing 1025 in location 1195
 104 run: *cursor-contents <- copy c
9999 mem: location 1176 is 98
9999 mem: location 1195 is 1025
9999 mem: location 1195 is 1025
9999 mem: storing 98 in location 1025
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1025
9999 mem: location 1025 is 98
9999 mem: location 1026 is 7
9999 mem: location 1194 is 1025
9999 run: address to copy is 1026
9999 mem: storing 1026 in location 1196
 104 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1026
9999 mem: location 1196 is 1026
9999 mem: storing 7 in location 1026
 104 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 104 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1185 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1118
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1118 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1118
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1341 is 1118
9999 run: address to copy is 1119
9999 run: its type is address
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1121
9999 run: result 0 is 1121
9999 mem: storing 1121 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1115 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1115
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1115
9999 mem: location 1115 is 10
9999 mem: location 1116 is 1118
9999 mem: location 1117 is 1108
9999 mem: location 1341 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1118
9999 mem: storing 1118 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1118
9999 run: result 0 is 1118
9999 mem: storing 1118 in location 1147
 103 run: column <- add column, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1146 is 1121
9999 run: jump-unless fell through
schedule: render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-on-left-arrow
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 1
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 1
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1150 is 1
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1156
 103 run: break-unless at-cursor?, 
9999 mem: location 1156 is 1
9999 run: jump-unless fell through
 103 run: *before-cursor <- copy prev
9999 mem: location 1147 is 1118
9999 mem: location 1153 is 1003
9999 mem: location 1153 is 1003
9999 mem: storing 1118 in location 1003
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1146 is 1121
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 10
9999 mem: storing 10 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 10
9999 mem: storing 1 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 1
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column, *cursor-column
9999 mem: location 1150 is 1
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1159
 103 run: break-unless left-of-cursor?, 
9999 mem: location 1159 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1150 is 1
9999 mem: location 1145 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1202
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 6
9999 mem: storing 1027 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1194 is 1027
9999 run: address to copy is 1027
9999 mem: storing 1027 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1027
9999 mem: location 1195 is 1027
9999 mem: storing 32 in location 1027
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1027
9999 mem: location 1027 is 32
9999 mem: location 1028 is 7
9999 mem: location 1194 is 1027
9999 run: address to copy is 1028
9999 mem: storing 1028 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1028
9999 mem: location 1196 is 1028
9999 mem: storing 7 in location 1028
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1185 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 7
9999 mem: storing 1029 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1194 is 1029
9999 run: address to copy is 1029
9999 mem: storing 1029 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1029
9999 mem: location 1195 is 1029
9999 mem: storing 32 in location 1029
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1029
9999 mem: location 1029 is 32
9999 mem: location 1030 is 7
9999 mem: location 1194 is 1029
9999 run: address to copy is 1030
9999 mem: storing 1030 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1030
9999 mem: location 1196 is 1030
9999 mem: storing 7 in location 1030
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1185 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 8
9999 mem: storing 1031 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1194 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1031
9999 mem: location 1195 is 1031
9999 mem: storing 32 in location 1031
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1031
9999 mem: location 1031 is 32
9999 mem: location 1032 is 7
9999 mem: location 1194 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1032
9999 mem: location 1196 is 1032
9999 mem: storing 7 in location 1032
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1185 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 1
9999 mem: location 1181 is 5
9999 mem: storing 5 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 5
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 9
9999 mem: storing 1033 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1194 is 1033
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1033
9999 mem: location 1195 is 1033
9999 mem: storing 32 in location 1033
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1033
9999 mem: location 1033 is 32
9999 mem: location 1034 is 7
9999 mem: location 1194 is 1033
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1034
9999 mem: location 1196 is 1034
9999 mem: storing 7 in location 1034
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1197 is 4
9999 mem: storing 1 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1149 is 1
9999 mem: storing 2 in location 1149
 103 run: column <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 2
9999 mem: location 1150 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1169
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 104 run: *row <- copy new-row
9999 mem: location 1169 is 2
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 104 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1121
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1121
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1341 is 1121
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1124
9999 run: result 0 is 1124
9999 mem: storing 1124 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1118
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1118 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1118
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1118
9999 mem: location 1118 is 98
9999 mem: location 1119 is 1121
9999 mem: location 1120 is 1115
9999 mem: location 1341 is 1118
9999 run: address to copy is 1119
9999 run: its type is address
9999 mem: location 1119 is 1121
9999 mem: storing 1121 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1121
9999 run: result 0 is 1121
9999 mem: storing 1121 in location 1147
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1146 is 1124
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 2
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 2
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1146 is 1124
9999 run: address to copy is 1124
9999 run: its type is number
9999 mem: location 1124 is 99
9999 mem: storing 99 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 99
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 99
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 99
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 99
9999 mem: storing 0 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1150 is 0
9999 mem: location 1145 is 4
9999 mem: storing 0 in location 1160
 103 run: break-unless at-right?, 
9999 mem: location 1160 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1141 is 1009
9999 mem: location 1157 is 99
9999 mem: location 1148 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 99
  90 print-character: 99 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 99
9999 mem: storing 0 in location 1186
 104 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 104 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1189
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 104 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 99
9999 mem: storing 0 in location 1192
 104 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 10
9999 mem: storing 1035 in location 1194
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1035
9999 mem: location 1035 is 100
9999 mem: location 1036 is 7
9999 mem: location 1194 is 1035
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1195
 104 run: *cursor-contents <- copy c
9999 mem: location 1176 is 99
9999 mem: location 1195 is 1035
9999 mem: location 1195 is 1035
9999 mem: storing 99 in location 1035
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1035
9999 mem: location 1035 is 99
9999 mem: location 1036 is 7
9999 mem: location 1194 is 1035
9999 run: address to copy is 1036
9999 mem: storing 1036 in location 1196
 104 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1036
9999 mem: location 1196 is 1036
9999 mem: storing 7 in location 1036
 104 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 104 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1185 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1124
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1124 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1124
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1341 is 1124
9999 run: address to copy is 1125
9999 run: its type is address
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1127
9999 run: result 0 is 1127
9999 mem: storing 1127 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1121
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1121 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1121
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1121
9999 mem: location 1121 is 10
9999 mem: location 1122 is 1124
9999 mem: location 1123 is 1118
9999 mem: location 1341 is 1121
9999 run: address to copy is 1122
9999 run: its type is address
9999 mem: location 1122 is 1124
9999 mem: storing 1124 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1124
9999 run: result 0 is 1124
9999 mem: storing 1124 in location 1147
 103 run: column <- add column, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1146 is 1127
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 2
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 2
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1146 is 1127
9999 run: address to copy is 1127
9999 run: its type is number
9999 mem: location 1127 is 10
9999 mem: storing 10 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 10
9999 mem: storing 1 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 2
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1150 is 1
9999 mem: location 1145 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1202
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-on-left-arrow
 105 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 11
9999 mem: storing 1037 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1194 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1037
9999 mem: location 1195 is 1037
9999 mem: storing 32 in location 1037
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1037
9999 mem: location 1037 is 32
9999 mem: location 1038 is 7
9999 mem: location 1194 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1038
9999 mem: location 1196 is 1038
9999 mem: storing 7 in location 1038
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1185 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 12
9999 mem: storing 1039 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1194 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1039
9999 mem: location 1195 is 1039
9999 mem: storing 32 in location 1039
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1039
9999 mem: location 1039 is 32
9999 mem: location 1040 is 7
9999 mem: location 1194 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1040
9999 mem: location 1196 is 1040
9999 mem: storing 7 in location 1040
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1185 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 13
9999 mem: storing 1041 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1194 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1041
9999 mem: location 1195 is 1041
9999 mem: storing 32 in location 1041
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1041
9999 mem: location 1041 is 32
9999 mem: location 1042 is 7
9999 mem: location 1194 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1042
9999 mem: location 1196 is 1042
9999 mem: storing 7 in location 1042
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1185 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1181 is 5
9999 mem: storing 10 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 10
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 14
9999 mem: storing 1043 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1194 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1043
9999 mem: location 1195 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1043
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1194 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1044
9999 mem: location 1196 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1197 is 4
9999 mem: storing 1 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1149 is 2
9999 mem: storing 3 in location 1149
 103 run: column <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 3
9999 mem: location 1150 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 1169
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 104 run: *row <- copy new-row
9999 mem: location 1169 is 3
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 3 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 104 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1127
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1127 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1127
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1341 is 1127
9999 run: address to copy is 1128
9999 run: its type is address
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1130
9999 run: result 0 is 1130
9999 mem: storing 1130 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1124
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1124 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1124
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1124
9999 mem: location 1124 is 99
9999 mem: location 1125 is 1127
9999 mem: location 1126 is 1121
9999 mem: location 1341 is 1124
9999 run: address to copy is 1125
9999 run: its type is address
9999 mem: location 1125 is 1127
9999 mem: storing 1127 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1127
9999 run: result 0 is 1127
9999 mem: storing 1127 in location 1147
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1146 is 1130
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 3
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 3
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1146 is 1130
9999 run: address to copy is 1130
9999 run: its type is number
9999 mem: location 1130 is 100
9999 mem: storing 100 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 100
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 100
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 100
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 100
9999 mem: storing 0 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 0
9999 run: jumping to instruction 52
 103 run: at-right?:boolean <- equal column, right
9999 mem: location 1150 is 0
9999 mem: location 1145 is 4
9999 mem: storing 0 in location 1160
 103 run: break-unless at-right?, 
9999 mem: location 1160 is 0
9999 run: jumping to instruction 61
 103 run: print-character screen, c, color
9999 mem: location 1141 is 1009
9999 mem: location 1157 is 100
9999 mem: location 1148 is 7
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 7 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 100
  90 print-character: 100 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 100
9999 mem: storing 0 in location 1186
 104 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 104 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1189
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 104 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 100
9999 mem: storing 0 in location 1192
 104 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 15
9999 mem: storing 1045 in location 1194
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1045
9999 mem: location 1045 is 101
9999 mem: location 1046 is 7
9999 mem: location 1194 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1195
 104 run: *cursor-contents <- copy c
9999 mem: location 1176 is 100
9999 mem: location 1195 is 1045
9999 mem: location 1195 is 1045
9999 mem: storing 100 in location 1045
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1045
9999 mem: location 1045 is 100
9999 mem: location 1046 is 7
9999 mem: location 1194 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1196
 104 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1046
9999 mem: location 1196 is 1046
9999 mem: storing 7 in location 1046
 104 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 104 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1185 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1130
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1130 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1130
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1341 is 1130
9999 run: address to copy is 1131
9999 run: its type is address
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1133
9999 run: result 0 is 1133
9999 mem: storing 1133 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1127
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1127 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1127
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1127
9999 mem: location 1127 is 10
9999 mem: location 1128 is 1130
9999 mem: location 1129 is 1124
9999 mem: location 1341 is 1127
9999 run: address to copy is 1128
9999 run: its type is address
9999 mem: location 1128 is 1130
9999 mem: storing 1130 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1130
9999 run: result 0 is 1130
9999 mem: storing 1130 in location 1147
 103 run: column <- add column, 1
9999 mem: location 1150 is 0
9999 mem: storing 1 in location 1150
 103 run: loop 
9999 run: jumping to instruction 20
 103 run: break-unless curr, 
9999 mem: location 1146 is 1133
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 3
9999 mem: location 1144 is 4
9999 mem: storing 0 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 3
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 30
 103 run: c:character <- get *curr, value:offset
9999 mem: location 1146 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1146 is 1133
9999 run: address to copy is 1133
9999 run: its type is number
9999 mem: location 1133 is 10
9999 mem: storing 10 in location 1157
 103 run: color <- get-color color, c
9999 mem: location 1148 is 7
9999 mem: location 1157 is 10
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 10
 104 run: color:number <- next-ingredient 
9999 mem: storing 7 in location 1057
 104 run: c:character <- next-ingredient 
9999 mem: storing 10 in location 1058
 104 run: color-is-white?:boolean <- equal color, 7/white
9999 mem: location 1057 is 7
9999 mem: storing 1 in location 1059
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-comment?:boolean <- equal c, 35/#
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1060
 104 run: break-unless starting-comment?, 
9999 mem: location 1060 is 0
9999 run: jumping to instruction 10
 104 run: color-is-blue?:boolean <- equal color, 12/lightblue
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1061
 104 run: break-unless color-is-blue?, 
9999 mem: location 1061 is 0
9999 run: jumping to instruction 18
 104 run: break-unless color-is-white?, 
9999 mem: location 1059 is 1
9999 run: jump-unless fell through
 104 run: starting-assignment?:boolean <- equal c, 60/<
9999 mem: location 1058 is 10
9999 mem: storing 0 in location 1063
 104 run: break-unless starting-assignment?, 
9999 mem: location 1063 is 0
9999 run: jumping to instruction 25
 104 run: color-is-red?:boolean <- equal color, 1/red
9999 mem: location 1057 is 7
9999 mem: storing 0 in location 1064
 104 run: break-unless color-is-red?, 
9999 mem: location 1064 is 0
9999 run: jumping to instruction 33
 104 run: reply color
9999 mem: location 1057 is 7
9999 run: result 0 is 7
9999 mem: storing 7 in location 1148
 103 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1157 is 10
9999 mem: storing 1 in location 1158
 103 run: break-unless newline?, 
9999 mem: location 1158 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 3
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: break-unless at-cursor-row?, 
9999 mem: location 1155 is 0
9999 run: jumping to instruction 44
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1141 is 1009
9999 mem: location 1150 is 1
9999 mem: location 1145 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 104 run: column:number <- next-ingredient 
9999 mem: storing 1 in location 1202
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 16
9999 mem: storing 1047 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1194 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1047
9999 mem: location 1195 is 1047
9999 mem: storing 32 in location 1047
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1047
9999 mem: location 1047 is 32
9999 mem: location 1048 is 7
9999 mem: location 1194 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1048
9999 mem: location 1196 is 1048
9999 mem: storing 7 in location 1048
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1185 is 1012
9999 mem: storing 2 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 17
9999 mem: storing 1049 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1194 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1049
9999 mem: location 1195 is 1049
9999 mem: storing 32 in location 1049
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1049
9999 mem: location 1049 is 32
9999 mem: location 1050 is 7
9999 mem: location 1194 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1050
9999 mem: location 1196 is 1050
9999 mem: storing 7 in location 1050
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1185 is 1012
9999 mem: storing 3 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
schedule: print-character/clear-line-delimited/render/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-on-left-arrow
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 18
9999 mem: storing 1051 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1194 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1051
9999 mem: location 1195 is 1051
9999 mem: storing 32 in location 1051
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1051
9999 mem: location 1051 is 32
9999 mem: location 1052 is 7
9999 mem: location 1194 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1052
9999 mem: location 1196 is 1052
9999 mem: storing 7 in location 1052
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1197 is 4
9999 mem: storing 0 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 0
9999 run: jump-if fell through
 105 run: *column <- add *column, 1
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1185 is 1012
9999 mem: storing 4 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 25
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1185
 105 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 29
 105 run: legal? <- lesser-than *column, width
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1181 is 5
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 32
 105 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1186
 105 run: break-unless newline?, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 43
 105 run: index:number <- multiply *row, width
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 3
9999 mem: location 1181 is 5
9999 mem: storing 15 in location 1189
 105 run: index <- add index, *column
9999 mem: location 1189 is 15
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 19 in location 1189
 105 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1190
 105 run: len:number <- length *buf
9999 mem: location 1190 is 1014
9999 mem: storing 20 in location 1191
 105 run: backspace?:boolean <- equal c, 8
9999 mem: location 1176 is 32
9999 mem: storing 0 in location 1192
 105 run: break-unless backspace?, 
9999 mem: location 1192 is 0
9999 run: jumping to instruction 63
 105 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1190 is 1014
9999 mem: location 1189 is 19
9999 mem: storing 1053 in location 1194
 105 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1194 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1194 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1195
 105 run: *cursor-contents <- copy c
9999 mem: location 1176 is 32
9999 mem: location 1195 is 1053
9999 mem: location 1195 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1194 is 1053
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1194 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1196
 105 run: *cursor-color <- copy color
9999 mem: location 1177 is 7
9999 mem: location 1196 is 1054
9999 mem: location 1196 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width, 1
9999 mem: location 1181 is 5
9999 mem: storing 4 in location 1197
 105 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1185 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1197 is 4
9999 mem: storing 1 in location 1198
 105 run: break-if at-right?, 
9999 mem: location 1198 is 1
9999 run: jumping to instruction 74
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 103 run: row <- add row, 1
9999 mem: location 1149 is 3
9999 mem: storing 4 in location 1149
 103 run: column <- copy left
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1150
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1141 is 1009
9999 mem: location 1149 is 4
9999 mem: location 1150 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 4 in location 1169
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 104 run: *row <- copy new-row
9999 mem: location 1169 is 4
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 4 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 104 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1141
 103 run: curr <- next-duplex curr
9999 mem: location 1146 is 1133
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1133 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1133
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1133
9999 mem: location 1133 is 10
9999 mem: location 1134 is 1136
9999 mem: location 1135 is 1130
9999 mem: location 1341 is 1133
9999 run: address to copy is 1134
9999 run: its type is address
9999 mem: location 1134 is 1136
9999 mem: storing 1136 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1136
9999 run: result 0 is 1136
9999 mem: storing 1136 in location 1146
 103 run: prev <- next-duplex prev
9999 mem: location 1147 is 1130
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1130 in location 1341
 104 run: jump-if in, 1:offset
9999 mem: location 1341 is 1130
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1341 is 1130
9999 mem: location 1130 is 100
9999 mem: location 1131 is 1133
9999 mem: location 1132 is 1127
9999 mem: location 1341 is 1130
9999 run: address to copy is 1131
9999 run: its type is address
9999 mem: location 1131 is 1133
9999 mem: storing 1133 in location 1342
 104 run: reply result
9999 mem: location 1342 is 1133
9999 run: result 0 is 1133
9999 mem: storing 1133 in location 1147
 103 run: loop +next-character:label
9999 run: jumping to instruction 21
 103 run: break-unless curr, 
9999 mem: location 1146 is 1136
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1149 is 4
9999 mem: location 1144 is 4
9999 mem: storing 1 in location 1154
 103 run: break-if off-screen?, 
9999 mem: location 1154 is 1
9999 run: jumping to instruction 67
 103 run: bottom-of-screen:address:address:duplex-list <- get-address *editor, bottom-of-screen:offset
9999 mem: location 1142 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 0
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 1142 is 1000
9999 run: address to copy is 1002
9999 mem: storing 1002 in location 1161
 103 run: *bottom-of-screen <- copy curr
9999 mem: location 1146 is 1136
9999 mem: location 1161 is 1002
9999 mem: location 1161 is 1002
9999 mem: storing 1136 in location 1002
 103 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1149 is 4
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1155
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1150 is 0
9999 mem: location 1152 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1162
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1155 is 0
9999 mem: location 1162 is 1
9999 mem: storing 0 in location 1163
 103 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1149 is 4
9999 mem: location 1151 is 1006
9999 mem: location 1006 is 1
9999 mem: storing 0 in location 1164
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1165
 103 run: break-unless before-cursor?, 
9999 mem: location 1165 is 0
9999 run: jumping to instruction 80
 103 run: reply row, column, screen/same-as-ingredient:0, editor/same-as-ingredient:1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 0
9999 mem: location 1141 is 1009
9999 mem: location 1142 is 1000
9999 run: result 0 is 4
9999 run: result 1 is 0
9999 mem: storing 4 in location 1094
9999 mem: storing 0 in location 1095
 102 run: clear-line-delimited screen, column, right
9999 mem: location 1090 is 1009
9999 mem: location 1095 is 0
9999 mem: location 1093 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 103 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1202
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 0
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 103 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: column <- add column, 1
9999 mem: location 1202 is 0
9999 mem: storing 1 in location 1202
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 103 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 103 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 103 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 103 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 103 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 4
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 103 run: loop 
9999 run: jumping to instruction 5
 103 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 103 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 102 run: row <- add row, 1
9999 mem: location 1094 is 4
9999 mem: storing 5 in location 1094
 102 run: draw-horizontal screen, row, left, right, 9480/horizontal-dotted
9999 mem: location 1090 is 1009
9999 mem: location 1094 is 5
9999 mem: location 1092 is 0
9999 mem: location 1093 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1227
 103 run: row:number <- next-ingredient 
9999 mem: storing 5 in location 1228
 103 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1230
 103 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 9480 in location 1231
9999 mem: storing 1 in location 1232
 103 run: break-if style-found?, 
9999 mem: location 1232 is 1
9999 run: jumping to instruction 9
 103 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
 103 run: break-if color-found?, 
9999 mem: location 1234 is 0
9999 run: jump-if fell through
 103 run: color <- copy 245/grey
9999 mem: storing 245 in location 1233
 103 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1235
9999 mem: storing 0 in location 1236
 103 run: break-if bg-color-found?, 
9999 mem: location 1236 is 0
9999 run: jump-if fell through
 103 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1235
 103 run: screen <- move-cursor screen, row, x
9999 mem: location 1227 is 1009
9999 mem: location 1228 is 5
9999 mem: location 1229 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1168
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 5 in location 1169
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 104 run: break-unless sc, 
9999 mem: location 1168 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1171
 104 run: *row <- copy new-row
9999 mem: location 1169 is 5
9999 mem: location 1171 is 1011
9999 mem: location 1171 is 1011
9999 mem: storing 5 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1168 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1168 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1172
 104 run: *column <- copy new-column
9999 mem: location 1170 is 0
9999 mem: location 1172 is 1012
9999 mem: location 1172 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1168 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1227
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 0
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 103 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: x <- add x, 1
9999 mem: location 1229 is 0
9999 mem: storing 1 in location 1229
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 1
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 103 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: x <- add x, 1
9999 mem: location 1229 is 1
9999 mem: storing 2 in location 1229
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 2
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 103 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: x <- add x, 1
9999 mem: location 1229 is 2
9999 mem: storing 3 in location 1229
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 3
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 103 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: x <- add x, 1
9999 mem: location 1229 is 3
9999 mem: storing 4 in location 1229
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 4
9999 mem: location 1230 is 4
9999 mem: storing 1 in location 1237
 103 run: break-unless continue?, 
9999 mem: location 1237 is 1
9999 run: jump-unless fell through
 103 run: print-character screen, style, color, bg-color
9999 mem: location 1227 is 1009
9999 mem: location 1231 is 9480
9999 mem: location 1233 is 245
9999 mem: location 1235 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 104 run: c:character <- next-ingredient 
9999 mem: storing 9480 in location 1176
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1177
9999 mem: storing 1 in location 1178
 104 run: break-if color-found?, 
9999 mem: location 1178 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 1 in location 1180
 104 run: break-if bg-color-found?, 
9999 mem: location 1180 is 1
9999 run: jumping to instruction 12
 104 run: trace 90, [print-character], c
9999 mem: location 1176 is 9480
  90 print-character: 9480 
 104 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: storing 1 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 5
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 104 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 104 run: reply sc
9999 mem: location 1175 is 1009
 103 run: x <- add x, 1
9999 mem: location 1229 is 4
9999 mem: storing 5 in location 1229
 103 run: loop 
9999 run: jumping to instruction 22
 103 run: continue?:boolean <- lesser-or-equal x, right
9999 mem: location 1229 is 5
9999 mem: location 1230 is 4
9999 mem: storing 0 in location 1237
 103 run: break-unless continue?, 
9999 mem: location 1237 is 0
9999 run: jumping to instruction 27
 102 run: row <- add row, 1
9999 mem: location 1094 is 5
9999 mem: storing 6 in location 1094
 102 run: clear-screen-from screen, row, left, left, right
9999 mem: location 1090 is 1009
9999 mem: location 1094 is 6
9999 mem: location 1092 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 4
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1168
 103 run: row:number <- next-ingredient 
9999 mem: storing 6 in location 1169
 103 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1170
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1171
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1172
 103 run: break-if screen, 
9999 mem: location 1168 is 1009
9999 run: jumping to instruction 10
 103 run: screen <- move-cursor screen, row, column
9999 mem: location 1168 is 1009
9999 mem: location 1169 is 6
9999 mem: location 1170 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1319
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 6 in location 1320
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1321
 104 run: break-unless sc, 
9999 mem: location 1319 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1319 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1319 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1322
 104 run: *row <- copy new-row
9999 mem: location 1320 is 6
9999 mem: location 1322 is 1011
9999 mem: location 1322 is 1011
9999 mem: storing 6 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1319 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1319 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1323
 104 run: *column <- copy new-column
9999 mem: location 1321 is 0
9999 mem: location 1323 is 1012
9999 mem: location 1323 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1319 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1168
 103 run: clear-line-delimited screen, column, right
9999 mem: location 1168 is 1009
9999 mem: location 1170 is 0
9999 mem: location 1172 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run1002/scenario-editor-scrolls-up-on-left-arrow
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1201
 104 run: column:number <- next-ingredient 
9999 mem: storing 0 in location 1202
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1203
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 0
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 0
9999 mem: storing 1 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 1
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 1
9999 mem: storing 2 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 2
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 2
9999 mem: storing 3 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 3
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 3
9999 mem: storing 4 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 4
9999 mem: location 1203 is 4
9999 mem: storing 0 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 0
9999 run: jump-if fell through
 104 run: print-character screen, 32/space
9999 mem: location 1201 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1175
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1176
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: break-if color-found?, 
9999 mem: location 1178 is 0
9999 run: jump-if fell through
 105 run: color <- copy 7/white
9999 mem: storing 7 in location 1177
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: break-if bg-color-found?, 
9999 mem: location 1180 is 0
9999 run: jump-if fell through
 105 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1179
 105 run: trace 90, [print-character], c
9999 mem: location 1176 is 32
  90 print-character: 32 
 105 run: break-unless sc, 
9999 mem: location 1175 is 1009
9999 run: jump-unless fell through
 105 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1181
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1182
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1175 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1175 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1183
 105 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: storing 1 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 1
9999 run: jumping to instruction 22
 105 run: legal? <- lesser-than *row, height
9999 mem: location 1183 is 1011
9999 mem: location 1011 is 6
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1184
 105 run: jump-if legal?, 1:offset
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 105 run: reply sc
9999 mem: location 1175 is 1009
 104 run: column <- add column, 1
9999 mem: location 1202 is 4
9999 mem: storing 5 in location 1202
 104 run: loop 
9999 run: jumping to instruction 5
 104 run: done?:boolean <- greater-than column, right
9999 mem: location 1202 is 5
9999 mem: location 1203 is 4
9999 mem: storing 1 in location 1204
 104 run: break-if done?, 
9999 mem: location 1204 is 1
9999 run: jumping to instruction 10
 103 run: clear-rest-of-screen screen, row, left, right
9999 mem: location 1168 is 1009
9999 mem: location 1169 is 6
9999 mem: location 1171 is 0
9999 mem: location 1172 is 4
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1326
 104 run: row:number <- next-ingredient 
9999 mem: storing 6 in location 1327
 104 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1328
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1329
 104 run: row <- add row, 1
9999 mem: location 1327 is 6
9999 mem: storing 7 in location 1327
 104 run: screen <- move-cursor screen, row, left
9999 mem: location 1326 is 1009
9999 mem: location 1327 is 7
9999 mem: location 1328 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1319
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 7 in location 1320
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1321
 105 run: break-unless sc, 
9999 mem: location 1319 is 1009
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1319 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1319 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1322
 105 run: *row <- copy new-row
9999 mem: location 1320 is 7
9999 mem: location 1322 is 1011
9999 mem: location 1322 is 1011
9999 mem: storing 7 in location 1011
 105 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1319 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1319 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1323
 105 run: *column <- copy new-column
9999 mem: location 1321 is 0
9999 mem: location 1323 is 1012
9999 mem: location 1323 is 1012
9999 mem: storing 0 in location 1012
 105 run: reply sc/same-as-ingredient:0
9999 mem: location 1319 is 1009
9999 run: result 0 is 1009
9999 mem: storing 1009 in location 1326
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1326 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1341
 105 run: break-unless sc, 
9999 mem: location 1341 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1341 is 1009
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1341 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1342
 105 run: reply height
9999 mem: location 1342 is 4
9999 run: result 0 is 4
9999 mem: storing 4 in location 1330
 104 run: at-bottom-of-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1327 is 7
9999 mem: location 1330 is 4
9999 mem: storing 1 in location 1331
 104 run: break-if at-bottom-of-screen?, 
9999 mem: location 1331 is 1
9999 run: jumping to instruction 15
 103 run: reply screen/same-as-ingredient:0
9999 mem: location 1168 is 1009
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1215 is 1337
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1337 in location 1227
 102 run: break-unless x, 
9999 mem: location 1227 is 1337
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1227 is 1337
9999 mem: location 1337 is 1
9999 mem: location 1338 is 1332
9999 mem: location 1227 is 1337
9999 run: address to copy is 1337
9999 mem: storing 1337 in location 1228
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1227 is 1337
9999 mem: location 1337 is 1
9999 mem: location 1338 is 1332
9999 mem: location 1227 is 1337
9999 run: address to copy is 1338
9999 run: its type is address
9999 mem: location 1338 is 1332
9999 mem: storing 1332 in location 1229
 102 run: max:number <- length *buf
9999 mem: location 1229 is 1332
9999 mem: storing 1 in location 1230
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1228 is 1337
9999 mem: location 1337 is 1
9999 mem: location 1230 is 1
9999 mem: storing 1 in location 1231
 102 run: break-unless done?, 
9999 mem: location 1231 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: storing 1339 in location 1232
 102 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1232 is 1339
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: location 1227 is 1337
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1337
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
9999 mem: storing 1337 in location 1215
9999 mem: storing 1 in location 1221
9999 mem: storing 1 in location 1222
 101 run: loop-unless found?, 
9999 mem: location 1221 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1222 is 1
9999 run: jumping to instruction 25
 100 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 1136
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9999 run: address to copy is 1006
9999 run: its type is number
9999 mem: location 1006 is 1
9999 mem: storing 1 in location 3
 100 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: location 1000 is 1096
9999 mem: location 1001 is 1115
9999 mem: location 1002 is 1136
9999 mem: location 1003 is 1118
9999 mem: location 1004 is 0
9999 mem: location 1005 is 4
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1
9999 mem: location 1008 is 1
9999 mem: location 2 is 1000
9999 run: address to copy is 1007
9999 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 4
  99 run: screen-should-contain [
    .     .
    .b    .
    .c    .
    .d    .
  ]
  99 run: memory-should-contain [
    3 <- 1
    4 <- 1
  ]
9999 run: checking location 3
9999 run: checking location 4
