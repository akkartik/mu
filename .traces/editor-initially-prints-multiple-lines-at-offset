parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc\ndef]\n    new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    . abc .\n    . def .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-prints-multiple-lines-at-offset
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-prints-multiple-lines-at-offset
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc
def]
    new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc\ndef", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "1", properties: ["1": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc
def]
9999 mem: storing 1098 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1106
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1108
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1109
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1110
 102 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1111
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1112
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1112 is 5
9999 mem: storing 4 in location 1112
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1137
9999 mem: storing 1137 in location 1113
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1114
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1109 is 1031
9999 mem: location 1114 is 1140
9999 mem: storing 1031 in location 1140
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1141
9999 mem: storing 0 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1115
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 1
9999 mem: location 1115 is 1142
9999 mem: storing 1 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1115
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1112 is 4
9999 mem: location 1115 is 1144
9999 mem: storing 4 in location 1144
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1143
9999 mem: storing 0 in location 1143
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1145
9999 mem: storing 0 in location 1145
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1115
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 1
9999 mem: location 1115 is 1146
9999 mem: storing 1 in location 1146
 102 run: d:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1116
 102 run: d:address:address:duplex-list/deref <- push-duplex 167:literal/§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1149
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1151
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1152
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1180
9999 mem: storing 1180 in location 1153
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1153 is 1180
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1153 is 1180
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1154
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1151 is 167
9999 mem: location 1154 is 1180
9999 mem: storing 167 in location 1180
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1153 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1153 is 1180
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1155
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1152 is 0
9999 mem: location 1155 is 1181
9999 mem: storing 0 in location 1181
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1152 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1153 is 1180
9999 run: result 0 is 1180
9999 mem: location 1116 is 1137
9999 mem: storing 1180 in location 1137
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1117
 102 run: y:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1116 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1117 is 1139
9999 mem: storing 1180 in location 1139
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 0
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1118
 102 run: init:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1116 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1118 is 1138
9999 mem: storing 1180 in location 1138
 102 run: b:address:boolean <- get-address result:address:editor-data/deref, in-focus?:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1119
 102 run: b:address:boolean/deref <- copy 1:literal/true
9999 mem: location 1119 is 1148
9999 mem: storing 1 in location 1148
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1108 is 1098
9999 run: jumping to instruction 32
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1108 is 1098
9999 mem: storing 7 in location 1120
 102 run: jump-if len:number, 1:offset
9999 mem: location 1120 is 7
9999 run: jumping to instruction 35
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1121
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1118 is 1138
9999 mem: location 1138 is 1180
9999 mem: storing 1180 in location 1122
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1121 is 0
9999 mem: location 1120 is 7
9999 mem: storing 0 in location 1123
 102 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1121 is 0
9999 mem: location 1108 is 1098
9999 mem: location 1121 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1124
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1124 is 97
9999 mem: location 1122 is 1180
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1183
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1185
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1186
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1214
9999 mem: storing 1214 in location 1187
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1187 is 1214
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1187 is 1214
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 1188
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1185 is 97
9999 mem: location 1188 is 1214
9999 mem: storing 97 in location 1214
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1186 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1186 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 0
9999 mem: storing 0 in location 1189
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1186 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1186 is 1180
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1190
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1187 is 1214
9999 mem: location 1190 is 1181
9999 mem: storing 1214 in location 1181
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1187 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1187 is 1214
9999 run: address to copy is 1216
9999 mem: storing 1216 in location 1190
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1186 is 1180
9999 mem: location 1190 is 1216
9999 mem: storing 1180 in location 1216
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1187 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1180
9999 mem: location 1187 is 1214
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 1190
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1189 is 0
9999 mem: location 1190 is 1215
9999 mem: storing 0 in location 1215
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1189 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1187 is 1214
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1122 is 1180
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1217
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1219
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1219 is 1180
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1219 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 1214
9999 mem: location 1182 is 0
9999 mem: location 1219 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1214
9999 mem: storing 1214 in location 1220
 103 run: reply result:address:duplex-list
9999 mem: location 1220 is 1214
9999 run: result 0 is 1214
9999 mem: storing 1214 in location 1122
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1121 is 1
9999 mem: location 1120 is 7
9999 mem: storing 0 in location 1123
 102 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1121 is 1
9999 mem: location 1108 is 1098
9999 mem: location 1121 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1124
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1124 is 98
9999 mem: location 1122 is 1214
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1248
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1250
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1251
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1279
9999 mem: storing 1279 in location 1252
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1252 is 1279
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1252 is 1279
9999 run: address to copy is 1279
9999 mem: storing 1279 in location 1253
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1250 is 98
9999 mem: location 1253 is 1279
9999 mem: storing 98 in location 1279
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1251 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1180
9999 mem: location 1251 is 1214
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1254
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1251 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1180
9999 mem: location 1251 is 1214
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 1255
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1252 is 1279
9999 mem: location 1255 is 1215
9999 mem: storing 1279 in location 1215
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1252 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1252 is 1279
9999 run: address to copy is 1281
9999 mem: storing 1281 in location 1255
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1251 is 1214
9999 mem: location 1255 is 1281
9999 mem: storing 1214 in location 1281
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1252 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1214
9999 mem: location 1252 is 1279
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1255
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1280
9999 mem: storing 0 in location 1280
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1252 is 1279
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1122 is 1214
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1282
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1284
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1284 is 1214
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1284 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1284 is 1214
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 1279
9999 mem: storing 1279 in location 1285
 103 run: reply result:address:duplex-list
9999 mem: location 1285 is 1279
9999 run: result 0 is 1279
9999 mem: storing 1279 in location 1122
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1121 is 2
9999 mem: location 1120 is 7
9999 mem: storing 0 in location 1123
 102 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1121 is 2
9999 mem: location 1108 is 1098
9999 mem: location 1121 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1124
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1124 is 99
9999 mem: location 1122 is 1279
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1313
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1315
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1279 in location 1316
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1344
9999 mem: storing 1344 in location 1317
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1317 is 1344
9999 mem: location 1344 is 0
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: location 1317 is 1344
9999 run: address to copy is 1344
9999 mem: storing 1344 in location 1318
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1315 is 99
9999 mem: location 1318 is 1344
9999 mem: storing 99 in location 1344
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1316 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1214
9999 mem: location 1316 is 1279
9999 run: address to copy is 1280
9999 run: its type is address
9999 mem: location 1280 is 0
9999 mem: storing 0 in location 1319
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1316 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1214
9999 mem: location 1316 is 1279
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1320
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1317 is 1344
9999 mem: location 1320 is 1280
9999 mem: storing 1344 in location 1280
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1317 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: location 1317 is 1344
9999 run: address to copy is 1346
9999 mem: storing 1346 in location 1320
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1316 is 1279
9999 mem: location 1320 is 1346
9999 mem: storing 1279 in location 1346
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1317 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 0
9999 mem: location 1346 is 1279
9999 mem: location 1317 is 1344
9999 run: address to copy is 1345
9999 mem: storing 1345 in location 1320
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1319 is 0
9999 mem: location 1320 is 1345
9999 mem: storing 0 in location 1345
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1319 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1317 is 1344
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1122 is 1279
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1347
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1279 in location 1349
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1349 is 1279
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1349 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 1344
9999 mem: location 1281 is 1214
9999 mem: location 1349 is 1279
9999 run: address to copy is 1280
9999 run: its type is address
9999 mem: location 1280 is 1344
9999 mem: storing 1344 in location 1350
 103 run: reply result:address:duplex-list
9999 mem: location 1350 is 1344
9999 run: result 0 is 1344
9999 mem: storing 1344 in location 1122
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1121 is 3
9999 mem: location 1120 is 7
9999 mem: storing 0 in location 1123
 102 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1121 is 3
9999 mem: location 1108 is 1098
9999 mem: location 1121 is 3
9999 run: address to copy is 1102
9999 run: its type is character
9999 mem: location 1102 is 10
9999 mem: storing 10 in location 1124
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1124 is 10
9999 mem: location 1122 is 1344
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1378
 103 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1380
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1344 in location 1381
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1409
9999 mem: storing 1409 in location 1382
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1382 is 1409
9999 mem: location 1409 is 0
9999 mem: location 1410 is 0
9999 mem: location 1411 is 0
9999 mem: location 1382 is 1409
9999 run: address to copy is 1409
9999 mem: storing 1409 in location 1383
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1380 is 10
9999 mem: location 1383 is 1409
9999 mem: storing 10 in location 1409
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1381 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 0
9999 mem: location 1346 is 1279
9999 mem: location 1381 is 1344
9999 run: address to copy is 1345
9999 run: its type is address
9999 mem: location 1345 is 0
9999 mem: storing 0 in location 1384
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1381 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 0
9999 mem: location 1346 is 1279
9999 mem: location 1381 is 1344
9999 run: address to copy is 1345
9999 mem: storing 1345 in location 1385
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1382 is 1409
9999 mem: location 1385 is 1345
9999 mem: storing 1409 in location 1345
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1382 is 1409
9999 mem: location 1409 is 10
9999 mem: location 1410 is 0
9999 mem: location 1411 is 0
9999 mem: location 1382 is 1409
9999 run: address to copy is 1411
9999 mem: storing 1411 in location 1385
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1381 is 1344
9999 mem: location 1385 is 1411
9999 mem: storing 1344 in location 1411
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1382 is 1409
9999 mem: location 1409 is 10
9999 mem: location 1410 is 0
9999 mem: location 1411 is 1344
9999 mem: location 1382 is 1409
9999 run: address to copy is 1410
9999 mem: storing 1410 in location 1385
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1384 is 0
9999 mem: location 1385 is 1410
9999 mem: storing 0 in location 1410
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1384 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1382 is 1409
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1122 is 1344
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1412
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1344 in location 1414
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1414 is 1344
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1414 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 1409
9999 mem: location 1346 is 1279
9999 mem: location 1414 is 1344
9999 run: address to copy is 1345
9999 run: its type is address
9999 mem: location 1345 is 1409
9999 mem: storing 1409 in location 1415
 103 run: reply result:address:duplex-list
9999 mem: location 1415 is 1409
9999 run: result 0 is 1409
9999 mem: storing 1409 in location 1122
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1121 is 4
9999 mem: location 1120 is 7
9999 mem: storing 0 in location 1123
 102 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1121 is 4
9999 mem: location 1108 is 1098
9999 mem: location 1121 is 4
9999 run: address to copy is 1103
9999 run: its type is character
9999 mem: location 1103 is 100
9999 mem: storing 100 in location 1124
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1124 is 100
9999 mem: location 1122 is 1409
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1443
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1445
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1409 in location 1446
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1474
9999 mem: storing 1474 in location 1447
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1447 is 1474
9999 mem: location 1474 is 0
9999 mem: location 1475 is 0
9999 mem: location 1476 is 0
9999 mem: location 1447 is 1474
9999 run: address to copy is 1474
9999 mem: storing 1474 in location 1448
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1445 is 100
9999 mem: location 1448 is 1474
9999 mem: storing 100 in location 1474
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1446 is 1409
9999 mem: location 1409 is 10
9999 mem: location 1410 is 0
9999 mem: location 1411 is 1344
9999 mem: location 1446 is 1409
9999 run: address to copy is 1410
9999 run: its type is address
9999 mem: location 1410 is 0
9999 mem: storing 0 in location 1449
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1446 is 1409
9999 mem: location 1409 is 10
9999 mem: location 1410 is 0
9999 mem: location 1411 is 1344
9999 mem: location 1446 is 1409
9999 run: address to copy is 1410
9999 mem: storing 1410 in location 1450
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1447 is 1474
9999 mem: location 1450 is 1410
9999 mem: storing 1474 in location 1410
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1447 is 1474
9999 mem: location 1474 is 100
9999 mem: location 1475 is 0
9999 mem: location 1476 is 0
9999 mem: location 1447 is 1474
9999 run: address to copy is 1476
9999 mem: storing 1476 in location 1450
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1446 is 1409
9999 mem: location 1450 is 1476
9999 mem: storing 1409 in location 1476
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1447 is 1474
9999 mem: location 1474 is 100
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1409
9999 mem: location 1447 is 1474
9999 run: address to copy is 1475
9999 mem: storing 1475 in location 1450
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1449 is 0
9999 mem: location 1450 is 1475
9999 mem: storing 0 in location 1475
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1449 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1447 is 1474
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1122 is 1409
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1477
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1409 in location 1479
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1479 is 1409
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1479 is 1409
9999 mem: location 1409 is 10
9999 mem: location 1410 is 1474
9999 mem: location 1411 is 1344
9999 mem: location 1479 is 1409
9999 run: address to copy is 1410
9999 run: its type is address
9999 mem: location 1410 is 1474
9999 mem: storing 1474 in location 1480
 103 run: reply result:address:duplex-list
9999 mem: location 1480 is 1474
9999 run: result 0 is 1474
9999 mem: storing 1474 in location 1122
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1121 is 5
9999 mem: location 1120 is 7
9999 mem: storing 0 in location 1123
 102 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1121 is 5
9999 mem: location 1108 is 1098
9999 mem: location 1121 is 5
9999 run: address to copy is 1104
9999 run: its type is character
9999 mem: location 1104 is 101
9999 mem: storing 101 in location 1124
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1124 is 101
9999 mem: location 1122 is 1474
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1508
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1510
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1474 in location 1511
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1539
9999 mem: storing 1539 in location 1512
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1512 is 1539
9999 mem: location 1539 is 0
9999 mem: location 1540 is 0
9999 mem: location 1541 is 0
9999 mem: location 1512 is 1539
9999 run: address to copy is 1539
9999 mem: storing 1539 in location 1513
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1510 is 101
9999 mem: location 1513 is 1539
9999 mem: storing 101 in location 1539
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1511 is 1474
9999 mem: location 1474 is 100
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1409
9999 mem: location 1511 is 1474
9999 run: address to copy is 1475
9999 run: its type is address
9999 mem: location 1475 is 0
9999 mem: storing 0 in location 1514
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1511 is 1474
9999 mem: location 1474 is 100
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1409
9999 mem: location 1511 is 1474
9999 run: address to copy is 1475
9999 mem: storing 1475 in location 1515
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1512 is 1539
9999 mem: location 1515 is 1475
9999 mem: storing 1539 in location 1475
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1512 is 1539
9999 mem: location 1539 is 101
9999 mem: location 1540 is 0
9999 mem: location 1541 is 0
9999 mem: location 1512 is 1539
9999 run: address to copy is 1541
9999 mem: storing 1541 in location 1515
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1511 is 1474
9999 mem: location 1515 is 1541
9999 mem: storing 1474 in location 1541
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1512 is 1539
9999 mem: location 1539 is 101
9999 mem: location 1540 is 0
9999 mem: location 1541 is 1474
9999 mem: location 1512 is 1539
9999 run: address to copy is 1540
9999 mem: storing 1540 in location 1515
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1514 is 0
9999 mem: location 1515 is 1540
9999 mem: storing 0 in location 1540
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1514 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1512 is 1539
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1122 is 1474
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1542
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1474 in location 1544
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1544 is 1474
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1544 is 1474
9999 mem: location 1474 is 100
9999 mem: location 1475 is 1539
9999 mem: location 1476 is 1409
9999 mem: location 1544 is 1474
9999 run: address to copy is 1475
9999 run: its type is address
9999 mem: location 1475 is 1539
9999 mem: storing 1539 in location 1545
 103 run: reply result:address:duplex-list
9999 mem: location 1545 is 1539
9999 run: result 0 is 1539
9999 mem: storing 1539 in location 1122
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1121 is 6
9999 mem: location 1120 is 7
9999 mem: storing 0 in location 1123
 102 run: break-if done?:boolean, 
9999 mem: location 1123 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1121 is 6
9999 mem: location 1108 is 1098
9999 mem: location 1121 is 6
9999 run: address to copy is 1105
9999 run: its type is character
9999 mem: location 1105 is 102
9999 mem: storing 102 in location 1124
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1124 is 102
9999 mem: location 1122 is 1539
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1573
 103 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1575
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1539 in location 1576
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1604
9999 mem: storing 1604 in location 1577
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1577 is 1604
9999 mem: location 1604 is 0
9999 mem: location 1605 is 0
9999 mem: location 1606 is 0
9999 mem: location 1577 is 1604
9999 run: address to copy is 1604
9999 mem: storing 1604 in location 1578
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1575 is 102
9999 mem: location 1578 is 1604
9999 mem: storing 102 in location 1604
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1576 is 1539
9999 mem: location 1539 is 101
9999 mem: location 1540 is 0
9999 mem: location 1541 is 1474
9999 mem: location 1576 is 1539
9999 run: address to copy is 1540
9999 run: its type is address
9999 mem: location 1540 is 0
9999 mem: storing 0 in location 1579
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1576 is 1539
9999 mem: location 1539 is 101
9999 mem: location 1540 is 0
9999 mem: location 1541 is 1474
9999 mem: location 1576 is 1539
9999 run: address to copy is 1540
9999 mem: storing 1540 in location 1580
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1577 is 1604
9999 mem: location 1580 is 1540
9999 mem: storing 1604 in location 1540
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1577 is 1604
9999 mem: location 1604 is 102
9999 mem: location 1605 is 0
9999 mem: location 1606 is 0
9999 mem: location 1577 is 1604
9999 run: address to copy is 1606
9999 mem: storing 1606 in location 1580
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1576 is 1539
9999 mem: location 1580 is 1606
9999 mem: storing 1539 in location 1606
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1577 is 1604
9999 mem: location 1604 is 102
9999 mem: location 1605 is 0
9999 mem: location 1606 is 1539
9999 mem: location 1577 is 1604
9999 run: address to copy is 1605
9999 mem: storing 1605 in location 1580
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1579 is 0
9999 mem: location 1580 is 1605
9999 mem: storing 0 in location 1605
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1579 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1577 is 1604
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1122 is 1539
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1607
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1539 in location 1609
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1609 is 1539
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1609 is 1539
9999 mem: location 1539 is 101
9999 mem: location 1540 is 1604
9999 mem: location 1541 is 1474
9999 mem: location 1609 is 1539
9999 run: address to copy is 1540
9999 run: its type is address
9999 mem: location 1540 is 1604
9999 mem: storing 1604 in location 1610
 103 run: reply result:address:duplex-list
9999 mem: location 1610 is 1604
9999 run: result 0 is 1604
9999 mem: storing 1604 in location 1122
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1121 is 6
9999 mem: storing 7 in location 1121
 102 run: loop 
9999 run: jumping to instruction 38
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1121 is 7
9999 mem: location 1120 is 7
9999 mem: storing 1 in location 1123
 102 run: break-if done?:boolean, 
9999 mem: location 1123 is 1
9999 run: jumping to instruction 45
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1113 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1117
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1118 is 1138
9999 mem: location 1138 is 1180
9999 mem: location 1117 is 1139
9999 mem: storing 1180 in location 1139
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1113 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1125
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1113 is 1137
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1638
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1137 in location 1640
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1140
9999 run: its type is address
9999 mem: location 1140 is 1031
9999 mem: storing 1031 in location 1641
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1642
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1142
9999 run: its type is number
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1643
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1641 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1679
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1681
 104 run: break-unless x:address:screen, 
9999 mem: location 1681 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1681 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1681 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1682
 104 run: reply height:number
9999 mem: location 1682 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1644
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1144
9999 run: its type is number
9999 mem: location 1144 is 4
9999 mem: storing 4 in location 1645
 103 run: hide-screen screen:address
9999 mem: location 1641 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1710
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1712
 104 run: break-unless x:address:screen, 
9999 mem: location 1712 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1712 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 1180
9999 mem: storing 1180 in location 1646
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1646 is 1180
9999 mem: storing 1180 in location 1647
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1646 is 1180
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1741
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1743
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1743 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1743 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 1214
9999 mem: location 1182 is 0
9999 mem: location 1743 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1214
9999 mem: storing 1214 in location 1744
 104 run: reply result:address:duplex-list
9999 mem: location 1744 is 1214
9999 run: result 0 is 1214
9999 mem: storing 1214 in location 1646
 103 run: row:number <- copy top:number
9999 mem: location 1642 is 0
9999 mem: storing 0 in location 1648
 103 run: column:number <- copy left:number
9999 mem: location 1643 is 1
9999 mem: storing 1 in location 1649
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1650
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1651
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1652
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1641 is 1031
9999 mem: location 1648 is 0
9999 mem: location 1649 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1772
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1774
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1775
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1776
 104 run: break-unless x:address:screen, 
9999 mem: location 1774 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1774 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1774 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1777
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1775 is 0
9999 mem: location 1777 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1774 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1774 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1778
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1776 is 1
9999 mem: location 1778 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1774 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1646 is 1214
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1648 is 0
9999 mem: location 1644 is 3
9999 mem: storing 0 in location 1653
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1653 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 0
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1654
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1654 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1649 is 1
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1655
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1655 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1646 is 1214
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1803
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1805
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1805 is 1214
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1805 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1805 is 1214
9999 run: address to copy is 1216
9999 run: its type is address
9999 mem: location 1216 is 1180
9999 mem: storing 1180 in location 1806
 104 run: reply result:address:duplex-list
9999 mem: location 1806 is 1180
9999 run: result 0 is 1180
9999 mem: location 1652 is 1139
9999 mem: storing 1180 in location 1139
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1646 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1646 is 1214
9999 run: address to copy is 1214
9999 run: its type is number
9999 mem: location 1214 is 97
9999 mem: storing 97 in location 1656
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1656 is 97
9999 mem: storing 0 in location 1657
 103 run: break-unless newline?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1649 is 1
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1641 is 1031
9999 mem: location 1656 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1834
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1836
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1837
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1838
9999 mem: storing 0 in location 1839
 104 run: break-if color-found?:boolean, 
9999 mem: location 1839 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1838
 104 run: break-unless x:address:screen, 
9999 mem: location 1836 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1836 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1840
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1836 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1841
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1836 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1842
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1836 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1843
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1837 is 97
9999 mem: storing 0 in location 1844
 104 run: break-unless newline?:boolean, 
9999 mem: location 1844 is 0
9999 run: jumping to instruction 25
schedule: print-character/render/new-editor/run1001/editor-initially-prints-multiple-lines-at-offset
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1840 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1842 is 5
9999 mem: storing 0 in location 1847
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1847 is 0
9999 mem: location 1841 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1847
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1836 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1836 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1848
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1837 is 97
9999 mem: storing 0 in location 1849
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1849 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1848 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1847 is 1
9999 mem: location 1848 is 1036
9999 mem: location 1847 is 1
9999 mem: storing 1039 in location 1851
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1851 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1851 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1852
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1851 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1851 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1853
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1837 is 97
9999 mem: location 1852 is 1039
9999 mem: storing 97 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1838 is 7
9999 mem: location 1853 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1842 is 5
9999 mem: storing 4 in location 1854
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1841 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1854 is 4
9999 mem: storing 0 in location 1855
 104 run: break-if at-right?:boolean, 
9999 mem: location 1855 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1841 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1841 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1836 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1646 is 1214
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1865
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1867
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1867 is 1214
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1867 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1867 is 1214
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 1279
9999 mem: storing 1279 in location 1868
 104 run: reply result:address:duplex-list
9999 mem: location 1868 is 1279
9999 run: result 0 is 1279
9999 mem: storing 1279 in location 1646
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1647 is 1180
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1896
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1898
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1898 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1898 is 1180
9999 mem: location 1180 is 167
9999 mem: location 1181 is 1214
9999 mem: location 1182 is 0
9999 mem: location 1898 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1214
9999 mem: storing 1214 in location 1899
 104 run: reply result:address:duplex-list
9999 mem: location 1899 is 1214
9999 run: result 0 is 1214
9999 mem: storing 1214 in location 1647
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 1
9999 mem: storing 2 in location 1649
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1646 is 1279
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1648 is 0
9999 mem: location 1644 is 3
9999 mem: storing 0 in location 1653
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1653 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 0
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1654
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1654 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1649 is 2
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1655
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1655 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1646 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 1344
9999 mem: location 1281 is 1214
9999 mem: location 1646 is 1279
9999 run: address to copy is 1279
9999 run: its type is number
9999 mem: location 1279 is 98
9999 mem: storing 98 in location 1656
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1656 is 98
9999 mem: storing 0 in location 1657
 103 run: break-unless newline?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1649 is 2
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1641 is 1031
9999 mem: location 1656 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1927
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1929
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1930
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1931
9999 mem: storing 0 in location 1932
 104 run: break-if color-found?:boolean, 
9999 mem: location 1932 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1931
 104 run: break-unless x:address:screen, 
9999 mem: location 1929 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1929 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1929 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1933
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1929 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1929 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1934
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1929 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1929 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1935
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1929 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1929 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1936
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1930 is 98
9999 mem: storing 0 in location 1937
 104 run: break-unless newline?:boolean, 
9999 mem: location 1937 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1933 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1935 is 5
9999 mem: storing 0 in location 1940
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1940 is 0
9999 mem: location 1934 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1940
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1929 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1929 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1941
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1930 is 98
9999 mem: storing 0 in location 1942
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1942 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1941 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1940 is 2
9999 mem: location 1941 is 1036
9999 mem: location 1940 is 2
9999 mem: storing 1041 in location 1944
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1944 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1944 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1945
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1944 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1944 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1946
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1930 is 98
9999 mem: location 1945 is 1041
9999 mem: storing 98 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1931 is 7
9999 mem: location 1946 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1935 is 5
9999 mem: storing 4 in location 1947
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1934 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1947 is 4
9999 mem: storing 0 in location 1948
 104 run: break-if at-right?:boolean, 
9999 mem: location 1948 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1934 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1934 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1929 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1646 is 1279
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1958
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1279 in location 1960
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1960 is 1279
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1960 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 1344
9999 mem: location 1281 is 1214
9999 mem: location 1960 is 1279
9999 run: address to copy is 1280
9999 run: its type is address
9999 mem: location 1280 is 1344
9999 mem: storing 1344 in location 1961
 104 run: reply result:address:duplex-list
9999 mem: location 1961 is 1344
9999 run: result 0 is 1344
9999 mem: storing 1344 in location 1646
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1647 is 1214
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1989
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1214 in location 1991
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1991 is 1214
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1991 is 1214
9999 mem: location 1214 is 97
9999 mem: location 1215 is 1279
9999 mem: location 1216 is 1180
9999 mem: location 1991 is 1214
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 1279
9999 mem: storing 1279 in location 1992
 104 run: reply result:address:duplex-list
9999 mem: location 1992 is 1279
9999 run: result 0 is 1279
9999 mem: storing 1279 in location 1647
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 2
9999 mem: storing 3 in location 1649
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1646 is 1344
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1648 is 0
9999 mem: location 1644 is 3
9999 mem: storing 0 in location 1653
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1653 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 0
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1654
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1654 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1649 is 3
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1655
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1655 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1646 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 1409
9999 mem: location 1346 is 1279
9999 mem: location 1646 is 1344
9999 run: address to copy is 1344
9999 run: its type is number
9999 mem: location 1344 is 99
9999 mem: storing 99 in location 1656
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1656 is 99
9999 mem: storing 0 in location 1657
 103 run: break-unless newline?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1649 is 3
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1641 is 1031
9999 mem: location 1656 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2020
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2022
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2023
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2024
9999 mem: storing 0 in location 2025
 104 run: break-if color-found?:boolean, 
9999 mem: location 2025 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2024
 104 run: break-unless x:address:screen, 
9999 mem: location 2022 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2022 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2022 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2026
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2022 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2022 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2027
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2022 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2022 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2028
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2022 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2022 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2029
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2023 is 99
9999 mem: storing 0 in location 2030
 104 run: break-unless newline?:boolean, 
9999 mem: location 2030 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2026 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2028 is 5
9999 mem: storing 0 in location 2033
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2033 is 0
9999 mem: location 2027 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 2033
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2022 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2022 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2034
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2023 is 99
9999 mem: storing 0 in location 2035
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2035 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2034 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2033 is 3
9999 mem: location 2034 is 1036
9999 mem: location 2033 is 3
9999 mem: storing 1043 in location 2037
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2037 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2037 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2038
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2037 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2037 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2039
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2023 is 99
9999 mem: location 2038 is 1043
9999 mem: storing 99 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2024 is 7
9999 mem: location 2039 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2028 is 5
9999 mem: storing 4 in location 2040
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2027 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2040 is 4
9999 mem: storing 0 in location 2041
 104 run: break-if at-right?:boolean, 
9999 mem: location 2041 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2027 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2027 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2022 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1646 is 1344
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2051
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1344 in location 2053
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2053 is 1344
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2053 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 1409
9999 mem: location 1346 is 1279
9999 mem: location 2053 is 1344
9999 run: address to copy is 1345
9999 run: its type is address
9999 mem: location 1345 is 1409
9999 mem: storing 1409 in location 2054
 104 run: reply result:address:duplex-list
9999 mem: location 2054 is 1409
9999 run: result 0 is 1409
9999 mem: storing 1409 in location 1646
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1647 is 1279
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2082
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1279 in location 2084
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2084 is 1279
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2084 is 1279
9999 mem: location 1279 is 98
9999 mem: location 1280 is 1344
9999 mem: location 1281 is 1214
9999 mem: location 2084 is 1279
9999 run: address to copy is 1280
9999 run: its type is address
9999 mem: location 1280 is 1344
9999 mem: storing 1344 in location 2085
 104 run: reply result:address:duplex-list
9999 mem: location 2085 is 1344
9999 run: result 0 is 1344
9999 mem: storing 1344 in location 1647
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 3
9999 mem: storing 4 in location 1649
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1646 is 1409
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1648 is 0
9999 mem: location 1644 is 3
9999 mem: storing 0 in location 1653
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1653 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 0
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1654
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1654 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1649 is 4
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1655
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1655 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1646 is 1409
9999 mem: location 1409 is 10
9999 mem: location 1410 is 1474
9999 mem: location 1411 is 1344
9999 mem: location 1646 is 1409
9999 run: address to copy is 1409
9999 run: its type is number
9999 mem: location 1409 is 10
9999 mem: storing 10 in location 1656
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1656 is 10
9999 mem: storing 1 in location 1657
 103 run: break-unless newline?:boolean, 
9999 mem: location 1657 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 0
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1654
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1654 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column:number, cursor-column:address:number/deref
9999 mem: location 1649 is 4
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1658
 103 run: break-unless left-of-cursor?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 40
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1649 is 4
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1659
 103 run: break-if done?:boolean, 
9999 mem: location 1659 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1641 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2113
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2115
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2116
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2117
9999 mem: storing 0 in location 2118
 104 run: break-if color-found?:boolean, 
9999 mem: location 2118 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2117
 104 run: break-unless x:address:screen, 
9999 mem: location 2115 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2115 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2115 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2119
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2115 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2115 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2120
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2115 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2115 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2121
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2115 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2115 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2122
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2116 is 32
9999 mem: storing 0 in location 2123
 104 run: break-unless newline?:boolean, 
9999 mem: location 2123 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2119 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2121 is 5
9999 mem: storing 0 in location 2126
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2126 is 0
9999 mem: location 2120 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 2126
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2115 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2115 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2127
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2116 is 32
9999 mem: storing 0 in location 2128
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2128 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2127 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2126 is 4
9999 mem: location 2127 is 1036
9999 mem: location 2126 is 4
9999 mem: storing 1045 in location 2130
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2130 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2130 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 2131
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2130 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2130 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 2132
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2116 is 32
9999 mem: location 2131 is 1045
9999 mem: storing 32 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2117 is 7
9999 mem: location 2132 is 1046
9999 mem: storing 7 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2121 is 5
9999 mem: storing 4 in location 2133
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2120 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2133 is 4
9999 mem: storing 1 in location 2134
 104 run: break-if at-right?:boolean, 
9999 mem: location 2134 is 1
9999 run: jumping to instruction 55
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2115 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 4
9999 mem: storing 5 in location 1649
 103 run: loop 
9999 run: jumping to instruction 42
 103 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 1649 is 5
9999 mem: location 1645 is 4
9999 mem: storing 1 in location 1659
 103 run: break-if done?:boolean, 
9999 mem: location 1659 is 1
9999 run: jumping to instruction 47
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1648 is 0
9999 mem: storing 1 in location 1648
 103 run: column:number <- copy left:number
9999 mem: location 1643 is 1
9999 mem: storing 1 in location 1649
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1641 is 1031
9999 mem: location 1648 is 1
9999 mem: location 1649 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2144
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2146
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2147
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2148
 104 run: break-unless x:address:screen, 
9999 mem: location 2146 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2146 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2146 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2149
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2147 is 1
9999 mem: location 2149 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2146 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2146 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2150
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2148 is 1
9999 mem: location 2150 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2146 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1646 is 1409
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2175
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1409 in location 2177
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2177 is 1409
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2177 is 1409
9999 mem: location 1409 is 10
9999 mem: location 1410 is 1474
9999 mem: location 1411 is 1344
9999 mem: location 2177 is 1409
9999 run: address to copy is 1410
9999 run: its type is address
9999 mem: location 1410 is 1474
9999 mem: storing 1474 in location 2178
 104 run: reply result:address:duplex-list
9999 mem: location 2178 is 1474
9999 run: result 0 is 1474
9999 mem: storing 1474 in location 1646
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1647 is 1344
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2206
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1344 in location 2208
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2208 is 1344
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2208 is 1344
9999 mem: location 1344 is 99
9999 mem: location 1345 is 1409
9999 mem: location 1346 is 1279
9999 mem: location 2208 is 1344
9999 run: address to copy is 1345
9999 run: its type is address
9999 mem: location 1345 is 1409
9999 mem: storing 1409 in location 2209
 104 run: reply result:address:duplex-list
9999 mem: location 2209 is 1409
9999 run: result 0 is 1409
9999 mem: storing 1409 in location 1647
 103 run: loop +next-character:label
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1646 is 1474
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1648 is 1
9999 mem: location 1644 is 3
9999 mem: storing 0 in location 1653
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1653 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 1
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1654
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1654 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1646 is 1474
9999 mem: location 1474 is 100
9999 mem: location 1475 is 1539
9999 mem: location 1476 is 1409
9999 mem: location 1646 is 1474
9999 run: address to copy is 1474
9999 run: its type is number
9999 mem: location 1474 is 100
9999 mem: storing 100 in location 1656
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1656 is 100
9999 mem: storing 0 in location 1657
 103 run: break-unless newline?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1649 is 1
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1641 is 1031
9999 mem: location 1656 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2237
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2239
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2240
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2241
9999 mem: storing 0 in location 2242
 104 run: break-if color-found?:boolean, 
9999 mem: location 2242 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2241
 104 run: break-unless x:address:screen, 
9999 mem: location 2239 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2239 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2239 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2243
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2239 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2239 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2244
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2239 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2239 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2245
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2239 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2239 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2246
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2240 is 100
9999 mem: storing 0 in location 2247
 104 run: break-unless newline?:boolean, 
9999 mem: location 2247 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2243 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2245 is 5
9999 mem: storing 5 in location 2250
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2250 is 5
9999 mem: location 2244 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 2250
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2239 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2239 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2251
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2240 is 100
9999 mem: storing 0 in location 2252
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2252 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2251 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2250 is 6
9999 mem: location 2251 is 1036
9999 mem: location 2250 is 6
9999 mem: storing 1049 in location 2254
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2254 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2254 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2255
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2254 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2254 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2256
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2240 is 100
9999 mem: location 2255 is 1049
9999 mem: storing 100 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2241 is 7
9999 mem: location 2256 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2245 is 5
9999 mem: storing 4 in location 2257
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2244 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2257 is 4
9999 mem: storing 0 in location 2258
 104 run: break-if at-right?:boolean, 
9999 mem: location 2258 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2244 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2244 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2239 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1646 is 1474
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2268
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1474 in location 2270
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2270 is 1474
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2270 is 1474
9999 mem: location 1474 is 100
9999 mem: location 1475 is 1539
9999 mem: location 1476 is 1409
9999 mem: location 2270 is 1474
9999 run: address to copy is 1475
9999 run: its type is address
9999 mem: location 1475 is 1539
9999 mem: storing 1539 in location 2271
 104 run: reply result:address:duplex-list
9999 mem: location 2271 is 1539
9999 run: result 0 is 1539
9999 mem: storing 1539 in location 1646
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1647 is 1409
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2299
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1409 in location 2301
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2301 is 1409
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2301 is 1409
9999 mem: location 1409 is 10
9999 mem: location 1410 is 1474
9999 mem: location 1411 is 1344
9999 mem: location 2301 is 1409
9999 run: address to copy is 1410
9999 run: its type is address
9999 mem: location 1410 is 1474
9999 mem: storing 1474 in location 2302
 104 run: reply result:address:duplex-list
9999 mem: location 2302 is 1474
9999 run: result 0 is 1474
9999 mem: storing 1474 in location 1647
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 1
9999 mem: storing 2 in location 1649
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1646 is 1539
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1648 is 1
9999 mem: location 1644 is 3
9999 mem: storing 0 in location 1653
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1653 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 1
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1654
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1654 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1646 is 1539
9999 mem: location 1539 is 101
9999 mem: location 1540 is 1604
9999 mem: location 1541 is 1474
9999 mem: location 1646 is 1539
9999 run: address to copy is 1539
9999 run: its type is number
9999 mem: location 1539 is 101
9999 mem: storing 101 in location 1656
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1656 is 101
9999 mem: storing 0 in location 1657
 103 run: break-unless newline?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1649 is 2
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1641 is 1031
9999 mem: location 1656 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2330
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2332
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2333
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2334
9999 mem: storing 0 in location 2335
 104 run: break-if color-found?:boolean, 
9999 mem: location 2335 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2334
 104 run: break-unless x:address:screen, 
9999 mem: location 2332 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2332 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2332 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2336
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2332 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2332 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2337
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2332 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2332 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2338
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2332 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2332 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2339
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2333 is 101
9999 mem: storing 0 in location 2340
 104 run: break-unless newline?:boolean, 
9999 mem: location 2340 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2336 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2338 is 5
9999 mem: storing 5 in location 2343
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2343 is 5
9999 mem: location 2337 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2343
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2332 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2332 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2344
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2333 is 101
9999 mem: storing 0 in location 2345
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2345 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2344 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2343 is 7
9999 mem: location 2344 is 1036
9999 mem: location 2343 is 7
9999 mem: storing 1051 in location 2347
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2347 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2347 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2348
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2347 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2347 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2349
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2333 is 101
9999 mem: location 2348 is 1051
9999 mem: storing 101 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2334 is 7
9999 mem: location 2349 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2338 is 5
9999 mem: storing 4 in location 2350
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2337 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2350 is 4
9999 mem: storing 0 in location 2351
 104 run: break-if at-right?:boolean, 
9999 mem: location 2351 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2337 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2337 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2332 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1646 is 1539
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2361
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1539 in location 2363
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2363 is 1539
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2363 is 1539
9999 mem: location 1539 is 101
9999 mem: location 1540 is 1604
9999 mem: location 1541 is 1474
9999 mem: location 2363 is 1539
9999 run: address to copy is 1540
9999 run: its type is address
9999 mem: location 1540 is 1604
9999 mem: storing 1604 in location 2364
 104 run: reply result:address:duplex-list
9999 mem: location 2364 is 1604
9999 run: result 0 is 1604
9999 mem: storing 1604 in location 1646
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1647 is 1474
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2392
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1474 in location 2394
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2394 is 1474
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2394 is 1474
9999 mem: location 1474 is 100
9999 mem: location 1475 is 1539
9999 mem: location 1476 is 1409
9999 mem: location 2394 is 1474
9999 run: address to copy is 1475
9999 run: its type is address
9999 mem: location 1475 is 1539
9999 mem: storing 1539 in location 2395
 104 run: reply result:address:duplex-list
9999 mem: location 2395 is 1539
9999 run: result 0 is 1539
9999 mem: storing 1539 in location 1647
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 2
9999 mem: storing 3 in location 1649
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1646 is 1604
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1648 is 1
9999 mem: location 1644 is 3
9999 mem: storing 0 in location 1653
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1653 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 1
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1654
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1654 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1646 is 1604
9999 mem: location 1604 is 102
9999 mem: location 1605 is 0
9999 mem: location 1606 is 1539
9999 mem: location 1646 is 1604
9999 run: address to copy is 1604
9999 run: its type is number
9999 mem: location 1604 is 102
9999 mem: storing 102 in location 1656
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1656 is 102
9999 mem: storing 0 in location 1657
 103 run: break-unless newline?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1649 is 3
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1641 is 1031
9999 mem: location 1656 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2423
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2425
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 2426
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2427
9999 mem: storing 0 in location 2428
 104 run: break-if color-found?:boolean, 
9999 mem: location 2428 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2427
 104 run: break-unless x:address:screen, 
9999 mem: location 2425 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2425 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2425 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2429
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2425 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2425 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2430
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2425 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2425 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2431
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2425 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2425 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2432
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2426 is 102
9999 mem: storing 0 in location 2433
 104 run: break-unless newline?:boolean, 
9999 mem: location 2433 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2429 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2431 is 5
9999 mem: storing 5 in location 2436
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2436 is 5
9999 mem: location 2430 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2436
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2425 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2425 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2437
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2426 is 102
9999 mem: storing 0 in location 2438
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2438 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2437 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 101
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2436 is 8
9999 mem: location 2437 is 1036
9999 mem: location 2436 is 8
9999 mem: storing 1053 in location 2440
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2440 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2440 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2441
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2440 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2440 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2442
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2426 is 102
9999 mem: location 2441 is 1053
9999 mem: storing 102 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2427 is 7
9999 mem: location 2442 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2431 is 5
9999 mem: storing 4 in location 2443
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2430 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2443 is 4
9999 mem: storing 0 in location 2444
 104 run: break-if at-right?:boolean, 
9999 mem: location 2444 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2430 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2430 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2425 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1646 is 1604
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2454
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1604 in location 2456
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2456 is 1604
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2456 is 1604
9999 mem: location 1604 is 102
9999 mem: location 1605 is 0
9999 mem: location 1606 is 1539
9999 mem: location 2456 is 1604
9999 run: address to copy is 1605
9999 run: its type is address
9999 mem: location 1605 is 0
9999 mem: storing 0 in location 2457
 104 run: reply result:address:duplex-list
9999 mem: location 2457 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1646
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1647 is 1539
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2485
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1539 in location 2487
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2487 is 1539
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2487 is 1539
9999 mem: location 1539 is 101
9999 mem: location 1540 is 1604
9999 mem: location 1541 is 1474
9999 mem: location 2487 is 1539
9999 run: address to copy is 1540
9999 run: its type is address
9999 mem: location 1540 is 1604
9999 mem: storing 1604 in location 2488
 104 run: reply result:address:duplex-list
9999 mem: location 2488 is 1604
9999 run: result 0 is 1604
9999 mem: storing 1604 in location 1647
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 3
9999 mem: storing 4 in location 1649
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1646 is 0
9999 run: jumping to instruction 74
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1664
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1648 is 1
9999 mem: location 1664 is 1143
9999 mem: storing 1 in location 1143
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 1
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1654
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1649 is 4
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1665
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1654 is 0
9999 mem: location 1665 is 0
9999 mem: storing 0 in location 1666
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1648 is 1
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1667
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1666 is 0
9999 mem: location 1667 is 0
9999 mem: storing 0 in location 1668
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1668 is 0
9999 run: jumping to instruction 95
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1648 is 1
9999 mem: location 1644 is 3
9999 mem: storing 0 in location 1659
 103 run: break-if done?:boolean, 
9999 mem: location 1659 is 0
9999 run: jump-if fell through
 103 run: line-done?:boolean <- greater-than column:number, right:number
9999 mem: location 1649 is 4
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1671
 103 run: break-if line-done?:boolean, 
9999 mem: location 1671 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1641 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2516
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2518
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2519
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2520
9999 mem: storing 0 in location 2521
 104 run: break-if color-found?:boolean, 
9999 mem: location 2521 is 0
9999 run: jump-if fell through
schedule: print-character/render/new-editor/run1001/editor-initially-prints-multiple-lines-at-offset
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2520
 104 run: break-unless x:address:screen, 
9999 mem: location 2518 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2518 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2518 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2522
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2518 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2518 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2523
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2518 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2518 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2524
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2518 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2518 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2525
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2519 is 32
9999 mem: storing 0 in location 2526
 104 run: break-unless newline?:boolean, 
9999 mem: location 2526 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2522 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2524 is 5
9999 mem: storing 5 in location 2529
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2529 is 5
9999 mem: location 2523 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 2529
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2518 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2518 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2530
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2519 is 32
9999 mem: storing 0 in location 2531
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2531 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2530 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 101
9999 mem: location 1052 is 7
9999 mem: location 1053 is 102
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2529 is 9
9999 mem: location 2530 is 1036
9999 mem: location 2529 is 9
9999 mem: storing 1055 in location 2533
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2533 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2533 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2534
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2533 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2533 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2535
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2519 is 32
9999 mem: location 2534 is 1055
9999 mem: storing 32 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2520 is 7
9999 mem: location 2535 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2524 is 5
9999 mem: storing 4 in location 2536
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2523 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2536 is 4
9999 mem: storing 1 in location 2537
 104 run: break-if at-right?:boolean, 
9999 mem: location 2537 is 1
9999 run: jumping to instruction 55
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2518 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 4
9999 mem: storing 5 in location 1649
 103 run: loop 
9999 run: jumping to instruction 100
 103 run: line-done?:boolean <- greater-than column:number, right:number
9999 mem: location 1649 is 5
9999 mem: location 1645 is 4
9999 mem: storing 1 in location 1671
 103 run: break-if line-done?:boolean, 
9999 mem: location 1671 is 1
9999 run: jumping to instruction 105
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1648 is 1
9999 mem: storing 2 in location 1648
 103 run: column:number <- copy left:number
9999 mem: location 1643 is 1
9999 mem: storing 1 in location 1649
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1648 is 2
9999 mem: location 1644 is 3
9999 mem: storing 0 in location 1659
 103 run: break-if done?:boolean, 
9999 mem: location 1659 is 0
9999 run: jump-if fell through
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1641 is 1031
9999 mem: location 1648 is 2
9999 mem: location 1649 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2547
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2549
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2550
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2551
 104 run: break-unless x:address:screen, 
9999 mem: location 2549 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2549 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2549 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2552
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2550 is 2
9999 mem: location 2552 is 1033
9999 mem: storing 2 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2549 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2549 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2553
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2551 is 1
9999 mem: location 2553 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2549 is 1031
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1649 is 1
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1671
 103 run: break-if line-done?:boolean, 
9999 mem: location 1671 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1641 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2578
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2580
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2581
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2582
9999 mem: storing 0 in location 2583
 104 run: break-if color-found?:boolean, 
9999 mem: location 2583 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2582
 104 run: break-unless x:address:screen, 
9999 mem: location 2580 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2580 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2580 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2584
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2580 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2580 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2585
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2580 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2580 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2586
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2580 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2580 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2587
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2581 is 32
9999 mem: storing 0 in location 2588
 104 run: break-unless newline?:boolean, 
9999 mem: location 2588 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2584 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2586 is 5
9999 mem: storing 10 in location 2591
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2591 is 10
9999 mem: location 2585 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 2591
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2580 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2580 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2592
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2581 is 32
9999 mem: storing 0 in location 2593
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2593 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2592 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 101
9999 mem: location 1052 is 7
9999 mem: location 1053 is 102
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2591 is 11
9999 mem: location 2592 is 1036
9999 mem: location 2591 is 11
9999 mem: storing 1059 in location 2595
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2595 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2595 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2596
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2595 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2595 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2597
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2581 is 32
9999 mem: location 2596 is 1059
9999 mem: storing 32 in location 1059
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2582 is 7
9999 mem: location 2597 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2586 is 5
9999 mem: storing 4 in location 2598
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2585 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2598 is 4
9999 mem: storing 0 in location 2599
 104 run: break-if at-right?:boolean, 
9999 mem: location 2599 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2585 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2585 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2580 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 1
9999 mem: storing 2 in location 1649
 103 run: loop 
9999 run: jumping to instruction 112
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1649 is 2
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1671
 103 run: break-if line-done?:boolean, 
9999 mem: location 1671 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1641 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2609
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2611
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2612
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2613
9999 mem: storing 0 in location 2614
 104 run: break-if color-found?:boolean, 
9999 mem: location 2614 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2613
 104 run: break-unless x:address:screen, 
9999 mem: location 2611 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2611 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2611 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2615
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2611 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2611 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2616
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2611 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2611 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2617
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2611 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2611 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2618
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2612 is 32
9999 mem: storing 0 in location 2619
 104 run: break-unless newline?:boolean, 
9999 mem: location 2619 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2615 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2617 is 5
9999 mem: storing 10 in location 2622
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2622 is 10
9999 mem: location 2616 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 2622
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2611 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2611 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2623
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2612 is 32
9999 mem: storing 0 in location 2624
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2624 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2623 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 101
9999 mem: location 1052 is 7
9999 mem: location 1053 is 102
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2622 is 12
9999 mem: location 2623 is 1036
9999 mem: location 2622 is 12
9999 mem: storing 1061 in location 2626
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2626 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2626 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2627
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2626 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2626 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2628
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2612 is 32
9999 mem: location 2627 is 1061
9999 mem: storing 32 in location 1061
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2613 is 7
9999 mem: location 2628 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2617 is 5
9999 mem: storing 4 in location 2629
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2616 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2629 is 4
9999 mem: storing 0 in location 2630
 104 run: break-if at-right?:boolean, 
9999 mem: location 2630 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2616 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2616 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2611 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 2
9999 mem: storing 3 in location 1649
 103 run: loop 
9999 run: jumping to instruction 112
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1649 is 3
9999 mem: location 1645 is 4
9999 mem: storing 0 in location 1671
 103 run: break-if line-done?:boolean, 
9999 mem: location 1671 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 32:literal/space
9999 mem: location 1641 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2640
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2642
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2643
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2644
9999 mem: storing 0 in location 2645
 104 run: break-if color-found?:boolean, 
9999 mem: location 2645 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2644
 104 run: break-unless x:address:screen, 
9999 mem: location 2642 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2642 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2642 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2646
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2642 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2642 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2647
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2642 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2642 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2648
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2642 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2642 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2649
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2643 is 32
9999 mem: storing 0 in location 2650
 104 run: break-unless newline?:boolean, 
9999 mem: location 2650 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2646 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2648 is 5
9999 mem: storing 10 in location 2653
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2653 is 10
9999 mem: location 2647 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 2653
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2642 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2642 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2654
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2643 is 32
9999 mem: storing 0 in location 2655
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2655 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2654 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 101
9999 mem: location 1052 is 7
9999 mem: location 1053 is 102
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 32
9999 mem: location 1060 is 7
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2653 is 13
9999 mem: location 2654 is 1036
9999 mem: location 2653 is 13
9999 mem: storing 1063 in location 2657
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2657 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2657 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2658
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2657 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2657 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2659
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2643 is 32
9999 mem: location 2658 is 1063
9999 mem: storing 32 in location 1063
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2644 is 7
9999 mem: location 2659 is 1064
9999 mem: storing 7 in location 1064
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2648 is 5
9999 mem: storing 4 in location 2660
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2647 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2660 is 4
9999 mem: storing 0 in location 2661
 104 run: break-if at-right?:boolean, 
9999 mem: location 2661 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2647 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2647 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2642 is 1031
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1649 is 3
9999 mem: storing 4 in location 1649
 103 run: loop 
9999 run: jumping to instruction 112
 103 run: line-done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1649 is 4
9999 mem: location 1645 is 4
9999 mem: storing 1 in location 1671
 103 run: break-if line-done?:boolean, 
9999 mem: location 1671 is 1
9999 run: jumping to instruction 117
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 1640 is 1137
9999 mem: location 1137 is 1180
9999 mem: location 1138 is 1180
9999 mem: location 1139 is 1180
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 1
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1640 is 1137
9999 run: address to copy is 1148
9999 run: its type is boolean
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1672
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 1672 is 1
9999 run: jump-unless fell through
 103 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 1
9999 mem: location 1645 is 4
9999 mem: storing 1 in location 1673
 103 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 1673 is 1
 103 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 1
9999 mem: location 1643 is 1
9999 mem: storing 1 in location 1674
 103 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 1674 is 1
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1641 is 1031
9999 mem: location 1650 is 1145
9999 mem: location 1145 is 0
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2671
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2673
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2674
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2675
 104 run: break-unless x:address:screen, 
9999 mem: location 2673 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2673 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2673 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2676
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2674 is 0
9999 mem: location 2676 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2673 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2673 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2677
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2675 is 1
9999 mem: location 2677 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2673 is 1031
 103 run: show-screen screen:address
9999 mem: location 1641 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2702
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2704
 104 run: break-unless x:address:screen, 
9999 mem: location 2704 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2704 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1640 is 1137
9999 run: result 0 is 1137
9999 mem: storing 1137 in location 1113
 102 run: reply result:address:editor-data
9999 mem: location 1113 is 1137
 100 run: screen-should-contain [
    . abc .
    . def .
    .     .
  ]
