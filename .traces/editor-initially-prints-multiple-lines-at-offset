parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc\ndef]\n    new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    . abc .\n    . def .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-prints-multiple-lines-at-offset
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-prints-multiple-lines-at-offset
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc
def]
    new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc\ndef", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "1", properties: ["1": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc
def]
9999 mem: storing 1098 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/top, 1:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1106
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1108
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1109
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1110
 102 run: left:number <- next-ingredient 
9999 mem: storing 1 in location 1111
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1112
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1112 is 5
9999 mem: storing 4 in location 1112
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1137
9999 mem: storing 1137 in location 1113
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1114
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1109 is 1031
9999 mem: location 1114 is 1140
9999 mem: storing 1031 in location 1140
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1141
9999 mem: storing 0 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1115
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 1
9999 mem: location 1115 is 1142
9999 mem: storing 1 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1115
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1112 is 4
9999 mem: location 1115 is 1144
9999 mem: storing 4 in location 1144
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1143
9999 mem: storing 0 in location 1143
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1145
9999 mem: storing 0 in location 1145
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1115
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 1
9999 mem: location 1115 is 1146
9999 mem: storing 1 in location 1146
 102 run: d:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1116
 102 run: d:address:address:duplex-list/deref <- push-duplex 167:literal/§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1148
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1150
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1151
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1179
9999 mem: storing 1179 in location 1152
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1152 is 1179
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1152 is 1179
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1153
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1150 is 167
9999 mem: location 1153 is 1179
9999 mem: storing 167 in location 1179
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1152 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1152 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1154
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1151 is 0
9999 mem: location 1154 is 1180
9999 mem: storing 0 in location 1180
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1151 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1152 is 1179
9999 run: result 0 is 1179
9999 mem: location 1116 is 1137
9999 mem: storing 1179 in location 1137
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1117
 102 run: y:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1116 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1117 is 1139
9999 mem: storing 1179 in location 1139
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 0
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1118
 102 run: init:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1116 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1118 is 1138
9999 mem: storing 1179 in location 1138
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1108 is 1098
9999 run: jumping to instruction 30
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1108 is 1098
9999 mem: storing 7 in location 1119
 102 run: jump-if len:number, 1:offset
9999 mem: location 1119 is 7
9999 run: jumping to instruction 33
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1120
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1118 is 1138
9999 mem: location 1138 is 1179
9999 mem: storing 1179 in location 1121
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 0
9999 mem: location 1119 is 7
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1120 is 0
9999 mem: location 1108 is 1098
9999 mem: location 1120 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 97
9999 mem: location 1121 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1182
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1184
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1185
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1213
9999 mem: storing 1213 in location 1186
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1186 is 1213
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1186 is 1213
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 1187
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1184 is 97
9999 mem: location 1187 is 1213
9999 mem: storing 97 in location 1213
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1185 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1185 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1188
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1185 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1185 is 1179
9999 run: address to copy is 1180
9999 mem: storing 1180 in location 1189
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1186 is 1213
9999 mem: location 1189 is 1180
9999 mem: storing 1213 in location 1180
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1186 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1186 is 1213
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 1189
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1185 is 1179
9999 mem: location 1189 is 1215
9999 mem: storing 1179 in location 1215
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1186 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1179
9999 mem: location 1186 is 1213
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 1189
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1214
9999 mem: storing 0 in location 1214
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1188 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1186 is 1213
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1179
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1216
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1218
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1218 is 1179
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1218 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 1213
9999 mem: location 1181 is 0
9999 mem: location 1218 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1213
9999 mem: storing 1213 in location 1219
 103 run: reply result:address:duplex-list
9999 mem: location 1219 is 1213
9999 run: result 0 is 1213
9999 mem: storing 1213 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 0
9999 mem: storing 1 in location 1120
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 1
9999 mem: location 1119 is 7
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1120 is 1
9999 mem: location 1108 is 1098
9999 mem: location 1120 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 98
9999 mem: location 1121 is 1213
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1247
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1249
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1250
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1278
9999 mem: storing 1278 in location 1251
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1251 is 1278
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1251 is 1278
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 1252
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1249 is 98
9999 mem: location 1252 is 1278
9999 mem: storing 98 in location 1278
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1250 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1179
9999 mem: location 1250 is 1213
9999 run: address to copy is 1214
9999 run: its type is address
9999 mem: location 1214 is 0
9999 mem: storing 0 in location 1253
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1250 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 0
9999 mem: location 1215 is 1179
9999 mem: location 1250 is 1213
9999 run: address to copy is 1214
9999 mem: storing 1214 in location 1254
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1251 is 1278
9999 mem: location 1254 is 1214
9999 mem: storing 1278 in location 1214
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1251 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1251 is 1278
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1254
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1250 is 1213
9999 mem: location 1254 is 1280
9999 mem: storing 1213 in location 1280
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1251 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1213
9999 mem: location 1251 is 1278
9999 run: address to copy is 1279
9999 mem: storing 1279 in location 1254
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1279
9999 mem: storing 0 in location 1279
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1253 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1251 is 1278
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1213
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1281
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1283
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1283 is 1213
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1283 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1283 is 1213
9999 run: address to copy is 1214
9999 run: its type is address
9999 mem: location 1214 is 1278
9999 mem: storing 1278 in location 1284
 103 run: reply result:address:duplex-list
9999 mem: location 1284 is 1278
9999 run: result 0 is 1278
9999 mem: storing 1278 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 1
9999 mem: storing 2 in location 1120
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 2
9999 mem: location 1119 is 7
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1120 is 2
9999 mem: location 1108 is 1098
9999 mem: location 1120 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 99
9999 mem: location 1121 is 1278
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1312
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1314
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1278 in location 1315
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1343
9999 mem: storing 1343 in location 1316
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1316 is 1343
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: location 1345 is 0
9999 mem: location 1316 is 1343
9999 run: address to copy is 1343
9999 mem: storing 1343 in location 1317
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1314 is 99
9999 mem: location 1317 is 1343
9999 mem: storing 99 in location 1343
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1315 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1213
9999 mem: location 1315 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 0
9999 mem: storing 0 in location 1318
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1315 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1213
9999 mem: location 1315 is 1278
9999 run: address to copy is 1279
9999 mem: storing 1279 in location 1319
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1316 is 1343
9999 mem: location 1319 is 1279
9999 mem: storing 1343 in location 1279
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1316 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 0
9999 mem: location 1345 is 0
9999 mem: location 1316 is 1343
9999 run: address to copy is 1345
9999 mem: storing 1345 in location 1319
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1315 is 1278
9999 mem: location 1319 is 1345
9999 mem: storing 1278 in location 1345
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1316 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 0
9999 mem: location 1345 is 1278
9999 mem: location 1316 is 1343
9999 run: address to copy is 1344
9999 mem: storing 1344 in location 1319
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1318 is 0
9999 mem: location 1319 is 1344
9999 mem: storing 0 in location 1344
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1318 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1316 is 1343
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1278
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1346
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1278 in location 1348
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1348 is 1278
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1348 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 1343
9999 mem: location 1280 is 1213
9999 mem: location 1348 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 1343
9999 mem: storing 1343 in location 1349
 103 run: reply result:address:duplex-list
9999 mem: location 1349 is 1343
9999 run: result 0 is 1343
9999 mem: storing 1343 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 2
9999 mem: storing 3 in location 1120
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 3
9999 mem: location 1119 is 7
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1120 is 3
9999 mem: location 1108 is 1098
9999 mem: location 1120 is 3
9999 run: address to copy is 1102
9999 run: its type is character
9999 mem: location 1102 is 10
9999 mem: storing 10 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 10
9999 mem: location 1121 is 1343
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1377
 103 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1379
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1343 in location 1380
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1408
9999 mem: storing 1408 in location 1381
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1381 is 1408
9999 mem: location 1408 is 0
9999 mem: location 1409 is 0
9999 mem: location 1410 is 0
9999 mem: location 1381 is 1408
9999 run: address to copy is 1408
9999 mem: storing 1408 in location 1382
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1379 is 10
9999 mem: location 1382 is 1408
9999 mem: storing 10 in location 1408
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1380 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 0
9999 mem: location 1345 is 1278
9999 mem: location 1380 is 1343
9999 run: address to copy is 1344
9999 run: its type is address
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1383
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1380 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 0
9999 mem: location 1345 is 1278
9999 mem: location 1380 is 1343
9999 run: address to copy is 1344
9999 mem: storing 1344 in location 1384
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1381 is 1408
9999 mem: location 1384 is 1344
9999 mem: storing 1408 in location 1344
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1381 is 1408
9999 mem: location 1408 is 10
9999 mem: location 1409 is 0
9999 mem: location 1410 is 0
9999 mem: location 1381 is 1408
9999 run: address to copy is 1410
9999 mem: storing 1410 in location 1384
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1380 is 1343
9999 mem: location 1384 is 1410
9999 mem: storing 1343 in location 1410
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1381 is 1408
9999 mem: location 1408 is 10
9999 mem: location 1409 is 0
9999 mem: location 1410 is 1343
9999 mem: location 1381 is 1408
9999 run: address to copy is 1409
9999 mem: storing 1409 in location 1384
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1383 is 0
9999 mem: location 1384 is 1409
9999 mem: storing 0 in location 1409
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1383 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1381 is 1408
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1343
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1411
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1343 in location 1413
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1413 is 1343
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1413 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 1408
9999 mem: location 1345 is 1278
9999 mem: location 1413 is 1343
9999 run: address to copy is 1344
9999 run: its type is address
9999 mem: location 1344 is 1408
9999 mem: storing 1408 in location 1414
 103 run: reply result:address:duplex-list
9999 mem: location 1414 is 1408
9999 run: result 0 is 1408
9999 mem: storing 1408 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 3
9999 mem: storing 4 in location 1120
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 4
9999 mem: location 1119 is 7
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1120 is 4
9999 mem: location 1108 is 1098
9999 mem: location 1120 is 4
9999 run: address to copy is 1103
9999 run: its type is character
9999 mem: location 1103 is 100
9999 mem: storing 100 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 100
9999 mem: location 1121 is 1408
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1442
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1444
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1408 in location 1445
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1473
9999 mem: storing 1473 in location 1446
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1446 is 1473
9999 mem: location 1473 is 0
9999 mem: location 1474 is 0
9999 mem: location 1475 is 0
9999 mem: location 1446 is 1473
9999 run: address to copy is 1473
9999 mem: storing 1473 in location 1447
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1444 is 100
9999 mem: location 1447 is 1473
9999 mem: storing 100 in location 1473
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1445 is 1408
9999 mem: location 1408 is 10
9999 mem: location 1409 is 0
9999 mem: location 1410 is 1343
9999 mem: location 1445 is 1408
9999 run: address to copy is 1409
9999 run: its type is address
9999 mem: location 1409 is 0
9999 mem: storing 0 in location 1448
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1445 is 1408
9999 mem: location 1408 is 10
9999 mem: location 1409 is 0
9999 mem: location 1410 is 1343
9999 mem: location 1445 is 1408
9999 run: address to copy is 1409
9999 mem: storing 1409 in location 1449
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1446 is 1473
9999 mem: location 1449 is 1409
9999 mem: storing 1473 in location 1409
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1446 is 1473
9999 mem: location 1473 is 100
9999 mem: location 1474 is 0
9999 mem: location 1475 is 0
9999 mem: location 1446 is 1473
9999 run: address to copy is 1475
9999 mem: storing 1475 in location 1449
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1445 is 1408
9999 mem: location 1449 is 1475
9999 mem: storing 1408 in location 1475
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1446 is 1473
9999 mem: location 1473 is 100
9999 mem: location 1474 is 0
9999 mem: location 1475 is 1408
9999 mem: location 1446 is 1473
9999 run: address to copy is 1474
9999 mem: storing 1474 in location 1449
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1448 is 0
9999 mem: location 1449 is 1474
9999 mem: storing 0 in location 1474
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1448 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1446 is 1473
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1408
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1476
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1408 in location 1478
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1478 is 1408
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1478 is 1408
9999 mem: location 1408 is 10
9999 mem: location 1409 is 1473
9999 mem: location 1410 is 1343
9999 mem: location 1478 is 1408
9999 run: address to copy is 1409
9999 run: its type is address
9999 mem: location 1409 is 1473
9999 mem: storing 1473 in location 1479
 103 run: reply result:address:duplex-list
9999 mem: location 1479 is 1473
9999 run: result 0 is 1473
9999 mem: storing 1473 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 4
9999 mem: storing 5 in location 1120
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 5
9999 mem: location 1119 is 7
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1120 is 5
9999 mem: location 1108 is 1098
9999 mem: location 1120 is 5
9999 run: address to copy is 1104
9999 run: its type is character
9999 mem: location 1104 is 101
9999 mem: storing 101 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 101
9999 mem: location 1121 is 1473
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1507
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1509
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1473 in location 1510
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1538
9999 mem: storing 1538 in location 1511
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1511 is 1538
9999 mem: location 1538 is 0
9999 mem: location 1539 is 0
9999 mem: location 1540 is 0
9999 mem: location 1511 is 1538
9999 run: address to copy is 1538
9999 mem: storing 1538 in location 1512
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1509 is 101
9999 mem: location 1512 is 1538
9999 mem: storing 101 in location 1538
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1510 is 1473
9999 mem: location 1473 is 100
9999 mem: location 1474 is 0
9999 mem: location 1475 is 1408
9999 mem: location 1510 is 1473
9999 run: address to copy is 1474
9999 run: its type is address
9999 mem: location 1474 is 0
9999 mem: storing 0 in location 1513
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1510 is 1473
9999 mem: location 1473 is 100
9999 mem: location 1474 is 0
9999 mem: location 1475 is 1408
9999 mem: location 1510 is 1473
9999 run: address to copy is 1474
9999 mem: storing 1474 in location 1514
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1511 is 1538
9999 mem: location 1514 is 1474
9999 mem: storing 1538 in location 1474
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1511 is 1538
9999 mem: location 1538 is 101
9999 mem: location 1539 is 0
9999 mem: location 1540 is 0
9999 mem: location 1511 is 1538
9999 run: address to copy is 1540
9999 mem: storing 1540 in location 1514
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1510 is 1473
9999 mem: location 1514 is 1540
9999 mem: storing 1473 in location 1540
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1511 is 1538
9999 mem: location 1538 is 101
9999 mem: location 1539 is 0
9999 mem: location 1540 is 1473
9999 mem: location 1511 is 1538
9999 run: address to copy is 1539
9999 mem: storing 1539 in location 1514
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1513 is 0
9999 mem: location 1514 is 1539
9999 mem: storing 0 in location 1539
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1513 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1511 is 1538
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1473
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1541
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1473 in location 1543
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1543 is 1473
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1543 is 1473
9999 mem: location 1473 is 100
9999 mem: location 1474 is 1538
9999 mem: location 1475 is 1408
9999 mem: location 1543 is 1473
9999 run: address to copy is 1474
9999 run: its type is address
9999 mem: location 1474 is 1538
9999 mem: storing 1538 in location 1544
 103 run: reply result:address:duplex-list
9999 mem: location 1544 is 1538
9999 run: result 0 is 1538
9999 mem: storing 1538 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 5
9999 mem: storing 6 in location 1120
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 6
9999 mem: location 1119 is 7
9999 mem: storing 0 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1120 is 6
9999 mem: location 1108 is 1098
9999 mem: location 1120 is 6
9999 run: address to copy is 1105
9999 run: its type is character
9999 mem: location 1105 is 102
9999 mem: storing 102 in location 1123
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1123 is 102
9999 mem: location 1121 is 1538
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1572
 103 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1574
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1538 in location 1575
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1603
9999 mem: storing 1603 in location 1576
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1576 is 1603
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1605 is 0
9999 mem: location 1576 is 1603
9999 run: address to copy is 1603
9999 mem: storing 1603 in location 1577
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1574 is 102
9999 mem: location 1577 is 1603
9999 mem: storing 102 in location 1603
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1575 is 1538
9999 mem: location 1538 is 101
9999 mem: location 1539 is 0
9999 mem: location 1540 is 1473
9999 mem: location 1575 is 1538
9999 run: address to copy is 1539
9999 run: its type is address
9999 mem: location 1539 is 0
9999 mem: storing 0 in location 1578
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1575 is 1538
9999 mem: location 1538 is 101
9999 mem: location 1539 is 0
9999 mem: location 1540 is 1473
9999 mem: location 1575 is 1538
9999 run: address to copy is 1539
9999 mem: storing 1539 in location 1579
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1576 is 1603
9999 mem: location 1579 is 1539
9999 mem: storing 1603 in location 1539
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1576 is 1603
9999 mem: location 1603 is 102
9999 mem: location 1604 is 0
9999 mem: location 1605 is 0
9999 mem: location 1576 is 1603
9999 run: address to copy is 1605
9999 mem: storing 1605 in location 1579
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1575 is 1538
9999 mem: location 1579 is 1605
9999 mem: storing 1538 in location 1605
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1576 is 1603
9999 mem: location 1603 is 102
9999 mem: location 1604 is 0
9999 mem: location 1605 is 1538
9999 mem: location 1576 is 1603
9999 run: address to copy is 1604
9999 mem: storing 1604 in location 1579
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1578 is 0
9999 mem: location 1579 is 1604
9999 mem: storing 0 in location 1604
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1578 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1576 is 1603
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1121 is 1538
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1606
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1538 in location 1608
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1608 is 1538
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1608 is 1538
9999 mem: location 1538 is 101
9999 mem: location 1539 is 1603
9999 mem: location 1540 is 1473
9999 mem: location 1608 is 1538
9999 run: address to copy is 1539
9999 run: its type is address
9999 mem: location 1539 is 1603
9999 mem: storing 1603 in location 1609
 103 run: reply result:address:duplex-list
9999 mem: location 1609 is 1603
9999 run: result 0 is 1603
9999 mem: storing 1603 in location 1121
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1120 is 6
9999 mem: storing 7 in location 1120
 102 run: loop 
9999 run: jumping to instruction 36
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1120 is 7
9999 mem: location 1119 is 7
9999 mem: storing 1 in location 1122
 102 run: break-if done?:boolean, 
9999 mem: location 1122 is 1
9999 run: jumping to instruction 43
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1117
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1118 is 1138
9999 mem: location 1138 is 1179
9999 mem: location 1117 is 1139
9999 mem: storing 1179 in location 1139
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1124
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1113 is 1137
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1637
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1137 in location 1639
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1639 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1639 is 1137
9999 run: address to copy is 1140
9999 run: its type is address
9999 mem: location 1140 is 1031
9999 mem: storing 1031 in location 1640
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1639 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1639 is 1137
9999 run: address to copy is 1141
9999 run: its type is number
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1641
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1639 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1639 is 1137
9999 run: address to copy is 1142
9999 run: its type is number
9999 mem: location 1142 is 1
9999 mem: storing 1 in location 1642
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1640 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1668
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1670
 104 run: break-unless x:address:screen, 
9999 mem: location 1670 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1670 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1670 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1671
 104 run: reply height:number
9999 mem: location 1671 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1643
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1639 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1639 is 1137
9999 run: address to copy is 1144
9999 run: its type is number
9999 mem: location 1144 is 4
9999 mem: storing 4 in location 1644
 103 run: hide-screen screen:address
9999 mem: location 1640 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1699
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1701
 104 run: break-unless x:address:screen, 
9999 mem: location 1701 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1701 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1639 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1639 is 1137
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 1179
9999 mem: storing 1179 in location 1645
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1645 is 1179
9999 mem: storing 1179 in location 1646
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1645 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1730
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1732
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1732 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1732 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 1213
9999 mem: location 1181 is 0
9999 mem: location 1732 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1213
9999 mem: storing 1213 in location 1733
 104 run: reply result:address:duplex-list
9999 mem: location 1733 is 1213
9999 run: result 0 is 1213
9999 mem: storing 1213 in location 1645
 103 run: row:number <- copy top:number
9999 mem: location 1641 is 0
9999 mem: storing 0 in location 1647
 103 run: column:number <- copy left:number
9999 mem: location 1642 is 1
9999 mem: storing 1 in location 1648
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1639 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1639 is 1137
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1649
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1639 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1639 is 1137
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1650
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1639 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1639 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1651
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1640 is 1031
9999 mem: location 1647 is 0
9999 mem: location 1648 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1761
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1763
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1764
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 1765
 104 run: break-unless x:address:screen, 
9999 mem: location 1763 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1763 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1763 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1766
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1764 is 0
9999 mem: location 1766 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1763 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1763 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1767
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1765 is 1
9999 mem: location 1767 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1763 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1645 is 1213
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1647 is 0
9999 mem: location 1643 is 3
9999 mem: storing 0 in location 1652
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1652 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 0
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1653
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1653 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1648 is 1
9999 mem: location 1650 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 1 in location 1654
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1654 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1645 is 1213
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1792
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1794
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1794 is 1213
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1794 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1794 is 1213
9999 run: address to copy is 1215
9999 run: its type is address
9999 mem: location 1215 is 1179
9999 mem: storing 1179 in location 1795
 104 run: reply result:address:duplex-list
9999 mem: location 1795 is 1179
9999 run: result 0 is 1179
9999 mem: location 1651 is 1139
9999 mem: storing 1179 in location 1139
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1645 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1645 is 1213
9999 run: address to copy is 1213
9999 run: its type is number
9999 mem: location 1213 is 97
9999 mem: storing 97 in location 1655
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1655 is 97
9999 mem: storing 0 in location 1656
 103 run: break-unless newline?:boolean, 
9999 mem: location 1656 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1648 is 1
9999 mem: location 1644 is 4
9999 mem: storing 0 in location 1659
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1659 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1640 is 1031
9999 mem: location 1655 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1823
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1825
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1826
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1827
9999 mem: storing 0 in location 1828
 104 run: break-if color-found?:boolean, 
9999 mem: location 1828 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1827
 104 run: break-unless x:address:screen, 
9999 mem: location 1825 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1825 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1825 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1829
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1825 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1825 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1830
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1825 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1825 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1831
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1825 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1825 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1832
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1826 is 97
9999 mem: storing 0 in location 1833
 104 run: break-unless newline?:boolean, 
9999 mem: location 1833 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1829 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1831 is 5
9999 mem: storing 0 in location 1836
schedule: print-character/render/new-editor/run1001/editor-initially-prints-multiple-lines-at-offset
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1836 is 0
9999 mem: location 1830 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1836
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1825 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1825 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1837
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1826 is 97
9999 mem: storing 0 in location 1838
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1838 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1837 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1836 is 1
9999 mem: location 1837 is 1036
9999 mem: location 1836 is 1
9999 mem: storing 1039 in location 1840
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1840 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1840 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1841
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1840 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1840 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1842
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1826 is 97
9999 mem: location 1841 is 1039
9999 mem: storing 97 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1827 is 7
9999 mem: location 1842 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1831 is 5
9999 mem: storing 4 in location 1843
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1830 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1843 is 4
9999 mem: storing 0 in location 1844
 104 run: break-if at-right?:boolean, 
9999 mem: location 1844 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1830 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1830 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1825 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1645 is 1213
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1854
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1856
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1856 is 1213
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1856 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1856 is 1213
9999 run: address to copy is 1214
9999 run: its type is address
9999 mem: location 1214 is 1278
9999 mem: storing 1278 in location 1857
 104 run: reply result:address:duplex-list
9999 mem: location 1857 is 1278
9999 run: result 0 is 1278
9999 mem: storing 1278 in location 1645
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1646 is 1179
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1885
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1179 in location 1887
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1887 is 1179
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1887 is 1179
9999 mem: location 1179 is 167
9999 mem: location 1180 is 1213
9999 mem: location 1181 is 0
9999 mem: location 1887 is 1179
9999 run: address to copy is 1180
9999 run: its type is address
9999 mem: location 1180 is 1213
9999 mem: storing 1213 in location 1888
 104 run: reply result:address:duplex-list
9999 mem: location 1888 is 1213
9999 run: result 0 is 1213
9999 mem: storing 1213 in location 1646
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1648 is 1
9999 mem: storing 2 in location 1648
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1645 is 1278
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1647 is 0
9999 mem: location 1643 is 3
9999 mem: storing 0 in location 1652
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1652 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 0
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1653
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1653 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1648 is 2
9999 mem: location 1650 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1654
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1654 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1645 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 1343
9999 mem: location 1280 is 1213
9999 mem: location 1645 is 1278
9999 run: address to copy is 1278
9999 run: its type is number
9999 mem: location 1278 is 98
9999 mem: storing 98 in location 1655
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1655 is 98
9999 mem: storing 0 in location 1656
 103 run: break-unless newline?:boolean, 
9999 mem: location 1656 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1648 is 2
9999 mem: location 1644 is 4
9999 mem: storing 0 in location 1659
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1659 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1640 is 1031
9999 mem: location 1655 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1916
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1918
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1919
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1920
9999 mem: storing 0 in location 1921
 104 run: break-if color-found?:boolean, 
9999 mem: location 1921 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1920
 104 run: break-unless x:address:screen, 
9999 mem: location 1918 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1918 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1918 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1922
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1918 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1918 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1923
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1918 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1918 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1924
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1918 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1918 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1925
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1919 is 98
9999 mem: storing 0 in location 1926
 104 run: break-unless newline?:boolean, 
9999 mem: location 1926 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1922 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1924 is 5
9999 mem: storing 0 in location 1929
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1929 is 0
9999 mem: location 1923 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1929
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1918 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1918 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1930
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1919 is 98
9999 mem: storing 0 in location 1931
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1931 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1930 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1929 is 2
9999 mem: location 1930 is 1036
9999 mem: location 1929 is 2
9999 mem: storing 1041 in location 1933
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1933 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1933 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1934
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1933 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1933 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1935
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1919 is 98
9999 mem: location 1934 is 1041
9999 mem: storing 98 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1920 is 7
9999 mem: location 1935 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1924 is 5
9999 mem: storing 4 in location 1936
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1923 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1936 is 4
9999 mem: storing 0 in location 1937
 104 run: break-if at-right?:boolean, 
9999 mem: location 1937 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1923 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1923 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1918 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1645 is 1278
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1947
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1278 in location 1949
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1949 is 1278
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1949 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 1343
9999 mem: location 1280 is 1213
9999 mem: location 1949 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 1343
9999 mem: storing 1343 in location 1950
 104 run: reply result:address:duplex-list
9999 mem: location 1950 is 1343
9999 run: result 0 is 1343
9999 mem: storing 1343 in location 1645
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1646 is 1213
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1978
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1213 in location 1980
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1980 is 1213
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1980 is 1213
9999 mem: location 1213 is 97
9999 mem: location 1214 is 1278
9999 mem: location 1215 is 1179
9999 mem: location 1980 is 1213
9999 run: address to copy is 1214
9999 run: its type is address
9999 mem: location 1214 is 1278
9999 mem: storing 1278 in location 1981
 104 run: reply result:address:duplex-list
9999 mem: location 1981 is 1278
9999 run: result 0 is 1278
9999 mem: storing 1278 in location 1646
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1648 is 2
9999 mem: storing 3 in location 1648
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1645 is 1343
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1647 is 0
9999 mem: location 1643 is 3
9999 mem: storing 0 in location 1652
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1652 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 0
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1653
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1653 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1648 is 3
9999 mem: location 1650 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1654
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1654 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1645 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 1408
9999 mem: location 1345 is 1278
9999 mem: location 1645 is 1343
9999 run: address to copy is 1343
9999 run: its type is number
9999 mem: location 1343 is 99
9999 mem: storing 99 in location 1655
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1655 is 99
9999 mem: storing 0 in location 1656
 103 run: break-unless newline?:boolean, 
9999 mem: location 1656 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1648 is 3
9999 mem: location 1644 is 4
9999 mem: storing 0 in location 1659
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1659 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1640 is 1031
9999 mem: location 1655 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2009
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2011
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2012
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2013
9999 mem: storing 0 in location 2014
 104 run: break-if color-found?:boolean, 
9999 mem: location 2014 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2013
 104 run: break-unless x:address:screen, 
9999 mem: location 2011 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2011 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2011 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2015
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2011 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2011 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2016
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2011 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2011 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2017
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2011 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2011 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2018
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2012 is 99
9999 mem: storing 0 in location 2019
 104 run: break-unless newline?:boolean, 
9999 mem: location 2019 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2015 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2017 is 5
9999 mem: storing 0 in location 2022
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2022 is 0
9999 mem: location 2016 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 2022
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2011 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2011 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2023
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2012 is 99
9999 mem: storing 0 in location 2024
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2024 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2023 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2022 is 3
9999 mem: location 2023 is 1036
9999 mem: location 2022 is 3
9999 mem: storing 1043 in location 2026
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2026 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2026 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2027
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2026 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2026 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2028
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2012 is 99
9999 mem: location 2027 is 1043
9999 mem: storing 99 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2013 is 7
9999 mem: location 2028 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2017 is 5
9999 mem: storing 4 in location 2029
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2016 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2029 is 4
9999 mem: storing 0 in location 2030
 104 run: break-if at-right?:boolean, 
9999 mem: location 2030 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2016 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2016 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2011 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1645 is 1343
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2040
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1343 in location 2042
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2042 is 1343
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2042 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 1408
9999 mem: location 1345 is 1278
9999 mem: location 2042 is 1343
9999 run: address to copy is 1344
9999 run: its type is address
9999 mem: location 1344 is 1408
9999 mem: storing 1408 in location 2043
 104 run: reply result:address:duplex-list
9999 mem: location 2043 is 1408
9999 run: result 0 is 1408
9999 mem: storing 1408 in location 1645
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1646 is 1278
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2071
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1278 in location 2073
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2073 is 1278
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2073 is 1278
9999 mem: location 1278 is 98
9999 mem: location 1279 is 1343
9999 mem: location 1280 is 1213
9999 mem: location 2073 is 1278
9999 run: address to copy is 1279
9999 run: its type is address
9999 mem: location 1279 is 1343
9999 mem: storing 1343 in location 2074
 104 run: reply result:address:duplex-list
9999 mem: location 2074 is 1343
9999 run: result 0 is 1343
9999 mem: storing 1343 in location 1646
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1648 is 3
9999 mem: storing 4 in location 1648
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1645 is 1408
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1647 is 0
9999 mem: location 1643 is 3
9999 mem: storing 0 in location 1652
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1652 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 0
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1653
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1653 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1648 is 4
9999 mem: location 1650 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1654
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1654 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1645 is 1408
9999 mem: location 1408 is 10
9999 mem: location 1409 is 1473
9999 mem: location 1410 is 1343
9999 mem: location 1645 is 1408
9999 run: address to copy is 1408
9999 run: its type is number
9999 mem: location 1408 is 10
9999 mem: storing 10 in location 1655
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1655 is 10
9999 mem: storing 1 in location 1656
 103 run: break-unless newline?:boolean, 
9999 mem: location 1656 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 0
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 1 in location 1653
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1653 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column:number, cursor-column:address:number/deref
9999 mem: location 1648 is 4
9999 mem: location 1650 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1657
 103 run: break-unless left-of-cursor?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 40
 103 run: done?:boolean <- greater-or-equal column:number, right:number
9999 mem: location 1648 is 4
9999 mem: location 1644 is 4
9999 mem: storing 1 in location 1658
 103 run: break-if done?:boolean, 
9999 mem: location 1658 is 1
9999 run: jumping to instruction 47
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1647 is 0
9999 mem: storing 1 in location 1647
 103 run: column:number <- copy left:number
9999 mem: location 1642 is 1
9999 mem: storing 1 in location 1648
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1640 is 1031
9999 mem: location 1647 is 1
9999 mem: location 1648 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2102
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2104
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2105
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2106
 104 run: break-unless x:address:screen, 
9999 mem: location 2104 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2104 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2104 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2107
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2105 is 1
9999 mem: location 2107 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2104 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2104 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2108
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2106 is 1
9999 mem: location 2108 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2104 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1645 is 1408
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2133
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1408 in location 2135
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2135 is 1408
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2135 is 1408
9999 mem: location 1408 is 10
9999 mem: location 1409 is 1473
9999 mem: location 1410 is 1343
9999 mem: location 2135 is 1408
9999 run: address to copy is 1409
9999 run: its type is address
9999 mem: location 1409 is 1473
9999 mem: storing 1473 in location 2136
 104 run: reply result:address:duplex-list
9999 mem: location 2136 is 1473
9999 run: result 0 is 1473
9999 mem: storing 1473 in location 1645
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1646 is 1343
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2164
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1343 in location 2166
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2166 is 1343
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2166 is 1343
9999 mem: location 1343 is 99
9999 mem: location 1344 is 1408
9999 mem: location 1345 is 1278
9999 mem: location 2166 is 1343
9999 run: address to copy is 1344
9999 run: its type is address
9999 mem: location 1344 is 1408
9999 mem: storing 1408 in location 2167
 104 run: reply result:address:duplex-list
9999 mem: location 2167 is 1408
9999 run: result 0 is 1408
9999 mem: storing 1408 in location 1646
 103 run: loop +next-character:label
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1645 is 1473
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1647 is 1
9999 mem: location 1643 is 3
9999 mem: storing 0 in location 1652
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1652 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 1
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1653
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1653 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1645 is 1473
9999 mem: location 1473 is 100
9999 mem: location 1474 is 1538
9999 mem: location 1475 is 1408
9999 mem: location 1645 is 1473
9999 run: address to copy is 1473
9999 run: its type is number
9999 mem: location 1473 is 100
9999 mem: storing 100 in location 1655
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1655 is 100
9999 mem: storing 0 in location 1656
 103 run: break-unless newline?:boolean, 
9999 mem: location 1656 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1648 is 1
9999 mem: location 1644 is 4
9999 mem: storing 0 in location 1659
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1659 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1640 is 1031
9999 mem: location 1655 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2195
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2197
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2198
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2199
9999 mem: storing 0 in location 2200
 104 run: break-if color-found?:boolean, 
9999 mem: location 2200 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2199
 104 run: break-unless x:address:screen, 
9999 mem: location 2197 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2197 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2197 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2201
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2197 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2197 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2202
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2197 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2197 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2203
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2197 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2197 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2204
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2198 is 100
9999 mem: storing 0 in location 2205
 104 run: break-unless newline?:boolean, 
9999 mem: location 2205 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2201 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2203 is 5
9999 mem: storing 5 in location 2208
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2208 is 5
9999 mem: location 2202 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 2208
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2197 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2197 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2209
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2198 is 100
9999 mem: storing 0 in location 2210
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2210 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2209 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2208 is 6
9999 mem: location 2209 is 1036
9999 mem: location 2208 is 6
9999 mem: storing 1049 in location 2212
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2212 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2212 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2213
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2212 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2212 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2214
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2198 is 100
9999 mem: location 2213 is 1049
9999 mem: storing 100 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2199 is 7
9999 mem: location 2214 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2203 is 5
9999 mem: storing 4 in location 2215
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2202 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2215 is 4
9999 mem: storing 0 in location 2216
 104 run: break-if at-right?:boolean, 
9999 mem: location 2216 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2202 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2202 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2197 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1645 is 1473
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2226
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1473 in location 2228
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2228 is 1473
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2228 is 1473
9999 mem: location 1473 is 100
9999 mem: location 1474 is 1538
9999 mem: location 1475 is 1408
9999 mem: location 2228 is 1473
9999 run: address to copy is 1474
9999 run: its type is address
9999 mem: location 1474 is 1538
9999 mem: storing 1538 in location 2229
 104 run: reply result:address:duplex-list
9999 mem: location 2229 is 1538
9999 run: result 0 is 1538
9999 mem: storing 1538 in location 1645
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1646 is 1408
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2257
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1408 in location 2259
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2259 is 1408
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2259 is 1408
9999 mem: location 1408 is 10
9999 mem: location 1409 is 1473
9999 mem: location 1410 is 1343
9999 mem: location 2259 is 1408
9999 run: address to copy is 1409
9999 run: its type is address
9999 mem: location 1409 is 1473
9999 mem: storing 1473 in location 2260
 104 run: reply result:address:duplex-list
9999 mem: location 2260 is 1473
9999 run: result 0 is 1473
9999 mem: storing 1473 in location 1646
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1648 is 1
9999 mem: storing 2 in location 1648
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1645 is 1538
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1647 is 1
9999 mem: location 1643 is 3
9999 mem: storing 0 in location 1652
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1652 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 1
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1653
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1653 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1645 is 1538
9999 mem: location 1538 is 101
9999 mem: location 1539 is 1603
9999 mem: location 1540 is 1473
9999 mem: location 1645 is 1538
9999 run: address to copy is 1538
9999 run: its type is number
9999 mem: location 1538 is 101
9999 mem: storing 101 in location 1655
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1655 is 101
9999 mem: storing 0 in location 1656
 103 run: break-unless newline?:boolean, 
9999 mem: location 1656 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1648 is 2
9999 mem: location 1644 is 4
9999 mem: storing 0 in location 1659
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1659 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1640 is 1031
9999 mem: location 1655 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2288
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2290
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2291
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2292
9999 mem: storing 0 in location 2293
 104 run: break-if color-found?:boolean, 
9999 mem: location 2293 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2292
 104 run: break-unless x:address:screen, 
9999 mem: location 2290 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2290 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2290 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2294
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2290 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2290 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2295
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2290 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2290 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2296
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2290 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2290 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2297
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2291 is 101
9999 mem: storing 0 in location 2298
 104 run: break-unless newline?:boolean, 
9999 mem: location 2298 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2294 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2296 is 5
9999 mem: storing 5 in location 2301
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2301 is 5
9999 mem: location 2295 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2301
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2290 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2290 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2302
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2291 is 101
9999 mem: storing 0 in location 2303
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2303 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2302 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2301 is 7
9999 mem: location 2302 is 1036
9999 mem: location 2301 is 7
9999 mem: storing 1051 in location 2305
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2305 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2305 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2306
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2305 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2305 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2307
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2291 is 101
9999 mem: location 2306 is 1051
9999 mem: storing 101 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2292 is 7
9999 mem: location 2307 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2296 is 5
9999 mem: storing 4 in location 2308
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2295 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2308 is 4
9999 mem: storing 0 in location 2309
 104 run: break-if at-right?:boolean, 
9999 mem: location 2309 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2295 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2295 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2290 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1645 is 1538
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2319
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1538 in location 2321
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2321 is 1538
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2321 is 1538
9999 mem: location 1538 is 101
9999 mem: location 1539 is 1603
9999 mem: location 1540 is 1473
9999 mem: location 2321 is 1538
9999 run: address to copy is 1539
9999 run: its type is address
9999 mem: location 1539 is 1603
9999 mem: storing 1603 in location 2322
 104 run: reply result:address:duplex-list
9999 mem: location 2322 is 1603
9999 run: result 0 is 1603
9999 mem: storing 1603 in location 1645
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1646 is 1473
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2350
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1473 in location 2352
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2352 is 1473
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2352 is 1473
9999 mem: location 1473 is 100
9999 mem: location 1474 is 1538
9999 mem: location 1475 is 1408
9999 mem: location 2352 is 1473
9999 run: address to copy is 1474
9999 run: its type is address
9999 mem: location 1474 is 1538
9999 mem: storing 1538 in location 2353
 104 run: reply result:address:duplex-list
9999 mem: location 2353 is 1538
9999 run: result 0 is 1538
9999 mem: storing 1538 in location 1646
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1648 is 2
9999 mem: storing 3 in location 1648
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1645 is 1603
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1647 is 1
9999 mem: location 1643 is 3
9999 mem: storing 0 in location 1652
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1652 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 1
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1653
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1653 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1645 is 1603
9999 mem: location 1603 is 102
9999 mem: location 1604 is 0
9999 mem: location 1605 is 1538
9999 mem: location 1645 is 1603
9999 run: address to copy is 1603
9999 run: its type is number
9999 mem: location 1603 is 102
9999 mem: storing 102 in location 1655
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1655 is 102
9999 mem: storing 0 in location 1656
 103 run: break-unless newline?:boolean, 
9999 mem: location 1656 is 0
9999 run: jumping to instruction 54
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1648 is 3
9999 mem: location 1644 is 4
9999 mem: storing 0 in location 1659
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1659 is 0
9999 run: jumping to instruction 68
 103 run: print-character screen:address, c:character
9999 mem: location 1640 is 1031
9999 mem: location 1655 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2381
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2383
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 2384
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2385
9999 mem: storing 0 in location 2386
 104 run: break-if color-found?:boolean, 
9999 mem: location 2386 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2385
 104 run: break-unless x:address:screen, 
9999 mem: location 2383 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2383 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2383 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2387
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2383 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2383 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2388
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2383 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2383 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2389
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2383 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2383 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2390
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2384 is 102
9999 mem: storing 0 in location 2391
 104 run: break-unless newline?:boolean, 
9999 mem: location 2391 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2387 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2389 is 5
9999 mem: storing 5 in location 2394
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2394 is 5
9999 mem: location 2388 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2394
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2383 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2383 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2395
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2384 is 102
9999 mem: storing 0 in location 2396
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2396 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2395 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 97
9999 mem: location 1040 is 7
9999 mem: location 1041 is 98
9999 mem: location 1042 is 7
9999 mem: location 1043 is 99
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 100
9999 mem: location 1050 is 7
9999 mem: location 1051 is 101
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2394 is 8
9999 mem: location 2395 is 1036
9999 mem: location 2394 is 8
9999 mem: storing 1053 in location 2398
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2398 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2398 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2399
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2398 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2398 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2400
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2384 is 102
9999 mem: location 2399 is 1053
9999 mem: storing 102 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2385 is 7
9999 mem: location 2400 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2389 is 5
9999 mem: storing 4 in location 2401
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2388 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2401 is 4
9999 mem: storing 0 in location 2402
 104 run: break-if at-right?:boolean, 
9999 mem: location 2402 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2388 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2388 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2383 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1645 is 1603
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2412
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1603 in location 2414
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2414 is 1603
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2414 is 1603
9999 mem: location 1603 is 102
9999 mem: location 1604 is 0
9999 mem: location 1605 is 1538
9999 mem: location 2414 is 1603
9999 run: address to copy is 1604
9999 run: its type is address
9999 mem: location 1604 is 0
9999 mem: storing 0 in location 2415
 104 run: reply result:address:duplex-list
9999 mem: location 2415 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1645
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1646 is 1538
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2443
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1538 in location 2445
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2445 is 1538
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2445 is 1538
9999 mem: location 1538 is 101
9999 mem: location 1539 is 1603
9999 mem: location 1540 is 1473
9999 mem: location 2445 is 1538
9999 run: address to copy is 1539
9999 run: its type is address
9999 mem: location 1539 is 1603
9999 mem: storing 1603 in location 2446
 104 run: reply result:address:duplex-list
9999 mem: location 2446 is 1603
9999 run: result 0 is 1603
9999 mem: storing 1603 in location 1646
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1648 is 3
9999 mem: storing 4 in location 1648
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1645 is 0
9999 run: jumping to instruction 74
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1639 is 1137
9999 mem: location 1137 is 1179
9999 mem: location 1138 is 1179
9999 mem: location 1139 is 1179
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1
9999 mem: location 1147 is 0
9999 mem: location 1639 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1663
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1647 is 1
9999 mem: location 1663 is 1143
9999 mem: storing 1 in location 1143
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 1
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1653
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1648 is 4
9999 mem: location 1650 is 1146
9999 mem: location 1146 is 1
9999 mem: storing 0 in location 1664
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1653 is 0
9999 mem: location 1664 is 0
9999 mem: storing 0 in location 1665
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1647 is 1
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1666
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1665 is 0
9999 mem: location 1666 is 0
9999 mem: storing 0 in location 1667
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1667 is 0
9999 run: jumping to instruction 87
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1640 is 1031
9999 mem: location 1649 is 1145
9999 mem: location 1145 is 0
9999 mem: location 1650 is 1146
9999 mem: location 1146 is 1
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2474
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2476
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2477
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 1 in location 2478
 104 run: break-unless x:address:screen, 
9999 mem: location 2476 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2476 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2476 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2479
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2477 is 0
9999 mem: location 2479 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2476 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2476 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2480
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2478 is 1
9999 mem: location 2480 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2476 is 1031
 103 run: show-screen screen:address
9999 mem: location 1640 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2505
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2507
 104 run: break-unless x:address:screen, 
9999 mem: location 2507 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2507 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1639 is 1137
9999 run: result 0 is 1137
9999 mem: storing 1137 in location 1113
 102 run: reply result:address:editor-data
9999 mem: location 1113 is 1137
 100 run: screen-should-contain [
    . abc .
    . def .
    .     .
  ]
