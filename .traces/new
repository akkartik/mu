parse: instruction: new
parse:   ingredient: {name: "number", properties: ["number": "type"]}
parse:   product: {name: "1", properties: ["1": "address":"number", "raw": ]}
parse: instruction: new
parse:   ingredient: {name: "number", properties: ["number": "type"]}
parse:   product: {name: "2", properties: ["2": "address":"number", "raw": ]}
parse: instruction: equal
parse:   ingredient: {name: "1", properties: ["1": "address":"number", "raw": ]}
parse:   ingredient: {name: "2", properties: ["2": "address":"number", "raw": ]}
parse:   product: {name: "3", properties: ["3": "boolean", "raw": ]}
9999 new: number -> 1
9999 new: number -> 1
after-brace: recipe main
after-brace: new ...
after-brace: new ...
after-brace: equal ...
9999 new: routine allocated memory from 1000 to 101000
schedule: main
 101 run: 1:address:number/raw <- new number:type
9999 mem: new alloc: 1000
9999 mem: storing 1000 in location 1
 101 run: 2:address:number/raw <- new number:type
9999 mem: new alloc: 1001
9999 mem: storing 1001 in location 2
 101 run: 3:boolean/raw <- equal 1:address:number/raw, 2:address:number/raw
9999 mem: location 1 is 1000
9999 mem: location 2 is 1001
9999 mem: storing 0 in location 3
